androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.SidecarWindowBackend$Companion
com.google.firebase.auth.internal.GenericIdpActivity
org.chromium.support_lib_boundary.StaticsBoundaryInterface
androidx.window.embedding.EmptyEmbeddingComponent
androidx.activity.ImmLeaksCleaner
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.embedding.EmbeddingBackend
androidx.window.R$styleable
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.layout.SidecarAdapter$Companion
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.EmbeddingAdapter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.embedding.MatcherUtils
androidx.window.R
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.google.firebase.components.ComponentDiscoveryService
com.google.android.gms.common.api.GoogleApiActivity
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
androidx.window.core.Bounds
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.embedding.SplitPairFilter
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
android.support.v4.app.RemoteActionCompatParcelizer
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.core.Version$Companion
com.google.firebase.FirebaseCommonRegistrar
com.google.android.datatransport.cct.CctBackendFactory
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.layout.ActivityCompatHelperApi24
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.SidecarCompat$Companion
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
androidx.window.embedding.SplitRuleParser
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.R$attr
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.window.layout.SidecarCompat
androidx.window.core.Version
com.google.android.gms.common.annotation.KeepName
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.layout.DisplayCompatHelperApi28
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar
androidx.window.layout.HardwareFoldingFeature
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.savedstate.SavedStateRegistry$1
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.window.layout.DisplayCompatHelperApi17
com.google.android.gms.common.util.DynamiteApi
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.activity.ComponentActivity$2
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.layout.WindowInfoTrackerDecorator
com.google.firebase.firestore.FirestoreRegistrar
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
androidx.window.layout.WindowInfoTrackerImpl
androidx.fragment.app.Fragment$2
androidx.window.embedding.EmbeddingCompat
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.layout.SidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.embedding.ActivityStack
androidx.core.app.RemoteActionCompat
com.google.firebase.iid.FirebaseInstanceIdReceiver
io.flutter.plugins.GeneratedPluginRegistrant
com.google.firebase.messaging.FirebaseMessaging
androidx.window.embedding.SplitPlaceholderRule
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.window.layout.SidecarWindowBackend
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
androidx.window.layout.EmptyDecorator
androidx.window.layout.FoldingFeature
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.gms.common.internal.ReflectedParcelable
androidx.window.layout.WindowMetricsCalculator
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
com.google.firebase.firestore.FirebaseFirestore
com.google.firebase.messaging.FirebaseMessagingService
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.layout.WindowMetrics
io.flutter.view.FlutterCallbackInformation
androidx.core.app.CoreComponentFactory
androidx.window.embedding.SplitRule$LayoutDir
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
androidx.lifecycle.DefaultLifecycleObserver
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.embedding.SplitPairRule
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.core.ExperimentalWindowApi
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.layout.WindowMetricsCalculatorCompat
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.embedding.SplitController
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.savedstate.Recreator
androidx.window.core.Version$bigInteger$2
com.google.firebase.provider.FirebaseInitProvider
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.firebase.datatransport.TransportRegistrar
androidx.window.layout.WindowBackend
io.flutter.plugins.googlemaps.GoogleMapController
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.plugins.urllauncher.WebViewActivity
androidx.versionedparcelable.ParcelImpl
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.WindowLayoutInfo
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
io.flutter.view.AccessibilityViewEmbedder
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.core.app.RemoteActionCompatParcelizer
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
androidx.window.layout.WindowInfoTracker
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.lyokone.location.FlutterLocationService
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.window.layout.FoldingFeature$Orientation
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.layout.DisplayFeature
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
androidx.window.layout.FoldingFeature$State
androidx.window.layout.HardwareFoldingFeature$Type$Companion
com.smartersvision.food_delivery_app_2.MainActivity
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.R$id
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.window.layout.FoldingFeature$OcclusionType
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
androidx.window.embedding.SplitInfo
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.window.embedding.SplitController$Companion
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.google.firebase.auth.internal.RecaptchaActivity
androidx.window.embedding.ActivityRule
androidx.activity.ComponentActivity$3
androidx.window.embedding.ActivityFilter
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.window.embedding.SplitRule
androidx.browser.browseractions.BrowserActionsFallbackMenuView
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.firebase.auth.FirebaseAuth
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.google.firebase.auth.FirebaseAuthRegistrar
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.window.java.R
androidx.lifecycle.Lifecycling$1
androidx.annotation.Keep
io.flutter.embedding.engine.FlutterJNI
androidx.fragment.app.Fragment: boolean mRemoving
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.common.api.internal.zaci zab
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mLaunchWakeLock
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.common.api.Api$ClientKey CLIENT_KEY
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove DEFAULT_INSTANCE
com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.api.internal.GoogleApiManager zaa
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.Utils utils
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange DEFAULT_INSTANCE
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: com.google.firebase.firestore.local.LocalSerializer serializer
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: io.perfmark.Link val$link
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType STRING
kotlin.jvm.internal.CallableReference: java.lang.String name
io.grpc.internal.JsonParser: java.util.logging.Logger logger
com.google.android.gms.common.ConnectionResult: int zzb
com.google.firebase.messaging.ServiceStarter: com.google.firebase.messaging.ServiceStarter instance
com.google.android.gms.common.api.internal.zabq: boolean zaj
io.grpc.Status$Code: byte[] valueAscii
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
com.google.protobuf.UnsafeUtil: boolean IS_BIG_ENDIAN
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: com.google.firebase.firestore.local.ReferenceSet inMemoryPins
com.google.protobuf.ExtensionRegistryLite: boolean eagerlyParseMessageSets
io.grpc.okhttp.internal.framed.Header: okio.ByteString RESPONSE_STATUS
androidx.core.app.NotificationCompat$Builder: int mVisibility
io.grpc.internal.RetriableStream$1FullStreamDecompressionEntry: io.grpc.internal.RetriableStream this$0
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending
androidx.core.app.NotificationCompatBuilder: androidx.core.app.NotificationCompat$Builder mBuilderCompat
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
io.grpc.internal.ApplicationThreadDeframer: io.grpc.internal.ApplicationThreadDeframerListener appListener
io.grpc.internal.InternalSubchannel: io.grpc.Status shutdownReason
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: android.content.Intent intent
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_AR_XB
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle scheduledNameResolverRefresh
com.google.firestore.v1.WriteRequest: java.lang.String database_
com.google.android.gms.common.api.UnsupportedApiCallException: com.google.android.gms.common.Feature zza
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal OFF_SCREEN_PRERASTER
io.flutter.plugin.common.FlutterException: java.lang.String code
com.google.android.gms.internal.firebase-auth-api.zzaei: java.util.ListIterator zza
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1 INSTANCE
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object result_
com.google.android.gms.tasks.zzw: java.lang.Exception zzf
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite fields_
com.google.protobuf.RawMessageInfo: int flags
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
com.google.android.gms.common.internal.ClientSettings: java.lang.Integer zaj
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.android.gms.base.R$string: int common_google_play_services_enable_text
com.google.android.datatransport.cct.CCTDestination: java.lang.String endPoint
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
com.google.firebase.firestore.local.LocalStore$AllocateQueryHolder: int targetId
com.google.common.math.LongMath: int[] biggestBinomials
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzd
com.google.firebase.installations.FirebaseInstallations: java.lang.String cachedFid
com.google.firebase.firestore.remote.FirestoreChannel$3: com.google.firebase.firestore.remote.FirestoreChannel$StreamingListener val$callback
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.firestore.local.MemoryPersistence persistence
com.google.android.gms.internal.firebase-auth-api.zzws: com.google.android.gms.internal.firebase-auth-api.zzwt zza
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase ARRAY_CONFIG
io.grpc.internal.DnsNameResolver: long cacheTtlNanos
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: android.content.ComponentName zad
com.google.android.gms.internal.firebase-auth-api.zzqo: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: int mNumPostponed
kotlinx.coroutines.UndispatchedCoroutine: kotlin.coroutines.CoroutineContext savedContext
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzo
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType REMOVE
com.google.firebase.firestore.core.ViewSnapshot: boolean isFromCache
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
com.google.firebase.auth.internal.zzbg: android.content.SharedPreferences zzc
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIFI_P2P
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.Integer sdkVersion
io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger logger
io.grpc.internal.MessageFramer: int maxOutboundMessageSize
com.google.android.gms.internal.firebase-auth-api.zzyy: java.util.List zza
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase QUERY
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair: int number
com.google.android.gms.internal.firebase-auth-api.zztw: com.google.android.gms.internal.firebase-auth-api.zzwy zza
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: io.grpc.internal.ManagedChannelImpl this$0
androidx.fragment.app.FragmentState: boolean mFromLayout
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.MetadataChanges cachedChangesMetadataState
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzo zzg
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.NameResolverRegistry nameResolverRegistry
com.google.android.gms.internal.firebase-auth-api.zzaeo: sun.misc.Unsafe zza
com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object instance
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzp
com.google.protobuf.ProtobufArrayList: com.google.protobuf.ProtobufArrayList EMPTY_LIST
com.google.firebase.messaging.RemoteMessage$Builder: java.util.Map data
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: int mId
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzadm: com.google.android.gms.internal.firebase-auth-api.zzadc zza
io.grpc.internal.GzipInflatingBuffer: boolean closed
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: io.grpc.Status exceptionStatus
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zzd
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.safetynet.SafetyNetApi SafetyNetApi
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: java.util.concurrent.ExecutorService zza
com.google.firebase.firestore.remote.TargetState: boolean current
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.RequestDeduplicator requestDeduplicator
io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.ClientStream val$streamDelegate
com.google.protobuf.MapEntryLite$Metadata: java.lang.Object defaultKey
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.common.api.Api$AbstractClientBuilder CLIENT_BUILDER
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
com.google.android.gms.internal.firebase-auth-api.zzaal: com.google.android.gms.internal.firebase-auth-api.zzaau zza
com.google.firebase.firestore.local.TargetData: com.google.protobuf.ByteString resumeToken
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode OK
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzc
com.google.android.gms.internal.firebase-auth-api.zzacw: com.google.android.gms.internal.firebase-auth-api.zzacw zza
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDirectInterfaces
com.google.firebase.firestore.util.ExponentialBackoff: long lastAttemptTime
com.google.android.gms.internal.firebase-auth-api.zzfy: java.lang.Class zza
com.google.android.gms.internal.firebase-auth-api.zzrw: java.lang.String zza
io.grpc.Metadata$Key: java.util.BitSet VALID_T_CHARS
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzl
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: java.lang.Long eventTimeMs
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: com.google.firebase.firestore.index.IndexByteEncoder this$0
com.google.android.gms.internal.firebase-auth-api.zznb: java.lang.String zze
androidx.fragment.app.Fragment: boolean mInLayout
com.google.android.gms.common.api.internal.BasePendingResult: int zad
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.Datastore datastore
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
com.google.firestore.v1.Document: com.google.protobuf.Timestamp updateTime_
com.lyokone.location.FlutterLocationService$LocalBinder: com.lyokone.location.FlutterLocationService this$0
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
com.google.firebase.firestore.remote.AbstractStream: long BACKOFF_INITIAL_DELAY_MS
com.google.android.gms.internal.firebase-auth-api.zzsi: com.google.android.gms.internal.firebase-auth-api.zztx zzc
com.google.android.gms.tasks.zzad: java.util.concurrent.CountDownLatch zza
com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog zac
com.google.firebase.auth.zzy: com.google.firebase.auth.ActionCodeSettings zzb
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase DOCUMENT_DELETE
com.google.firebase.firestore.remote.FirestoreChannel: io.grpc.Metadata$Key RESOURCE_PREFIX_HEADER
com.google.type.LatLng: double latitude_
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
com.google.android.gms.internal.firebase-auth-api.zzab: com.google.android.gms.internal.firebase-auth-api.zzp zza
com.google.android.gms.dynamic.zac: com.google.android.gms.dynamic.DeferredLifecycleHelper zab
com.google.firebase.firestore.model.mutation.MutationBatch: com.google.firebase.Timestamp localWriteTime
com.google.protobuf.Protobuf: com.google.protobuf.Protobuf INSTANCE
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue$DeleteFieldValue DELETE_INSTANCE
com.google.firebase.firestore.remote.AbstractStream: long BACKOFF_MAX_DELAY_MS
com.google.android.gms.internal.firebase-auth-api.zzxr: java.util.Map zzb
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
com.google.android.gms.maps.model.PatternItem: java.lang.Float zzc
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.HashMap authCredentials
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler zab
com.google.android.gms.common.api.internal.zza: java.lang.String zzb
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
io.grpc.internal.ManagedChannelImpl: long channelBufferLimit
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: int value
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger$1: io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger this$0
com.google.firebase.firestore.core.View$DocumentChanges: com.google.firebase.database.collection.ImmutableSortedSet mutatedKeys
com.google.android.gms.internal.firebase-auth-api.zzsv: com.google.android.gms.internal.firebase-auth-api.zzwy zza
io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.maps.model.PolygonOptions: int zzj
com.google.android.gms.internal.firebase-auth-api.zzsm: java.lang.String zzc
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] $VALUES
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mBigContentTitle
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
com.google.firebase.auth.internal.zzam: long zzb
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.cloudmessaging.zzd zzk
io.grpc.stub.AbstractStub: io.grpc.Channel channel
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: com.google.firebase.encoders.FieldDescriptor WINDOW_DESCRIPTOR
com.google.protobuf.AbstractProtobufList: boolean isMutable
com.google.firebase.firestore.core.UserData$ParsedSetData: com.google.firebase.firestore.model.mutation.FieldMask fieldMask
com.google.firebase.auth.internal.zzx: java.lang.String zzd
com.lyokone.location.MethodCallHandlerImpl: com.lyokone.location.FlutterLocation location
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentWebChromeClient
io.grpc.okhttp.internal.DistinguishedNameParser: int end
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzd
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float zzn
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor TTL_DESCRIPTOR
io.grpc.internal.ProxyDetectorImpl: io.grpc.internal.ProxyDetectorImpl$AuthenticationProvider authenticationProvider
com.google.firebase.messaging.WithinAppServiceConnection: com.google.firebase.messaging.WithinAppServiceBinder binder
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder DESCENDING
com.google.firebase.FirebaseOptions: java.lang.String storageBucket
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zzh
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder INSTANCE
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: com.google.firebase.encoders.FieldDescriptor MOBILESUBTYPE_DESCRIPTOR
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.Fragment val$fragment
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzD
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor TOPIC_DESCRIPTOR
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer criticalSectionEnterTimeoutMs
androidx.browser.customtabs.CustomTabColorSchemeParams: java.lang.Integer navigationBarDividerColor
com.google.android.gms.maps.model.zzt: com.google.android.gms.internal.maps.zzaj zzb
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode CANCEL
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: javax.inject.Provider configProvider
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzl
io.grpc.MethodDescriptor: boolean idempotent
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzc
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_PATH
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_FOTA
com.google.android.gms.common.internal.BaseGmsClient: java.util.concurrent.atomic.AtomicInteger zzd
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.protobuf.Internal$EnumLiteMap internalValueMap
io.grpc.internal.DelayedStream$4: io.grpc.internal.DelayedStream this$0
com.google.protobuf.LongArrayList: long[] array
io.grpc.internal.ManagedChannelImpl: boolean serviceConfigUpdated
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType PROXY
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: java.util.Map javaScriptInterfaces
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlq zzb
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zzq
com.google.firebase.firestore.remote.TargetState: boolean hasChanges
io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize
io.grpc.okhttp.OkHttpClientTransport: java.lang.Runnable connectingCallback
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode BAD_CONFIG
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue SERVER_VALUE_UNSPECIFIED
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator IS_NAN
com.google.firebase.firestore.model.mutation.MutationBatch: int batchId
com.google.firebase.auth.internal.zzae: java.lang.String zzc
io.github.ponnamkarthik.toast.fluttertoast.R$drawable: int corner
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzi
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
io.grpc.internal.Rescheduler: com.google.common.base.Stopwatch stopwatch
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
io.grpc.internal.SharedResourceHolder$Instance: int refcount
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultLightSettings
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
io.flutter.plugins.firebase.auth.IdTokenChannelStreamHandler: com.google.firebase.auth.FirebaseAuth$IdTokenListener idTokenListener
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.GoogleMapOptions options
io.grpc.internal.ManagedChannelImpl$1NotifyStateChanged: io.grpc.internal.ManagedChannelImpl this$0
io.grpc.SynchronizationContext$1: io.grpc.SynchronizationContext$ManagedRunnable val$runnable
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId LISTEN_STREAM_CONNECTION_BACKOFF
androidx.core.R$id: int accessibility_custom_action_14
com.google.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input
kotlin.jvm.internal.CallableReference: java.lang.String signature
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.TransportTracer transportTracer
com.google.protobuf.UnknownFieldSetLite: java.lang.Object[] objects
io.grpc.internal.MessageDeframer: boolean closeWhenComplete
io.grpc.okhttp.OkHttpChannelBuilder: long keepAliveTimeNanos
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.MethodDescriptor method
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.Metadata headers
com.google.android.gms.location.LocationRequest: float zzaz
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzX
com.google.protobuf.MessageSchema: int[] EMPTY_INT_ARRAY
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
io.grpc.internal.DnsNameResolver: boolean usingExecutorResource
io.grpc.internal.ChannelLoggerImpl$1: int[] $SwitchMap$io$grpc$ChannelLogger$ChannelLogLevel
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
io.grpc.internal.MessageFramer: long currentMessageWireSize
com.google.android.gms.common.internal.zav: boolean zad
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$Substream winningSubstream
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.datatransport.runtime.TransportImpl: com.google.android.datatransport.runtime.TransportContext transportContext
io.grpc.internal.InternalSubchannel$TransportLogger: io.grpc.InternalLogId logId
com.google.firebase.messaging.WithinAppServiceConnection: boolean connectionInProgress
androidx.fragment.app.DialogFragment: int mBackStackId
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: android.webkit.WebViewClient webViewClient
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$2: io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport this$1
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mContentView
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
androidx.core.app.NotificationCompatJellybean: java.lang.Object sActionsLock
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.Status shutdownStatus
com.google.firebase.firestore.bundle.BundleMetadata: com.google.firebase.firestore.model.SnapshotVersion createTime
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor MODEL_DESCRIPTOR
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: com.google.firebase.firestore.util.Listener changeListener
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OutboundFlowController outboundFlow
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod GET_ALPN_SELECTED_PROTOCOL
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor EVENTCODE_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzh
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.common.api.internal.zaci: java.lang.Runnable zac
com.google.android.gms.cloudmessaging.zzs: android.content.Context zzb
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
com.google.android.gms.common.internal.zap: com.google.android.gms.common.internal.zas zad
com.google.android.datatransport.runtime.TransportRuntime_Factory: javax.inject.Provider uploaderProvider
com.google.firestore.v1.Document: int UPDATE_TIME_FIELD_NUMBER
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.LocationServiceHandlerImpl locationServiceHandler
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long timezoneOffsetSeconds
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$1: com.google.firebase.firestore.util.AsyncQueue val$this$0
com.google.android.gms.internal.firebase-auth-api.zzwk: java.util.List zza
com.google.android.gms.internal.firebase-auth-api.zzqq: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
io.flutter.plugins.androidintent.IntentSender: android.app.Activity activity
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue$TimerId healthTimerId
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetryPolicy val$retryPolicy
kotlin.KotlinVersion: int patch
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzd
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
com.google.firebase.auth.internal.GenericIdpActivity: java.util.concurrent.Executor zzd
com.google.firebase.auth.internal.zzx: java.lang.String zzg
com.google.common.collect.ImmutableCollection: java.lang.Object[] EMPTY_ARRAY
com.google.firebase.auth.internal.zzat: com.google.android.gms.tasks.TaskCompletionSource zza
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId logId
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.remote.RemoteStore remoteStore
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zza
io.grpc.util.RoundRobinLoadBalancer$1: io.grpc.LoadBalancer$Subchannel val$subchannel
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
com.google.android.gms.internal.firebase-auth-api.zzabd: java.io.OutputStream zzf
com.google.android.gms.common.api.internal.BasePendingResult: boolean zal
com.google.android.gms.internal.firebase-auth-api.zznt: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.Long zzf
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabx zzc
com.google.firebase.firestore.proto.Target: int SNAPSHOT_VERSION_FIELD_NUMBER
com.google.firebase.firestore.remote.Datastore$1: java.util.List val$responses
com.google.firestore.v1.StructuredQuery: int END_AT_FIELD_NUMBER
com.google.firebase.auth.internal.zzbm: com.google.firebase.auth.internal.zzax zzc
com.google.firebase.auth.internal.RecaptchaActivity: com.google.firebase.auth.internal.zzbm zze
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.google.firebase.auth.zzp: com.google.firebase.auth.FirebaseAuth zzb
com.google.protobuf.UnsafeUtil: long OBJECT_ARRAY_BASE_OFFSET
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType ANDROID_FIREBASE
com.google.android.gms.internal.firebase-auth-api.zzdd: com.google.android.gms.internal.firebase-auth-api.zzap zzc
io.flutter.plugins.googlemaps.GoogleMapController: float density
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.protobuf.CodedInputStreamReader: int endGroupTag
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzfy zzd
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: com.google.firebase.appcheck.interop.InternalAppCheckTokenProvider internalAppCheckTokenProvider
com.google.protobuf.WireFormat: int MESSAGE_SET_ITEM_END_TAG
io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index addressIndex
com.google.android.gms.common.logging.Logger: com.google.android.gms.common.internal.GmsLogger zzc
com.google.android.gms.common.internal.zat: int zac
com.google.firebase.auth.ActionCodeUrl: java.util.Map zza
com.google.android.gms.internal.firebase-auth-api.zzxy: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzgx: java.lang.Class zza
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error ENHANCE_YOUR_CALM
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
com.google.android.gms.internal.firebase-auth-api.zzss: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.ReferenceDelegate referenceDelegate
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
io.flutter.plugins.googlemaps.PolylineBuilder: com.google.android.gms.maps.model.PolylineOptions polylineOptions
com.google.firestore.admin.v1.Index: com.google.protobuf.Internal$ProtobufList fields_
io.grpc.okhttp.AsyncSink$WriteRunnable: io.grpc.okhttp.AsyncSink this$0
androidx.fragment.app.Fragment: int mTargetRequestCode
com.google.android.gms.internal.firebase-auth-api.zzaep: java.lang.Class zzd
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float zzo
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjx zzb
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: long start_ms_
io.github.ponnamkarthik.toast.fluttertoast.R$layout: int toast_custom
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.zzr zzb
io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink
com.google.android.gms.internal.firebase-auth-api.zzaba: byte[] zza
com.google.common.base.Stopwatch: long startTick
com.google.android.gms.internal.firebase-auth-api.zzaah: long zzb
com.google.android.gms.internal.firebase-auth-api.zzsy: com.google.android.gms.internal.firebase-auth-api.zztx zzc
io.grpc.okhttp.OkHttpClientStream$TransportState: okio.Buffer pendingData
com.google.android.gms.maps.model.PolygonOptions: boolean zzg
com.google.android.gms.cloudmessaging.zzt: int zzb
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor APPLICATIONBUILD_DESCRIPTOR
io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientTransport val$transport
com.google.firebase.auth.internal.zzas: com.google.android.gms.tasks.TaskCompletionSource zza
io.flutter.view.AccessibilityBridge: int previousRouteId
io.grpc.Metadata$LazyValue: byte[] serialized
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng nearLeft
com.google.firebase.firestore.model.mutation.MutationResult: java.util.List transformResults
io.grpc.Deadline: io.grpc.Deadline$Ticker ticker
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.android.gms.common.internal.GetServiceRequest: boolean zzm
com.google.firestore.v1.TargetChange: int targetIdsMemoizedSerializedSize
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.location.zzad: com.google.android.gms.internal.location.zzad zzcr
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.GoogleApiManager zaa
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.FirebaseMessaging firebaseMessaging
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
io.grpc.okhttp.OkHttpClientStream: okio.Buffer EMPTY_BUFFER
io.flutter.plugins.firebase.messaging.JobIntentService: io.flutter.plugins.firebase.messaging.JobIntentService$CompatJobEngine mJobImpl
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
com.google.android.gms.internal.firebase-auth-api.zzpw: java.lang.String zza
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
com.google.android.gms.location.LocationAvailability: com.google.android.gms.location.zzaj[] zzav
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: com.google.firebase.encoders.proto.Protobuf$IntEncoding intEncoding
io.grpc.internal.KeepAliveManager: long keepAliveTimeoutInNanos
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment mLifecycleFragment
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method SET_SERVER_NAMES
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.KeyboardManager keyboardManager
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CANCEL
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.firebase.auth.FirebaseAuthUserCollisionException: com.google.firebase.auth.AuthCredential zza
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.firebase.messaging.RemoteMessage$Notification: long[] vibrateTimings
com.google.android.gms.internal.firebase-auth-api.zzaep: com.google.android.gms.internal.firebase-auth-api.zzaeo zzf
io.grpc.internal.ManagedChannelOrphanWrapper: java.util.logging.Logger logger
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
com.google.firebase.components.Component: int type
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzaay: int zza
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus reduced
com.google.firestore.v1.WriteRequest: int WRITES_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzyp: java.util.List zzb
io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIME_NANOS
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: java.lang.Exception exception
com.baseflow.geolocator.location.LocationOptions: long distanceFilter
com.google.firebase.installations.remote.RequestLimiter: long MAXIMUM_BACKOFF_DURATION_FOR_SERVER_ERRORS
com.google.firebase.firestore.core.UserData$ParseContext: boolean arrayElement
io.grpc.internal.RetriableStream$1CompressorEntry: io.grpc.Compressor val$compressor
com.google.android.gms.internal.firebase-auth-api.zzop: java.security.interfaces.ECPublicKey zza
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzb
io.flutter.plugins.firebase.messaging.JobIntentService$JobWorkEnqueuer: android.app.job.JobScheduler mJobScheduler
io.grpc.okhttp.internal.framed.Hpack$Writer: int nextDynamicTableIndex
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission whileInUse
com.squareup.okhttp.internal.http.StatusLine: java.lang.String message
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzh
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String iosBundleId
com.google.android.gms.internal.firebase-auth-api.zzl: java.lang.String zza
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Encoding encoding
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.common.util.Clock zaa
io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo state
com.google.android.gms.internal.firebase-auth-api.zzfl: com.google.android.gms.internal.firebase-auth-api.zzat zzb
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics storage_metrics_
com.google.android.gms.tasks.zzr: java.util.Queue zzb
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.TargetCache targetCache
io.grpc.internal.ClientCallImpl: boolean halfCloseCalled
com.google.firebase.firestore.remote.OnlineStateTracker: com.google.firebase.firestore.core.OnlineState state
com.google.firebase.firestore.remote.FirestoreChannel$2: io.grpc.ClientCall[] val$call
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.grpc.okhttp.internal.OptionalMethod: java.lang.Class[] methodParams
com.google.android.gms.maps.model.PatternItem: int zzb
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
com.google.android.gms.internal.firebase-auth-api.zzid: java.lang.Integer zzc
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Map zap
com.google.firebase.firestore.bundle.BundledQuery: com.google.firebase.firestore.core.Target target
com.google.firebase.firestore.remote.FirestoreChannel$4: com.google.firebase.firestore.remote.FirestoreChannel this$0
io.grpc.Codec$Identity: io.grpc.Codec NONE
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator IN
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String zzb
com.google.firestore.v1.TransactionOptions: int READ_ONLY_FIELD_NUMBER
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
com.google.android.gms.tasks.zzn: com.google.android.gms.tasks.OnSuccessListener zzc
io.grpc.HttpConnectProxiedSocketAddress: java.net.InetSocketAddress targetAddress
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform IOS
com.google.android.gms.internal.firebase-auth-api.zzacu: com.google.android.gms.internal.firebase-auth-api.zzada zza
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.stats.WakeLock: java.util.Map zzs
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] $VALUES
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState RUNNING
com.google.firestore.v1.WriteResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzst: com.google.android.gms.internal.firebase-auth-api.zzvs zza
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType message_type_
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode OK
com.google.android.gms.internal.firebase-auth-api.zzacd: byte[] zzd
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.internal.IAccountAccessor zad
io.grpc.internal.CallCredentialsApplyingTransportFactory: io.grpc.CallCredentials channelCallCredentials
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State PING_DELAYED
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
com.google.android.gms.internal.firebase-auth-api.zzex: com.google.android.gms.internal.firebase-auth-api.zzmh zza
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String collapse_key_
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zza
com.google.android.gms.tasks.zzu: android.os.Handler zza
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.local.LocalSerializer serializer
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.local.LocalSerializer localSerializer
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zza
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: long max_cache_size_bytes_
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
io.grpc.okhttp.internal.framed.Hpack$Reader: java.util.List headerList
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: java.util.Map val$wrapped
com.tekartik.sqflite.SqflitePlugin$4: io.flutter.plugin.common.MethodCall val$call
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: java.util.HashMap consumedInitialMessages
io.grpc.okhttp.ExceptionHandlingFrameWriter: io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler transportExceptionHandler
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzJ
com.google.android.gms.common.api.internal.GoogleApiManager: android.content.Context zak
io.grpc.NameResolver$Args: int defaultPort
com.google.firebase.firestore.core.View: boolean current
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
androidx.fragment.app.FragmentState: boolean mDetached
com.google.firebase.installations.AutoValue_InstallationTokenResult: long tokenCreationTimestamp
com.lyokone.location.FlutterLocation: android.util.SparseArray mapFlutterAccuracy
io.grpc.NameResolver$ResolutionResult: io.grpc.Attributes attributes
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor SDKVERSION_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq zza
com.google.firebase.auth.UserProfileChangeRequest$Builder: boolean zzc
io.flutter.plugins.googlemaps.TileProviderController$Worker: int y
okio.Segment: boolean shared
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebViewClient webViewClient
com.google.firebase.auth.internal.zzt: boolean zzh
com.google.firebase.firestore.util.ThrottledForwardingExecutor: java.util.concurrent.Semaphore availableSlots
com.google.android.gms.internal.firebase-auth-api.zzup: com.google.android.gms.internal.firebase-auth-api.zzrk zza
com.google.android.gms.internal.firebase-auth-api.zzsc: java.lang.String zzc
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzf
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor this$0
com.google.firebase.messaging.GmsRpc: com.google.firebase.inject.Provider userAgentPublisher
io.grpc.internal.DnsNameResolver: java.lang.String host
io.grpc.internal.InternalSubchannel: java.util.List addressGroups
com.google.firebase.firestore.model.Values$1: int[] $SwitchMap$com$google$firestore$v1$Value$ValueTypeCase
com.tekartik.sqflite.dev.Debug: boolean LOGV
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zza
io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough
com.google.firebase.firestore.remote.FirestoreChannel$2: com.google.android.gms.tasks.Task val$clientCall
com.google.android.gms.internal.firebase-auth-api.zznz: int zze
com.google.android.datatransport.runtime.TransportFactoryImpl: com.google.android.datatransport.runtime.TransportInternal transportInternal
androidx.core.R$id: int accessibility_custom_action_2
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
com.google.firebase.firestore.index.IndexByteEncoder: com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder ascending
io.grpc.internal.RetriableStream: io.grpc.internal.ClientStreamListener masterListener
io.grpc.internal.RetriableStream$Throttle: int tokenRatio
io.grpc.internal.Http2Ping: com.google.common.base.Stopwatch stopwatch
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] $VALUES
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientStream stream
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zzc
io.grpc.internal.RetriableStream$1CommitTask: io.grpc.internal.RetriableStream this$0
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor MESSAGETYPE_DESCRIPTOR
com.google.firebase.firestore.Query$1: int[] $SwitchMap$com$google$firebase$firestore$core$FieldFilter$Operator
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
io.grpc.okhttp.internal.ConnectionSpec$Builder: java.lang.String[] cipherSuites
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.concurrent.atomic.AtomicInteger zan
com.google.android.gms.location.zzae: java.lang.String zzbd
io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource TIMER_SERVICE
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
com.google.firestore.bundle.BundledQuery: java.lang.Object queryType_
com.google.android.gms.internal.firebase-auth-api.zzsk: com.google.android.gms.internal.firebase-auth-api.zztx zze
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges INCLUDE
com.google.android.gms.internal.firebase-auth-api.zzyh: android.os.Parcelable$Creator CREATOR
androidx.core.app.NotificationCompat$Builder: java.lang.String mCategory
com.google.firestore.v1.Target$QueryTarget: int queryTypeCase_
io.grpc.okhttp.OkHttpClientTransport: com.google.common.base.Supplier stopwatchFactory
com.google.firestore.v1.StructuredQuery: int offset_
com.google.firebase.auth.zzo: boolean zzg
io.grpc.NameResolver$Args: io.grpc.ProxyDetector proxyDetector
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable: io.grpc.internal.RetriableStream$Sublistener this$1
io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$Tls tls
com.google.firebase.auth.zzn: com.google.firebase.auth.FirebaseAuth zza
com.google.android.gms.internal.firebase-auth-api.zzaep: sun.misc.Unsafe zzc
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: android.content.Context applicationContext
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator ARRAY_CONTAINS_ANY
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
com.baseflow.geolocator.LocationServiceHandlerImpl: android.app.Activity activity
io.grpc.internal.AbstractClientStream$TransportState: boolean fullStreamDecompression
com.google.android.gms.internal.firebase-auth-api.zzzd: long zzb
com.google.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser: com.google.protobuf.GeneratedMessageLite defaultInstance
com.tekartik.sqflite.operation.BatchOperation: com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult operationResult
com.google.android.gms.internal.firebase-auth-api.zzfo: int zza
com.google.android.datatransport.Encoding: java.lang.String name
io.grpc.util.RoundRobinLoadBalancer: java.util.Random random
com.google.firestore.v1.CommitRequest: com.google.protobuf.Parser PARSER
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.android.gms.internal.firebase-auth-api.zzik: int zze
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig defaultServiceConfig
androidx.core.R$id: int tag_accessibility_pane_title
com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: java.lang.Runnable delegate
com.google.android.gms.internal.firebase-auth-api.zzvw: com.google.firebase.FirebaseApp zzg
io.grpc.Status: io.grpc.Metadata$Key CODE_KEY
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_3
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
io.flutter.plugins.firebase.messaging.JobIntentService: java.lang.Object sLock
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat mCompatController
com.google.android.gms.internal.firebase-auth-api.zzadg: boolean zzc
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String topic_
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultVibrateTimings
com.google.android.gms.common.api.internal.RegisterListenerMethod: int zad
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase REMOVE_ALL_FROM_ARRAY
com.google.firebase.auth.internal.zza: com.google.firebase.auth.FirebaseAuth zza
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.ConnectivityState val$newState
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.Deframer deframer
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzji zzb
androidx.core.R$id: int accessibility_custom_action_27
com.google.android.gms.common.internal.GetServiceRequest: int zzl
io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state
io.flutter.plugin.common.MethodChannel: java.lang.String name
com.google.protobuf.FieldType: com.google.protobuf.FieldType DOUBLE_LIST_PACKED
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String applicationBuild
io.grpc.internal.OobChannel: boolean shutdown
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code FAILED_PRECONDITION
com.google.android.gms.internal.firebase-auth-api.zzbf: com.google.android.gms.internal.firebase-auth-api.zzmp zza
com.google.android.gms.common.api.internal.GoogleApiManager: long zag
com.google.android.gms.maps.model.MarkerOptions: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zzd
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.core.app.NotificationCompat$Builder: int mPriority
io.grpc.okhttp.internal.Platform: java.security.Provider sslProvider
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header HTTP_SCHEME_HEADER
com.google.android.gms.location.zzj: long zzu
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: javax.inject.Provider guardProvider
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$StructuredQuery$CompositeFilter$Operator
io.grpc.internal.SerializingExecutor: io.grpc.internal.SerializingExecutor$AtomicHelper atomicHelper
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
com.google.firestore.v1.CommitRequest: int DATABASE_FIELD_NUMBER
kotlin.Pair: java.lang.Object second
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.firebase.firestore.bundle.BundledDocumentMetadata: java.util.List queries
io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger channelLogger
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ValueEncoder STRING_ENCODER
com.google.android.gms.internal.location.zzbd: boolean zzdj
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object value
io.grpc.internal.LogExceptionRunnable: java.util.logging.Logger log
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String composer_label_
io.grpc.internal.ClientCallImpl: byte[] FULL_STREAM_DECOMPRESSION_ENCODINGS
io.grpc.internal.DelayedStream$12: io.grpc.Compressor val$compressor
com.google.android.gms.common.internal.BaseGmsClient: int zzf
io.grpc.MethodDescriptor: java.lang.String fullMethodName
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
com.google.firebase.firestore.FieldValue$NumericIncrementFieldValue: java.lang.Number operand
com.google.android.gms.internal.firebase-auth-api.zzsa: java.lang.String zzb
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FLOW_CONTROL_ERROR
io.grpc.internal.FailingClientStream: boolean started
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: javax.inject.Provider wallClockProvider
com.google.android.gms.signin.internal.zaa: int zab
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: int number_
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value MAX_VALUE_TYPE
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.core.Transaction transaction
com.google.android.gms.internal.firebase-auth-api.zztp: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType Added
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TIMEOUT_KEY
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
io.grpc.okhttp.internal.framed.Settings: int persisted
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
com.google.android.gms.internal.firebase-auth-api.zzacd: java.nio.charset.Charset zzb
com.google.android.gms.internal.common.zza: java.lang.String zzb
com.google.gson.stream.JsonReader: int pos
com.google.android.gms.internal.firebase-auth-api.zzaeg: com.google.android.gms.internal.firebase-auth-api.zzaeg zza
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT64_LIST
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzfv zze
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zzc
com.google.firebase.messaging.TopicOperation: java.lang.String operation
com.google.android.gms.internal.firebase-auth-api.zzpl: java.util.regex.Pattern zza
com.google.protobuf.MapEntryLite: java.lang.Object key
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzm
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.remote.RemoteStore remoteStore
androidx.core.app.NotificationManagerCompat: java.lang.Object sLock
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderApi FusedLocationApi
com.google.android.gms.internal.firebase-auth-api.zzyj: boolean zzk
com.google.android.gms.internal.firebase-auth-api.zzyl: java.util.List zza
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator lazyOverflowIterator
io.grpc.InternalMetadata: com.google.common.io.BaseEncoding BASE64_ENCODING_OMIT_PADDING
kotlinx.coroutines.channels.ArrayChannel: int head
io.grpc.okhttp.OkHttpFrameLogger: java.util.logging.Logger logger
com.google.android.gms.internal.firebase-auth-api.zzaaz: com.google.android.gms.internal.firebase-auth-api.zzaay zza
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
com.google.firebase.FirebaseApp: com.google.firebase.inject.Provider defaultHeartBeatController
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.model.Document doc
com.google.protobuf.JavaType: java.lang.Object defaultDefault
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzsy: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.String zzq
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus registrationStatus
com.google.android.gms.internal.firebase-auth-api.zzts: com.google.firebase.auth.UserProfileChangeRequest zza
io.grpc.internal.ManagedChannelOrphanWrapper: java.util.concurrent.ConcurrentMap refs
com.google.firestore.v1.TargetChange: int targetChangeType_
com.google.protobuf.MessageSchema: int minFieldNumber
com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList this$0
com.google.common.io.BaseEncoding$Alphabet: int bitsPerChar
com.google.firebase.auth.zzx: com.google.firebase.auth.FirebaseUser zzb
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.grpc.internal.ManagedChannelImplBuilder: boolean recordRealTimeMetrics
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: com.google.android.gms.common.internal.RootTelemetryConfiguration zza
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging$AutoInit autoInit
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory music
com.google.firebase.messaging.threads.PoolableExecutors: com.google.firebase.messaging.threads.ExecutorFactory DEFAULT_INSTANCE
com.squareup.okhttp.HttpUrl: java.lang.String scheme
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
io.flutter.plugins.googlemaps.PolylinesController: java.util.Map polylineIdToController
com.google.android.gms.internal.firebase-auth-api.zzzs: long zze
com.google.protobuf.UnsafeUtil: boolean IS_ANDROID_64
com.google.android.gms.maps.zzj: com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback zza
com.google.firebase.auth.internal.zzbi: int zza
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzgh zza
com.google.firebase.auth.FirebaseAuth: java.lang.String zzi
com.google.firestore.v1.CommitResponse$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzabp: com.google.android.gms.internal.firebase-auth-api.zzabp zzb
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
kotlinx.coroutines.scheduling.NonBlockingContext: int taskMode
com.squareup.okhttp.HttpUrl: java.lang.String host
io.grpc.internal.DelayedClientCall$1DeadlineExceededRunnable: java.lang.StringBuilder val$buf
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.EventBus eventBus
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags
io.grpc.Status$Code: io.grpc.Status$Code ABORTED
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal RECEIVE_WEB_RESOURCE_ERROR
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.api.Scope[] zzf
com.google.firebase.auth.FirebaseAuth: java.util.List zzb
com.lyokone.location.NotificationOptions: java.lang.String channelName
com.google.firebase.firestore.TransactionOptions: com.google.firebase.firestore.TransactionOptions DEFAULT
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase DOCUMENT_REMOVE
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ClientSettings: java.lang.String zag
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory ringtones
com.google.android.gms.common.api.internal.zaci: com.google.android.gms.common.api.internal.RegisterListenerMethod zaa
com.baseflow.geolocator.location.LocationOptions: long timeInterval
com.google.android.gms.common.zac: android.content.Context zab
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
com.google.android.gms.internal.firebase-auth-api.zzmk: int zzg
kotlin.jvm.internal.FunctionReference: int arity
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument$DocumentType documentType
com.google.firebase.firestore.core.TransactionRunner: com.google.android.gms.tasks.TaskCompletionSource taskSource
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziw zzb
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
com.google.android.gms.internal.firebase-auth-api.zzqu: java.lang.String zza
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: short padding
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
com.google.protobuf.Internal: java.nio.charset.Charset ISO_8859_1
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: javax.inject.Provider executorProvider
io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator EQUAL
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
androidx.core.app.NotificationManagerCompat: android.content.Context mContext
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzg
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String zzb
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
com.google.android.gms.internal.location.zzas: android.content.ContentProviderClient zzcv
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.MessageInfoFactory messageInfoFactory
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledFuture pingFuture
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
io.grpc.okhttp.internal.Platform: java.lang.String[] ANDROID_SECURITY_PROVIDERS
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.common.math.LongMath: int[] biggestSimpleBinomials
com.google.firebase.components.EventBus: java.util.Map handlerMap
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzL
com.google.android.gms.internal.firebase-auth-api.zzzo: java.util.List zzb
com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: java.lang.String apiKey
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED64
com.tekartik.sqflite.SqflitePlugin$7: com.tekartik.sqflite.SqflitePlugin this$0
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ACTION_CLOSE
com.google.firebase.auth.FirebaseAuth: java.util.List zzd
com.google.firebase.auth.internal.zzb: com.google.firebase.auth.internal.zzf zze
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider channelBuilderDefaultPortProvider
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zza
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
com.google.android.gms.internal.firebase-auth-api.zzacg: java.lang.Class zzm
io.grpc.internal.DelayedClientTransport: long lastPickerVersion
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.core.SyncEngine syncEngine
io.grpc.okhttp.OkHttpTlsUpgrader: java.util.List TLS_PROTOCOLS
io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.Metadata val$headers
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean deleted
com.google.firebase.auth.internal.zzbg: android.content.Context zza
io.grpc.Status$Code: io.grpc.Status$Code OK
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: int flowControlWindow
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzfd zza
io.grpc.internal.AbstractClientStream$GetFramer: boolean closed
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor MCCMNC_DESCRIPTOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.firestore.v1.Write: com.google.protobuf.Internal$ProtobufList updateTransforms_
com.google.protobuf.CodedInputStream$ArrayDecoder: int limit
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: io.grpc.Status cause
com.google.gson.stream.JsonReader: int[] stack
io.grpc.HttpConnectProxiedSocketAddress$Builder: java.lang.String username
com.google.firebase.auth.internal.zzbb: java.util.List zza
io.grpc.EquivalentAddressGroup: io.grpc.Attributes$Key ATTR_AUTHORITY_OVERRIDE
com.google.android.gms.common.api.internal.zae: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zaa
io.flutter.plugins.firebase.messaging.JobIntentService: boolean mDestroyed
com.google.firebase.auth.internal.zzf: java.lang.String zza
io.grpc.internal.AbstractStream$TransportState$1RequestRunnable: io.perfmark.Link val$link
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
com.google.protobuf.MessageSchema: com.google.protobuf.MessageLite defaultInstance
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
io.grpc.Status: boolean $assertionsDisabled
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long currentByteBufferPos
io.grpc.HttpConnectProxiedSocketAddress$Builder: java.net.SocketAddress proxyAddress
com.google.firebase.auth.internal.RecaptchaActivity: java.lang.String zzb
com.google.firebase.auth.internal.zzar: android.content.Context zzb
io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation
com.google.firestore.v1.StructuredQuery: int LIMIT_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzacy: com.google.android.gms.internal.firebase-auth-api.zzacx zzb
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.Status savedShutdownNowStatus
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
com.google.android.gms.internal.firebase-auth-api.zzwu: com.google.android.gms.internal.firebase-auth-api.zzwv zzb
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzj
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod SET_ALPN_PROTOCOLS
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.zze zzc
io.grpc.okhttp.OkHttpClientTransport: javax.net.ssl.HostnameVerifier hostnameVerifier
androidx.fragment.app.Fragment: java.lang.String mTag
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zzyj zzb
com.google.firebase.components.Dependency: int type
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source Update
com.google.firebase.encoders.proto.LengthCountingOutputStream: long length
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] $VALUES
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
com.google.protobuf.FieldType: com.google.protobuf.FieldType GROUP_LIST
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability zab
com.google.android.gms.common.api.internal.zzd: java.util.WeakHashMap zza
com.google.android.gms.internal.firebase-auth-api.zzni: com.google.android.gms.internal.firebase-auth-api.zzni zzb
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer LEGACY
androidx.localbroadcastmanager.content.LocalBroadcastManager: java.util.ArrayList mPendingBroadcasts
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: android.content.Intent mIntent
com.google.firebase.firestore.core.TargetIdGenerator: int nextId
androidx.fragment.app.FragmentTransition$1: java.util.ArrayList val$exitingViews
com.google.protobuf.UnmodifiableLazyStringList$2: java.util.Iterator iter
com.google.firebase.messaging.FirebaseMessaging: android.app.Application$ActivityLifecycleCallbacks lifecycleCallbacks
io.grpc.okhttp.internal.DistinguishedNameParser: int beg
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String tag
com.google.android.gms.common.zzk: java.lang.ref.WeakReference zzb
com.google.common.collect.SingletonImmutableSet: java.lang.Object element
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebSettingsHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebSettingsHostApiCodec INSTANCE
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue$DelayedTask healthCheck
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: javax.inject.Provider clockProvider
io.grpc.Status: io.grpc.Status UNAVAILABLE
okio.AsyncTimeout$2: okio.Source val$source
com.google.firestore.admin.v1.Index: int FIELDS_FIELD_NUMBER
com.google.android.gms.common.api.Status: com.google.android.gms.common.ConnectionResult zzf
io.grpc.Metadata$Key: byte[] nameBytes
com.google.android.gms.tasks.zze: com.google.android.gms.tasks.Task zza
com.tekartik.sqflite.SqflitePlugin$8: com.tekartik.sqflite.SqflitePlugin this$0
com.google.android.gms.dynamite.zzb: java.lang.ClassLoader zza
com.google.android.gms.internal.firebase-auth-api.zzib: int zzb
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long startPos
com.google.android.gms.internal.firebase-auth-api.zzvn: com.google.android.gms.internal.firebase-auth-api.zzsa zza
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzc
io.grpc.okhttp.internal.Platform$JettyNegoProvider: java.util.List protocols
kotlinx.coroutines.EventLoop: boolean shared
com.google.protobuf.Any$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.localbroadcastmanager.content.LocalBroadcastManager: android.content.Context mAppContext
com.google.android.gms.internal.firebase-auth-api.zzzx: java.util.List zzi
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED
com.google.android.gms.internal.firebase-auth-api.zzzo: android.os.Parcelable$Creator CREATOR
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams MAX_FRAME_SIZE
com.google.android.gms.internal.firebase-auth-api.zzaae: int zza
com.google.firebase.auth.zzp: com.google.firebase.auth.PhoneAuthOptions zza
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.time.Clock uptimeClock
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
com.google.protobuf.UnsafeUtil: long DOUBLE_ARRAY_INDEX_SCALE
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Parser PARSER
io.grpc.internal.ApplicationThreadDeframerListener: io.grpc.internal.ApplicationThreadDeframerListener$TransportExecutor transportExecutor
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugins.googlemaps.LifecycleProvider lifecycleProvider
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: java.util.concurrent.atomic.AtomicBoolean isCallbackDispatcherReady
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams MAX_CONCURRENT_STREAMS
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error NO_ERROR
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider clockProvider
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: java.lang.Long eventUptimeMs
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.collection.SimpleArrayMap mListeners
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocation location
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
com.google.protobuf.ProtobufArrayList: java.lang.Object[] array
com.google.android.gms.internal.firebase-auth-api.zzfs: java.lang.String zzb
com.google.android.gms.common.GoogleSignatureVerifier: android.content.Context zzb
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$ClientKey zab
com.google.android.gms.internal.firebase-auth-api.zzaeu: com.google.android.gms.internal.firebase-auth-api.zzaer zza
io.grpc.internal.InternalSubchannel$7: boolean val$inUse
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String firebaseInstallationId
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.firebase.auth.internal.zzbl: java.util.Map zza
com.google.firestore.v1.Target: int resumeTypeCase_
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String URL_EXTRA
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform ANDROID
com.google.firebase.firestore.remote.AbstractStream: long IDLE_TIMEOUT_MS
io.grpc.internal.RetriableStream: io.grpc.Metadata$Key GRPC_PREVIOUS_RPC_ATTEMPTS
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype IDEN
io.grpc.internal.InternalSubchannel$Index: int addressIndex
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.firebase-auth-api.zzvw: android.net.Uri$Builder zze
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_HIPRI
com.google.firestore.v1.CommitRequest: int WRITES_FIELD_NUMBER
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason REASON_UNKNOWN
com.google.android.gms.internal.firebase-auth-api.zzabp: boolean zzd
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzxt: java.lang.String zza
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.dagger.Lazy packageName
io.grpc.internal.ManagedChannelImplBuilder: long IDLE_MODE_MIN_TIMEOUT_MILLIS
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.google.firestore.v1.CommitRequest: com.google.protobuf.Internal$ProtobufList writes_
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.grpc.Status$Code: io.grpc.Status$Code UNAVAILABLE
io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult result
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String javaSDKVersionUserAgent
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType FIRST
com.google.firebase.firestore.model.FieldIndex$IndexOffset: java.util.Comparator DOCUMENT_COMPARATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.google.android.gms.safetynet.SafeBrowsingData: long zzp
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzfp: java.lang.String zza
com.google.firebase.firestore.core.TransactionRunner: com.google.firebase.firestore.util.ExponentialBackoff backoff
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzc
com.google.firebase.messaging.Store$Token: java.lang.String token
com.google.firestore.v1.ExistenceFilter: com.google.protobuf.Parser PARSER
com.google.android.gms.cloudmessaging.Rpc: java.util.regex.Pattern zzd
com.google.android.gms.common.internal.ClientIdentity: java.lang.String packageName
com.google.android.gms.signin.SignInOptions: java.lang.Long zaj
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList orderBy_
com.google.android.gms.internal.firebase-auth-api.zzadi: com.google.android.gms.internal.firebase-auth-api.zzadh zzb
com.google.android.gms.maps.GoogleMapOptions: int zzc
com.google.firebase.firestore.core.Target: java.util.List orderBys
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor INSTANCE
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.firestore.model.mutation.MutationBatch batch
io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker subchannelPicker
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object[] buffer
com.google.firestore.v1.StructuredQuery$CollectionSelector: int ALL_DESCENDANTS_FIELD_NUMBER
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
io.grpc.okhttp.OkHttpClientTransport$1: io.grpc.okhttp.OkHttpClientTransport this$0
com.google.android.gms.internal.firebase-auth-api.zzsu: com.google.android.gms.internal.firebase-auth-api.zztx zzd
com.google.firestore.v1.Value: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: int documentTypeCase_
io.grpc.okhttp.OkHttpClientStream$TransportState: io.perfmark.Tag tag
com.google.android.gms.internal.firebase-auth-api.zzqc: java.lang.String zza
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED32
io.grpc.okhttp.internal.Platform$JettyNegoProvider: boolean unsupported
io.grpc.internal.MessageDeframer: byte[] inflatedBuffer
com.google.android.gms.common.api.internal.zabs: com.google.android.gms.common.api.internal.ApiKey zaa
io.grpc.internal.KeepAliveManager: java.lang.Runnable shutdown
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor executor
io.flutter.plugins.webviewflutter.FlutterAssetManagerHostApiImpl: io.flutter.plugins.webviewflutter.FlutterAssetManager flutterAssetManager
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.Query query
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.core.OnlineState onlineState
io.grpc.Status: io.grpc.Metadata$Key MESSAGE_KEY
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.permission.PermissionManager permissionManager
com.google.firebase.FirebaseOptions$Builder: java.lang.String storageBucket
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT64_LIST
com.google.firebase.installations.remote.RequestLimiter: com.google.firebase.installations.Utils utils
com.google.firestore.v1.DocumentTransform: int FIELD_TRANSFORMS_FIELD_NUMBER
androidx.core.R$id: int accessibility_custom_action_13
com.google.firebase.firestore.proto.UnknownDocument: int VERSION_FIELD_NUMBER
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.FieldDescriptor MAP_KEY_DESC
com.google.android.gms.internal.firebase-auth-api.zzbl: java.util.concurrent.CopyOnWriteArrayList zza
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String token
io.grpc.okhttp.AsyncSink: boolean flushEnqueued
com.google.firebase.FirebaseApp: java.util.List lifecycleListeners
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.Map memoizedIndexes
io.grpc.internal.TransportTracer: io.grpc.internal.TransportTracer$Factory DEFAULT_FACTORY
com.google.firebase.firestore.remote.RemoteStore: java.util.Map listenTargets
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.FirebaseAuth zza
com.google.android.gms.internal.firebase-auth-api.zzadf: int zze
io.flutter.plugins.googlemaps.CirclesController: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerHostApiCodec INSTANCE
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
com.google.firebase.auth.internal.zzbd: com.google.android.gms.tasks.Task zzd
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzd zzb
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.common.collect.ImmutableMap$Builder: boolean entriesUsed
com.google.android.gms.internal.firebase-auth-api.zzacm: java.lang.Class zza
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: boolean ignoreRefreshNsCheck
com.google.firestore.v1.BatchGetDocumentsResponse: int resultCase_
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: java.util.List argsHead
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
com.google.protobuf.FloatArrayList: com.google.protobuf.FloatArrayList EMPTY_LIST
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String model
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
com.google.firebase.firestore.core.LimboDocumentChange: com.google.firebase.firestore.model.DocumentKey key
com.google.android.gms.internal.auth-api-phone.zzaa: com.google.android.gms.common.Feature zzc
androidx.core.R$id: int accessibility_custom_action_24
com.tekartik.sqflite.SqflitePlugin$6: com.tekartik.sqflite.Database val$database
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose LIMBO_RESOLUTION
com.google.android.datatransport.cct.CCTDestination: com.google.android.datatransport.cct.CCTDestination LEGACY_INSTANCE
com.google.android.gms.dynamite.zzb: java.lang.Thread zzb
androidx.core.graphics.drawable.IconCompat: int mInt2
com.google.android.gms.internal.firebase-auth-api.zzacg: java.lang.Class zzl
com.google.android.gms.internal.location.zzas: com.google.android.gms.internal.location.zzbj zzcb
com.google.android.gms.internal.firebase-auth-api.zzob: int zzd
androidx.window.embedding.SplitRule: int minWidth
com.google.android.gms.common.internal.zze: com.google.android.gms.common.internal.BaseGmsClient zza
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString streamToken_
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
com.google.android.gms.internal.firebase-auth-api.zzwt: java.util.concurrent.Executor zzi
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase ARRAY_VALUE
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.Event event
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
com.google.firebase.auth.internal.zza: android.app.Activity zzc
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api$AbstractClientBuilder zad
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence[] mRemoteInputHistory
io.grpc.MethodDescriptor$Builder: boolean idempotent
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
io.grpc.internal.ManagedChannelImpl: java.util.Set subchannels
io.grpc.Context$CancellableContext$1: io.grpc.Context$CancellableContext this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String messagingSenderId
com.google.protobuf.UnmodifiableLazyStringList$1: com.google.protobuf.UnmodifiableLazyStringList this$0
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.SnapshotVersion readTime
com.google.firebase.components.Component$Builder: int instantiation
com.google.firestore.v1.Cursor$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zza
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.common.io.BaseEncoding$Alphabet: int mask
com.google.android.gms.auth.api.phone.SmsRetrieverClient: com.google.android.gms.common.api.Api$ClientKey zza
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType changeType
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzH
io.grpc.internal.MetadataApplierImpl: io.grpc.Context ctx
com.google.android.gms.maps.GoogleMapOptions: java.lang.String zzs
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.remote.Stream$StreamCallback listener
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzd
com.google.firebase.firestore.core.Transaction: java.util.Set writtenDocs
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
com.google.firebase.components.Lazy: java.lang.Object instance
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zza
com.lyokone.location.LocationPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.location.LocationClient locationClient
com.google.firebase.firestore.util.ExponentialBackoff: long maxDelayMs
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] $VALUES
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] $VALUES
androidx.fragment.app.DialogFragment$1: androidx.fragment.app.DialogFragment this$0
com.tekartik.sqflite.SqflitePlugin$1: io.flutter.plugin.common.MethodCall val$call
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: com.google.firebase.inject.Provider heartBeatInfoProvider
io.grpc.internal.ForwardingManagedChannel: io.grpc.ManagedChannel delegate
com.google.firebase.firestore.bundle.BundledDocumentMetadata: com.google.firebase.firestore.model.SnapshotVersion readTime
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils singleton
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: java.util.Map val$remoteMessageMap
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
com.google.android.gms.internal.firebase-auth-api.zzaj: com.google.android.gms.internal.firebase-auth-api.zzal zza
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zza
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: java.lang.Long requestTimeMs
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: io.grpc.internal.TransportTracer$Factory transportTracerFactory
com.google.android.gms.location.LocationRequest: long zzba
com.google.android.gms.common.internal.zzj: com.google.android.gms.common.internal.ConnectionTelemetryConfiguration zzd
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
io.flutter.plugins.googlemaps.GoogleMapController$1: io.flutter.plugins.googlemaps.GoogleMapController this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String deepLinkURLScheme
com.google.protobuf.FieldType: java.lang.Class elementType
com.google.android.gms.common.internal.zzu: boolean zzd
com.google.protobuf.FieldSet: boolean isImmutable
io.grpc.internal.FailingClientStream: io.grpc.ClientStreamTracer[] tracers
com.google.android.gms.internal.firebase-auth-api.zzid: com.google.android.gms.internal.firebase-auth-api.zzhw zza
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.fragment.app.FragmentManagerImpl$4: android.view.ViewGroup val$container
com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite emptyRegistry
com.google.firebase.firestore.bundle.BundleReader: java.nio.charset.Charset UTF8_CHARSET
io.grpc.okhttp.OkHttpChannelBuilder$2: int[] $SwitchMap$io$grpc$okhttp$OkHttpChannelBuilder$NegotiationType
com.google.android.gms.internal.firebase-auth-api.zzdx: java.util.logging.Logger zza
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: java.util.concurrent.ExecutorService executor
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedClientTransport$Listener delayedTransportListener
io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry decompressorRegistry
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.android.gms.common.internal.ClientSettings: java.util.Set zac
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzb
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.google.android.gms.tasks.zzr: boolean zzc
io.grpc.internal.ClientCallImpl$ContextCancellationListener: io.grpc.internal.ClientCallImpl this$0
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State PING_SENT
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance
com.google.android.gms.internal.firebase-auth-api.zzor: com.google.android.gms.internal.firebase-auth-api.zzpd zza
com.google.firebase.firestore.core.AsyncEventListener: com.google.firebase.firestore.EventListener eventListener
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzd
io.grpc.internal.RetriableStream$Throttle: int threshold
com.google.firebase.FirebaseOptions: java.lang.String gaTrackingId
io.grpc.internal.AbstractClientStream: boolean cancelled
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype GPRS
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: boolean coreInitialized
io.grpc.LoadBalancer$ResolvedAddresses$Builder: java.lang.Object loadBalancingPolicyConfig
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.OptionalMethod setUseSessionTickets
io.grpc.internal.RetriableStream: long channelBufferLimit
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
com.google.android.gms.common.internal.zaf: com.google.android.gms.common.api.internal.LifecycleFragment zab
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zza
com.google.android.gms.internal.firebase-auth-api.zzabr: com.google.android.gms.internal.firebase-auth-api.zzabr zza
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType UNKNOWN_DOCUMENT
io.grpc.internal.DelayedClientCall$2: io.grpc.internal.DelayedClientCall this$0
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
com.google.android.gms.internal.firebase-auth-api.zzabf: java.util.logging.Logger zza
com.google.android.gms.internal.firebase-auth-api.zzaal: int zzb
com.google.firebase.firestore.index.AutoValue_IndexEntry: int indexId
com.google.android.gms.internal.auth-api-phone.zzaa: com.google.android.gms.common.Feature[] zzd
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType CURRENT
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable ITERABLE
io.grpc.internal.RetriableStream$Sublistener: io.grpc.internal.RetriableStream$Substream substream
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.OrderBy KEY_ORDERING_ASC
com.google.android.gms.common.api.internal.zao: com.google.android.gms.common.api.internal.zam zab
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzh
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: android.content.Context zae
com.google.android.gms.internal.firebase-auth-api.zzzm: com.google.android.gms.internal.firebase-auth-api.zzxs zzh
com.google.firebase.firestore.local.SQLiteMutationQueue: java.lang.String uid
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator OR
io.grpc.internal.DnsNameResolver: int port
com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: com.google.android.datatransport.cct.internal.BatchedLogRequest requestBody
com.google.firestore.v1.BatchGetDocumentsResponse: int TRANSACTION_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: int value
com.google.android.gms.common.api.internal.TaskApiCall: int zac
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzyj zzk
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: java.util.Map response
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
com.google.protobuf.UnknownFieldSetLite: int[] tags
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.database.collection.ImmutableSortedSet batchesByDocumentKey
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: java.util.List log_event_dropped_
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.android.gms.common.api.internal.zact: java.util.Set zae
io.grpc.internal.ReadableBuffers: io.grpc.internal.ReadableBuffer EMPTY_BUFFER
com.google.android.gms.common.internal.MethodInvocation: int zaa
com.baseflow.geolocator.GeolocatorPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding pluginBinding
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.internal.ConnectionSpec connectionSpec
io.grpc.Status: io.grpc.Status RESOURCE_EXHAUSTED
com.google.android.gms.internal.firebase-auth-api.zzxf: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zza
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.Class clientProviderClass
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
io.grpc.internal.InternalSubchannel$7: io.grpc.internal.InternalSubchannel this$0
com.google.firestore.v1.DocumentChange: int targetIdsMemoizedSerializedSize
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.core.R$id: int accessibility_custom_action_5
com.google.android.gms.common.api.internal.zabq: java.util.Set zaf
io.grpc.internal.MessageDeframer: int currentMessageSeqNo
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type MODIFIED
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzg
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.FirebaseFirestore firestore
io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzacr: long[] zzb
com.google.firebase.firestore.core.Target: long limit
io.grpc.internal.MessageDeframer: io.grpc.Decompressor decompressor
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: io.grpc.internal.StreamListener$MessageProducer val$producer
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.CircleOptions: int zzd
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.InternalConfigSelector configSelector
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: java.util.Map javaScriptInterfaces
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zzc
com.google.android.gms.internal.firebase-auth-api.zzof: com.google.android.gms.internal.firebase-auth-api.zzdm zza
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: javax.inject.Provider eventStoreProvider
io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method addMethod
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
androidx.window.core.Version: java.lang.String description
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.EventChannel$EventSink events
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ObjectPool DEFAULT_EXECUTOR_POOL
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.google.android.datatransport.cct.CCTDestination: java.lang.String DEFAULT_API_KEY
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: com.google.firebase.firestore.util.CustomClassMapper$ErrorPath parent
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo networkConnectionInfo
androidx.fragment.app.Fragment: boolean mDetached
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: boolean hasRun
io.grpc.internal.RetriableStream$1: io.grpc.internal.RetriableStream this$0
com.google.firebase.firestore.remote.FirestoreChannel$4: com.google.android.gms.tasks.TaskCompletionSource val$tcs
io.grpc.internal.ChannelLoggerImpl: io.grpc.internal.TimeProvider time
io.grpc.internal.InternalSubchannel$TransportListener: boolean shutdownInitiated
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzf
com.google.firebase.auth.zzl: com.google.firebase.internal.InternalTokenResult zzb
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zas
com.baseflow.geolocator.location.LocationManagerClient: android.location.LocationManager locationManager
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: java.lang.Integer eventCode
io.grpc.internal.AbstractClientStream$TransportState: boolean statusReportedIsOk
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzzb zzm
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.runtime.time.Clock wallTimeClock
com.google.android.gms.common.internal.TelemetryData: java.util.List zab
io.grpc.internal.AbstractClientStream$TransportState: boolean outboundClosed
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
com.google.android.gms.common.internal.zzt: android.net.Uri zza
com.google.firebase.firestore.TransactionOptions: int maxAttempts
com.google.android.gms.internal.firebase-auth-api.zzrk: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.core.DocumentViewChange: com.google.firebase.firestore.model.Document document
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
io.grpc.internal.SerializingExecutor: java.util.concurrent.Executor executor
io.grpc.okhttp.OkHttpClientStream$TransportState: io.grpc.okhttp.OkHttpClientStream this$0
com.google.firestore.v1.DocumentTransform$FieldTransform: int SET_TO_SERVER_VALUE_FIELD_NUMBER
io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.ConnectionClientTransport transport
com.google.android.gms.internal.firebase-auth-api.zzro: long zzd
com.google.android.gms.internal.firebase-auth-api.zztm: com.google.android.gms.internal.firebase-auth-api.zzwy zza
com.google.protobuf.MessageSchema: com.google.protobuf.ExtensionSchema extensionSchema
com.google.android.gms.internal.firebase-auth-api.zzqi: java.lang.String zza
com.google.protobuf.Any: com.google.protobuf.Parser PARSER
io.grpc.internal.KeepAliveManager: io.grpc.internal.KeepAliveManager$KeepAlivePinger keepAlivePinger
com.google.android.gms.maps.model.CircleOptions: double zzb
androidx.fragment.app.FragmentTransaction: java.lang.String mName
io.flutter.plugins.googlemaps.TileOverlaysController: java.util.Map tileOverlayIdToController
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
androidx.collection.MapCollections$MapIterator: int mEnd
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.MultiFactorSession zzh
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord: java.util.ArrayList receivers
com.google.android.gms.common.internal.zzr: long zzg
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: java.lang.String name
io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_AUTHORITY
com.google.android.gms.tasks.zzp: java.util.concurrent.Executor zza
io.flutter.plugins.googlemaps.MarkersController: java.util.Map googleMapsMarkerIdToDartMarkerId
com.google.android.gms.internal.firebase-auth-api.zzgp: java.lang.Class zza
com.google.firebase.firestore.core.AsyncEventListener: boolean muted
androidx.browser.browseractions.BrowserActionsFallbackMenuView: int mBrowserActionsMenuMaxWidthPx
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zzb
com.baseflow.geolocator.location.LocationManagerClient$1: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Boolean daemon
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.internal.CallCredentialsApplyingTransportFactory this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions zai
io.grpc.okhttp.internal.framed.Settings: int set
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zzb
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory root
io.flutter.plugins.firebase.messaging.JobIntentService$JobWorkEnqueuer: android.app.job.JobInfo mJobInfo
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzaci: com.google.android.gms.internal.firebase-auth-api.zzaau zzc
com.google.firebase.firestore.LoadBundleTaskProgress: int totalDocuments
androidx.core.app.NotificationCompat$Builder: boolean mProgressIndeterminate
com.google.firebase.firestore.local.MemoryMutationQueue: int nextBatchId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
com.google.firestore.v1.BatchGetDocumentsRequest: int MASK_FIELD_NUMBER
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.util.Map requestHeaders
io.flutter.plugins.googlemaps.PolylinesController: io.flutter.plugin.common.MethodChannel methodChannel
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
io.grpc.internal.AbstractClientStream: boolean useGet
com.google.firestore.v1.ListenResponse: int DOCUMENT_DELETE_FIELD_NUMBER
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1
com.google.android.gms.internal.firebase-auth-api.zzzj: long zzf
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair: java.lang.Object object
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method SET_APPLICATION_PROTOCOLS
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
com.google.android.gms.internal.safetynet.zzs: com.google.android.gms.internal.safetynet.zzk$zzb zzag
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_SUPL
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] $VALUES
com.google.firestore.admin.v1.Index: java.lang.String name_
io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.TimeProvider val$timeProvider
io.grpc.internal.ClientCallImpl: io.grpc.CompressorRegistry compressorRegistry
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzw
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.util.logging.Logger LOGGER
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
io.grpc.okhttp.AsyncSink: boolean writeEnqueued
com.google.android.gms.internal.firebase-auth-api.zzaf: com.google.android.gms.internal.firebase-auth-api.zzae zzb
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] zze
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Throwable e
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus UNREACHABLE
io.flutter.plugins.googlemaps.MarkersController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.android.gms.internal.firebase-auth-api.zzai: java.lang.Object[] zza
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration MIGRATE_TO_V1
com.google.firestore.v1.ArrayValue: com.google.protobuf.Internal$ProtobufList values_
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED32_LIST
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task topicsSubscriberTask
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.internal.ManagedChannelImplBuilder managedChannelImplBuilder
io.grpc.internal.ManagedChannelImpl$1RequestConnection: io.grpc.internal.ManagedChannelImpl this$0
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams
com.google.firebase.auth.internal.zzap: com.google.android.gms.tasks.TaskCompletionSource zza
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: java.util.Set allowedPublishedEvents
com.google.android.gms.internal.firebase-auth-api.zzoo: java.security.interfaces.ECPrivateKey zza
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType LIMIT_TO_LAST
io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater
com.google.android.gms.internal.firebase-auth-api.zzms: java.lang.String zze
com.google.firebase.auth.zzs: com.google.firebase.auth.FirebaseAuth zza
com.google.android.gms.internal.base.zad: com.google.android.gms.common.Feature zaa
com.google.firebase.firestore.local.MemoryMutationQueue: java.util.List queue
com.squareup.okhttp.HttpUrl$Builder: java.lang.String encodedUsername
com.google.protobuf.FieldType: com.google.protobuf.FieldType STRING
io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_NOW_STATUS
com.google.android.gms.common.api.internal.zzc: java.lang.String zzb
io.flutter.plugins.googlemaps.GoogleMapBuilder: android.graphics.Rect padding
io.grpc.StatusRuntimeException: io.grpc.Status status
com.google.android.gms.location.FusedLocationProviderClient$zza: com.google.android.gms.tasks.TaskCompletionSource zzac
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet modifiedDocuments
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: boolean mServiceProcessing
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider EMPTY_PROVIDER
io.grpc.okhttp.Utils: java.util.logging.Logger log
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzd
com.google.firestore.v1.BatchGetDocumentsRequest: int READ_TIME_FIELD_NUMBER
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor INSTANCEID_DESCRIPTOR
io.grpc.CompositeCallCredentials: io.grpc.CallCredentials credentials2
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zza
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory$1: io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory this$0
kotlin.KotlinVersion: kotlin.KotlinVersion CURRENT
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
com.baseflow.geolocator.MethodCallHandlerImpl: android.content.Context context
com.google.android.gms.internal.firebase-auth-api.zzvk: java.lang.String zza
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryIndexManager indexManager
com.google.rpc.Status: int code_
com.google.android.gms.maps.model.MarkerOptions: float zzj
com.google.android.gms.common.api.Api: java.lang.String zac
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor REQUESTUPTIMEMS_DESCRIPTOR
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: java.text.DateFormat rfc339
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $VALUES
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: android.util.SparseArray valueMap
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] $VALUES
io.grpc.Status: io.grpc.Status DEADLINE_EXCEEDED
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.google.gson.stream.JsonReader: int limit
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object[] elements
com.google.android.gms.internal.firebase-auth-api.zzzi: java.lang.String zza
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: java.lang.Throwable val$t
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zzx
io.grpc.okhttp.OkHttpClientStream: java.lang.Object outboundFlowState
com.google.android.gms.common.api.internal.zaag: java.lang.String zaa
com.google.android.gms.tasks.zzz: com.google.android.gms.tasks.zzw zza
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator OPERATOR_UNSPECIFIED
com.google.android.gms.internal.firebase-auth-api.zzdv: java.lang.ThreadLocal zza
com.google.protobuf.StructuralMessageInfo: int[] checkInitialized
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
androidx.lifecycle.ViewModel: boolean mCleared
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: long count
androidx.window.R$attr: int splitMinSmallestWidth
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT32_LIST_PACKED
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
com.google.android.gms.internal.firebase-auth-api.zzabb: int zzc
com.google.protobuf.FieldType: boolean primitiveScalar
com.google.protobuf.SmallSortedMap: boolean isImmutable
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
io.grpc.internal.GrpcAttributes: io.grpc.Attributes$Key ATTR_CLIENT_EAG_ATTRS
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: java.util.Set flags
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection values
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.lang.String autoRetrievedSmsCodeForTesting
com.google.android.gms.location.LocationSettingsStates: boolean zzbq
io.grpc.internal.TransportFrameUtil: byte[] binaryHeaderSuffixBytes
kotlinx.coroutines.internal.ArrayQueue: int tail
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
com.google.firestore.v1.TargetChange: int READ_TIME_FIELD_NUMBER
io.grpc.LoadBalancer$CreateSubchannelArgs: java.lang.Object[][] customOptions
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.runtime.time.Clock uptimeClock
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_RC4_128_MD5
com.google.firebase.auth.zzo: long zzb
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: java.util.Map valueEncoders
com.google.common.base.Splitter: int limit
com.google.protobuf.UnsafeUtil: long FLOAT_ARRAY_BASE_OFFSET
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics DEFAULT_INSTANCE
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int criticalSectionEnterTimeoutMs
io.grpc.EquivalentAddressGroup: int hashCode
com.google.firebase.auth.FirebaseAuth: java.lang.String zzk
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
com.google.firebase.firestore.local.LruGarbageCollector$Params: int maximumSequenceNumbersToCollect
com.google.android.gms.common.internal.zah: com.google.android.gms.common.api.internal.ConnectionCallbacks zaa
io.flutter.plugins.googlemaps.PolylineController: boolean consumeTapEvents
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.model.DocumentKey key
com.google.android.gms.auth.api.phone.SmsRetrieverClient: com.google.android.gms.common.api.Api$AbstractClientBuilder zzb
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zaj
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
com.google.android.gms.maps.MapsInitializer: boolean zzb
com.google.firebase.firestore.local.LocalStore: android.util.SparseArray queryDataByTarget
com.google.android.gms.common.internal.zav: com.google.android.gms.common.ConnectionResult zac
com.google.android.gms.common.api.internal.zaac: com.google.android.gms.tasks.TaskCompletionSource zaa
io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver val$networkReceiver
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: long maxCount
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_SET_MESSAGE_CALLBACK
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzI
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzih zzb
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler scheduler
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient fusedLocationProviderClient
com.google.android.datatransport.runtime.TransportRuntime_Factory: javax.inject.Provider eventClockProvider
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder: com.google.firebase.encoders.FieldDescriptor MESSAGINGCLIENTEVENT_DESCRIPTOR
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.Priority priority
com.google.gson.stream.JsonReader: char[] buffer
com.google.firebase.Timestamp: int nanoseconds
com.google.firebase.firestore.local.SQLiteTargetCache$TargetDataHolder: com.google.firebase.firestore.local.TargetData targetData
io.grpc.Metadata: java.lang.Object[] namesAndValues
com.google.firebase.installations.local.IidStore: android.content.SharedPreferences iidPrefs
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
io.grpc.internal.RetriableStream: io.grpc.MethodDescriptor method
io.grpc.okhttp.internal.framed.Hpack$Writer: int smallestHeaderTableSizeSetting
com.google.firebase.firestore.proto.Target$TargetTypeCase: int value
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level DEBUG
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIMAX
androidx.core.R$id: int accessibility_custom_action_17
io.grpc.internal.AbstractStream$TransportState$1RequestRunnable: io.grpc.internal.AbstractStream$TransportState this$0
com.google.firebase.messaging.RequestDeduplicator: java.util.concurrent.Executor executor
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.Wrappers zza
com.google.firebase.installations.RandomFidGenerator: byte REMOVE_PREFIX_MASK
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig lastServiceConfig
io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream
io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose LISTEN
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
com.google.firebase.auth.UserProfileChangeRequest: java.lang.String zza
io.flutter.embedding.android.KeyboardManager: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.google.android.datatransport.cct.internal.QosTier: int value
com.google.firebase.messaging.DisplayNotification: android.content.Context context
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwq zzc
io.grpc.okhttp.OkHttpClientStream$TransportState: int window
com.google.android.gms.common.internal.zzu: int zzc
com.google.android.gms.internal.auth-api-phone.zzaa: com.google.android.gms.common.Feature zza
com.google.android.gms.internal.firebase-auth-api.zzex: com.google.android.gms.internal.firebase-auth-api.zzeu zzc
com.google.firestore.v1.DocumentChange$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.internal.DelayedStream$1: int val$maxSize
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode ENHANCE_YOUR_CALM
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: int SCHEMA_VERSION
com.google.android.gms.common.api.internal.zacd: long zad
com.google.android.gms.internal.firebase-auth-api.zzrq: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.zzbg: java.lang.String zzb
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType TLS
com.google.firebase.auth.internal.zzbd: com.google.firebase.auth.internal.zzbd zzb
androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteBundleCache bundleCache
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING
com.google.android.gms.internal.firebase-auth-api.zzsm: java.lang.String zzb
com.google.firebase.firestore.core.DatabaseInfo: boolean sslEnabled
okio.SegmentedByteString: byte[][] segments
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder INSTANCE
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: java.lang.String description
androidx.window.R$id: int ltr
com.lyokone.location.LocationPlugin: com.lyokone.location.MethodCallHandlerImpl methodCallHandler
io.grpc.internal.MetadataApplierImpl: io.grpc.internal.DelayedStream delayedStream
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.android.gms.common.GooglePlayServicesUtilLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
com.google.android.gms.internal.firebase-auth-api.zzadx: java.util.Iterator zzd
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zze
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Parser PARSER
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
io.grpc.internal.MessageDeframer: int inflatedIndex
com.google.android.gms.common.internal.GetServiceRequest: android.os.Bundle zzg
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.Encoding encoding
com.google.android.gms.internal.firebase-auth-api.zzxm: boolean zzg
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode REFUSED_STREAM
com.google.firebase.auth.GetTokenResult: java.lang.String zza
com.google.android.gms.maps.zzo: com.google.android.gms.maps.GoogleMap$OnPolygonClickListener zza
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
androidx.fragment.app.FragmentState: int mContainerId
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider uptimeClockProvider
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
io.grpc.internal.AbstractClientStream$TransportState: boolean deframerClosed
androidx.fragment.app.BackStackRecord: boolean mCommitted
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator IDENTITY_TRANSLATOR
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks zzc
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.Status savedShutdownStatus
com.google.protobuf.GeneratedMessageInfoFactory: com.google.protobuf.GeneratedMessageInfoFactory instance
com.google.firebase.auth.zze: com.google.android.gms.internal.firebase-auth-api.zzzq zzd
com.google.android.gms.internal.firebase-auth-api.zznc: int zze
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzm
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.plugins.googlemaps.CircleBuilder: boolean consumeTapEvents
com.google.firebase.messaging.SyncTask: com.google.firebase.messaging.FirebaseMessaging firebaseMessaging
io.grpc.okhttp.OkHttpClientTransport: java.lang.Runnable tooManyPingsRunnable
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String queueName
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: java.lang.Long errorCode
androidx.core.graphics.drawable.IconCompat: int mInt1
io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport pendingTransport
com.google.android.gms.maps.GoogleMapOptions: java.lang.Integer zzr
com.google.android.gms.common.internal.zad: android.app.Activity zab
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: long keepAliveTimeNanos
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.MessageLite defaultInstance
com.google.firebase.messaging.GmsRpc: com.google.android.gms.cloudmessaging.Rpc rpc
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.app.AlarmManager alarmManager
io.grpc.NameResolver$Args: io.grpc.ChannelLogger channelLogger
com.google.firebase.FirebaseApp: android.content.Context applicationContext
com.google.android.gms.internal.firebase-auth-api.zzej: com.google.android.gms.internal.firebase-auth-api.zznt zzb
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType FLOAT
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType NONE
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
com.google.android.gms.common.internal.service.zap: com.google.android.gms.common.internal.TelemetryLoggingOptions zaa
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: java.util.List logRequests
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode SPDY_HEADERS
com.google.android.gms.internal.firebase-auth-api.zzos: boolean zzj
com.google.firebase.auth.internal.zzaq: android.content.Context zzb
com.google.android.gms.internal.maps.zza: java.lang.String zzb
io.grpc.internal.DelayedClientCall$5: io.grpc.internal.DelayedClientCall this$0
io.grpc.internal.DelayedClientCall$CloseListenerRunnable: io.grpc.ClientCall$Listener listener
com.google.android.gms.signin.SignInOptions: boolean zah
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
com.baseflow.geolocator.GeolocatorPlugin: io.flutter.plugin.common.PluginRegistry$Registrar pluginRegistrar
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.baseflow.geolocator.StreamHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.google.firebase.auth.internal.zzam: long zzc
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.firestore.admin.v1.Index: int STATE_FIELD_NUMBER
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId INDEX_BACKFILL
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: int value
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.internal.zav zac
com.google.firebase.messaging.EnhancedIntentService: android.os.Binder binder
io.grpc.InternalLogId: long id
com.lyokone.location.LocationPlugin: com.lyokone.location.StreamHandlerImpl streamHandlerImpl
com.google.android.gms.common.internal.zzc: boolean zzb
com.google.android.gms.internal.firebase-auth-api.zzgi: com.google.android.gms.internal.firebase-auth-api.zzgi zza
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: boolean more
com.google.protobuf.FieldType: com.google.protobuf.FieldType GROUP
okio.ByteString: char[] HEX_DIGITS
com.google.firebase.firestore.util.Executors: java.util.concurrent.Executor DIRECT_EXECUTOR
com.google.protobuf.LazyField$LazyEntry: java.util.Map$Entry entry
com.tekartik.sqflite.SqflitePlugin: java.util.Map databaseMap
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.cloudmessaging.zzm zzd
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: com.google.firebase.database.collection.ImmutableSortedMap docs
com.google.android.datatransport.runtime.SafeLoggingExecutor: java.util.concurrent.Executor delegate
io.flutter.plugins.webviewflutter.InputAwareWebView$1: android.view.View val$targetView
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzv
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState NO_RESOLUTION
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApiCodec INSTANCE
io.grpc.internal.ManagedChannelImplBuilder: boolean lookUpServiceConfig
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.InternalChannelz channelz
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit
com.google.firestore.v1.DocumentTransform$FieldTransform: int APPEND_MISSING_ELEMENTS_FIELD_NUMBER
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
io.grpc.Deadline: boolean expired
com.google.protobuf.NullValue: com.google.protobuf.NullValue UNRECOGNIZED
com.google.android.gms.common.api.internal.zao: com.google.android.gms.common.api.internal.zap zaa
io.grpc.internal.AbstractStream$TransportState: int numSentBytesQueued
io.grpc.okhttp.internal.framed.Hpack: io.grpc.okhttp.internal.framed.Header[] STATIC_HEADER_TABLE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: int mJobId
com.google.android.gms.internal.firebase-auth-api.zzaz: com.google.android.gms.internal.firebase-auth-api.zzgb zza
com.google.android.gms.internal.firebase-auth-api.zzvv: java.lang.String zzb
com.google.common.collect.Iterators$9: java.lang.Object val$value
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
com.google.firebase.firestore.remote.OnlineStateTracker: com.google.firebase.firestore.remote.OnlineStateTracker$OnlineStateCallback onlineStateCallback
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.CallOptions val$callOptions
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: com.google.android.datatransport.runtime.TransportContext transportContext
com.google.android.gms.internal.firebase-auth-api.zzvl: com.google.firebase.auth.PhoneAuthCredential zza
com.google.protobuf.FieldType: com.google.protobuf.FieldType BYTES
io.grpc.internal.AbstractClientStream$GetFramer: io.grpc.internal.AbstractClientStream this$0
com.google.firebase.firestore.remote.Datastore: java.util.Set WHITE_LISTED_HEADERS
io.grpc.internal.RetriableStream$Sublistener$2: io.grpc.internal.RetriableStream$Sublistener this$1
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.lang.Object lock
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.firebase.firestore.util.AsyncQueue$DelayedTask connectivityAttemptTimer
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase TRANSFORMTYPE_NOT_SET
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
com.google.android.gms.internal.firebase-auth-api.zzca: com.google.android.gms.internal.firebase-auth-api.zzgb zza
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: io.grpc.okhttp.OkHttpFrameLogger logger
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType LAST
com.google.android.gms.internal.cloudmessaging.zze: com.google.android.gms.internal.cloudmessaging.zzb zzb
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
com.tekartik.sqflite.SqflitePlugin$2: com.tekartik.sqflite.SqflitePlugin this$0
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] $VALUES
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: long cacheSizeBytes
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.lang.String transportName
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator GREATER_THAN
io.grpc.internal.ProxyDetectorImpl: com.google.common.base.Supplier proxySelector
io.grpc.internal.RetriableStream$FutureCanceller: boolean cancelled
okio.AsyncTimeout: boolean inQueue
io.flutter.Log: int VERBOSE
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] $VALUES
io.grpc.internal.AbstractClientStream$TransportState$1: io.grpc.Status val$status
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzc
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String zaa
com.google.android.gms.internal.firebase-auth-api.zzse: com.google.firebase.auth.zze zzc
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.base.R$string: int common_google_play_services_update_title
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment: com.google.firebase.firestore.core.ActivityScope$CallbackList callbacks
io.grpc.internal.DelayedClientTransport: io.grpc.Status shutdownStatus
com.google.android.gms.internal.firebase-auth-api.zznt: com.google.android.gms.internal.firebase-auth-api.zznt zzb
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider this$1
com.google.android.gms.maps.model.PolygonOptions: int zzd
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_ARRAY_OP
io.grpc.internal.MessageDeframer$1: int[] $SwitchMap$io$grpc$internal$MessageDeframer$State
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolverRegistry nameResolverRegistry
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString right
com.google.android.gms.internal.firebase-auth-api.zzyu: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzvs: com.google.android.gms.internal.firebase-auth-api.zzvr zza
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
io.grpc.internal.InternalSubchannel$2: io.grpc.internal.InternalSubchannel this$0
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.lang.ref.Reference allocationSite
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol[] $VALUES
androidx.webkit.internal.WebViewGlueCommunicator$LAZY_COMPAT_CONVERTER_HOLDER: androidx.webkit.internal.WebkitToCompatConverter INSTANCE
io.grpc.internal.ApplicationThreadDeframer: io.grpc.internal.MessageDeframer deframer
com.google.android.gms.common.internal.LibraryVersion: com.google.android.gms.common.internal.LibraryVersion zzb
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$inFragment
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.grpc.okhttp.internal.TlsVersion: java.lang.String javaName
com.google.android.gms.stats.WakeLock: java.util.concurrent.ScheduledExecutorService zzu
com.google.android.gms.location.zzn: com.google.android.gms.internal.location.zzbd zzy
io.grpc.internal.ManagedChannelImplBuilder: java.util.logging.Logger log
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument$DocumentState documentState
io.grpc.okhttp.OkHttpClientStream$TransportState: boolean cancelSent
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean keepAliveWithoutCalls
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
com.google.android.gms.location.zzo: com.google.android.gms.location.FusedLocationProviderClient zzaa
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzh
com.google.android.gms.internal.firebase-auth-api.zzvc: com.google.android.gms.internal.firebase-auth-api.zzrk zza
com.google.protobuf.IterableByteBufferInputStream: long currentAddress
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.Map zzc
androidx.core.R$id: int accessibility_custom_action_9
com.google.firebase.firestore.util.AsyncQueue: java.util.ArrayList timerIdsToSkip
io.grpc.SynchronizationContext$ManagedRunnable: boolean isCancelled
com.google.android.gms.internal.firebase-auth-api.zzyh: com.google.android.gms.internal.firebase-auth-api.zzyl zzb
com.google.android.gms.internal.firebase-auth-api.zzadf: int[] zza
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.reflect.Method sPutIBinderMethod
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
com.google.android.gms.common.internal.GmsLogger: java.lang.String zza
io.grpc.internal.DelayedClientCall: boolean passThrough
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
io.grpc.ClientStreamTracer$StreamInfo: boolean isTransparentRetry
androidx.fragment.app.Fragment: boolean mDeferStart
com.google.android.gms.internal.firebase-auth-api.zzxm: boolean zzi
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
io.grpc.internal.HedgingPolicy: java.util.Set nonFatalStatusCodes
com.google.android.gms.internal.firebase-auth-api.zzob: java.lang.ThreadLocal zza
com.google.android.gms.internal.firebase-auth-api.zzfl: com.google.android.gms.internal.firebase-auth-api.zzap zza
io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity
io.flutter.Log: int ASSERT
com.google.firestore.v1.Target: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.Value: int BYTES_VALUE_FIELD_NUMBER
com.google.firebase.firestore.local.IndexBackfiller: int maxDocumentsToProcess
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.internal.maps.zzaj zza
com.google.firebase.firestore.core.QueryView: int targetId
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState SYNCED
com.tekartik.sqflite.operation.MethodCallOperation: com.tekartik.sqflite.operation.MethodCallOperation$Result result
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.gms.internal.firebase-auth-api.zztq: com.google.android.gms.internal.firebase-auth-api.zztx zzb
io.grpc.internal.ManagedChannelImpl: io.grpc.Channel interceptorChannel
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzxe zzd
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor EVENTTIMEMS_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zzb
com.google.android.gms.maps.zzp: com.google.android.gms.maps.GoogleMap$OnPolylineClickListener zza
com.google.protobuf.LongArrayList: int size
io.grpc.internal.ManagedChannelImplBuilder: boolean recordFinishedRpcs
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.android.gms.internal.firebase-auth-api.zzcj: com.google.android.gms.internal.firebase-auth-api.zzck zza
io.grpc.internal.RetriableStream$Sublistener$4: io.grpc.internal.RetriableStream$Sublistener this$1
com.google.android.gms.internal.firebase-auth-api.zzsw: com.google.android.gms.internal.firebase-auth-api.zzzy zza
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.Context context
io.grpc.internal.Http2Ping$2: io.grpc.internal.ClientTransport$PingCallback val$callback
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String manufacturer
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzl
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.RandomFidGenerator fidGenerator
com.google.android.gms.internal.location.zzav: com.google.android.gms.location.LocationAvailability zzdc
com.google.android.gms.common.internal.zza: int zza
com.google.android.gms.internal.firebase-auth-api.zzok: byte[][] zza
com.lyokone.location.FlutterLocationService: com.lyokone.location.BackgroundNotification backgroundNotification
com.google.firebase.firestore.bundle.BundleReader: java.nio.ByteBuffer buffer
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: javax.inject.Provider eventStoreProvider
com.google.firebase.firestore.remote.FirestoreChannel$3: io.grpc.ClientCall val$call
com.google.android.gms.internal.firebase-auth-api.zzta: com.google.android.gms.internal.firebase-auth-api.zzwy zza
com.google.android.datatransport.runtime.EncodedPayload: com.google.android.datatransport.Encoding encoding
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String iosBundleId
androidx.core.os.ExecutorCompat$HandlerExecutor: android.os.Handler mHandler
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: io.flutter.plugins.firebase.messaging.JobIntentService this$0
io.flutter.view.AccessibilityBridge: boolean isReleased
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzn
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase UPDATE_TIME
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.internal.SharedResourceHolder$Resource SHARED_EXECUTOR
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
com.google.firestore.v1.ArrayValue: int VALUES_FIELD_NUMBER
com.google.firestore.v1.Write: int TRANSFORM_FIELD_NUMBER
io.flutter.plugins.firebase.messaging.JobIntentService: java.util.ArrayList mCompatQueue
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zaa
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: com.google.firebase.firestore.local.LocalStore localStore
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.internal.framed.FrameWriter frameWriter
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
com.google.android.gms.common.internal.zal: android.util.SparseIntArray zaa
com.google.common.base.Charsets: java.nio.charset.Charset US_ASCII
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzk
io.grpc.internal.DelayedClientCall$5: int val$numMessages
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: java.util.Map val$wrapped
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$enteringViews
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
io.grpc.util.RoundRobinLoadBalancer$EmptyPicker: io.grpc.Status status
com.google.android.gms.internal.firebase-auth-api.zzrm: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzN
com.lyokone.location.NotificationOptions: boolean onTapBringToFront
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_AES_256_GCM_SHA384
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor INSTANCE
com.google.firebase.auth.zze: java.lang.String zzc
io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] TYPES
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest DEFAULT_INSTANCE
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType ENUM
androidx.fragment.app.FragmentState: java.lang.String mClassName
io.grpc.Metadata$LazyValue: java.lang.Object value
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out
com.google.rpc.Status: int DETAILS_FIELD_NUMBER
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
com.google.firestore.v1.ListenResponse: int DOCUMENT_REMOVE_FIELD_NUMBER
com.google.protobuf.RopeByteString$1: com.google.protobuf.RopeByteString$PieceIterator pieces
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.core.TargetIdGenerator targetIdGenerator
com.google.android.gms.internal.firebase-auth-api.zznb: int zzh
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhw zzb
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.List zac
io.grpc.internal.TransportTracer: io.grpc.internal.TransportTracer$FlowControlReader flowControlWindowReader
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIFI
com.google.firestore.v1.DocumentChange: int TARGET_IDS_FIELD_NUMBER
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzg
io.flutter.plugins.googlemaps.PolygonBuilder: com.google.android.gms.maps.model.PolygonOptions polygonOptions
com.google.firestore.v1.StructuredQuery: int SELECT_FIELD_NUMBER
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean zzb
com.google.android.gms.internal.firebase-auth-api.zzmb: com.google.android.gms.internal.firebase-auth-api.zzmb zzb
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.Map transactionHandlers
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VD_PLATFORM_VIEW
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State PING_SCHEDULED
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy bestForNavigation
com.google.android.gms.internal.firebase-auth-api.zzbz: com.google.android.gms.internal.firebase-auth-api.zzgb zzb
com.google.android.gms.internal.firebase-auth-api.zzxm: java.lang.String zze
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzaj zzcj
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
com.google.protobuf.MessageSchema: boolean useCachedSizeField
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int totalBufferSize
com.google.android.gms.internal.firebase-auth-api.zzpe: javax.crypto.SecretKey zza
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
com.google.android.gms.internal.firebase-auth-api.zzdb: com.google.android.gms.internal.firebase-auth-api.zzdc zza
com.google.firebase.firestore.remote.GrpcCallProvider: android.content.Context context
com.google.android.gms.common.internal.zzr: android.os.Handler zzd
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Event event_
io.grpc.protobuf.lite.ProtoInputStream: java.io.ByteArrayInputStream partial
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzuw: java.lang.String zzw
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long eventUptimeMs
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype IWLAN
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
com.google.firebase.auth.internal.zzam: com.google.firebase.FirebaseApp zzh
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: com.google.firebase.messaging.TopicsSyncTask task
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier zza
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: boolean configured
com.google.firestore.v1.WriteRequest: com.google.protobuf.ByteString streamToken_
com.google.android.gms.internal.firebase-auth-api.zzmh: int zze
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
com.google.firestore.v1.Precondition: int conditionTypeCase_
com.google.firebase.firestore.local.ReferenceSet: com.google.firebase.database.collection.ImmutableSortedSet referencesByTarget
com.google.android.gms.internal.firebase-auth-api.zzgv: java.lang.Class zza
com.google.android.gms.maps.model.zzu: com.google.android.gms.maps.model.TileProvider zza
com.google.firebase.firestore.proto.WriteBatch: int BASE_WRITES_FIELD_NUMBER
com.google.firebase.auth.internal.RecaptchaActivity: long zzd
com.google.android.gms.internal.firebase-auth-api.zzoe: javax.crypto.spec.SecretKeySpec zze
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
io.flutter.plugins.webviewflutter.JavaScriptChannel: android.os.Handler platformThreadHandler
com.google.firestore.v1.Target$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.okhttp.OkHttpClientTransport: int maxMessageSize
io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.remote.RemoteSerializer remoteSerializer
com.google.android.gms.common.internal.zzo: com.google.android.gms.common.internal.zzr zza
com.google.protobuf.LazyFieldLite: com.google.protobuf.ByteString memoizedBytes
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State DISCONNECTED
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_CALLBACK_ON_MESSAGE
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.messaging.FirebaseMessaging this$0
com.google.firestore.admin.v1.Index: int QUERY_SCOPE_FIELD_NUMBER
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: int value
com.google.android.gms.common.api.internal.zacq: com.google.android.gms.common.api.internal.zact zaa
androidx.fragment.app.FragmentState: boolean mRemoving
com.google.android.gms.common.api.internal.BasePendingResult: boolean zan
io.grpc.internal.ScParser: io.grpc.internal.AutoConfiguredLoadBalancerFactory autoLoadBalancerFactory
com.baseflow.geolocator.location.LocationServiceStatusReceiver: io.flutter.plugin.common.EventChannel$EventSink events
com.google.android.gms.safetynet.zzh: int zzk
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.google.protobuf.ByteString$1: int limit
com.google.android.gms.internal.firebase-auth-api.zzuc: com.google.android.gms.internal.firebase-auth-api.zzqa zza
com.google.firebase.firestore.util.ExponentialBackoff: com.google.firebase.firestore.util.AsyncQueue queue
io.flutter.plugins.webviewflutter.FlutterAssetManager$PluginBindingFlutterAssetManager: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
com.google.firebase.auth.internal.zzk: com.google.android.gms.internal.firebase-auth-api.zzfo zzc
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzsp: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: int number_
io.grpc.okhttp.OkHttpClientTransport: java.lang.Object lock
androidx.fragment.app.FragmentState: int mMaxLifecycleState
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.firebase.messaging.RemoteMessage initialMessage
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_ERROR_GET_DESCRIPTION
com.google.android.gms.common.api.internal.zaad: java.util.Map zaa
com.google.android.gms.maps.model.MarkerOptions: boolean zzi
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header HTTPS_SCHEME_HEADER
com.google.protobuf.CodedInputStream$StreamDecoder: int bufferSize
com.google.android.gms.internal.base.zac: java.lang.ClassLoader zaa
io.grpc.okhttp.OkHttpClientStream$TransportState: boolean canStart
com.google.android.gms.cloudmessaging.zzs: java.util.concurrent.ScheduledExecutorService zzc
com.google.firestore.v1.WriteResponse: int STREAM_ID_FIELD_NUMBER
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: com.google.firebase.encoders.FieldDescriptor LOGSOURCE_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzmb: int zzf
com.google.firestore.v1.DocumentChange: int removedTargetIdsMemoizedSerializedSize
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long tokenCreationEpochInSecs
com.google.android.gms.common.data.DataHolder$Builder: java.lang.String[] zaa
com.google.android.gms.internal.firebase-auth-api.zzgl: java.lang.Class zzb
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
com.google.android.gms.cloudmessaging.Rpc: int zza
com.google.android.gms.internal.firebase-auth-api.zzabx: int zzd
io.grpc.internal.ManagedChannelImpl: long idleTimeoutMillis
io.grpc.internal.ClientCallImpl: io.grpc.Context context
com.google.android.gms.internal.location.zzbd: java.lang.String moduleId
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: com.google.firebase.firestore.local.MemoryPersistence persistence
com.google.android.gms.safetynet.zzd: long zzf
io.flutter.plugins.firebase.auth.AuthStateChannelStreamHandler: com.google.firebase.auth.FirebaseAuth firebaseAuth
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zzb
com.google.firebase.firestore.SetOptions: boolean merge
com.google.android.gms.common.api.internal.zact: com.google.android.gms.common.api.Api$AbstractClientBuilder zad
io.grpc.internal.MetadataApplierImpl: io.grpc.internal.ClientTransport transport
com.google.android.gms.maps.zzc: com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener zza
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: java.util.List logEvents
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.util.concurrent.Executor executor
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
io.grpc.internal.DelayedClientCall: io.grpc.Status error
io.grpc.okhttp.OkHttpClientTransport: java.util.logging.Logger log
io.grpc.internal.InternalSubchannel$TransportListener$1: io.grpc.internal.InternalSubchannel$TransportListener this$1
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: java.util.Set existenceChangedKeys
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: android.content.SharedPreferences preferences
com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.zzw zzc
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.remote.GrpcMetadataProvider metadataProvider
com.baseflow.geolocator.LocationServiceHandlerImpl: com.baseflow.geolocator.location.LocationServiceStatusReceiver receiver
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: java.nio.charset.Charset UTF_8
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] $VALUES
io.grpc.internal.DelayedClientCall$DelayedListener$3: io.grpc.internal.DelayedClientCall$DelayedListener this$0
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.GoogleApiManager zaa
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.TokenResult authToken
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.events.Subscriber subscriber
com.google.android.gms.internal.firebase-auth-api.zzdd: com.google.android.gms.internal.firebase-auth-api.zzmp zzb
com.google.firebase.messaging.reporting.MessagingClientEventExtension: com.google.firebase.messaging.reporting.MessagingClientEventExtension DEFAULT_INSTANCE
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator UNRECOGNIZED
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.R$styleable: int[] ActivityRule
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor this$1
com.google.protobuf.FieldSet: com.google.protobuf.FieldSet DEFAULT_INSTANCE
com.google.firebase.auth.zzw: com.google.firebase.auth.FirebaseUser zza
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zal
com.tekartik.sqflite.SqflitePlugin$BgResult$2: java.lang.String val$errorCode
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String uri
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.PolygonsController polygonsController
com.google.protobuf.FieldSet$1: int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType
com.google.android.gms.common.data.DataHolder: java.lang.String[] zag
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
com.google.firebase.messaging.ServiceStarter: java.lang.String firebaseMessagingServiceClassName
com.google.android.gms.common.internal.zzr: android.content.Context zzc
com.google.firestore.bundle.BundledQuery: int LIMIT_TYPE_FIELD_NUMBER
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.FirestoreChannel channel
com.google.android.gms.common.internal.service.zao: com.google.android.gms.common.api.Api zae
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.Long tokenCreationEpochInSecs
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder INSTANCE
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.browser.customtabs.CustomTabsIntent: android.os.Bundle startAnimationBundle
io.grpc.internal.ReflectionLongAdderCounter: java.lang.RuntimeException initializationException
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderHead
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.android.gms.common.api.internal.zacd: com.google.android.gms.common.api.internal.ApiKey zac
io.grpc.internal.ClientCallImpl: io.grpc.CallOptions callOptions
com.google.common.collect.ImmutableList$Itr: com.google.common.collect.ImmutableList list
io.grpc.internal.AtomicBackoff: java.util.logging.Logger log
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: int maxInboundMetadataSize
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$JavaType javaType
io.grpc.util.RoundRobinLoadBalancer$Ref: java.lang.Object value
com.google.firebase.auth.internal.zzam: long zza
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzn
com.google.firebase.auth.internal.zze: java.lang.String zza
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
androidx.collection.SimpleArrayMap: int mBaseCacheSize
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteTargetCache targetCache
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] keys
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: android.content.IntentFilter filter
io.grpc.okhttp.OkHttpProtocolNegotiator: java.util.logging.Logger logger
com.google.android.gms.common.internal.zac: androidx.collection.SimpleArrayMap zaa
io.grpc.internal.RetryPolicy: long maxBackoffNanos
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat sEmptyLocaleList
com.google.android.gms.internal.firebase-auth-api.zztr: com.google.android.gms.internal.firebase-auth-api.zztx zzb
com.google.android.gms.maps.model.MarkerOptions: float zzm
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String manufacturer
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzko zzf
com.google.android.gms.common.api.internal.zaae: com.google.android.gms.common.api.internal.GoogleApiManager zae
com.google.android.gms.internal.firebase-auth-api.zzxr: java.util.Map zza
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zze
com.google.firebase.firestore.local.ReferenceSet: com.google.firebase.database.collection.ImmutableSortedSet referencesByKey
com.google.android.gms.internal.firebase-auth-api.zzpo: byte[] zza
com.google.firebase.encoders.FieldDescriptor$Builder: java.lang.String name
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR
io.grpc.okhttp.OkHttpChannelBuilder: java.util.EnumSet understoodTlsFeatures
com.google.android.gms.internal.firebase-auth-api.zzrk: com.google.firebase.auth.EmailAuthCredential zza
androidx.core.R$id: int accessibility_custom_action_1
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Constructor SNI_HOST_NAME
com.google.android.gms.internal.firebase-auth-api.zzxl: com.google.android.gms.internal.firebase-auth-api.zzxn zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor LOGSOURCENAME_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzjo: int zze
com.google.android.gms.tasks.zzj: com.google.android.gms.tasks.OnCompleteListener zzc
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
io.grpc.okhttp.OkHttpClientStream: java.lang.String authority
com.google.common.collect.RegularImmutableSet: java.lang.Object[] elements
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.zzae zzbj
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
io.grpc.CompositeCallCredentials$CombiningMetadataApplier: io.grpc.CallCredentials$MetadataApplier delegate
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzaef zzo
com.google.android.gms.maps.model.PolygonOptions: java.util.List zzb
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
androidx.collection.SparseArrayCompat: int mSize
com.tekartik.sqflite.Database: java.lang.String path
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzq: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider executorProvider
com.google.firebase.firestore.local.SQLiteSchema: android.database.sqlite.SQLiteDatabase db
com.tekartik.sqflite.SqflitePlugin$6: io.flutter.plugin.common.MethodCall val$call
com.google.android.gms.internal.firebase-auth-api.zzrq: boolean zzi
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType BOOL
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
com.google.android.gms.stats.WakeLock: com.google.android.gms.internal.stats.zzb zza
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator AND
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: io.flutter.plugin.common.EventChannel$EventSink eventSink
io.grpc.internal.GrpcUtil: long DEFAULT_KEEPALIVE_TIMEOUT_NANOS
com.google.android.gms.location.LocationAvailability: int zzas
kotlin.random.Random: kotlin.random.Random defaultRandom
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: com.google.firebase.firestore.remote.AndroidConnectivityMonitor this$0
io.grpc.StatusException: boolean fillInStackTrace
com.google.firebase.firestore.TransactionOptions$Builder: int maxAttempts
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor CLIENTINFO_DESCRIPTOR
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: java.util.List targetIds
com.google.android.datatransport.runtime.AutoValue_EventInternal: long eventMillis
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase MAP_VALUE
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.model.DatabaseId databaseId
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String uri
com.google.android.gms.internal.firebase-auth-api.zzch: java.util.logging.Logger zza
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Starting
com.baseflow.geolocator.location.LocationManagerClient: boolean isListening
com.squareup.okhttp.HttpUrl: java.util.List pathSegments
io.flutter.plugins.pathprovider.PathProviderPlugin$1: int[] $SwitchMap$io$flutter$plugins$pathprovider$Messages$StorageDirectory
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: android.content.Context context
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type REMOVED
com.google.android.gms.signin.internal.zaa: android.content.Intent zac
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit
okio.Okio$1: java.io.OutputStream val$out
com.google.android.gms.maps.model.Cap: com.google.android.gms.maps.model.BitmapDescriptor zzc
com.google.protobuf.CodedInputStreamReader: int tag
io.grpc.internal.FailingClientTransport: io.grpc.Status error
com.google.firebase.firestore.UserDataWriter: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior serverTimestampBehavior
com.google.common.math.IntMath: int[] factorials
com.baseflow.geolocator.location.FusedLocationClient$2: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.permission.PermissionManager permissionManager
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.Object zzf
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ENCODING_KEY
com.google.common.base.Stopwatch: boolean isRunning
io.grpc.SynchronizationContext$1: io.grpc.SynchronizationContext this$0
com.google.protobuf.ExtensionRegistryFactory: java.lang.Class EXTENSION_REGISTRY_CLASS
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority HIGHEST
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: java.lang.Integer mToolbarColor
com.google.android.gms.internal.firebase-auth-api.zzxm: long zza
com.google.android.gms.internal.firebase-auth-api.zzdi: com.google.android.gms.internal.firebase-auth-api.zzdj zza
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: javax.inject.Provider storeProvider
com.google.firestore.admin.v1.Index$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.Deadline: long MAX_OFFSET
com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner: long initialCloseCount
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator IN
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzg
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.common.api.Api API
com.google.android.gms.common.internal.ClientSettings: java.util.Set zab
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Factory nameResolverFactory
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
com.google.android.datatransport.runtime.TransportImpl: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zzse: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec INSTANCE
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzo zzh
io.grpc.internal.ManagedChannelOrphanWrapper: java.lang.ref.ReferenceQueue refqueue
com.google.android.gms.cloudmessaging.zze: android.content.BroadcastReceiver$PendingResult zze
io.grpc.internal.GzipInflatingBuffer: boolean isStalled
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.util.concurrent.atomic.AtomicBoolean shutdown
com.google.common.collect.RegularImmutableList: com.google.common.collect.ImmutableList EMPTY
com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType valueType
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzf
io.grpc.NameResolver$Args$Builder: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
io.grpc.internal.CallTracer: io.grpc.internal.LongCounter callsStarted
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String iosClientId
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor EVENT_DESCRIPTOR
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.ExceptionHandlingFrameWriter frameWriter
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: java.util.logging.Logger logger
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$Source dataSource
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
com.google.type.LatLng: com.google.type.LatLng DEFAULT_INSTANCE
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: android.content.Context context
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction ASCENDING
io.grpc.internal.MessageFramer$OutputStreamAdapter: io.grpc.internal.MessageFramer this$0
com.google.firebase.firestore.model.DocumentCollections: com.google.firebase.database.collection.ImmutableSortedMap EMPTY_DOCUMENT_MAP
com.google.firestore.v1.ExistenceFilter: int targetId_
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzmx zza
androidx.fragment.app.Fragment: boolean mCalled
io.grpc.internal.MetadataApplierImpl: io.grpc.MethodDescriptor method
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzi
io.grpc.internal.RetriableStream$4: io.grpc.Status val$reason
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
com.google.firebase.database.collection.ArraySortedMap$1: int currentPos
com.google.android.gms.maps.model.MarkerOptions: float zzn
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger: io.grpc.internal.ConnectionClientTransport transport
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
com.google.protobuf.MessageSchema: boolean hasExtensions
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$outFragment
com.google.android.datatransport.cct.CCTDestination: java.lang.String apiKey
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy webViewProxy
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status UNAVAILABLE
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor HARDWARE_DESCRIPTOR
com.baseflow.geolocator.location.LocationServiceStatusReceiver: com.baseflow.geolocator.location.ServiceStatus lastKnownServiceStatus
com.google.android.gms.internal.firebase-auth-api.zziz: int zzf
com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean zzb
okio.RealBufferedSink: boolean closed
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzaau zzh
com.google.firebase.auth.internal.zzt: java.lang.String zza
com.google.firebase.firestore.remote.RemoteEvent: com.google.firebase.firestore.model.SnapshotVersion snapshotVersion
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.android.gms.internal.firebase-auth-api.zzyw: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.ActionCodeInfo: java.lang.String email
io.grpc.internal.MetadataApplierImpl: io.grpc.Metadata origHeaders
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.android.gms.internal.firebase-auth-api.zzaby: com.google.android.gms.internal.firebase-auth-api.zzaby zza
io.grpc.internal.DelayedClientCall$DelayedListener$2: java.lang.Object val$message
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder: com.google.firebase.encoders.config.Configurator CONFIG
com.google.android.gms.safetynet.SafeBrowsingData: java.lang.String zzm
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator IS_NULL
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: com.google.firebase.firestore.QuerySnapshot this$0
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
com.google.firestore.v1.StructuredQuery$FieldFilter: int OP_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzact: com.google.android.gms.internal.firebase-auth-api.zzada[] zza
com.google.android.gms.internal.stats.zzh: com.google.android.gms.internal.stats.zze zza
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Map pendingDocumentUpdates
io.grpc.internal.DelayedClientCall$1: io.grpc.Metadata val$headers
io.grpc.okhttp.internal.framed.Hpack$Reader: int headerTableSizeSetting
io.flutter.Log: int WARN
com.google.firebase.messaging.EnhancedIntentService: java.util.concurrent.ExecutorService executor
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: java.lang.String name
com.google.firebase.firestore.core.Transaction: com.google.firebase.firestore.remote.Datastore datastore
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ExecutorService backgroundExecutor
com.google.android.gms.internal.firebase-auth-api.zzadk: java.util.concurrent.ConcurrentMap zzc
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.internal.zaac: com.google.android.gms.common.api.internal.zaad zab
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String fid
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
com.tekartik.sqflite.SqflitePlugin$1: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
com.google.firebase.firestore.core.ListenSequence: long previousSequenceNumber
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_ERROR_GET_CODE
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzpo zzb
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: boolean $assertionsDisabled
io.grpc.internal.DelayedClientTransport: io.grpc.InternalLogId logId
com.google.android.gms.common.api.internal.zabq: java.util.List zak
com.google.protobuf.MessageSchema: sun.misc.Unsafe UNSAFE
com.google.android.gms.internal.firebase-auth-api.zzaeb: boolean zzd
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol POLL_FAILED
com.google.android.gms.tasks.zzaf: int zzf
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase DOCUMENTTYPE_NOT_SET
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
io.grpc.okhttp.OkHttpClientTransport: int maxInboundMetadataSize
androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
com.google.android.gms.internal.firebase-auth-api.zzbz: com.google.android.gms.internal.firebase-auth-api.zzgq zza
com.google.common.base.Ticker: com.google.common.base.Ticker SYSTEM_TICKER
com.google.android.gms.internal.firebase-auth-api.zzom: byte[] zze
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzb
com.google.firebase.components.ComponentRuntime$Builder: java.util.List additionalComponents
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.Feature[] zac
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent DEFAULT_INSTANCE
com.google.android.gms.maps.internal.zzca: java.lang.String zza
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
com.squareup.okhttp.Request$Builder: java.lang.Object tag
okio.Timeout: long deadlineNanoTime
androidx.core.app.NotificationCompat$Builder: java.lang.String mShortcutId
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: java.lang.String CREATE_INITIAL_GLOBAL_LOG_EVENT_STATE_VALUE_SQL
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
com.google.android.gms.dynamite.DynamiteModule: java.lang.ThreadLocal zzg
androidx.window.R$attr: int splitMinWidth
com.google.android.gms.internal.firebase-auth-api.zzuv: com.google.android.gms.internal.firebase-auth-api.zzqu zza
com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfigManager zza
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
androidx.fragment.app.FragmentState: java.lang.String mTag
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
com.google.android.gms.maps.model.CameraPosition: com.google.android.gms.maps.model.LatLng target
com.google.firebase.firestore.LoadBundleTaskProgress: int documentsLoaded
com.google.android.gms.common.util.WorkSourceUtil: int zza
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
com.tekartik.sqflite.SqflitePlugin$6: com.tekartik.sqflite.SqflitePlugin this$0
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.String zzo
com.google.firebase.components.DependencyCycleException: java.util.List componentsInCycle
io.grpc.LoadBalancer$PickResult: io.grpc.ClientStreamTracer$Factory streamTracerFactory
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.google.firebase.firestore.core.Target: java.lang.String memoizedCanonicalId
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.firestore.v1.WriteRequest: int LABELS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzvw: java.lang.String zzc
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.core.Target target
com.google.android.gms.common.api.internal.zal: androidx.collection.ArrayMap zab
com.google.android.gms.internal.firebase-auth-api.zzbq: int zzc
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor COLLAPSEKEY_DESCRIPTOR
com.google.android.gms.common.api.internal.BasePendingResult: boolean zaq
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set infos
com.google.firebase.auth.internal.zzam: java.lang.Runnable zzf
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType INVALID
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zza
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugin.common.MethodChannel$Result mapReadyResult
com.google.android.gms.common.internal.BaseGmsClient: android.os.Looper zzm
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_EMERGENCY
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: java.util.List list
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
com.google.android.gms.internal.location.zzbd: java.lang.String tag
com.google.firebase.firestore.Filter$UnaryFilter: com.google.firebase.firestore.core.FieldFilter$Operator operator
com.google.android.gms.internal.firebase-auth-api.zzuw: com.google.android.gms.internal.firebase-auth-api.zzqw zza
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.InUseStateAggregator inUseStateAggregator
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: android.hardware.display.DisplayManager val$displayManager
com.google.android.gms.internal.firebase-auth-api.zzgo: java.lang.Class zzb
com.google.firebase.FirebaseApp: java.util.concurrent.Executor UI_EXECUTOR
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationCallback mLocationCallback
com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.ImmutableMap map
com.google.android.gms.common.internal.GmsClient: java.util.concurrent.Executor zaa
com.google.android.gms.common.internal.zav: android.os.IBinder zab
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode HTTP_20_HEADERS
com.google.android.gms.internal.firebase-auth-api.zzob: javax.crypto.spec.SecretKeySpec zzb
io.grpc.CompressorRegistry: java.util.concurrent.ConcurrentMap compressors
com.google.android.gms.signin.SignInOptions: com.google.android.gms.signin.SignInOptions zaa
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: com.google.android.datatransport.cct.internal.NetworkConnectionInfo networkConnectionInfo
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: java.util.Map values
com.google.android.gms.internal.firebase-auth-api.zzsu: java.lang.String zzb
com.lyokone.location.FlutterLocation: android.location.LocationManager locationManager
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.OrderBy KEY_ORDERING_DESC
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions DEFAULT_INSTANCE
io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman$Node root
com.google.android.datatransport.cct.CctTransportBackend: java.net.URL endPoint
com.google.firebase.firestore.core.SyncEngine$LimboResolution: com.google.firebase.firestore.model.DocumentKey key
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean triggerDelayed
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator AND
io.grpc.internal.DnsNameResolver: java.util.concurrent.atomic.AtomicReference resourceResolver
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
com.google.firestore.v1.Target$QueryTarget: java.lang.String parent_
com.google.android.gms.internal.firebase-auth-api.zzqc: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.zzj: boolean zzt
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.ReferenceSet localViewReferences
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type HC_PLATFORM_VIEW
com.google.android.gms.internal.firebase-auth-api.zzwu: com.google.android.gms.internal.firebase-auth-api.zzww zza
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzG
com.google.android.gms.common.api.internal.ListenerHolder: java.util.concurrent.Executor zaa
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zza
io.grpc.internal.RetriableStream$4: io.grpc.internal.RetriableStream this$0
io.grpc.util.RoundRobinLoadBalancer$1: io.grpc.util.RoundRobinLoadBalancer this$0
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType NO_DOCUMENT
com.google.android.datatransport.cct.CctTransportBackend: com.google.firebase.encoders.DataEncoder dataEncoder
io.grpc.okhttp.internal.framed.Settings: int[] values
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.lang.Boolean isForMainFrame
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.Queue nextIndexToUpdate
com.google.protobuf.ByteString$1: com.google.protobuf.ByteString this$0
com.google.firebase.firestore.local.OverlayedDocument: com.google.firebase.firestore.model.mutation.FieldMask mutatedFields
com.google.android.gms.internal.firebase-auth-api.zzad: int zzd
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: int id
com.google.firebase.components.EventBus: java.util.Queue pendingEvents
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zzf
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelLoggerImpl subchannelLogger
io.grpc.internal.RetriableStream$1FullStreamDecompressionEntry: boolean val$fullStreamDecompression
io.grpc.okhttp.OkHttpClientTransport: boolean enableKeepAlive
com.google.firebase.messaging.SyncTask: android.os.PowerManager$WakeLock syncWakeLock
com.google.common.base.Splitter: boolean omitEmptyStrings
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction INBOUND
com.google.firebase.firestore.local.MemoryIndexManager: com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex collectionParentsIndex
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread
com.tekartik.sqflite.SqlCommand: java.util.List rawArguments
com.google.android.gms.internal.firebase-auth-api.zzos: java.util.List zzi
androidx.fragment.app.FragmentTransition$2: android.view.View val$nonExistentView
com.google.rpc.Status: com.google.protobuf.Parser PARSER
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] $VALUES
com.google.firestore.v1.ListenResponse: int FILTER_FIELD_NUMBER
com.google.gson.stream.JsonReader: int lineStart
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType MESSAGE
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjl zzf
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event MESSAGE_DELIVERED
io.grpc.internal.GzipInflatingBuffer: int headerExtraToRead
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzh
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzd
io.grpc.okhttp.OkHttpClientStream$TransportState: boolean flushPendingData
com.google.firebase.firestore.local.MemoryTargetCache: long highestSequenceNumber
io.grpc.ThreadLocalContextStorage: java.util.logging.Logger log
com.google.common.collect.RegularImmutableSet: int mask
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzgg zzb
com.google.firebase.messaging.TopicsSyncTask: long nextDelaySeconds
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: android.os.IBinder zai
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
com.google.android.datatransport.cct.CctTransportBackend$HttpResponse: long nextRequestMillis
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax PROTO3
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng farRight
com.google.android.gms.internal.firebase-auth-api.zztu: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] EMPTY_STRING_ARRAY
com.google.protobuf.UnknownFieldSetLite: com.google.protobuf.UnknownFieldSetLite DEFAULT_INSTANCE
com.google.firebase.firestore.local.LocalDocumentsResult: int batchId
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zze
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: com.google.android.datatransport.cct.internal.QosTier qosTier
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
io.grpc.internal.DelayedStream$12: io.grpc.internal.DelayedStream this$0
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzli zzb
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzf
io.flutter.plugins.googlemaps.PolylineBuilder: boolean consumeTapEvents
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry uncommittedRetriableStreamsRegistry
io.grpc.okhttp.OkHttpClientTransport$5: io.grpc.okhttp.OkHttpClientTransport this$0
com.google.firebase.auth.internal.zzx: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzap zzc
com.squareup.okhttp.HttpUrl: java.util.List queryNamesAndValues
com.google.android.gms.internal.base.zaa: java.lang.String zab
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor DEFAULT_INSTANCE
com.google.firebase.firestore.remote.TargetState: com.google.protobuf.ByteString resumeToken
kotlinx.coroutines.internal.ThreadState: int i
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
com.google.protobuf.ListFieldSchema: com.google.protobuf.ListFieldSchema LITE_INSTANCE
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.time.Clock monotonicClock
io.grpc.ClientStreamTracer$StreamInfo$Builder: int previousAttempts
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String product
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String messagingSenderId
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: com.google.firebase.firestore.model.FieldIndex$Segment$Kind kind
com.google.android.gms.tasks.zzk: com.google.android.gms.tasks.Task zza
androidx.fragment.app.DialogFragment: boolean mShownByMe
com.google.android.gms.internal.firebase-auth-api.zzsm: com.google.android.gms.internal.firebase-auth-api.zzyq zzg
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$DocumentTransform$FieldTransform$TransformTypeCase
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.google.firebase.encoders.proto.ProtobufEncoder: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String storageBucket
com.baseflow.geolocator.StreamHandlerImpl: android.app.Activity activity
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
com.google.android.gms.internal.firebase-auth-api.zzts: com.google.android.gms.internal.firebase-auth-api.zztx zzc
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: java.util.List callbacks
io.grpc.internal.AtomicBackoff: java.lang.String name
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
io.flutter.plugins.webviewflutter.DisplayListenerProxy: java.util.ArrayList listenersBeforeWebView
com.google.protobuf.FloatArrayList: int size
io.grpc.internal.ManagedChannelImplBuilder: java.lang.String authorityOverride
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction DIRECTION_UNSPECIFIED
com.google.firebase.installations.local.IidStore: java.lang.String[] ALLOWABLE_SCOPES
kotlin.Result: kotlin.Result$Companion Companion
com.lyokone.location.NotificationOptions: java.lang.Integer color
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
com.google.android.gms.common.GooglePlayServicesUtil: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.google.android.gms.internal.firebase-auth-api.zzwp: com.google.android.gms.internal.firebase-auth-api.zzwq zzb
io.grpc.internal.DnsNameResolver$Resolve$1: boolean val$succeed
io.grpc.Metadata$Key: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzj
com.google.firebase.messaging.WithinAppServiceConnection: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.firestore.v1.DocumentTransform$FieldTransform: int transformTypeCase_
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int window
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
io.grpc.internal.InternalSubchannel: java.util.Collection transports
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zznl zzb
com.google.firebase.firestore.local.QueryEngine: boolean initialized
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzf zzn
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean sslEnabled
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.lang.Boolean isForMainFrame
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
io.flutter.plugins.googlemaps.PolylineController: java.lang.String googleMapsPolylineId
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: long mark
com.google.firestore.v1.DocumentTransform$FieldTransform: int MAXIMUM_FIELD_NUMBER
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
com.google.firebase.auth.FirebaseAuth: java.lang.Object zzj
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.local.LocalSerializer serializer
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl: io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl flutterApi
io.flutter.plugins.googlemaps.TileOverlaysController: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzf
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmp zzb
com.google.android.gms.dynamic.DeferredLifecycleHelper: android.os.Bundle zab
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
com.google.android.gms.internal.firebase-auth-api.zzabg: com.google.android.gms.internal.firebase-auth-api.zzabf zza
io.grpc.internal.ClientCallImpl: java.util.concurrent.ScheduledFuture deadlineCancellationFuture
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding BASE64_URL
com.google.firestore.admin.v1.Index$IndexField$Order: int value
com.google.firestore.v1.WriteResponse$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.common.collect.RegularImmutableMap$EntrySet: int size
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzg
io.grpc.internal.ApplicationThreadDeframerListener$1: io.grpc.internal.ApplicationThreadDeframerListener this$0
com.google.firebase.auth.internal.zzbg: com.google.android.gms.common.logging.Logger zzd
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean indoorEnabled
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: com.google.firebase.encoders.FieldDescriptor EVENTSDROPPEDCOUNT_DESCRIPTOR
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.core.R$id: int accessibility_custom_action_21
com.google.android.gms.tasks.zzm: com.google.android.gms.tasks.zzn zzb
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
androidx.fragment.app.Fragment: boolean mFromLayout
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
com.google.firebase.auth.internal.zzbj: com.google.firebase.auth.internal.zzbj zza
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.DocumentOverlayCache documentOverlayCache
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: com.google.firebase.firestore.util.AsyncQueue$DelayedTask backfillTask
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget DEFAULT_INSTANCE
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: byte[] extras
com.google.firestore.v1.WriteResult: int UPDATE_TIME_FIELD_NUMBER
com.google.gson.stream.JsonReader: int peekedNumberLength
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$sharedElementsIn
com.google.firestore.v1.WriteResponse: int COMMIT_TIME_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator UNRECOGNIZED
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType negotiationType
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzwi zza
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: com.google.android.datatransport.runtime.backends.BackendRegistry backendRegistry
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.lang.Boolean isRedirect
com.google.android.gms.common.ErrorDialogFragment: android.content.DialogInterface$OnCancelListener zab
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder balancerRpcExecutorHolder
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder INSTANCE
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase VERIFY
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter DEFAULT_INSTANCE
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke GET_DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzrc: java.lang.String zza
com.google.firebase.auth.ActionCodeSettings$Builder: boolean zzd
com.google.android.gms.internal.firebase-auth-api.zzjc: com.google.android.gms.internal.firebase-auth-api.zzjc zzb
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzey zzc
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$State state
com.google.android.gms.internal.common.zza: android.os.IBinder zza
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: int subqueriesPerformed
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] $VALUES
io.grpc.NameResolver$1: io.grpc.NameResolver$Listener val$listener
com.google.android.gms.internal.firebase-auth-api.zzadf: java.lang.Object[] zzd
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzu
com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.InstanceFactory NULL_INSTANCE_FACTORY
com.google.android.gms.internal.firebase-auth-api.zzec: com.google.android.gms.internal.firebase-auth-api.zzhx zzb
com.google.firebase.installations.FirebaseInstallations: java.lang.Object lockGenerateFid
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] codeMap
com.google.protobuf.MapFieldSchemas: com.google.protobuf.MapFieldSchema FULL_SCHEMA
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory loadBalancerFactory
io.grpc.internal.RetriableStream$HedgingRunnable: io.grpc.internal.RetriableStream$FutureCanceller scheduledHedgingRef
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
com.google.protobuf.ByteString$1: int position
io.grpc.okhttp.internal.framed.Hpack$Reader: okio.BufferedSource source
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock eventClock
com.google.android.gms.internal.firebase-auth-api.zzadl: int zzc
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: com.google.android.gms.common.api.internal.ConnectionCallbacks zaf
io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer
com.google.android.gms.stats.WakeLock: java.util.concurrent.Future zzi
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.firebase-auth-api.zzrw: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.WriteBatch: boolean committed
androidx.core.app.NotificationCompatBuilder: android.os.Bundle mExtras
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig$MethodInfo defaultMethodConfig
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_B
io.grpc.internal.SerializingExecutor: java.util.Queue runQueue
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.grpc.HttpConnectProxiedSocketAddress: java.lang.String password
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String databaseURL
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
androidx.window.R$attr: int secondaryActivityName
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.Long tokenCreationTimestamp
androidx.core.R$id: int accessibility_custom_action_20
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String package_name_
io.grpc.okhttp.internal.CipherSuite: java.lang.String javaName
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.local.DocumentOverlayCache documentOverlayCache
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_REMOTE
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ProxyDetector proxyDetector
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.core.Query query
io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.Status val$s
com.google.android.gms.internal.firebase-auth-api.zzxu: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzrq: com.google.firebase.auth.PhoneMultiFactorInfo zza
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getCommitMethod
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
com.google.android.gms.internal.firebase-auth-api.zzvt: com.google.android.gms.internal.firebase-auth-api.zzxn zzc
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzh
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType TOPIC
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyy zzf
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: io.grpc.Metadata$Key USER_AGENT_HEADER
com.google.firebase.firestore.bundle.BundleReader: java.io.InputStream bundleInputStream
com.google.android.gms.internal.firebase-auth-api.zzabj: java.lang.Object zza
com.google.firebase.components.Component$Builder: com.google.firebase.components.ComponentFactory factory
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] $VALUES
com.google.firebase.firestore.core.Transaction: java.util.ArrayList mutations
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.inject.Provider heartBeatProvider
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean myLocationButtonEnabled
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
io.grpc.internal.AbstractClientStream$TransportState: io.grpc.DecompressorRegistry decompressorRegistry
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzb
com.google.android.gms.maps.model.CameraPosition: float bearing
io.grpc.internal.MessageDeframer: boolean inDelivery
com.google.android.gms.internal.firebase-auth-api.zzlt: int zze
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.LoadBalancer$SubchannelPicker val$newPicker
io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] children
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.zact zai
com.google.firebase.firestore.local.SQLitePersistence: android.database.sqlite.SQLiteDatabase db
io.grpc.Metadata$AsciiKey: io.grpc.Metadata$AsciiMarshaller marshaller
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
io.grpc.MethodDescriptor: boolean safe
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelCredentials originalChannelCreds
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzi
androidx.lifecycle.LiveData: int mVersion
io.grpc.internal.Rescheduler: java.util.concurrent.Executor serializingExecutor
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
io.grpc.internal.DelayedClientCall$CloseListenerRunnable: io.grpc.Status status
com.google.android.datatransport.runtime.AutoValue_TransportContext: java.lang.String backendName
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.firebase.firestore.bundle.BundleLoader: java.util.List queries
com.tekartik.sqflite.operation.ExecuteOperation: com.tekartik.sqflite.SqlCommand command
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: com.google.android.datatransport.runtime.time.Clock clock
io.flutter.plugins.firebase.messaging.JobIntentService$ComponentNameWithWakeful: boolean useWakefulService
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: java.util.Map objectEncoders
com.google.firestore.v1.ListenRequest$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: java.util.List log_event_dropped_
com.google.firebase.firestore.remote.RemoteStore$2: com.google.firebase.firestore.remote.RemoteStore this$0
okio.Segment: int limit
com.google.android.gms.dynamite.zzo: int zza
com.google.android.gms.internal.firebase-auth-api.zzka: int zze
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$ResponseCode responseCode
kotlinx.coroutines.android.HandlerContext: java.lang.String name
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method GET_APPLICATION_PROTOCOL
com.google.firebase.messaging.ImageDownload: java.net.URL url
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound endAt
androidx.core.app.NotificationCompat$Builder: int mGroupAlertBehavior
com.google.firebase.firestore.core.UserData$ParsedUpdateData: com.google.firebase.firestore.model.mutation.FieldMask fieldMask
com.google.firestore.admin.v1.Index: int NAME_FIELD_NUMBER
com.tekartik.sqflite.SqflitePlugin$2: io.flutter.plugin.common.MethodCall val$call
com.google.protobuf.NullValue: int value
com.google.common.io.BaseEncoding$Base16Encoding: char[] encoding
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory sslSocketFactory
io.flutter.plugins.googlemaps.CircleBuilder: com.google.android.gms.maps.model.CircleOptions circleOptions
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack
com.google.firestore.v1.WriteRequest: com.google.protobuf.MapFieldLite labels_
io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture wakeUp
com.google.protobuf.DoubleArrayList: int size
com.google.android.gms.internal.firebase-auth-api.zzzd: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
com.google.firestore.v1.Document: int FIELDS_FIELD_NUMBER
com.google.android.gms.common.internal.zzo: boolean zzd
androidx.fragment.app.FragmentManagerImpl$1: androidx.fragment.app.FragmentManagerImpl this$0
androidx.core.app.NotificationCompat$BigPictureStyle: boolean mBigLargeIconSet
com.google.firebase.auth.TwitterAuthCredential: java.lang.String zzb
com.google.android.gms.maps.model.CircleOptions: int zze
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event MESSAGE_OPEN
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzc
com.google.android.gms.common.api.GoogleApi: android.os.Looper zag
com.google.firebase.components.EventBus: java.util.concurrent.Executor defaultExecutor
com.google.protobuf.JavaType: com.google.protobuf.JavaType ENUM
io.grpc.internal.GzipInflatingBuffer: int bytesConsumed
com.google.android.gms.internal.firebase-auth-api.zzaaj: com.google.android.gms.internal.firebase-auth-api.zzaaj zza
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.Attributes eagAttributes
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zzgi: java.util.concurrent.atomic.AtomicReference zzb
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.firebase.messaging.FirebaseMessagingService: java.util.Queue recentlyReceivedMessageIds
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType ETHERNET
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
com.google.protobuf.MapEntryLite: java.lang.Object value
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean active
io.grpc.ManagedChannelRegistry$1: io.grpc.ManagedChannelRegistry this$0
com.google.android.gms.internal.firebase-auth-api.zzfq: java.security.KeyStore zzb
com.google.protobuf.CodedInputStream: int defaultRecursionLimit
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind CONTAINS
com.google.android.gms.common.internal.zzq: com.google.android.gms.common.internal.zzr zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
io.grpc.HttpConnectProxiedSocketAddress$Builder: java.net.InetSocketAddress targetAddress
com.google.android.gms.common.api.internal.zacr: com.google.android.gms.signin.internal.zak zaa
com.google.firebase.firestore.core.CompositeFilter$Operator: java.lang.String text
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
com.google.android.gms.internal.firebase-auth-api.zzwh: java.lang.String zzg
com.google.android.gms.internal.firebase-auth-api.zzjf: int zze
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.Executor fileExecutor
io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransportFactory transportFactory
com.google.android.gms.internal.firebase-auth-api.zzye: com.google.android.gms.internal.firebase-auth-api.zzye[] zzc
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.google.firestore.v1.Write$OperationCase: int value
io.grpc.internal.InternalSubchannel: java.lang.String userAgent
com.google.android.gms.internal.firebase-auth-api.zzok: int zzb
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
com.google.firebase.FirebaseApp: com.google.firebase.components.Lazy dataCollectionConfigStorage
com.google.protobuf.IntArrayList: int[] array
io.flutter.plugins.googlemaps.PolygonsController: float density
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
com.google.firebase.auth.internal.zzc: com.google.android.gms.tasks.TaskCompletionSource zza
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: java.util.TreeMap overlays
com.google.android.datatransport.cct.CCTDestination: com.google.android.datatransport.cct.CCTDestination INSTANCE
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
com.google.android.gms.maps.model.PolygonOptions: float zzf
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: android.content.Context context
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
com.google.android.gms.internal.firebase-auth-api.zzcd: com.google.android.gms.internal.firebase-auth-api.zznt zzd
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String itemSeparator
com.google.android.gms.internal.firebase-auth-api.zzxx: java.lang.String zza
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Comparator comparator
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.core.FirestoreClient client
com.google.android.gms.common.data.DataHolder: int zai
io.flutter.Log: int logLevel
io.flutter.plugins.firebase.messaging.JobIntentService: io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer
com.google.firestore.v1.Value: int INTEGER_VALUE_FIELD_NUMBER
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: androidx.core.app.NotificationCompat$Builder notificationBuilder
io.grpc.stub.ClientCalls: boolean $assertionsDisabled
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int lastTag
io.grpc.Context: int generation
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
io.grpc.internal.InternalSubchannel$7: io.grpc.internal.ConnectionClientTransport val$transport
com.google.firebase.auth.internal.zzaw: com.google.firebase.auth.internal.zzax zza
com.tekartik.sqflite.SqflitePlugin$6: java.lang.String val$path
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firebase.firestore.util.Executors: java.util.concurrent.Executor BACKGROUND_EXECUTOR
com.google.firebase.messaging.TopicOperation: java.util.regex.Pattern TOPIC_NAME_REGEXP
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.google.android.gms.location.zzaj: long zzat
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.internal.MetadataApplierImpl$MetadataApplierListener applierListener
com.google.android.gms.cloudmessaging.zzm: android.os.Messenger zzb
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.Feature[] zzj
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zze
com.google.protobuf.CodedInputStreamReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
com.google.rpc.Status: com.google.protobuf.Internal$ProtobufList details_
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus REGISTER_ERROR
io.grpc.internal.CallTracer: long lastCallStartedNanos
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType VPN
com.google.firebase.firestore.WriteBatch: java.util.ArrayList mutations
androidx.activity.OnBackPressedCallback: boolean mEnabled
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory alarms
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
io.grpc.internal.AbstractClientStream: io.grpc.internal.Framer framer
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleSerializer serializer
com.google.android.gms.cloudmessaging.zzp: com.google.android.gms.tasks.TaskCompletionSource zzb
io.grpc.internal.TransportTracer: long lastLocalStreamCreatedTimeNanos
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl flutterApi
com.google.android.gms.internal.firebase-auth-api.zzry: com.google.firebase.auth.UserProfileChangeRequest zza
com.google.protobuf.RopeByteString$PieceIterator: java.util.ArrayDeque breadCrumbs
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap
com.google.android.gms.safetynet.zzd: com.google.android.gms.safetynet.HarmfulAppsData[] zzg
com.google.android.gms.common.api.internal.zacd: int zab
androidx.fragment.app.FragmentActivity: boolean mResumed
com.google.protobuf.MessageSetSchema: com.google.protobuf.ExtensionSchema extensionSchema
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mEnded
okio.AsyncTimeout$1: okio.AsyncTimeout this$0
com.google.android.gms.common.internal.GetServiceRequest: int zzc
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: com.google.firebase.firestore.local.SQLitePersistence db
io.grpc.okhttp.internal.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.google.android.gms.internal.location.zzaz: com.google.android.gms.internal.location.zzas zzde
io.grpc.internal.DelayedStream$14: io.grpc.internal.DelayedStream this$0
io.grpc.NameResolver$Args$Builder: io.grpc.ChannelLogger channelLogger
com.google.firebase.messaging.FirebaseMessaging: android.content.Context context
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.Map properties
com.google.firestore.v1.MapValue: com.google.protobuf.Parser PARSER
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zza
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ChannelCredentials channelCredentials
com.google.type.LatLng: double longitude_
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
com.google.protobuf.ByteString$BoundedByteString: int bytesOffset
io.grpc.internal.InternalSubchannel$TransportListener: java.net.SocketAddress address
com.google.firebase.messaging.TopicsSubscriber: android.content.Context context
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
io.grpc.okhttp.AsyncSink: io.grpc.internal.SerializingExecutor serializingExecutor
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zze
com.google.firebase.auth.zze: java.lang.String zze
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
com.google.firebase.firestore.remote.TargetState: java.util.Map documentChanges
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: java.util.Collection uncommittedRetriableStreams
io.grpc.internal.RetriableStream$BufferSizeTracer: long bufferNeeded
com.google.android.gms.internal.firebase-auth-api.zzxu: java.lang.String zzc
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
com.google.firebase.messaging.FcmBroadcastProcessor: java.lang.Object lock
com.google.android.gms.common.wrappers.InstantApps: android.content.Context zza
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission always
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String instance_id_
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzhg zza
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.lang.Long eventMillis
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall NOOP_CALL
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: java.lang.Integer mNavigationBarColor
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.location.LocationSettingsStates zzbm
com.google.firestore.v1.Target$QueryTarget: int PARENT_FIELD_NUMBER
com.google.firebase.firestore.core.Transaction: com.google.firebase.firestore.FirebaseFirestoreException lastWriteError
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean shutdown
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: com.google.firebase.firestore.local.ReferenceSet inMemoryPins
io.grpc.internal.ProxyDetectorImpl: com.google.common.base.Supplier DEFAULT_PROXY_SELECTOR
com.google.android.gms.internal.firebase-auth-api.zzib: com.google.android.gms.internal.firebase-auth-api.zzbn zzc
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType DISPLAY_NOTIFICATION
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileProvider zzb
com.google.android.gms.internal.firebase-auth-api.zzed: java.util.logging.Logger zza
com.google.android.gms.internal.location.zza: java.lang.String zzb
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.protobuf.ByteString lastStreamToken
com.google.protobuf.Any: com.google.protobuf.ByteString value_
com.google.firebase.auth.PhoneAuthOptions$Builder: android.app.Activity zzf
com.google.firebase.firestore.proto.WriteBatch: int LOCAL_WRITE_TIME_FIELD_NUMBER
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.common.internal.zzf: android.os.IBinder zze
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT32_LIST_PACKED
com.google.firebase.firestore.model.mutation.Precondition: com.google.firebase.firestore.model.SnapshotVersion updateTime
io.grpc.internal.RetriableStream$HedgingPlan: java.lang.Integer hedgingPushbackMillis
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery DEFAULT_INSTANCE
androidx.fragment.app.FragmentTransaction$Op: int mCmd
kotlin.Result$Failure: java.lang.Throwable exception
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean myLocationEnabled
com.google.android.gms.common.zzi: int zza
com.lyokone.location.FlutterLocation$2: com.lyokone.location.FlutterLocation this$0
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzb
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zztb: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzadv: com.google.android.gms.internal.firebase-auth-api.zzaeb zza
com.google.firebase.auth.UserProfileChangeRequest: android.net.Uri zze
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_INTERRUPTED
androidx.core.app.NotificationCompatBuilder: android.content.Context mContext
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.core.DatabaseInfo databaseInfo
com.google.android.gms.security.ProviderInstaller: com.google.android.gms.common.GoogleApiAvailabilityLight zza
com.google.android.datatransport.runtime.TransportImpl: com.google.android.datatransport.runtime.TransportInternal transportInternal
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.browser.customtabs.CustomTabsIntent$Builder: androidx.browser.customtabs.CustomTabColorSchemeParams$Builder mDefaultColorSchemeBuilder
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zzf
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority LOW_POWER
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ObjectPool offloadExecutorPool
com.google.protobuf.Any: int VALUE_FIELD_NUMBER
com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface zzs
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean zza
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection VECTOR
io.grpc.internal.RetriableStream$BufferSizeTracer: io.grpc.internal.RetriableStream this$0
com.google.protobuf.ExtensionRegistryLite: java.util.Map extensionsByNumber
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
com.google.firebase.firestore.core.KeyFieldNotInFilter: java.util.List keys
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzj
com.google.firestore.v1.DocumentDelete$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.ManagedChannelRegistry: java.util.List effectiveProviders
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.plugins.googlemaps.CircleController: java.lang.String googleMapsCircleId
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzd
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.RetryPolicy retryPolicy
com.google.firestore.v1.DocumentTransform$FieldTransform: int REMOVE_ALL_FROM_ARRAY_FIELD_NUMBER
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: io.grpc.Metadata val$savedTrailers
androidx.lifecycle.LiveData: java.lang.Object mDataLock
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_TYPE_KEY
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.model.FieldPath internalPath
com.google.android.gms.internal.firebase-auth-api.zzwt: int zzb
com.google.android.gms.internal.firebase-auth-api.zzlv: com.google.android.gms.internal.firebase-auth-api.zzaca zza
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode INVALID_STREAM
io.grpc.okhttp.OkHttpProtocolNegotiator: io.grpc.okhttp.OkHttpProtocolNegotiator NEGOTIATOR
io.grpc.internal.DelayedStream$9: io.grpc.internal.DelayedStream this$0
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter DEFAULT_INSTANCE
com.google.android.gms.tasks.zzl: java.util.concurrent.Executor zza
com.google.android.gms.common.internal.ClientSettings$Builder: android.accounts.Account zaa
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] $VALUES
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.firebase.firestore.util.Supplier overrideChannelBuilderSupplier
io.grpc.DecompressorRegistry: byte[] advertisedDecompressors
com.google.android.gms.internal.firebase-auth-api.zzwi: java.lang.String zzc
io.grpc.internal.DelayedClientCall$DelayedListener$3: io.grpc.Metadata val$trailers
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.tekartik.sqflite.SqflitePlugin: int logLevel
com.google.firebase.firestore.util.ExponentialBackoff: com.google.firebase.firestore.util.AsyncQueue$DelayedTask timerTask
io.grpc.NameResolverRegistry: com.google.common.collect.ImmutableMap effectiveProviders
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzg
com.google.firestore.v1.DocumentTransform$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_2
io.grpc.internal.DnsNameResolver: boolean enableJndi
io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzhh: com.google.android.gms.internal.firebase-auth-api.zzhh zza
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzV
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] $VALUES
com.google.protobuf.SmallSortedMap: int maxArraySize
com.google.firebase.auth.internal.zza: com.google.firebase.auth.internal.zzf zze
io.grpc.okhttp.OkHttpClientTransport: int initialWindowSize
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
androidx.window.R$attr: int splitLayoutDirection
com.google.android.gms.internal.firebase-auth-api.zzbd: java.util.logging.Logger zza
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzc
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp DEFAULT_INSTANCE
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
okio.AsyncTimeout$2: okio.AsyncTimeout this$0
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.zaad zae
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: int mark
io.grpc.SecurityLevel: io.grpc.SecurityLevel PRIVACY_AND_INTEGRITY
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDeferredInterfaces
com.google.android.datatransport.AutoValue_Event: java.lang.Object payload
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver$Args nameResolverArgs
io.grpc.ClientStreamTracer$StreamInfo: int previousAttempts
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: java.lang.Class UNMODIFIABLE_LIST_CLASS
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.internal.TransportTracer$Factory transportTracerFactory
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.android.gms.common.api.internal.zal: com.google.android.gms.tasks.TaskCompletionSource zac
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.protobuf.Internal$EnumLiteMap internalValueMap
io.grpc.MethodDescriptor: java.lang.Object schemaDescriptor
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.PolylinesController polylinesController
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp commitTime_
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.concurrent.atomic.AtomicBoolean zzc
com.google.firebase.firestore.UserDataReader: com.google.firebase.firestore.model.DatabaseId databaseId
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode STREAM_ALREADY_CLOSED
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] $VALUES
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.grpc.internal.ContextRunnable: io.grpc.Context context
com.google.android.gms.internal.location.zzbd: boolean zzdk
com.tekartik.sqflite.operation.ExecuteOperation: io.flutter.plugin.common.MethodChannel$Result result
com.google.android.gms.base.R$string: int common_google_play_services_install_button
com.google.android.gms.maps.zzag: android.view.View zzc
io.grpc.okhttp.internal.Util: java.nio.charset.Charset UTF_8
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams MAX_HEADER_LIST_SIZE
androidx.fragment.app.DialogFragment: int mStyle
com.google.android.gms.cloudmessaging.zzk: com.google.android.gms.cloudmessaging.zzm zza
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor CAMPAIGNID_DESCRIPTOR
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
com.google.protobuf.RopeByteString: int leftLength
io.grpc.okhttp.AsyncSink$3: io.grpc.okhttp.AsyncSink this$0
io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context context
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.api.internal.StatusExceptionMapper zad
io.grpc.LoadBalancerRegistry: java.util.LinkedHashSet allProviders
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
androidx.window.embedding.ActivityRule: java.util.Set filters
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zziz zze
kotlinx.coroutines.channels.ArrayChannel: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.base.R$string: int common_google_play_services_enable_title
androidx.collection.SimpleArrayMap: int[] mHashes
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zziq zzd
com.google.common.base.CharMatcher$NamedFastMatcher: java.lang.String description
com.google.protobuf.SmallSortedMap$DescendingEntrySet: com.google.protobuf.SmallSortedMap this$0
io.flutter.plugins.firebase.messaging.JobIntentService: boolean mInterruptIfStopped
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.internal.ConnectionSpec INTERNAL_DEFAULT_CONNECTION_SPEC
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
com.google.firebase.firestore.index.FirestoreIndexValueWriter: com.google.firebase.firestore.index.FirestoreIndexValueWriter INSTANCE
io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers
io.grpc.internal.Http2Ping: boolean completed
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.firebase.components.Component$Builder: java.util.Set dependencies
com.google.android.gms.internal.firebase-auth-api.zzdq: com.google.android.gms.internal.firebase-auth-api.zzdo zzb
com.google.firestore.v1.ListenRequest: java.lang.Object targetChange_
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentWebViewClient
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Method sumMethod
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior PREVIOUS
com.google.android.gms.internal.firebase-auth-api.zzsk: com.google.android.gms.internal.firebase-auth-api.zzzg zzd
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object transformType_
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getListenMethod
com.google.protobuf.NullValue: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.firebase.components.ComponentDiscovery: java.lang.Object context
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zza
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
com.google.android.gms.common.internal.TelemetryLoggingOptions: java.lang.String zab
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzg
com.google.android.gms.internal.safetynet.zza: android.os.IBinder zza
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteLruReferenceDelegate referenceDelegate
com.google.android.gms.internal.firebase-auth-api.zzxk: java.lang.String zzb
io.grpc.internal.DelayedClientCall$3: io.grpc.internal.DelayedClientCall this$0
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean useGetForSafeMethods
io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext syncContext
com.google.protobuf.LazyStringArrayList: java.util.List list
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.permission.PermissionManager permissionManager
androidx.activity.ComponentActivity: int mContentLayoutId
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: com.google.protobuf.Parser parser
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
io.grpc.internal.TransportTracer: long lastMessageReceivedTimeNanos
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_LOCAL_VERSION_NO_FORCE_STAGING
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer
io.grpc.internal.RetriableStream$1SendMessageEntry: io.grpc.internal.RetriableStream this$0
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzpo zza
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzit zzb
com.google.firebase.auth.internal.zzav: com.google.firebase.auth.internal.zzax zza
com.google.android.gms.internal.firebase-auth-api.zzec: com.google.android.gms.internal.firebase-auth-api.zzhx zzc
io.grpc.stub.AbstractStub: io.grpc.CallOptions callOptions
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzy
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.DocumentMask mask_
com.google.android.gms.maps.zza: com.google.android.gms.maps.GoogleMap$OnMarkerClickListener zza
io.grpc.internal.RetriableStream: io.grpc.Status cancellationStatus
com.google.android.gms.common.Feature: int zzb
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryBundleCache bundleCache
io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask
com.google.firebase.auth.internal.zzt: java.lang.String zzf
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
io.grpc.internal.KeepAliveManager: com.google.common.base.Stopwatch stopwatch
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs
com.google.android.gms.internal.firebase-auth-api.zznz: com.google.android.gms.internal.firebase-auth-api.zznz zzb
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.View mView
com.google.android.gms.internal.firebase-auth-api.zzro: boolean zze
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.backends.BackendRegistry backendRegistry
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
io.grpc.EquivalentAddressGroup: java.util.List addrs
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
com.google.protobuf.MessageSchema: boolean lite
com.google.android.gms.internal.firebase-auth-api.zztn: com.google.android.gms.internal.firebase-auth-api.zztx zzb
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.Attributes attributes
com.google.android.gms.dynamite.DynamiteModule: int zze
io.grpc.internal.TimeProvider: io.grpc.internal.TimeProvider SYSTEM_TIME_PROVIDER
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ManagedChannelImplBuilder$ClientTransportFactoryBuilder clientTransportFactoryBuilder
com.squareup.okhttp.HttpUrl: java.lang.String fragment
io.grpc.internal.InternalSubchannel: java.lang.String authority
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzc
io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy reconnectPolicy
com.google.android.gms.common.internal.zab: java.util.Set zaa
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zza
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory INSTANCE
io.grpc.internal.ConnectivityStateManager$Listener: java.util.concurrent.Executor executor
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientHostApiCodec INSTANCE
io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0
com.google.android.gms.internal.firebase-auth-api.zznb: com.google.android.gms.internal.firebase-auth-api.zznb zzb
com.google.firebase.encoders.proto.ProtobufEncoder: java.util.Map valueEncoders
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzlt: int zzf
com.google.firebase.auth.internal.zzbi: boolean zzc
androidx.core.R$dimen: int compat_notification_large_icon_max_width
com.google.protobuf.ArrayDecoders$Registers: long long1
com.google.android.gms.internal.location.zzbc: com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder zzdf
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.google.android.gms.common.wrappers.InstantApps: java.lang.Boolean zzb
com.google.firebase.installations.remote.RequestLimiter: int attemptCount
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
com.lyokone.location.FlutterLocation: android.app.Activity activity
io.grpc.internal.OobChannel: io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider
io.flutter.plugins.googlemaps.GoogleMapController: int id
com.google.android.gms.internal.firebase-auth-api.zzsy: com.google.android.gms.internal.firebase-auth-api.zzzq zza
com.google.android.gms.common.internal.BaseGmsClient: long zzj
androidx.fragment.app.Fragment: int mContentLayoutId
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator EQUAL
com.google.common.collect.AbstractIndexedListIterator: int position
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.channels.AbstractChannel$Itr iterator
com.google.firebase.database.collection.ArraySortedMap$1: boolean val$reverse
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase UNARY_FILTER
androidx.core.R$id: int accessibility_custom_action_15
io.grpc.internal.AbstractStream$TransportState$1RequestRunnable: int val$numMessages
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
io.grpc.Context: io.grpc.PersistentHashArrayMappedTrie$Node keyValueEntries
androidx.fragment.app.FragmentManagerImpl$3: android.view.ViewGroup val$container
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.google.firestore.v1.DocumentRemove$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firestore.v1.DocumentDelete: int READ_TIME_FIELD_NUMBER
com.google.common.collect.ImmutableMap$Builder: java.lang.Object[] alternatingKeysAndValues
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
com.google.firebase.firestore.core.FieldFilter: com.google.firestore.v1.Value value
com.google.android.gms.cloudmessaging.zzg: com.google.android.gms.cloudmessaging.zzm zza
io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback callback
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzb
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
com.google.firebase.firestore.local.SQLiteIndexManager: int memoizedMaxIndexId
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
com.baseflow.geolocator.permission.PermissionManager: android.app.Activity activity
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code PERMISSION_DENIED
io.grpc.okhttp.OkHttpClientTransport: javax.net.ssl.SSLSocketFactory sslSocketFactory
io.grpc.internal.KeepAliveManager: io.grpc.internal.KeepAliveManager$State state
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType UNKNOWN
com.google.firebase.firestore.local.SQLiteIndexManager: long memoizedMaxSequenceNumber
io.grpc.internal.RetriableStream$State: java.util.List buffer
io.grpc.internal.RetryPolicy: int maxAttempts
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
androidx.collection.MapCollections$ArrayIterator: int mOffset
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.scheduling.persistence.ClientHealthMetricsStore clientHealthMetricsStore
com.google.android.gms.maps.model.PolygonOptions: float zzc
kotlin.SynchronizedLazyImpl: java.lang.Object _value
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzl
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType PLAINTEXT
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor SOURCEEXTENSION_DESCRIPTOR
io.grpc.internal.MessageFramer: boolean closed
com.squareup.okhttp.internal.http.StatusLine: int code
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
com.google.android.gms.internal.firebase-auth-api.zzjr: int zzf
com.google.protobuf.FieldType: com.google.protobuf.FieldType MESSAGE
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat SDK
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: com.google.firebase.encoders.FieldDescriptor STARTMS_DESCRIPTOR
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzh
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: javax.inject.Provider applicationContextProvider
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
com.google.android.gms.internal.firebase-auth-api.zzfp: javax.crypto.SecretKey zzb
com.google.gson.stream.JsonReader: int stackSize
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
io.grpc.internal.ApplicationThreadDeframerListener$2: boolean val$hasPartialMessage
com.google.android.gms.common.internal.MethodInvocation: java.lang.String zaf
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_HIT
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: boolean nsRefreshedByLb
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzq
com.google.android.gms.maps.model.PolygonOptions: boolean zzh
io.flutter.plugins.firebase.messaging.JobIntentService: boolean mStopped
io.grpc.internal.RetriableStream$State: int hedgingAttemptCount
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.google.android.gms.location.LocationSettingsRequest: java.util.List zzbg
io.flutter.plugins.googlemaps.PolygonBuilder: boolean consumeTapEvents
com.google.protobuf.LazyFieldLite: com.google.protobuf.ExtensionRegistryLite extensionRegistry
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT64_LIST_PACKED
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.Query query
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.reflect.Constructor constructor
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
com.lyokone.location.FlutterLocation: com.google.android.gms.location.FusedLocationProviderClient mFusedLocationClient
io.grpc.StatusException: io.grpc.Metadata trailers
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String apiKey
com.google.firestore.v1.ListenResponse: int DOCUMENT_CHANGE_FIELD_NUMBER
androidx.webkit.WebViewClientCompat: java.lang.String[] sSupportedFeatures
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: com.google.android.gms.tasks.TaskCompletionSource taskCompletionSource
com.tekartik.sqflite.SqflitePlugin: java.lang.Object databaseMapLocker
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] $VALUES
io.grpc.internal.ClientCallImpl$DeadlineTimer: io.grpc.internal.ClientCallImpl this$0
io.grpc.Status$Code: io.grpc.Status$Code INTERNAL
com.baseflow.geolocator.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.common.api.internal.zace: int zab
com.google.android.gms.auth.api.signin.GoogleSignInAccount: int zab
com.google.android.gms.internal.firebase-auth-api.zzbs: byte[] zza
com.google.android.gms.common.internal.ClientSettings: android.view.View zaf
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.util.ArrayDeque nodeStack
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: java.lang.Long timeoutNanos
androidx.collection.SimpleArrayMap: int mSize
com.google.android.gms.common.api.internal.zzc: com.google.android.gms.common.api.internal.zzd zzc
io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.baseflow.geolocator.permission.LocationPermission$1: int[] $SwitchMap$com$baseflow$geolocator$permission$LocationPermission
io.github.ponnamkarthik.toast.fluttertoast.R$id: int text
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig DEFAULT
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl$ContextCancellationListener cancellationListener
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.grpc.internal.RetriableStream$1MaxOutboundMessageSizeEntry: io.grpc.internal.RetriableStream this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String storageBucket
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider transportProvider
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState SUCCESS
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApiCodec INSTANCE
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] $VALUES
io.grpc.okhttp.internal.ConnectionSpec: io.grpc.okhttp.internal.ConnectionSpec COMPATIBLE_TLS
com.google.android.gms.internal.firebase-auth-api.zzaci: com.google.android.gms.internal.firebase-auth-api.zzadc zza
io.grpc.InternalConfigSelector: io.grpc.Attributes$Key KEY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] $VALUES
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependents
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzlt zzf
com.google.android.gms.safetynet.zzf: java.lang.String zzj
com.google.android.gms.internal.firebase-auth-api.zzwd: java.lang.String zza
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.internal.zzt zzb
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
io.grpc.okhttp.internal.framed.Huffman$Node: int symbol
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
com.google.android.gms.internal.firebase-auth-api.zzwg: int zza
com.google.android.gms.internal.firebase-auth-api.zzbq: int zzf
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
com.google.firebase.components.Component$Builder: int type
com.google.firestore.v1.ListenResponse$ResponseTypeCase: int value
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED32_LIST_PACKED
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.local.Scheduler indexBackfillScheduler
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: java.util.Map backends
com.google.android.gms.common.api.GoogleApi: android.content.Context zab
com.google.firebase.auth.internal.zzp: boolean zzd
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
io.grpc.okhttp.OkHttpWritableBuffer: int readableBytes
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: long sequenceNumber
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: int index
io.grpc.internal.ManagedChannelImplBuilder: int maxHedgedAttempts
com.google.android.gms.internal.firebase-auth-api.zzabn: com.google.android.gms.internal.firebase-auth-api.zzabl zza
com.google.android.gms.common.data.DataHolder: int zad
com.google.firebase.auth.internal.zzav: com.google.firebase.auth.FirebaseAuth zzd
io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.Context zza
com.google.firestore.v1.Precondition: int UPDATE_TIME_FIELD_NUMBER
com.tekartik.sqflite.SqflitePlugin$6: boolean val$singleInstance
com.google.android.gms.internal.firebase-auth-api.zzom: java.security.interfaces.ECPrivateKey zzb
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code UNAVAILABLE
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
com.google.firestore.v1.Value: int MAP_VALUE_FIELD_NUMBER
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics storage_metrics_
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzQ
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
com.google.firebase.components.ComponentRuntime: java.util.concurrent.atomic.AtomicReference eagerComponentsInitializedWith
com.google.protobuf.MessageSchema: java.lang.Object[] objects
io.grpc.okhttp.OkHttpChannelBuilder: boolean freezeSecurityConfiguration
androidx.window.core.Version: int minor
com.google.firestore.v1.DocumentTransform: java.lang.String document_
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.IndexManager indexManager
com.google.android.gms.maps.model.MapStyleOptions: java.lang.String zza
com.google.android.gms.common.internal.zzo: int zzc
io.flutter.plugins.googlemaps.PolygonController: java.lang.String googleMapsPolygonId
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.protobuf.Internal$EnumLiteMap internalValueMap
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.Map streamHandlers
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.firestore.bundle.BundleCallback bundleCallback
com.google.firebase.auth.internal.GenericIdpActivity: com.google.firebase.auth.internal.zzbm zzc
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap zzh
com.google.protobuf.IterableByteBufferInputStream: java.util.Iterator iterator
com.google.android.gms.internal.firebase-auth-api.zzxn: com.google.android.gms.common.logging.Logger zza
com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringArrayList EMPTY_LIST
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor SOURCEEXTENSIONJSONPROTO3_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzme zzb
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.remote.GrpcMetadataProvider metadataProvider
com.google.android.gms.maps.model.MarkerOptions: float zzk
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.google.firebase.firestore.local.MemoryPersistence: java.util.Map mutationQueues
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean zaj
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method SSL_SOCKETS_IS_SUPPORTED_SOCKET
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zze
kotlinx.coroutines.UndispatchedCoroutine: java.lang.Object savedOldValue
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzwc zzc
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Parser PARSER
io.grpc.internal.ManagedChannelImpl: boolean terminated
com.google.firestore.v1.StructuredQuery: int ORDER_BY_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase UNKNOWN_DOCUMENT
com.google.firebase.auth.zzo: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zzd
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding BASE32_HEX
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: javax.inject.Provider schemaManagerProvider
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
com.google.android.gms.base.R$string: int common_open_on_phone
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.Map eventChannels
com.google.android.gms.internal.firebase-auth-api.zzev: java.math.BigInteger zzc
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: com.tekartik.sqflite.operation.BatchOperation this$0
com.google.firebase.messaging.EnhancedIntentService: int runningTasks
com.google.firebase.auth.internal.zzw: java.lang.String zza
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
com.google.android.gms.common.internal.zzn: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zzd
com.google.android.gms.common.internal.GetServiceRequest: java.lang.String zzn
io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzga: java.lang.Class zza
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.Object zzt
com.google.firebase.firestore.local.SQLitePersistence$1: com.google.firebase.firestore.local.SQLitePersistence this$0
com.google.android.gms.common.util.Strings: java.util.regex.Pattern zza
com.google.android.gms.internal.firebase-auth-api.zzlt: com.google.android.gms.internal.firebase-auth-api.zzlt zzb
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.DocumentKey key
kotlinx.coroutines.EventLoop: long useCount
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] $VALUES
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder INSTANCE
io.grpc.internal.RetriableStream$1DeadlineEntry: io.grpc.Deadline val$deadline
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
kotlin.jvm.internal.CallableReference: boolean isTopLevel
io.grpc.InternalStatus: io.grpc.Metadata$Key CODE_KEY
com.google.firebase.firestore.bundle.BundleDocument: com.google.firebase.firestore.model.MutableDocument document
com.google.android.gms.internal.firebase-auth-api.zzlk: com.google.android.gms.internal.firebase-auth-api.zzaca zza
com.google.android.gms.internal.firebase-auth-api.zzgo: java.lang.Class zza
com.google.android.gms.internal.firebase-auth-api.zzqs: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object documentType_
com.google.firebase.firestore.core.SyncEngine: int maxConcurrentLimboResolutions
com.google.android.gms.auth.api.signin.GoogleSignInAccount: long zaj
com.google.android.gms.tasks.zzk: com.google.android.gms.tasks.zzl zzb
com.google.android.gms.common.internal.zzc: java.lang.Object zza
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
com.google.android.gms.internal.firebase-auth-api.zzvs: com.google.android.gms.common.logging.Logger zzb
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledExecutorService scheduler
com.google.android.gms.internal.cloudmessaging.zze: com.google.android.gms.internal.cloudmessaging.zzb zza
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: com.google.firebase.FirebaseOptions firebaseOptions
com.google.android.gms.internal.firebase-auth-api.zzbp: java.util.concurrent.ConcurrentMap zzb
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzeu zzd
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
com.google.firebase.messaging.EnhancedIntentService: java.lang.Object lock
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT32
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType[] $VALUES
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.Api zab
io.grpc.internal.ChannelTracer: java.util.Collection events
com.google.android.gms.internal.firebase-auth-api.zzaep: long zza
androidx.fragment.app.FragmentTransaction: int mTransition
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: com.google.protobuf.MessageLite messageDefaultInstance
io.grpc.SynchronizationContext: java.util.concurrent.atomic.AtomicReference drainingThread
io.grpc.internal.DnsNameResolver: boolean enableJndiLocalhost
io.grpc.internal.GrpcUtil$Http2Error: int code
com.google.common.collect.RegularImmutableList: java.lang.Object[] array
io.flutter.plugins.googlemaps.TileProviderController$Worker: int x
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: io.flutter.plugins.googlemaps.GoogleMapsPlugin this$0
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl: io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl flutterApi
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.internal.firebase-auth-api.zzrm: com.google.firebase.auth.PhoneAuthCredential zza
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller responseMarshaller
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData
io.grpc.Status: io.grpc.Status INTERNAL
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
com.google.firebase.firestore.util.ExponentialBackoff: double backoffFactor
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzet zze
com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$EntrySet lazyEntrySet
com.google.firestore.v1.StructuredQuery$Projection: int FIELDS_FIELD_NUMBER
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
com.google.firebase.installations.remote.AutoValue_TokenResult: com.google.firebase.installations.remote.TokenResult$ResponseCode responseCode
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String package_name_
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: com.google.firebase.firestore.local.LruGarbageCollector garbageCollector
com.google.protobuf.LazyFieldLite: com.google.protobuf.ByteString delayedBytes
com.google.firebase.firestore.local.IndexBackfiller: com.google.common.base.Supplier localDocumentsViewOfCurrentUser
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype UMTS
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
androidx.localbroadcastmanager.content.LocalBroadcastManager$1: androidx.localbroadcastmanager.content.LocalBroadcastManager this$0
com.google.android.gms.internal.firebase-auth-api.zzzu: boolean zze
com.google.android.gms.internal.auth-api-phone.zzx: com.google.android.gms.internal.auth-api-phone.zzu zza
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_DOM_EXTRA
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order UNRECOGNIZED
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String fieldPath_
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
com.google.firebase.firestore.util.Logger$1: int[] $SwitchMap$com$google$firebase$firestore$util$Logger$Level
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator NOT_EQUAL
io.grpc.okhttp.OkHttpClientTransport: java.util.concurrent.ScheduledExecutorService scheduler
com.google.firebase.firestore.FirebaseFirestoreSettings: long cacheSizeBytes
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
androidx.fragment.app.BackStackState: int mTransitionStyle
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest DEFAULT_INSTANCE
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
androidx.core.R$id: int accessibility_custom_action_19
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mAnimating
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: javax.inject.Provider contextProvider
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.FieldInfo[] fields
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzf
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: com.google.firebase.appcheck.interop.AppCheckTokenListener tokenListener
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT32
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: com.google.android.datatransport.cct.internal.ClientInfo clientInfo
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error SETTINGS_TIMEOUT
com.google.android.gms.cloudmessaging.zzm: int zza
com.google.protobuf.IterableByteBufferInputStream: java.nio.ByteBuffer currentByteBuffer
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: android.widget.Toast mToast
com.google.protobuf.MessageSetSchema: com.google.protobuf.UnknownFieldSchema unknownFieldSchema
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
io.grpc.NameResolver$Args$Builder: java.lang.Integer defaultPort
com.google.android.gms.common.internal.zzr: java.util.HashMap zzb
io.flutter.plugins.googlemaps.MarkersController: java.util.Map markerIdToController
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzg
io.grpc.internal.RetriableStream$1MaxOutboundMessageSizeEntry: int val$maxSize
com.google.android.gms.tasks.zzaf: int zzb
com.google.firebase.auth.OAuthProvider: android.os.Bundle zza
io.grpc.internal.PickFirstLoadBalancer$2: int[] $SwitchMap$io$grpc$ConnectivityState
io.grpc.internal.ApplicationThreadDeframerListener: io.grpc.internal.MessageDeframer$Listener storedListener
com.google.android.gms.internal.firebase-auth-api.zzgl: com.google.android.gms.internal.firebase-auth-api.zzpo zza
io.grpc.internal.DelayedStream: boolean $assertionsDisabled
com.google.firestore.v1.ListenRequest: int targetChangeCase_
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState UNKNOWN
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.util.List usedDates
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: java.util.concurrent.ScheduledThreadPoolExecutor internalExecutor
io.grpc.okhttp.internal.framed.Header: okio.ByteString name
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType ALPN_AND_NPN
com.google.android.gms.internal.firebase-auth-api.zzgb: java.util.Map zzb
com.google.common.base.Splitter: com.google.common.base.CharMatcher trimmer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.gms.internal.firebase-auth-api.zzadg: com.google.android.gms.internal.firebase-auth-api.zzadc zza
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
io.flutter.plugins.googlemaps.TileProviderController: android.os.Handler handler
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.DecompressorRegistry decompressorRegistry
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: io.flutter.plugins.firebase.messaging.JobIntentService this$0
com.google.android.gms.internal.location.zzo: com.google.android.gms.internal.location.zzaj zzcj
com.google.android.gms.tasks.zzp: com.google.android.gms.tasks.SuccessContinuation zzb
io.flutter.plugin.common.EventChannel: java.lang.String name
com.google.android.gms.signin.internal.zaa: int zaa
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzb
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY
com.google.common.base.Joiner: java.lang.String separator
com.google.firestore.v1.Target: com.google.firestore.v1.Target DEFAULT_INSTANCE
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: android.app.Activity mainActivity
com.tekartik.sqflite.operation.BatchOperation: boolean noResult
io.grpc.ConnectivityState: io.grpc.ConnectivityState IDLE
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzz
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.HedgingPolicy val$hedgingPolicy
com.google.android.gms.internal.firebase-auth-api.zzri: android.os.Parcelable$Creator CREATOR
io.grpc.NameResolverRegistry: java.lang.String defaultScheme
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: io.flutter.view.FlutterCallbackInformation callbackHandle
androidx.fragment.app.FragmentManagerImpl: int mCurState
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: java.lang.String sourceExtensionJsonProto3
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy accuracy
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzb
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
com.google.android.gms.common.api.internal.zact: com.google.android.gms.signin.zae zag
com.google.firebase.messaging.Store$Token: long timestamp
io.grpc.internal.DelayedStream$13: io.grpc.internal.DelayedStream this$0
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.ApiKey zac
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
com.google.firebase.firestore.bundle.BundleSerializer: java.text.SimpleDateFormat timestampFormat
com.google.firebase.firestore.LoadBundleTaskProgress: java.lang.Exception exception
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase REFERENCE_VALUE
com.google.android.gms.dynamite.DynamiteModule: boolean zzd
com.google.android.gms.maps.model.PolylineOptions: boolean zzf
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction DESCENDING
com.google.common.collect.RegularImmutableList: int size
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
com.google.android.gms.internal.firebase-auth-api.zzcm: com.google.android.gms.internal.firebase-auth-api.zzcn zza
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header CONTENT_TYPE_HEADER
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.common.internal.zas zaa
io.grpc.internal.DnsNameResolver: io.grpc.internal.DnsNameResolver$AddressResolver addressResolver
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String tag
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.LocalSerializer serializer
com.google.firebase.firestore.Filter$UnaryFilter: com.google.firebase.firestore.FieldPath field
com.google.android.gms.internal.firebase-auth-api.zzeb: java.lang.String zza
com.google.android.gms.common.api.internal.zan: android.app.Dialog zaa
com.google.android.gms.location.LocationSettingsStates: boolean zzbs
io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING
io.grpc.okhttp.internal.framed.Header: okio.ByteString value
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.local.ReferenceSet limboDocumentRefs
com.google.firebase.firestore.local.LruGarbageCollector$Params: long minBytesThreshold
io.grpc.internal.ClientCallImpl: boolean unaryRequest
com.google.firebase.firestore.index.OrderedCodeWriter: byte[] buffer
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzb
io.flutter.plugins.urllauncher.WebViewActivity: android.content.BroadcastReceiver broadcastReceiver
com.google.android.gms.internal.firebase-auth-api.zzxv: boolean zzc
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType LIMIT_TO_FIRST
com.google.protobuf.MessageSchema: int[] buffer
com.google.android.gms.internal.firebase-auth-api.zzaeg: int zzb
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zze
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: com.google.firebase.firestore.local.LocalSerializer serializer
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String hardware
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder TIMESTAMP_ENCODER
com.google.protobuf.FieldType: com.google.protobuf.FieldType ENUM_LIST_PACKED
com.google.android.gms.common.api.internal.zzb: int zzc
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: java.util.List listeners
com.google.firebase.firestore.local.LruGarbageCollector$Results: int sequenceNumbersCollected
com.tekartik.sqflite.SqflitePlugin$5: com.tekartik.sqflite.SqflitePlugin this$0
io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State
com.google.firebase.firestore.core.FieldFilter$Operator: java.lang.String text
io.grpc.internal.ManagedChannelImplBuilder: boolean tracingEnabled
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.internal.MethodInvocation zaa
com.google.android.gms.internal.firebase-auth-api.zzfv: java.lang.Class zzb
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] $VALUES
io.grpc.internal.MessageDeframer: io.grpc.internal.GzipInflatingBuffer fullStreamDecompressor
io.grpc.internal.DnsNameResolver: boolean resolved
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.BundleCache bundleCache
com.google.android.gms.maps.zzah: java.util.List zze
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider timeProvider
io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] $VALUES
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.remote.FirebaseInstallationServiceClient serviceClient
com.google.android.gms.internal.firebase-auth-api.zzaah: int zza
com.google.android.gms.signin.SignInOptions: java.lang.String zag
com.google.android.gms.internal.firebase-auth-api.zzdo: int zzb
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType UNKNOWN
androidx.fragment.app.Fragment: boolean mHidden
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String fisError
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
com.google.android.datatransport.AutoValue_Event: java.lang.Integer code
com.google.android.gms.safetynet.SafeBrowsingData: java.lang.String TAG
io.grpc.internal.MessageFramer: boolean messageCompression
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map objectEncoders
io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.internal.DelayedStream$DelayedStreamListener this$0
com.google.firestore.admin.v1.Index$IndexField: java.lang.String fieldPath_
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy high
io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer
com.google.android.gms.internal.firebase-auth-api.zzyy: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
com.google.android.gms.tasks.zzw: boolean zzc
com.google.common.math.LongMath: long[] halfPowersOf10
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzin zzg
com.google.android.gms.internal.firebase-auth-api.zzzx: long zzh
com.google.firestore.v1.StructuredQuery$Filter: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator ARRAY_CONTAINS
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzyh: java.lang.String zza
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzc
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int totalBytesRead
com.google.firebase.firestore.core.ActivityScope$StopListenerFragment: com.google.firebase.firestore.core.ActivityScope$CallbackList callbacks
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String refreshToken
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: java.lang.String sourceExtensionJsonProto3
androidx.localbroadcastmanager.content.LocalBroadcastManager: java.lang.Object mLock
com.google.common.collect.RegularImmutableSet: int hashCode
com.google.android.gms.internal.firebase-auth-api.zzbe: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zze
com.google.android.gms.maps.model.CameraPosition$Builder: float zzd
io.grpc.internal.OobChannel: io.grpc.internal.CallTracer channelCallsTracer
okio.Okio$2: java.io.InputStream val$in
com.google.firestore.admin.v1.Index$IndexField: int ARRAY_CONFIG_FIELD_NUMBER
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle zad
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.TokenResult authToken
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
com.google.firebase.auth.internal.zzau: com.google.android.gms.tasks.TaskCompletionSource zza
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zad
com.google.android.gms.common.data.DataHolder: android.database.CursorWindow[] zah
com.google.android.gms.internal.firebase-auth-api.zztk: com.google.android.gms.internal.firebase-auth-api.zzwy zza
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform UNKNOWN_OS
io.grpc.okhttp.internal.Platform$Android: java.lang.reflect.Method trafficStatsTagSocket
io.flutter.plugins.androidintent.IntentSender: android.content.Context applicationContext
com.google.protobuf.FieldType: com.google.protobuf.FieldType FLOAT_LIST_PACKED
io.grpc.internal.ManagedChannelImpl$3: io.grpc.internal.ManagedChannelImpl this$0
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor flutterBackgroundExecutor
io.flutter.Log: int INFO
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String message_id_
com.google.firestore.v1.WriteResponse: java.lang.String streamId_
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.google.android.gms.internal.firebase-auth-api.zzkd: int zze
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor PACKAGENAME_DESCRIPTOR
com.google.firebase.FirebaseOptions$Builder: java.lang.String projectId
com.google.firebase.firestore.model.mutation.Precondition: java.lang.Boolean exists
androidx.core.app.NotificationCompat$Builder: int mColor
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.Status transportError
com.google.android.gms.internal.firebase-auth-api.zzpb: int[] zza
com.google.android.gms.internal.firebase-auth-api.zzhs: com.google.android.gms.internal.firebase-auth-api.zzhx zzc
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin$1: com.google.firebase.auth.FirebaseAuth val$firebaseAuth
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
com.google.firebase.auth.internal.zzf: com.google.firebase.auth.internal.zzf zzb
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.GeolocationManager geolocationManager
com.google.firebase.auth.PhoneAuthCredential: boolean zze
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zad
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.android.gms.internal.firebase-auth-api.zzom: int zzg
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
com.google.firestore.v1.ListenRequest: java.lang.String database_
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider eventStoreProvider
com.google.android.gms.safetynet.SafeBrowsingData: byte[] zzr
com.google.firebase.installations.FirebaseInstallations: java.util.Set fidListeners
kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$Throttle throttle
com.google.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_BASE_OFFSET
com.google.android.gms.common.internal.zza: com.google.android.gms.common.internal.BaseGmsClient zzc
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.util.concurrent.ConcurrentMap refs
com.google.firebase.components.Dependency: int injection
com.google.android.gms.maps.model.PolygonOptions: java.util.List zza
com.google.android.gms.common.api.internal.zzd: android.os.Bundle zzd
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$Precondition$ConditionTypeCase
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: io.grpc.Metadata val$headers
com.google.firebase.messaging.RequestDeduplicator: java.util.Map getTokenRequests
com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder: java.lang.String zaa
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult DEFAULT_INSTANCE
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] $VALUES
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: com.google.firebase.encoders.json.JsonDataEncoderBuilder this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.common.internal.zzag: int zzd
com.tekartik.sqflite.SqflitePlugin$8: com.tekartik.sqflite.Database val$openedDatabase
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.ArrayList zzd
com.google.android.gms.internal.firebase-auth-api.zzyl: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$Event event_
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.internal.firebase-auth-api.zzpe: byte[] zzb
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
com.google.firebase.firestore.GeoPoint: double latitude
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.Integer sdkVersion
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.SnapshotMetadata metadata
com.google.protobuf.Internal: java.nio.charset.Charset US_ASCII
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.remote.RemoteSerializer rpcSerializer
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
androidx.core.app.NotificationCompat$Builder: boolean mLocalOnly
androidx.fragment.app.BackStackState: int[] mOps
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase DOCUMENT_CHANGE
io.grpc.internal.SerializingExecutor: int runState
com.google.android.gms.cloudmessaging.zzt: int zzc
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.internal.zzx zza
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzf
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code UNIMPLEMENTED
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: java.util.concurrent.atomic.AtomicReference INSTANCE
com.google.firestore.v1.Value: int STRING_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] $VALUES
okio.AsyncTimeout: okio.AsyncTimeout head
com.google.android.gms.internal.firebase-auth-api.zzmp: int zzg
io.grpc.okhttp.internal.framed.Http2$Reader: boolean client
com.google.android.gms.internal.firebase-auth-api.zzst: com.google.android.gms.internal.firebase-auth-api.zztx zzb
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager channelStateManager
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType NoChange
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
com.google.android.gms.internal.firebase-auth-api.zzabk: com.google.android.gms.internal.firebase-auth-api.zzabk zzc
io.grpc.internal.DnsNameResolver: java.util.logging.Logger logger
io.grpc.internal.TransportTracer: long keepAlivesSent
com.google.firebase.FirebaseApp: java.util.List backgroundStateChangeListeners
com.google.android.gms.internal.firebase-auth-api.zzfz: int zzb
io.flutter.plugins.firebase.firestore.streamhandler.LoadBundleStreamHandler: io.flutter.plugin.common.EventChannel$EventSink eventSink
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ACCEPT_ENCODING_KEY
com.google.firestore.v1.DocumentDelete: java.lang.String document_
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
com.google.android.gms.internal.firebase-auth-api.zzzf: java.lang.String zza
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.Fragment val$inFragment
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zzd
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator[] $VALUES
com.google.firestore.bundle.BundledQuery$LimitType: int value
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.firebase.installations.FirebaseInstallations: java.lang.Object lock
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String appGroupId
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse DEFAULT_INSTANCE
io.flutter.embedding.android.FlutterView$4: java.lang.Runnable val$onDone
io.grpc.okhttp.internal.framed.Settings: int persistValue
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.google.common.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.internal.framed.FrameReader testFrameReader
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.String uid
com.google.firebase.firestore.core.AsyncEventListener: java.util.concurrent.Executor executor
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.google.android.gms.cloudmessaging.zzm: com.google.android.gms.cloudmessaging.zzn zzc
androidx.webkit.internal.WebkitToCompatConverter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface mImpl
io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzuz: com.google.android.gms.internal.firebase-auth-api.zzre zza
com.google.firebase.firestore.model.FieldIndex: com.google.firebase.firestore.model.FieldIndex$IndexState INITIAL_STATE
com.google.android.gms.dynamite.zzn: android.database.Cursor zza
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.grpc.okhttp.internal.framed.Http2: okio.ByteString CONNECTION_PREFACE
androidx.fragment.app.FragmentManagerImpl$5: android.view.View val$animatingView
com.google.firebase.installations.local.IidStore: java.lang.String defaultSenderId
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.google.android.gms.location.LocationRequest: boolean zzay
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zzw
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.ConcurrentMap zzc
io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress
com.google.android.gms.internal.firebase-auth-api.zzon: com.google.android.gms.internal.firebase-auth-api.zzop zza
io.grpc.Status$Code: int value
io.grpc.internal.ClientCallImpl: java.util.logging.Logger log
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
io.grpc.InternalChannelz$Tls: java.security.cert.Certificate remoteCert
io.grpc.internal.ManagedChannelImplBuilder: int maxTraceEvents
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_CHACHA20_POLY1305_SHA256
com.google.android.gms.dynamite.DynamiteModule: android.content.Context zzi
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INTERNAL_ERROR
io.grpc.internal.RetriableStream$HedgingRunnable: io.grpc.internal.RetriableStream this$0
com.google.firestore.v1.BatchGetDocumentsResponse: int MISSING_FIELD_NUMBER
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter DEFAULT_INSTANCE
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzf
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
com.google.common.collect.RegularImmutableSet: int size
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.time.Clock wallClock
io.grpc.internal.RetriableStream$1DecompressorRegistryEntry: io.grpc.DecompressorRegistry val$decompressorRegistry
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider sQLiteEventStoreProvider
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics global_metrics_
com.google.firebase.auth.internal.zzo: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzwl: java.lang.String zza
io.flutter.plugins.googlemaps.GoogleMapController$2: java.lang.Runnable val$f
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ExecutorService networkExecutor
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.model.SnapshotVersion lastLimboFreeSnapshotVersion
com.google.firestore.v1.TransactionOptions$ReadOnly: int READ_TIME_FIELD_NUMBER
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type MODIFIED
io.flutter.plugins.androidintent.MethodCallHandlerImpl: io.flutter.plugins.androidintent.IntentSender sender
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzko zzb
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpFrameLogger testFrameLogger
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
androidx.webkit.internal.WebViewFeatureInternal$LAZY_HOLDER: java.lang.String[] WEBVIEW_APK_FEATURES
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: java.util.regex.Pattern whitespace
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: android.net.ConnectivityManager connectivityManager
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT64_LIST_PACKED
kotlinx.coroutines.EventLoop: kotlinx.coroutines.internal.ArrayQueue unconfinedQueue
io.grpc.Deadline: long deadlineNanos
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList from_
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy low
com.google.firebase.messaging.TopicsSubscriber: java.util.Map pendingOperations
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.core.app.NotificationCompatJellybean: java.lang.Object sExtrasLock
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$StructuredQuery$Filter$FilterTypeCase
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_WARNING
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzbi zze
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzO
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.OptionalMethod setHostname
io.grpc.Metadata: com.google.common.io.BaseEncoding BASE64_ENCODING_OMIT_PADDING
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status TOO_MANY_REQUESTS
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator LESS_THAN
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT
androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
com.google.firebase.auth.internal.zzbe: boolean zza
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.internal.zzz zzi
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus precise
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase COMPOSITE_FILTER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: io.grpc.internal.JndiResourceResolverFactory$RecordFetcher recordFetcher
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
com.google.android.gms.internal.firebase-auth-api.zzro: android.os.Parcelable$Creator CREATOR
io.grpc.LoadBalancer$PickResult: boolean drop
androidx.browser.customtabs.CustomTabsIntent$Builder: android.os.Bundle mStartAnimationBundle
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory DEFAULT_FACTORY
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType DATA_MESSAGE
com.google.android.gms.internal.firebase-auth-api.zzyu: long zzd
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
com.google.firebase.messaging.RemoteMessage$Builder: android.os.Bundle bundle
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzku zzf
io.grpc.okhttp.internal.framed.ErrorCode: int httpCode
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp readTime_
com.google.android.gms.internal.firebase-auth-api.zzfw: com.google.android.gms.internal.firebase-auth-api.zzhi zza
com.google.protobuf.RopeByteString$1: com.google.protobuf.ByteString$ByteIterator current
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.android.gms.internal.firebase-auth-api.zzaah: com.google.android.gms.internal.firebase-auth-api.zzabk zzd
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient this$1
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.inputmethod.InputConnection cachedConnection
com.google.android.gms.internal.firebase-auth-api.zzcy: com.google.android.gms.internal.firebase-auth-api.zzcz zza
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] $VALUES
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleMetadata metadata
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.window.R$styleable: int[] ActivityFilter
com.google.firebase.database.collection.LLRBBlackValueNode: int size
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.Map setters
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
com.google.gson.stream.JsonReader: java.lang.String peekedString
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.CirclesController circlesController
io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
com.google.firestore.v1.ExistenceFilter: int count_
com.google.android.gms.common.api.internal.zabq: int zah
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zze
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: io.flutter.plugin.common.MethodChannel backgroundChannel
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType NO_CHANGE
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzg
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType LONG
com.google.firebase.firestore.core.KeyFieldInFilter: java.util.List keys
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.GmsRpc rpc
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
io.grpc.internal.MessageDeframer: io.grpc.internal.StatsTraceContext statsTraceCtx
com.lyokone.location.FlutterLocation: long fastestUpdateIntervalMilliseconds
com.google.firebase.encoders.FieldDescriptor$Builder: java.util.Map properties
io.grpc.internal.ManagedChannelImpl$ExecutorHolder: io.grpc.internal.ObjectPool pool
com.google.android.gms.internal.firebase-auth-api.zztv: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.common.internal.zzj: int zzc
com.google.android.gms.internal.firebase-auth-api.zzad: int zze
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
com.google.firebase.firestore.core.View: com.google.firebase.firestore.model.DocumentSet documentSet
com.google.firebase.messaging.DisplayNotification: com.google.firebase.messaging.NotificationParams params
io.grpc.okhttp.internal.framed.Hpack$Writer: int dynamicTableByteCount
io.grpc.internal.InternalSubchannel$TransportListener$3: io.grpc.internal.InternalSubchannel$TransportListener this$1
com.google.protobuf.BooleanArrayList: boolean[] array
com.google.protobuf.RopeByteString: int treeDepth
com.google.firebase.firestore.index.IndexByteEncoder: com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder descending
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.google.firebase.messaging.reporting.MessagingClientEvent: int priority_
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
androidx.fragment.app.Fragment: boolean mUserVisibleHint
io.grpc.internal.GrpcUtil: java.util.logging.Logger log
io.grpc.internal.SharedResourceHolder$2: java.lang.Object val$instance
com.google.android.gms.common.data.DataHolder$Builder: java.util.ArrayList zab
com.google.android.gms.internal.firebase-auth-api.zzacd: java.nio.charset.Charset zza
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
com.google.android.gms.internal.firebase-auth-api.zztn: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.internal.ManagedChannelImpl: io.grpc.Status SUBCHANNEL_SHUTDOWN_STATUS
com.google.firebase.firestore.bundle.BundledQuery: com.google.firebase.firestore.core.Query$LimitType limitType
com.google.firebase.installations.FirebaseInstallationsException: com.google.firebase.installations.FirebaseInstallationsException$Status status
io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$OutputStreamAdapter outputStreamAdapter
io.grpc.internal.AbstractClientStream$GetFramer: byte[] payload
com.google.android.gms.common.internal.zzc: com.google.android.gms.common.internal.BaseGmsClient zzd
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
io.grpc.StatusException: io.grpc.Status status
io.grpc.internal.AtomicBackoff: java.util.concurrent.atomic.AtomicLong value
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
com.tekartik.sqflite.SqflitePlugin: android.os.HandlerThread handlerThread
com.google.android.gms.dynamic.zaa: com.google.android.gms.dynamic.DeferredLifecycleHelper zaa
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType ASYNC
io.grpc.internal.DelayedClientCall$DelayedListener: io.grpc.ClientCall$Listener realListener
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: int number
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED32_LIST_PACKED
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.firestore.local.ReferenceSet references
okio.Util: java.nio.charset.Charset UTF_8
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
io.flutter.plugins.firebase.firestore.streamhandler.QuerySnapshotsStreamHandler: com.google.firebase.firestore.ListenerRegistration listenerRegistration
io.grpc.NameResolver$ResolutionResult: io.grpc.NameResolver$ConfigOrError serviceConfig
okio.RealBufferedSource: okio.Source source
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_CBS
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zza
io.grpc.internal.RetriableStream$Sublistener$6: io.grpc.internal.RetriableStream$Sublistener this$1
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.String TAG
com.google.android.gms.maps.internal.zzca: android.content.Context zzb
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.FirestoreMultiDbComponent: com.google.firebase.inject.Deferred appCheckProvider
com.google.firestore.v1.Value: int ARRAY_VALUE_FIELD_NUMBER
androidx.core.graphics.drawable.IconCompat: int mType
io.grpc.okhttp.internal.Platform$Android: java.lang.reflect.Method trafficStatsUntagSocket
io.grpc.Context: io.grpc.Context$CancellableContext cancellableAncestor
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: java.lang.String key
com.google.firebase.auth.internal.zzas: android.content.Context zzb
androidx.window.core.Bounds: int left
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.android.gms.common.ErrorDialogFragment: android.app.Dialog zac
com.google.android.gms.internal.firebase-auth-api.zzse: java.util.List zzb
com.google.android.gms.cloudmessaging.Rpc: android.app.PendingIntent zzb
com.google.android.gms.internal.location.zzbf: int zzcg
com.google.firebase.firestore.core.OrderBy$Direction: int comparisonModifier
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type ADDED
com.google.android.gms.maps.model.MarkerOptions: boolean zzg
com.google.android.gms.internal.firebase-auth-api.zzaag: int zza
io.grpc.internal.RetriableStream$1MaxInboundMessageSizeEntry: io.grpc.internal.RetriableStream this$0
io.flutter.plugins.googlemaps.MarkersController: com.google.android.gms.maps.GoogleMap googleMap
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzh
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: java.lang.Object[][] customOptions
io.grpc.internal.DelayedStream$2: io.grpc.internal.DelayedStream this$0
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState ONLINE
com.baseflow.geolocator.LocationServiceHandlerImpl: io.flutter.plugin.common.EventChannel channel
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead queue
io.grpc.internal.DelayedClientCall: java.util.concurrent.Executor callExecutor
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialPolylines
com.google.firebase.auth.FirebaseAuthUserCollisionException: java.lang.String zzb
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: android.content.Context context
io.grpc.internal.ManagedChannelImpl: boolean fullStreamDecompression
com.google.firestore.v1.Write: int UPDATE_TRANSFORMS_FIELD_NUMBER
com.google.common.base.Throwables: java.lang.Object jla
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzo
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
com.google.android.gms.internal.safetynet.zzx: android.content.Context zzap
androidx.fragment.app.FragmentManagerImpl: boolean mStopped
com.google.protobuf.ExtensionSchemas: com.google.protobuf.ExtensionSchema LITE_SCHEMA
com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.Protocol protocol
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature FAKE
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzo
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api mApi
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean allDescendants_
com.google.android.gms.internal.firebase-auth-api.zzxg: com.google.android.gms.internal.firebase-auth-api.zzwt zza
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer lb
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.Window mWindow
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.FirebaseApp firebaseApp
io.grpc.internal.NoopClientStream: io.grpc.internal.NoopClientStream INSTANCE
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: com.google.android.datatransport.cct.internal.ClientInfo$ClientType clientType
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
com.google.android.gms.internal.firebase-auth-api.zzzu: android.os.Parcelable$Creator CREATOR
com.google.firebase.installations.FirebaseInstallations: java.util.List listeners
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzlq zzf
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
io.grpc.internal.DelayedClientTransport: io.grpc.internal.ManagedClientTransport$Listener listener
com.google.firebase.firestore.bundle.BundledDocumentMetadata: boolean exists
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar INSTANCE
com.google.android.gms.internal.common.zzd: int zza
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] $VALUES
com.google.firestore.v1.StructuredQuery$CompositeFilter: int OP_FIELD_NUMBER
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.WatchChangeAggregator watchChangeAggregator
com.google.common.base.Charsets: java.nio.charset.Charset UTF_16LE
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzj
com.google.common.base.CharMatcher$Whitespace: int SHIFT
com.google.firebase.auth.zzy: java.lang.String zza
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase RESULT_NOT_SET
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjf zzb
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbq zzc
okio.Segment: okio.Segment next
com.google.android.gms.internal.firebase-auth-api.zzuy: com.google.android.gms.internal.firebase-auth-api.zzrc zza
io.grpc.internal.RetriableStream$1RequestEntry: int val$numMessages
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.time.Clock clock
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.Status val$error
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.List mutations
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding BASE64
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder: com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzc
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin$1: io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin this$0
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzb
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzap zzd
com.google.android.gms.internal.firebase-auth-api.zzqw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.safetynet.zzl: java.lang.String zzx
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor EVENTUPTIMEMS_DESCRIPTOR
com.google.firestore.v1.WriteRequest: com.google.protobuf.Parser PARSER
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT64
io.grpc.internal.DnsNameResolver: java.lang.String JNDI_LOCALHOST_PROPERTY
com.google.android.datatransport.runtime.util.PriorityMapping: java.util.HashMap PRIORITY_INT_MAP
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_UNKNOWN
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.String token
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.lang.String channelStr
io.grpc.internal.ManagedChannelImplBuilder: boolean recordStartedRpcs
com.google.android.gms.common.internal.ClientSettings: java.lang.String zah
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean zzc
com.google.protobuf.UnsafeUtil: long LONG_ARRAY_BASE_OFFSET
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType NONE
io.grpc.Metadata$TrustedAsciiKey: io.grpc.Metadata$TrustedAsciiMarshaller marshaller
com.google.firebase.auth.internal.zzx: boolean zzj
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String applicationBuild
com.google.firebase.auth.internal.zzt: android.net.Uri zze
androidx.fragment.app.FragmentManagerImpl$2: androidx.fragment.app.FragmentManagerImpl this$0
com.google.protobuf.MessageSetSchema: com.google.protobuf.MessageLite defaultInstance
androidx.browser.customtabs.CustomTabColorSchemeParams: java.lang.Integer navigationBarColor
kotlin.SynchronizedLazyImpl: java.lang.Object lock
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable
com.google.android.gms.common.logging.Logger: java.lang.String zza
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
io.grpc.okhttp.OkHttpClientStream$TransportState: int initialWindowSize
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
com.google.android.gms.internal.firebase-auth-api.zzeb: com.google.android.gms.internal.firebase-auth-api.zznt zzb
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
com.google.common.math.LongMath: long[] factorials
kotlinx.coroutines.CommonPool: boolean usePrivatePool
com.google.firebase.firestore.core.ListenerRegistrationImpl: com.google.firebase.firestore.core.AsyncEventListener asyncEventListener
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType SERVER_STREAMING
com.google.android.gms.internal.location.zzbd: java.util.List zzcd
com.google.firestore.v1.ListenRequest$LabelsDefaultEntryHolder: com.google.protobuf.MapEntryLite defaultEntry
com.google.firebase.FirebaseOptions: java.lang.String apiKey
com.google.protobuf.MessageSchema: com.google.protobuf.UnknownFieldSchema unknownFieldSchema
com.google.android.gms.internal.firebase-auth-api.zzcv: com.google.android.gms.internal.firebase-auth-api.zzcw zza
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype RTT
io.flutter.view.AccessibilityBridge$StringAttribute: int start
com.google.android.gms.common.internal.zzu: java.lang.String zzb
androidx.core.R$id: int accessibility_custom_action_10
com.google.android.gms.common.api.internal.zap: android.os.Handler zad
com.google.firebase.firestore.core.SyncEngine: java.lang.String TAG
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: com.google.android.datatransport.runtime.time.Clock monotonicClock
com.google.firestore.v1.StructuredQuery: int FROM_FIELD_NUMBER
androidx.browser.customtabs.CustomTabsIntent$Builder: android.content.Intent mIntent
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNKNOWN
com.google.firestore.v1.DocumentTransform: int DOCUMENT_FIELD_NUMBER
com.google.firebase.messaging.Metadata: java.lang.String appVersionCode
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api$ClientKey zab
io.grpc.internal.CallCredentialsApplyingTransportFactory: io.grpc.internal.ClientTransportFactory delegate
com.google.android.gms.common.internal.BaseGmsClient: int zzi
com.google.firestore.v1.StructuredQuery: int START_AT_FIELD_NUMBER
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor descriptor
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.MethodCallHandlerImpl methodCallHandler
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
com.tekartik.sqflite.SqflitePlugin$7: com.tekartik.sqflite.Database val$database
io.grpc.okhttp.OkHttpClientTransport: boolean keepAliveWithoutCalls
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziz zzb
com.google.firestore.v1.Value: int BOOLEAN_VALUE_FIELD_NUMBER
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: java.util.Map pluginConstants
kotlin.ranges.IntProgressionIterator: int next
com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.common.collect.ImmutableMap$Builder: int size
com.google.android.gms.location.LocationRequest: long zzaf
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zza
androidx.fragment.app.FragmentTransition$3: android.graphics.Rect val$epicenter
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
io.grpc.internal.Rescheduler$FutureRunnable: io.grpc.internal.Rescheduler this$0
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Transformer transformer
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
com.google.protobuf.CodedInputStream$ArrayDecoder: int startPos
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzb
com.lyokone.location.BackgroundNotification: androidx.core.app.NotificationCompat$Builder builder
io.grpc.Context: io.grpc.Context ROOT
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType message_type_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.common.collect.ByFunctionOrdering: com.google.common.base.Function function
com.google.android.gms.internal.firebase-auth-api.zzog: java.util.Collection zza
io.grpc.LoadBalancerRegistry: java.util.logging.Logger logger
io.grpc.LoadBalancer$PickResult: io.grpc.Status status
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzg
com.google.protobuf.Internal: java.nio.charset.Charset UTF_8
io.flutter.plugins.urllauncher.WebViewActivity: android.content.IntentFilter closeIntentFilter
com.google.android.gms.internal.firebase-auth-api.zzun: com.google.android.gms.internal.firebase-auth-api.zzre zza
com.google.android.gms.internal.firebase-auth-api.zzln: int zze
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions options
com.google.firebase.auth.internal.zzar: com.google.android.gms.tasks.TaskCompletionSource zza
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
io.grpc.internal.ClientCallImpl$1ClosedByContext: io.grpc.ClientCall$Listener val$finalObserver
io.grpc.okhttp.internal.OptionalMethod: java.lang.String methodName
com.google.android.gms.internal.safetynet.zzk$zza: com.google.android.gms.safetynet.zza zzae
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zze
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.firestore.GeoPoint: double longitude
com.google.android.gms.internal.firebase-auth-api.zzbe: com.google.android.gms.internal.firebase-auth-api.zzbe zzc
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.auth.User initialUser
io.flutter.plugins.urllauncher.UrlLauncher: android.content.Context applicationContext
com.google.protobuf.SmallSortedMap$EntryIterator: int pos
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory pictures
io.grpc.okhttp.internal.framed.Hpack$Writer: int maxDynamicTableByteCount
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zaae zaq
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector DEFAULT_INSTANCE
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: boolean sslEnabled
io.grpc.Metadata: int size
com.google.android.gms.internal.firebase-auth-api.zzx: java.util.logging.Logger zza
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor SDKPLATFORM_DESCRIPTOR
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.google.android.gms.internal.firebase-auth-api.zzeo: com.google.android.gms.internal.firebase-auth-api.zzmp zza
okio.Base64: byte[] MAP
com.google.firebase.firestore.remote.FirestoreChannel: io.grpc.Metadata$Key X_GOOG_API_CLIENT_HEADER
com.google.android.gms.internal.firebase-auth-api.zzbw: java.util.concurrent.ConcurrentMap zza
io.flutter.plugins.googlemaps.GoogleMapController: android.content.Context context
com.google.firebase.installations.GetAuthTokenListener: com.google.firebase.installations.Utils utils
com.google.firebase.components.CycleDetector$Dep: boolean set
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firebase$firestore$core$FieldFilter$Operator
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp readTime_
com.google.android.gms.tasks.zzh: java.lang.Object zzb
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.Attributes attrs
io.flutter.plugins.googlemaps.CirclesController: float density
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
com.google.firestore.v1.DocumentDelete: int DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase NO_DOCUMENT
io.grpc.internal.ManagedChannelImpl: io.grpc.Status SHUTDOWN_STATUS
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerImpl: io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl flutterApi
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.View targetView
io.grpc.internal.ManagedChannelImpl: boolean retryEnabled
com.google.android.gms.common.api.internal.zza: com.google.android.gms.common.api.internal.LifecycleCallback zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzd
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder next
com.google.protobuf.FieldType: int id
com.google.android.gms.cloudmessaging.CloudMessage: android.content.Intent zza
androidx.core.app.NotificationCompat$Builder: boolean mColorized
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzx
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzadc zzg
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.protobuf.TextFormatEscaper$1: com.google.protobuf.ByteString val$input
com.google.android.gms.internal.firebase-auth-api.zzxl: java.lang.String zzb
io.grpc.okhttp.OkHttpChannelBuilder: javax.net.SocketFactory socketFactory
com.google.firebase.messaging.NotificationParams: android.os.Bundle data
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.reflect.Constructor $constructor$inlined
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: int offset
com.google.android.gms.internal.firebase-auth-api.zzkd: int zzf
com.google.firebase.firestore.remote.TargetState: int outstandingResponses
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew[] zzj
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator LESS_THAN
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String databaseName
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApiCodec INSTANCE
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.KeepAliveManager keepAliveManager
io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls
okio.Timeout: boolean hasDeadline
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] zzf
io.grpc.internal.ClientCallImpl: boolean callExecutorIsDirect
com.google.firebase.auth.internal.zzp: java.lang.String zza
io.grpc.okhttp.OkHttpClientTransport$3: io.grpc.okhttp.OkHttpClientTransport this$0
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: io.perfmark.Link val$link
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState NONE
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String locale
com.google.android.gms.stats.WakeLock: java.lang.String zzq
com.google.firebase.messaging.TopicsSyncTask: android.content.Context context
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzk
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: boolean pendingBufferHasEndOfStream
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.firebase.auth.AuthCredential zzp
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
com.google.firebase.firestore.index.IndexByteEncoder: com.google.firebase.firestore.index.OrderedCodeWriter orderedCode
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_0
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap servers
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: java.lang.Long requestUptimeMs
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: io.grpc.Status val$savedStatus
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zze
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory originalTransportFactory
io.grpc.internal.InternalSubchannel$5: io.grpc.internal.InternalSubchannel this$0
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String fingerprint
com.google.android.gms.internal.firebase-auth-api.zzwt: boolean zza
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.lang.String url
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature CUSTOM_MANAGERS
io.grpc.internal.ExponentialBackoffPolicy: long maxBackoffNanos
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.protobuf.Parser PARSER
com.google.firebase.auth.GoogleAuthCredential: java.lang.String zzb
com.google.firestore.v1.CommitResponse: com.google.protobuf.Internal$ProtobufList writeResults_
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction DESCENDING
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType BLUETOOTH
com.google.firebase.firestore.bundle.BundleMetadata: long totalBytes
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.CharSequence mBigText
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool balancerRpcExecutorPool
io.grpc.HttpConnectProxiedSocketAddress: java.net.SocketAddress proxyAddress
androidx.core.app.Person: boolean mIsBot
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase TIMESTAMP_VALUE
com.google.firebase.firestore.local.SQLitePersistence: android.database.sqlite.SQLiteTransactionListener transactionListener
io.grpc.internal.ManagedChannelImpl: java.lang.String authorityOverride
io.grpc.internal.ManagedChannelImpl$1NotifyStateChanged: java.lang.Runnable val$callback
io.grpc.NameResolver$Args: io.grpc.NameResolver$ServiceConfigParser serviceConfigParser
io.grpc.internal.RetriableStream$Substream: boolean closed
com.google.android.gms.internal.firebase-auth-api.zzhz: java.util.ArrayList zza
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode NO_ERROR
io.grpc.internal.ScParser: int maxHedgedAttemptsLimit
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$exitTransition
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
com.google.android.gms.auth.api.phone.SmsRetrieverClient: com.google.android.gms.common.api.Api zzc
com.google.firebase.auth.internal.zzav: com.google.android.gms.tasks.TaskCompletionSource zzc
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: int tag
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.runtime.TransportContext transportContext
okio.Okio$2: okio.Timeout val$timeout
io.grpc.Metadata$Key: java.lang.String originalName
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.RetriableStream$Throttle retryThrottling
com.google.android.gms.common.api.Status: int zzb
com.google.firebase.auth.PhoneAuthOptions: java.lang.Long zzb
com.google.firebase.firestore.proto.Target: int DOCUMENTS_FIELD_NUMBER
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider workSchedulerProvider
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: byte[] extras
com.google.firestore.v1.Target: int targetId_
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
com.google.android.gms.internal.firebase-auth-api.zzqk: java.lang.String zzb
io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String defaultPolicy
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzh
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.google.android.gms.common.api.internal.ListenerHolder: java.lang.Object zab
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer notificationCount
com.lyokone.location.BackgroundNotification: java.lang.String channelId
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor LOGEVENT_DESCRIPTOR
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key Key
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source Argument
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzez zzb
io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy$Provider backoffPolicyProvider
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String measurementId
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index DEFAULT_INSTANCE
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_INTERNAL_ERROR
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: long value
com.tekartik.sqflite.SqflitePlugin$4: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase OPERATION_NOT_SET
io.grpc.internal.RetriableStream$1CommitTask: java.util.Collection val$savedDrainedSubstreams
com.google.android.gms.internal.firebase-auth-api.zztl: com.google.android.gms.internal.firebase-auth-api.zztx zzb
io.grpc.internal.ManagedChannelImpl$RealChannel$2: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzp
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelHostApiCodec INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zzc
com.google.android.gms.internal.firebase-auth-api.zzaq: java.io.OutputStream zza
com.google.android.gms.internal.firebase-auth-api.zzzt: java.lang.String zzb
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.Attributes attrs
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.GoogleApiAvailability zal
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header METHOD_HEADER
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzza: java.lang.String zzb
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
io.grpc.internal.ManagedChannelImpl: long perRpcBufferLimit
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
io.grpc.okhttp.OkHttpClientStream: java.lang.String userAgent
com.google.firebase.auth.ActionCodeSettings: java.lang.String zza
io.grpc.internal.GrpcUtil: com.google.common.base.Splitter ACCEPT_ENCODING_SPLITTER
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] $VALUES
com.google.android.gms.maps.model.TileOverlay: com.google.android.gms.internal.maps.zzag zza
androidx.core.app.NotificationCompat$Action: boolean mShowsUserInterface
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.lang.Integer code
com.google.firebase.firestore.model.mutation.FieldMask: com.google.firebase.firestore.model.mutation.FieldMask EMPTY
com.google.android.gms.common.api.internal.zact: com.google.android.gms.common.api.internal.zacs zah
io.grpc.InternalChannelz: io.grpc.InternalChannelz INSTANCE
com.google.protobuf.CodedInputStream$StreamDecoder: byte[] buffer
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] $VALUES
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.IGmsServiceBroker zzr
com.google.firestore.bundle.BundledQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.android.gms.common.api.GoogleApi: int zah
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzc
com.google.android.gms.internal.firebase-auth-api.zzadx: boolean zzc
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext objEncoderCtx
io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector NOOP_PROXY_DETECTOR
io.grpc.okhttp.OkHttpClientTransport: boolean goAwaySent
androidx.core.R$id: int accessibility_custom_action_16
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: java.lang.Boolean isAutomaticDataCollectionEnabled
com.google.protobuf.CodedOutputStream$ArrayEncoder: int position
com.google.firebase.firestore.util.Util: com.google.android.gms.tasks.Continuation VOID_ERROR_TRANSFORMER
com.google.firestore.v1.StructuredQuery$FieldFilter: int VALUE_FIELD_NUMBER
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean isLocked
com.google.firestore.v1.Cursor: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzry: android.os.Parcelable$Creator CREATOR
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: io.grpc.okhttp.OkHttpClientTransport this$0
com.google.android.gms.internal.firebase-auth-api.zzqa: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
com.google.firebase.messaging.TopicOperation: java.lang.String serializedString
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat COMBINED
androidx.core.app.NotificationCompat$Builder: long mTimeout
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask updateMask_
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoder DEFAULT_MAP_ENCODER
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
com.google.firebase.messaging.SharedPreferencesQueue: boolean bulkOperation
com.google.android.gms.internal.firebase-auth-api.zzjl: int zze
com.google.protobuf.MessageSetSchema: boolean hasExtensions
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.SynchronizationContext$ScheduledHandle delayedShutdownTask
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String zak
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Marshaller requestMarshaller
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED64
io.flutter.plugins.googlemaps.CirclesController: com.google.android.gms.maps.GoogleMap googleMap
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.ConcurrentMap zzf
com.google.android.gms.common.api.internal.zabn: com.google.android.gms.common.api.internal.zabq zab
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite defaultInstance
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.firebase.firestore.FirestoreMultiDbComponent: com.google.firebase.FirebaseApp app
androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl
com.google.android.gms.internal.firebase-auth-api.zzadg: com.google.android.gms.internal.firebase-auth-api.zzaef zzb
okio.Base64: byte[] URL_MAP
com.google.android.gms.maps.model.Polyline: com.google.android.gms.internal.maps.zzad zza
io.grpc.Attributes$Key: java.lang.String debugString
com.google.firebase.internal.DataCollectionConfigStorage: android.content.SharedPreferences sharedPreferences
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zza
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: android.app.Activity activity
androidx.collection.ArraySet: java.lang.Object[] mArray
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long eventCleanUpAge
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
com.google.firebase.firestore.model.SnapshotVersion: com.google.firebase.Timestamp timestamp
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: java.lang.String app_namespace_
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzp
com.google.android.gms.signin.SignInOptions: boolean zae
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.database.collection.ImmutableSortedMap docVersions
com.google.firebase.auth.internal.zzb: com.google.firebase.auth.internal.zzbm zzc
com.google.firebase.messaging.SharedPreferencesQueue: android.content.SharedPreferences sharedPreferences
io.grpc.internal.OobChannel: java.util.logging.Logger log
io.grpc.internal.AbstractClientStream$TransportState: boolean listenerClosed
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
io.grpc.okhttp.OkHttpClientStream: boolean useGet
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zze
com.google.android.datatransport.runtime.TransportImpl: com.google.android.datatransport.Encoding payloadEncoding
com.google.android.gms.internal.firebase-auth-api.zzkg: int zze
io.grpc.internal.RetriableStream$RetryPlan: boolean shouldRetry
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error PROTOCOL_ERROR
io.grpc.internal.ManagedChannelServiceConfig: java.lang.Object loadBalancingConfig
io.grpc.MethodDescriptor$Builder: boolean safe
io.grpc.HttpConnectProxiedSocketAddress: java.lang.String username
io.grpc.internal.RetriableStream: io.grpc.Status CANCELLED_BECAUSE_COMMITTED
com.google.android.gms.internal.firebase-auth-api.zzxz: boolean zzf
androidx.core.app.NotificationCompat$Builder: android.app.Notification mPublicVersion
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus OK
androidx.fragment.app.BackStackRecord: int mIndex
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
io.grpc.internal.DnsNameResolver: io.grpc.SynchronizationContext syncContext
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.firestore.bundle.BundledQuery: java.lang.String parent_
com.google.firebase.auth.internal.zzbd: java.util.List zza
com.google.android.gms.common.api.internal.zal: int zad
com.google.android.gms.internal.firebase-auth-api.zzay: com.google.android.gms.internal.firebase-auth-api.zzga zza
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level WARN
com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.zzw zza
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: javax.inject.Provider packageNameProvider
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaat zzd
com.google.android.gms.internal.firebase-auth-api.zzxv: java.lang.String zza
io.grpc.okhttp.internal.framed.Huffman: byte[] CODE_LENGTHS
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.InternalSubchannel subchannel
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzwu: com.google.android.gms.tasks.TaskCompletionSource zzc
io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector: io.grpc.internal.ManagedChannelServiceConfig config
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level NONE
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] $VALUES
com.google.firebase.FirebaseOptions: java.lang.String applicationId
com.squareup.okhttp.Headers: java.lang.String[] namesAndValues
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl: io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientCreator webChromeClientCreator
com.google.android.gms.tasks.zzaf: int zzd
io.grpc.internal.SerializeReentrantCallsDirectExecutor: java.util.ArrayDeque taskQueue
com.google.firebase.messaging.ImageDownload: com.google.android.gms.tasks.Task task
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: com.google.firebase.firestore.local.IndexManager indexManager
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.CompressorRegistry DEFAULT_COMPRESSOR_REGISTRY
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
com.google.android.gms.stats.zza: com.google.android.gms.stats.WakeLock zza
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_LOCAL_VERSION
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType FLOAT
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.scheduling.persistence.EventStore store
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.flutter.plugins.firebase.firestore.streamhandler.DocumentSnapshotsStreamHandler: com.google.firebase.firestore.ListenerRegistration listenerRegistration
com.google.firebase.firestore.proto.MaybeDocument: boolean hasCommittedMutations_
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Initial
com.google.firebase.messaging.Store$Token: long REFRESH_PERIOD_MILLIS
androidx.collection.MapCollections$ArrayIterator: int mIndex
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzi
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.RetriableStream$Throttle val$throttle
com.google.firebase.auth.internal.zzaq: com.google.android.gms.tasks.TaskCompletionSource zza
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
com.google.firebase.firestore.remote.RemoteEvent: java.util.Set resolvedLimboDocuments
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString left
com.google.android.gms.internal.firebase-auth-api.zzvo: com.google.android.gms.internal.firebase-auth-api.zzpw zza
com.google.android.gms.internal.firebase-auth-api.zzxy: com.google.android.gms.common.logging.Logger zzb
com.google.android.gms.common.internal.MethodInvocation: long zae
com.google.android.gms.internal.firebase-auth-api.zzxz: long zzg
com.google.firestore.v1.Cursor: int BEFORE_FIELD_NUMBER
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp readTime_
io.grpc.DecompressorRegistry$DecompressorInfo: boolean advertised
com.google.firebase.encoders.FieldDescriptor: java.lang.String name
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: java.lang.Iterable events
io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState state
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
com.google.firebase.firestore.proto.Target: int targetId_
com.google.android.gms.tasks.zzv: java.util.List zza
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation UBYTE_OP
io.grpc.stub.AbstractAsyncStub: boolean $assertionsDisabled
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: long currentSequenceNumber
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzaew: java.lang.Object zzk
com.google.firebase.firestore.local.SQLiteIndexManager: boolean started
androidx.core.R$id: int accessibility_custom_action_3
com.google.android.gms.internal.firebase-auth-api.zzqk: android.os.Parcelable$Creator CREATOR
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.firebase.inject.Provider storageProvider
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.google.android.gms.common.api.internal.zacb: com.google.android.gms.common.api.internal.ListenerHolder$Notifier zab
com.google.firebase.auth.FacebookAuthCredential: java.lang.String zza
com.google.android.gms.common.internal.GmsClientSupervisor: int zzb
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
io.grpc.okhttp.OkHttpWritableBuffer: okio.Buffer buffer
io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.FirebaseApp firebaseApp
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal CREATE_WEB_MESSAGE_CHANNEL
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.MethodCallHandlerImpl methodCallHandler
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
io.grpc.internal.RetriableStream$FutureCanceller: java.lang.Object lock
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzxi: com.google.android.gms.internal.firebase-auth-api.zzxn zza
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzh
com.google.firebase.installations.Utils: long AUTH_TOKEN_EXPIRATION_BUFFER_IN_SECS
com.google.firebase.firestore.local.LruGarbageCollector$Params: int percentileToCollect
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
com.google.android.gms.location.LocationServices: com.google.android.gms.location.GeofencingApi GeofencingApi
com.google.firebase.firestore.local.MemoryPersistence: java.util.Map overlays
com.google.android.gms.internal.firebase-auth-api.zzzu: java.lang.String zza
io.flutter.plugins.androidintent.AndroidIntentPlugin: io.flutter.plugins.androidintent.MethodCallHandlerImpl impl
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzg
com.google.protobuf.UnmodifiableLazyStringList$1: java.util.ListIterator iter
io.grpc.internal.DelayedClientCall$DelayedListener$1: io.grpc.Metadata val$headers
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.SharedPreferencesQueue topicOperationsQueue
com.google.firebase.components.ComponentRuntime: java.util.Map components
androidx.fragment.app.Fragment: int mFragmentId
io.grpc.NameResolverRegistry: java.util.LinkedHashSet allProviders
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.plugins.googlemaps.GoogleMapController: boolean disposed
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zze
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory notifications
com.google.android.gms.internal.firebase-auth-api.zzacj: com.google.android.gms.internal.firebase-auth-api.zzacj zzb
com.google.firestore.v1.ListenRequest: com.google.protobuf.Parser PARSER
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult NO_RESULT
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.grpc.okhttp.OutboundFlowController$WriteStatus: int numWrites
com.google.android.gms.common.api.internal.BasePendingResult: java.util.concurrent.CountDownLatch zaf
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: com.google.firebase.firestore.util.Listener changeListener
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler
com.google.firebase.auth.zze: java.lang.String zzf
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.MethodDescriptor method
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
io.grpc.Grpc: io.grpc.Attributes$Key TRANSPORT_ATTR_SSL_SESSION
io.grpc.internal.RetriableStream$2: io.grpc.internal.RetriableStream this$0
com.google.android.gms.internal.firebase-auth-api.zzrc: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.RemoteMessage$Notification: boolean sticky
io.grpc.internal.RetriableStream$1AuthorityEntry: java.lang.String val$authority
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.net.Uri zah
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.Class clazz
com.google.firebase.firestore.core.SyncEngine$LimboResolution: boolean receivedDocument
com.google.android.gms.tasks.zzp: com.google.android.gms.tasks.zzw zzc
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.ProtoSyntax syntax
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderTail
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
com.google.common.base.CharMatcher$Is: char match
com.google.protobuf.JavaType: java.lang.Class type
io.grpc.okhttp.OkHttpChannelBuilder: long AS_LARGE_AS_INFINITE
com.google.common.math.LongMath: byte[] maxLog10ForLeadingZeros
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator GREATER_THAN_OR_EQUAL
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.errors.ErrorCallback errorCallback
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzh
com.google.firebase.firestore.remote.TargetChange: boolean current
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.core.EventManager eventManager
com.google.android.gms.common.util.Hex: char[] zza
com.google.firestore.v1.StructuredQuery$CompositeFilter: int op_
com.google.android.gms.common.internal.zad: android.content.Intent zaa
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zaf
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.CallOptions callOptions
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status
io.grpc.NameResolver$ConfigOrError: boolean $assertionsDisabled
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mRemoteInputs
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.ThreadFactory val$backingThreadFactory
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier DEFAULT
com.google.firebase.messaging.reporting.MessagingClientEvent: long campaign_id_
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.time.Clock uptimeClock
io.grpc.NameResolver$Args: io.grpc.SynchronizationContext syncContext
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: java.util.Comparator COMPARATOR
com.google.firebase.firestore.remote.AbstractStream: io.grpc.ClientCall call
com.google.firebase.auth.zzo: java.util.concurrent.Executor zzf
io.grpc.internal.JndiResourceResolverFactory: java.lang.Throwable JNDI_UNAVAILABILITY_CAUSE
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType GROUP
com.google.firestore.v1.BatchGetDocumentsRequest: int TRANSACTION_FIELD_NUMBER
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType NPN
io.flutter.plugins.pathprovider.PathProviderPlugin: android.content.Context context
com.google.common.collect.RegularImmutableMap$EntrySet$1: com.google.common.collect.RegularImmutableMap$EntrySet this$0
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String zac
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
com.google.android.gms.internal.firebase-auth-api.zzeq: int zze
io.grpc.internal.DelayedStream$7: io.grpc.internal.DelayedStream this$0
com.google.common.base.MoreObjects$ToStringHelper: boolean omitNullValues
io.flutter.plugins.firebase.messaging.ContextHolder: android.content.Context applicationContext
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.HashMap firestoreInstanceCache
io.grpc.internal.ScParser: boolean retryEnabled
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig EMPTY_SERVICE_CONFIG
io.grpc.internal.DelayedClientCall: boolean $assertionsDisabled
com.google.firestore.v1.Value: int GEO_POINT_VALUE_FIELD_NUMBER
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: com.google.android.datatransport.cct.internal.AndroidClientInfo androidClientInfo
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_AES_128_CCM_8_SHA256
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
com.google.android.gms.maps.model.TileOverlayOptions: float zzd
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.grpc.internal.InternalSubchannel$TransportListener: io.grpc.internal.InternalSubchannel this$0
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException: java.lang.String message
io.grpc.internal.ManagedChannelImplBuilder: long IDLE_MODE_DEFAULT_TIMEOUT_MILLIS
com.google.android.gms.internal.firebase-auth-api.zzzs: java.util.List zzs
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: java.util.Map objectEncoders
io.grpc.internal.AbstractClientStream$TransportState: boolean statusReported
com.google.android.gms.cloudmessaging.zzx: com.google.android.gms.cloudmessaging.zzx zza
io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue DEFAULT_INSTANCE
com.google.firebase.firestore.proto.MaybeDocument: int DOCUMENT_FIELD_NUMBER
com.google.protobuf.IterableByteBufferInputStream: int currentIndex
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
com.google.android.gms.internal.firebase-auth-api.zzsx: com.google.android.gms.internal.firebase-auth-api.zzsy zzb
io.grpc.internal.MessageDeframer: io.grpc.internal.TransportTracer transportTracer
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod GET_NPN_SELECTED_PROTOCOL
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers
io.grpc.InternalChannelz: boolean $assertionsDisabled
androidx.browser.browseractions.BrowserActionsFallbackMenuView: int mBrowserActionsMenuMinPaddingPx
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentDownloadListener
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: long requestTimeMs
com.google.android.gms.internal.firebase-auth-api.zztu: java.lang.String zza
com.google.firebase.firestore.proto.Target: int TARGET_ID_FIELD_NUMBER
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
com.google.android.gms.internal.firebase-auth-api.zzabf: boolean zzb
com.google.firebase.firestore.DocumentChange: int oldIndex
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.components.ComponentContainer delegateContainer
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
com.google.protobuf.UnsafeUtil: java.lang.Class MEMORY_CLASS
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.lang.String transportName
com.google.firebase.firestore.core.DocumentViewChangeSet: java.util.TreeMap changes
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentWebChromeClient
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ChannelTracer subchannelTracer
com.squareup.okhttp.Protocol: java.lang.String protocol
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy best
io.flutter.plugins.urllauncher.UrlLauncher: android.app.Activity activity
io.grpc.internal.InternalSubchannel$8: io.grpc.internal.InternalSubchannel this$0
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzaau zze
com.google.android.gms.internal.firebase-auth-api.zzvw: java.lang.String zzb
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: long bulk_id_
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType DOUBLE
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: java.util.concurrent.Executor executor
io.grpc.internal.DelayedClientCall: java.util.List pendingRunnables
com.google.android.gms.internal.firebase-auth-api.zzmk: java.lang.String zze
androidx.fragment.app.Fragment: int mContainerId
com.google.android.gms.common.internal.GetServiceRequest: android.os.IBinder zze
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.SetOptions MERGE_ALL_FIELDS
com.google.firestore.bundle.BundledQuery$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzpu: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.local.TargetData: long sequenceNumber
io.grpc.internal.RetriableStream$Sublistener$3: io.grpc.internal.RetriableStream$Sublistener this$1
com.google.firebase.messaging.WithinAppServiceConnection: android.content.Context context
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle shutdownDueToUpdateTask
androidx.fragment.app.Fragment: android.view.View mView
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getWriteMethod
androidx.fragment.app.FragmentManagerImpl$5: android.view.ViewGroup val$container
io.flutter.plugins.webviewflutter.InputAwareWebView: io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView proxyAdapterView
io.grpc.internal.ManagedChannelImpl: java.lang.String target
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.protobuf.Parser PARSER
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.Rescheduler idleTimer
com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher$None INSTANCE
com.google.android.gms.common.data.DataHolder: android.os.Bundle zaj
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState HAS_LOCAL_MUTATIONS
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.LifecycleProvider lifecycleProvider
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.Executor taskExecutor
com.google.android.gms.common.api.internal.zzb: java.util.WeakHashMap zza
com.google.android.gms.internal.firebase-auth-api.zzadx: int zzb
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase FILTERTYPE_NOT_SET
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: com.google.android.gms.common.internal.BaseGmsClient zza
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Healthy
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
com.google.android.gms.internal.firebase-auth-api.zzzl: java.lang.String zza
com.google.protobuf.UnsafeUtil: long BUFFER_ADDRESS_OFFSET
com.google.android.gms.tasks.zzr: java.lang.Object zza
com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String country
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String locale
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.NameResolver$ResolutionResult val$resolutionResult
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.OptionalMethod setAlpnProtocols
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider EMPTY_PROVIDER
androidx.fragment.app.Fragment: int mState
io.grpc.Metadata: java.util.logging.Logger logger
io.grpc.okhttp.OkHttpClientTransport: java.net.InetSocketAddress address
com.google.common.io.BaseEncoding$Alphabet: int bytesPerChunk
com.google.android.gms.internal.firebase-auth-api.zzas: byte[] zza
com.google.android.gms.common.api.internal.zal: androidx.collection.ArrayMap zaa
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: android.content.Context applicationContext
com.google.firebase.FirebaseOptions$Builder: java.lang.String gaTrackingId
com.google.android.gms.maps.model.CustomCap: float refWidth
com.google.firebase.firestore.LoadBundleTask$ManagedListener: java.util.concurrent.Executor executor
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zza
com.google.firebase.firestore.proto.UnknownDocument: int NAME_FIELD_NUMBER
com.google.android.gms.common.internal.zzd: com.google.android.gms.common.internal.BaseGmsClient zza
com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$DescendingEntrySet lazyDescendingEntrySet
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
com.google.firebase.installations.Utils: java.util.regex.Pattern API_KEY_FORMAT
io.grpc.EquivalentAddressGroup: io.grpc.Attributes attrs
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState[] $VALUES
com.google.android.gms.dynamic.zac: android.os.Bundle zaa
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object value
com.google.android.gms.tasks.zzi: com.google.android.gms.tasks.zzj zzb
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.remote.ConnectivityMonitor connectivityMonitor
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
io.grpc.internal.CallTracer: io.grpc.internal.TimeProvider timeProvider
com.google.android.gms.maps.model.LatLng: double longitude
androidx.core.app.NotificationCompat$Style: boolean mSummaryTextSet
com.google.android.gms.internal.firebase-auth-api.zzaa: com.google.android.gms.internal.firebase-auth-api.zzn zza
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.firebase-auth-api.zzpj: java.lang.ThreadLocal zza
com.google.protobuf.CodedInputStream$ArrayDecoder: boolean immutable
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype TD_SCDMA
io.grpc.Grpc: io.grpc.Attributes$Key TRANSPORT_ATTR_REMOTE_ADDR
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] $VALUES
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED64_LIST_PACKED
com.google.firebase.messaging.Metadata: int iidImplementation
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzb
com.google.firebase.firestore.core.Transaction: boolean committed
io.grpc.okhttp.internal.Platform: io.grpc.okhttp.internal.Platform PLATFORM
io.grpc.internal.RetriableStream$Throttle: int maxTokens
io.grpc.internal.DelayedClientCall$DelayedListener$3: io.grpc.Status val$status
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: boolean forceRefresh
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
com.google.android.gms.common.util.Hex: char[] zzb
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase ORDER
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_SUCCESS
com.google.android.gms.maps.model.Tile: int height
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: io.grpc.CompositeCallCredentials this$0
com.google.android.gms.common.api.internal.zact: com.google.android.gms.common.api.Api$AbstractClientBuilder zaa
okio.AsyncTimeout: okio.AsyncTimeout next
com.google.firestore.v1.WriteResponse: int STREAM_TOKEN_FIELD_NUMBER
com.google.android.gms.common.util.DefaultClock: com.google.android.gms.common.util.DefaultClock zza
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
com.google.android.gms.common.api.GoogleApi$Settings: com.google.android.gms.common.api.internal.StatusExceptionMapper zaa
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.MessageFramer this$0
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: byte[] bytes
io.grpc.internal.SharedResourceHolder$Instance: java.lang.Object payload
com.google.firebase.firestore.core.FieldFilter$1: int[] $SwitchMap$com$google$firebase$firestore$core$FieldFilter$Operator
com.google.android.gms.location.LocationRequest: long zzaw
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String analytics_label_
com.google.firebase.firestore.local.SQLitePersistence$Query: java.lang.String sql
io.grpc.internal.RetriableStream$FutureCanceller: java.util.concurrent.Future future
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.auth.CredentialsProvider appCheckProvider
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
com.google.android.gms.safetynet.zzd: int zzh
com.google.firebase.firestore.util.CustomClassMapper: java.util.concurrent.ConcurrentMap mappers
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
com.google.android.gms.common.api.internal.zaad: java.util.Map zab
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_CONTENT_ACCESS
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_PRIVACY_POLICY_URL
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
com.google.android.gms.internal.firebase-auth-api.zzadl: java.lang.Object[] zzb
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type ADDED
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: int length
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: boolean immutable
com.google.protobuf.JavaType: com.google.protobuf.JavaType FLOAT
com.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzc
com.google.android.gms.internal.firebase-auth-api.zzaeg: int zze
com.google.protobuf.CodedOutputStream: boolean serializationDeterministic
com.google.android.gms.maps.model.TileProvider: com.google.android.gms.maps.model.Tile NO_TILE
com.tekartik.sqflite.SqflitePlugin: android.os.Handler handler
com.google.firebase.firestore.local.LruGarbageCollector$Results: int documentsRemoved
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzb
io.grpc.okhttp.OkHttpClientTransport: com.google.common.util.concurrent.SettableFuture connectedFuture
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.google.android.gms.common.internal.zad: int zac
io.grpc.Status$Code: io.grpc.Status$Code INVALID_ARGUMENT
com.google.android.gms.internal.firebase-auth-api.zzabx: java.util.Map zzb
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzaay: int zze
com.google.android.gms.common.api.internal.TaskApiCall: boolean zab
com.google.common.base.Platform: com.google.common.base.PatternCompiler patternCompiler
kotlin.jvm.internal.FunctionReference: int flags
io.grpc.LoadBalancer: io.grpc.Attributes$Key ATTR_HEALTH_CHECKING_CONFIG
com.google.firestore.v1.Precondition: java.lang.Object conditionType_
com.google.firebase.FirebaseApp$UserUnlockReceiver: java.util.concurrent.atomic.AtomicReference INSTANCE
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: int number_
com.google.firebase.firestore.core.Query: long limit
io.grpc.Status$Code: io.grpc.Status$Code CANCELLED
com.google.android.gms.internal.firebase-auth-api.zzbq: java.lang.Object zza
com.google.android.gms.common.api.internal.zace: long zac
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] $VALUES
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo androidClientInfo
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_1
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator GREATER_THAN
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.remote.FirestoreChannel firestoreChannel
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api$ClientKey zaa
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.IndexBackfiller indexBackfiller
androidx.window.R$id: int locale
com.google.android.gms.common.internal.MethodInvocation: int zai
com.google.gson.stream.JsonReader: int lineNumber
com.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.Object zzb
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.remote.AbstractStream$IdleTimeoutRunnable idleTimeoutRunnable
com.google.android.gms.tasks.zzaf: java.lang.Object zza
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error REFUSED_STREAM
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzb
com.google.android.gms.common.api.internal.GoogleApiManager: java.lang.Object zac
com.google.android.gms.maps.model.TileOverlayOptions: float zzf
io.grpc.internal.ApplicationThreadDeframerListener$3: io.grpc.internal.ApplicationThreadDeframerListener this$0
io.grpc.internal.DelayedClientTransport$3: io.grpc.internal.DelayedClientTransport this$0
androidx.fragment.app.FragmentTransaction: int mEnterAnim
com.google.common.collect.RegularImmutableMap$EntrySet: int keyOffset
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction ASCENDING
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap mLargeIcon
com.google.android.gms.location.zzaj: int zzar
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2
com.google.android.gms.location.LocationSettingsRequest: boolean zzbh
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledFuture shutdownFuture
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
com.google.android.gms.internal.firebase-auth-api.zzxv: android.os.Parcelable$Creator CREATOR
com.tekartik.sqflite.SqflitePlugin$1: com.tekartik.sqflite.SqflitePlugin this$0
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType Current
io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY
com.google.android.gms.internal.firebase-auth-api.zzsi: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.grpc.internal.ManagedChannelImpl: java.lang.Object pendingCallsInUseObject
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType INT
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zzc
io.grpc.internal.Http2Ping$1: long val$roundTripTimeNanos
io.grpc.android.AndroidChannelBuilder: java.lang.Class OKHTTP_CHANNEL_BUILDER_CLASS
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.lang.Iterable input
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzW
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzcd: java.lang.String zza
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.Metadata metadata
com.google.android.gms.common.internal.zzn: int zze
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat mBigLargeIcon
io.grpc.internal.Http2Ping: long data
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext childContext
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SHOULD_OVERRIDE_WITH_REDIRECTS
io.grpc.internal.DnsNameResolver$Resolve: io.grpc.NameResolver$Listener2 savedListener
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.Map fields
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
androidx.fragment.app.Fragment: boolean mIsCreated
com.baseflow.geolocator.errors.ErrorCodes$1: int[] $SwitchMap$com$baseflow$geolocator$errors$ErrorCodes
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzn
com.google.protobuf.FieldSet$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
io.grpc.internal.RetryPolicy: double backoffMultiplier
com.google.firebase.auth.zzi: com.google.firebase.auth.FirebaseAuth zzb
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: java.lang.String logSourceName
kotlin.KotlinVersion: int minor
com.google.protobuf.CodedInputStream: int recursionDepth
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: com.google.protobuf.ByteString resumeToken
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder INSTANCE
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.grpc.internal.InsightBuilder: java.util.ArrayList buffer
com.google.android.gms.base.R$string: int common_google_play_services_enable_button
androidx.fragment.app.Fragment$AnimationInfo: int mStateAfterAnimating
com.google.firebase.components.Lazy: com.google.firebase.inject.Provider provider
com.google.android.gms.maps.model.MarkerOptions: float zzl
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApi$1: java.util.Map val$wrapped
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId channelRef
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
io.grpc.InternalChannelz: java.util.logging.Logger log
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.logging.Logger zza
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.firebase-auth-api.zzxg: long zzb
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzacg zzab
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzmp zzf
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp localWriteTime_
kotlinx.coroutines.channels.AbstractChannel$Itr: kotlinx.coroutines.channels.AbstractChannel channel
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.google.android.gms.common.internal.zzo: java.util.Map zzb
io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference configSelector
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzww: java.util.concurrent.ExecutorService zzb
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: com.google.firebase.encoders.FieldDescriptor LOGSOURCEMETRICS_DESCRIPTOR
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1
io.grpc.internal.RetriableStream$Sublistener$2: io.grpc.Status val$status
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int code
com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream output
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: java.lang.String app_namespace_
com.google.firebase.firestore.remote.TargetState$1: int[] $SwitchMap$com$google$firebase$firestore$core$DocumentViewChange$Type
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue workerQueue
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.firebase.messaging.GmsRpc: com.google.firebase.installations.FirebaseInstallationsApi firebaseInstallations
com.google.protobuf.ProtobufArrayList: int size
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
com.google.firebase.firestore.remote.AbstractStream: long closeCount
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzro: boolean zzi
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO
androidx.core.app.NotificationCompat$Builder: int mNumber
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zzc
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
io.grpc.okhttp.OkHttpChannelBuilder: int flowControlWindow
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
com.google.firebase.firestore.core.SyncEngine: java.util.LinkedHashSet enqueuedLimboResolutions
com.google.android.gms.internal.firebase-auth-api.zzzz: long zzd
io.grpc.ThreadLocalContextStorage: java.lang.ThreadLocal localContext
io.flutter.plugins.googlemaps.PolygonController: com.google.android.gms.maps.model.Polygon polygon
io.grpc.internal.ApplicationThreadDeframer$5: io.grpc.internal.ApplicationThreadDeframer this$0
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl$JavaScriptChannelCreator javaScriptChannelCreator
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
com.google.protobuf.Any: com.google.protobuf.Any DEFAULT_INSTANCE
com.google.android.gms.tasks.zzg: com.google.android.gms.tasks.zzh zza
com.google.common.base.Splitter$1: com.google.common.base.CharMatcher val$separatorMatcher
io.grpc.Metadata$LazyValue: io.grpc.Metadata$BinaryStreamMarshaller marshaller
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApiCodec INSTANCE
io.grpc.internal.DelayedClientTransport: java.lang.Object lock
io.grpc.internal.DnsNameResolver: java.lang.String localHostname
com.google.android.gms.maps.model.TileOverlayOptions: boolean zze
io.grpc.internal.ClientCallImpl$1ClosedByNotFoundCompressor: io.grpc.ClientCall$Listener val$finalObserver
com.google.common.math.LongMath: long[] powersOf10
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType ENUM
com.google.protobuf.IntArrayList: com.google.protobuf.IntArrayList EMPTY_LIST
com.google.firebase.auth.internal.zzae: com.google.firebase.auth.internal.zzx zze
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzk
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
io.grpc.ClientStreamTracer$StreamInfo$Builder: boolean isTransparentRetry
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType INT32
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] $VALUES
com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.ImmutableList list
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code OUT_OF_RANGE
com.google.android.gms.internal.firebase-auth-api.zzsa: com.google.firebase.auth.ActionCodeSettings zzc
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
com.google.android.gms.internal.firebase-auth-api.zzpu: java.lang.String zza
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: java.lang.String name
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.firebase.firestore.remote.FirestoreChannel$1: com.google.firebase.firestore.remote.IncomingStreamObserver val$observer
com.google.firebase.firestore.Filter$CompositeFilter: com.google.firebase.firestore.core.CompositeFilter$Operator operator
io.grpc.okhttp.OkHttpClientTransport: java.util.Random random
com.google.android.datatransport.runtime.AutoValue_TransportContext: byte[] extras
io.flutter.plugins.googlemaps.MarkerBuilder: com.google.android.gms.maps.model.MarkerOptions markerOptions
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
kotlin.ranges.IntProgressionIterator: int finalElement
com.google.android.gms.common.internal.GmsClientSupervisor: java.lang.Object zzc
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzc
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.api.internal.TaskApiCall zaa
io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId channelRef
com.google.android.gms.internal.firebase-auth-api.zzzu: long zzd
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype COMBINED
com.google.android.gms.internal.firebase-auth-api.zzxv: com.google.android.gms.internal.firebase-auth-api.zzzo zzf
io.grpc.ConnectivityState: io.grpc.ConnectivityState SHUTDOWN
com.google.android.gms.common.api.internal.zas: com.google.android.gms.common.api.internal.BasePendingResult zaa
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
io.grpc.internal.InternalSubchannel: com.google.common.base.Stopwatch connectingTimer
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.TimeWindow window_
com.google.android.gms.dynamite.DynamiteModule: java.lang.Boolean zzb
com.google.android.gms.internal.firebase-auth-api.zzyj: long zzi
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.firestore.model.SnapshotVersion lastRemoteSnapshotVersion
com.google.android.gms.internal.firebase-auth-api.zzzd: boolean zzc
com.google.firebase.auth.FirebaseAuth: java.lang.Object zzh
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage instance
io.grpc.okhttp.OkHttpClientStream: io.grpc.Attributes attributes
com.google.android.gms.common.api.GoogleApiActivity: int zaa
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean enableAliasing
io.grpc.internal.TransportFrameUtil: java.util.logging.Logger logger
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
com.google.firebase.messaging.TopicsStore: java.lang.ref.WeakReference topicsStoreWeakReference
com.google.firebase.auth.GetTokenResult: java.util.Map zzb
com.google.common.base.Charsets: java.nio.charset.Charset UTF_16
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmw zzb
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String projectId
com.google.android.gms.internal.firebase-auth-api.zzxn: java.util.HashMap zzd
io.grpc.okhttp.OkHttpClientTransport: int nextStreamId
io.grpc.internal.Rescheduler: boolean enabled
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory callTracerFactory
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor DEVICE_DESCRIPTOR
io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_METHOD
com.google.android.gms.internal.firebase-auth-api.zziw: int zze
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zzk
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.lang.Boolean isRedirect
com.google.common.base.Platform: java.util.logging.Logger logger
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: android.content.BroadcastReceiver receiver
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.PermissionResultCallback resultCallback
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod SET_USE_SESSION_TICKETS
io.grpc.Attributes: java.util.Map data
com.google.android.gms.internal.firebase-auth-api.zzzh: long zzj
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
com.google.android.gms.internal.firebase-auth-api.zzaz: java.lang.Class zzb
com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] $VALUES
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] $VALUES
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSubText
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_AES_128_CCM_SHA256
com.google.android.gms.internal.firebase-auth-api.zzf: com.google.android.gms.internal.firebase-auth-api.zzc zza
com.google.firestore.v1.StructuredQuery$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.common.data.DataHolder: com.google.android.gms.common.data.DataHolder$Builder zaf
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase STRING_VALUE
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.common.api.internal.zabs: com.google.android.gms.common.Feature zab
com.google.protobuf.SchemaUtil: java.lang.Class GENERATED_MESSAGE_CLASS
io.grpc.internal.DelayedClientCall$DelayedListener$2: io.grpc.internal.DelayedClientCall$DelayedListener this$0
com.google.firebase.messaging.SyncTask: java.util.concurrent.ExecutorService processorExecutor
com.google.firestore.v1.TransactionOptions: java.lang.Object mode_
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind[] $VALUES
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider clientHealthMetricsStoreProvider
com.google.firebase.firestore.proto.Target: int QUERY_FIELD_NUMBER
com.google.firestore.v1.Value: com.google.firestore.v1.Value DEFAULT_INSTANCE
io.grpc.NameResolver$Args: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.protobuf.ListFieldSchema: com.google.protobuf.ListFieldSchema FULL_INSTANCE
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder ASCENDING
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State IDLE_AND_PING_SENT
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zznt zzb
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.android.gms.common.internal.TelemetryData: int zaa
com.google.android.gms.auth.api.signin.internal.Storage: java.util.concurrent.locks.Lock zaa
com.google.android.gms.common.util.ProcessUtils: java.lang.String zza
com.google.android.gms.dynamic.zaf: com.google.android.gms.dynamic.DeferredLifecycleHelper zaa
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.lang.Integer code
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore
com.google.android.gms.common.internal.GetServiceRequest: int zza
com.google.android.gms.common.stats.ConnectionTracker: java.util.concurrent.ConcurrentHashMap zza
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key key
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzg
androidx.core.R$id: int accessibility_custom_action_23
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzju zzb
com.google.firebase.firestore.Query: com.google.firebase.firestore.FirebaseFirestore firestore
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order ASCENDING
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzb
com.google.protobuf.FieldType$Collection: boolean isList
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.Executor initExecutor
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
com.google.android.gms.maps.model.CameraPosition$Builder: float zzb
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.firestore.v1.TransactionOptions$ReadOnly: int consistencySelectorCase_
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder INSTANCE
io.grpc.internal.RetriableStream$Sublistener: io.grpc.internal.RetriableStream this$0
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error STREAM_CLOSED
com.tekartik.sqflite.SqflitePlugin$8: java.lang.String val$path
com.google.android.gms.internal.firebase-auth-api.zzsg: com.google.android.gms.internal.firebase-auth-api.zztx zzb
io.grpc.internal.StatsTraceContext: io.grpc.internal.StatsTraceContext NOOP
io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.CallOptions callOptions
com.google.android.gms.tasks.zzn: java.lang.Object zzb
com.google.android.gms.internal.firebase-auth-api.zzex: com.google.android.gms.internal.firebase-auth-api.zzet zzd
io.grpc.CallOptions: io.grpc.CallOptions DEFAULT
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzh
com.google.android.gms.internal.firebase-auth-api.zzza: java.lang.String zza
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account zaa
io.flutter.FlutterInjector: boolean accessed
com.google.firestore.v1.WriteResponse: com.google.protobuf.Internal$ProtobufList writeResults_
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype LTE
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
io.grpc.Status$StatusMessageMarshaller: byte[] HEX
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.FirebaseAuth zza
io.grpc.internal.ManagedChannelImplBuilder: long idleTimeoutMillis
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api$AnyClientKey mClientKey
com.google.android.gms.common.internal.GmsClientSupervisor: android.os.HandlerThread zza
com.google.android.gms.internal.firebase-auth-api.zzxu: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zza
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission deniedForever
com.google.android.gms.common.internal.ClientIdentity: int uid
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode FLOW_CONTROL_ERROR
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Internal$ProtobufList documents_
io.grpc.internal.ExponentialBackoffPolicy: double jitter
com.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock singleton
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId GARBAGE_COLLECTION
com.tekartik.sqflite.SqflitePlugin: java.lang.String databasesPath
io.grpc.internal.DelayedClientTransport$4: io.grpc.internal.DelayedClientTransport this$0
io.grpc.okhttp.OkHttpClientStream$TransportState: java.util.List requestHeaders
io.grpc.okhttp.internal.DistinguishedNameParser: int length
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: android.content.Context context
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
io.grpc.internal.MessageDeframer: boolean stopDelivery
io.grpc.internal.DelayedClientTransport$1: io.grpc.internal.ManagedClientTransport$Listener val$listener
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType networkType
com.google.firebase.firestore.core.UserData$ParsedSetData: java.util.List fieldTransforms
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.common.collect.Iterators$9: boolean done
com.google.gson.stream.JsonReader: java.lang.String[] pathNames
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId ONLINE_STATE_TIMEOUT
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator UNRECOGNIZED
com.google.android.gms.internal.firebase-auth-api.zzxm: java.util.List zzb
com.lyokone.location.NotificationOptions: java.lang.String description
io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzf
com.google.firebase.auth.internal.zzx: java.util.List zze
io.flutter.plugins.urllauncher.WebViewActivity$1: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.firebase.messaging.TopicsStore: java.util.concurrent.Executor syncExecutor
com.google.protobuf.FieldSet: boolean hasLazyField
com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableMap map
com.google.android.gms.internal.firebase-auth-api.zzwq: com.google.android.gms.internal.firebase-auth-api.zzwt zza
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_ENCODING_KEY
com.google.firebase.auth.internal.zzbd: long zze
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String color
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int throwableFields
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: java.util.Map pluginConstants
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: java.lang.String backendName
com.google.protobuf.ByteString: int hash
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.android.gms.internal.location.zzax: com.google.android.gms.common.api.internal.ListenerHolder zzda
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzkg zzb
kotlin.ranges.IntProgression: int last
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.NameResolver$ConfigOrError serviceConfig
com.google.firebase.messaging.GmsRpc: com.google.firebase.inject.Provider heartbeatInfo
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate
com.google.android.gms.common.zzm: java.lang.Object zzf
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zae
io.grpc.internal.AbstractStream$TransportState: boolean allocated
com.google.android.gms.internal.location.zzas: boolean zzcw
com.google.firebase.firestore.local.DocumentReference: java.util.Comparator BY_KEY
com.google.android.gms.maps.model.PolylineOptions: float zzd
com.google.firestore.v1.DocumentTransform$FieldTransform: int MINIMUM_FIELD_NUMBER
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
com.google.firestore.v1.Precondition: com.google.protobuf.Parser PARSER
com.google.android.gms.common.ConnectionResult: com.google.android.gms.common.ConnectionResult RESULT_SUCCESS
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] $VALUES
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.grpc.internal.TransportTracer: io.grpc.internal.LongCounter messagesReceived
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.Feature[] zab
com.google.android.gms.tasks.zze: com.google.android.gms.tasks.zzf zzb
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag DEVICE_IDLE
io.grpc.internal.ChannelTracer$2: int[] $SwitchMap$io$grpc$InternalChannelz$ChannelTrace$Event$Severity
io.grpc.internal.RetriableStream: io.grpc.internal.InsightBuilder closedSubstreamsInsight
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
io.grpc.Context$ExecutableListener: java.util.concurrent.Executor executor
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code OK
io.grpc.Status: io.grpc.Status OK
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.util.AsyncQueue workerQueue
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.util.concurrent.Executor executor
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
com.google.protobuf.FieldType: com.google.protobuf.FieldType ENUM_LIST
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzc
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.LoadBalancer$SubchannelStateListener val$listener
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State BODY
com.google.android.datatransport.cct.CCTDestination: java.lang.String LEGACY_END_POINT
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus ATTEMPT_MIGRATION
com.google.android.gms.internal.firebase-auth-api.zzms: int zzg
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor MESSAGEID_DESCRIPTOR
com.google.firestore.v1.Target: java.lang.Object targetType_
io.grpc.NameResolver$Args$Builder: io.grpc.SynchronizationContext syncContext
com.lyokone.location.FlutterLocation: java.lang.Integer locationAccuracy
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
io.grpc.internal.AbstractClientStream$TransportState$1: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress
androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart
com.google.firebase.firestore.local.LocalViewChanges: com.google.firebase.database.collection.ImmutableSortedSet removed
com.google.android.gms.internal.firebase-auth-api.zzzd: com.google.android.gms.internal.firebase-auth-api.zzxs zzi
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zzd
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog zaa
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionRequestInProgress
com.google.firebase.messaging.SendException: int errorCode
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase RESPONSETYPE_NOT_SET
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
okio.ByteString: java.lang.String utf8
com.google.android.gms.common.data.DataHolder$Builder: java.util.HashMap zac
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: int tokenCounter
com.google.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue$ServerTimestampFieldValue SERVER_TIMESTAMP_INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
com.google.android.gms.common.internal.zap: com.google.android.gms.common.internal.PendingResultUtil$ResultConverter zac
com.google.firebase.firestore.core.TransactionRunner: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.common.collect.ImmutableList$SubList: int offset
com.google.firebase.encoders.proto.ProtobufEncoder: java.util.Map objectEncoders
com.google.android.gms.internal.firebase-auth-api.zzpy: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority DEFAULT
io.grpc.okhttp.AsyncSink: okio.Buffer buffer
io.grpc.okhttp.OkHttpClientTransport: java.util.Deque pendingStreams
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: java.util.Map overlayByBatchId
io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource
io.grpc.internal.ApplicationThreadDeframer$CloseableInitializingMessageProducer: java.io.Closeable closeable
com.google.android.gms.internal.firebase-auth-api.zzak: int zzb
io.grpc.Status: io.grpc.Status OUT_OF_RANGE
com.google.firebase.components.ComponentRuntime$Builder: java.util.List lazyRegistrars
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: java.lang.Boolean waitForReady
com.google.android.gms.common.util.ProcessUtils: int zzb
androidx.localbroadcastmanager.content.LocalBroadcastManager: java.util.HashMap mReceivers
com.google.protobuf.NullValue: com.google.protobuf.NullValue NULL_VALUE
com.google.android.gms.stats.WakeLock: java.lang.Object zzf
com.google.android.gms.maps.model.MarkerOptions: java.lang.String zzc
com.google.firebase.firestore.core.TransactionRunner: com.google.firebase.firestore.util.Function updateFunction
io.flutter.plugins.googlemaps.PolygonController: float density
com.google.android.gms.common.api.internal.zam: int zaa
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType SFIXED64
com.google.firebase.firestore.local.SQLitePersistence$Query: android.database.sqlite.SQLiteDatabase$CursorFactory cursorFactory
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.QueryEngine queryEngine
com.google.firestore.v1.Target: int targetTypeCase_
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.local.QueryPurpose purpose
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
com.google.protobuf.FieldType: com.google.protobuf.FieldType DOUBLE
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Scope zaf
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzb
io.grpc.CallOptions: java.lang.Object[][] customOptions
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zzd
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol SPDY_3
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzgl zzc
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
io.grpc.okhttp.AsyncSink$2: io.grpc.okhttp.AsyncSink this$0
io.grpc.internal.DelayedClientTransport: java.util.Collection pendingStreams
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.installations.FirebaseInstallationsApi fis
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.OkHttpClientTransport transport
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: java.util.concurrent.ThreadFactory THREAD_FACTORY
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
com.google.android.gms.internal.firebase-auth-api.zzsh: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: javax.net.ssl.HostnameVerifier hostnameVerifier
com.google.firebase.messaging.FirebaseMessaging$AutoInit: com.google.firebase.events.EventHandler dataCollectionDefaultChangeEventHandler
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.core.FieldFilter$Operator operator
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.google.firebase.firestore.core.Query: java.util.List filters
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
io.grpc.internal.DelayedStream$1: io.grpc.internal.DelayedStream this$0
com.google.firebase.auth.FirebaseAuth: com.google.firebase.inject.Provider zzo
com.google.android.gms.internal.firebase-auth-api.zzpg: java.lang.ThreadLocal zza
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection MAP
com.google.android.gms.common.internal.zzg: com.google.android.gms.common.internal.BaseGmsClient zze
io.flutter.plugins.googlemaps.PolygonsController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver: com.google.firebase.firestore.remote.AndroidConnectivityMonitor this$0
io.grpc.internal.FailingClientTransport: io.grpc.internal.ClientStreamListener$RpcProgress rpcProgress
com.google.common.base.Stopwatch: com.google.common.base.Ticker ticker
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zzb
io.grpc.okhttp.internal.framed.Huffman$Node: int terminalBits
androidx.core.app.NotificationManagerCompat: java.lang.Object sEnabledNotificationListenersLock
com.google.firestore.v1.ListenResponse: int TARGET_CHANGE_FIELD_NUMBER
io.grpc.internal.ManagedChannelServiceConfig: java.util.Map healthCheckingConfig
io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportInUse
com.google.android.gms.maps.model.LatLngBounds: com.google.android.gms.maps.model.LatLng southwest
com.google.firebase.auth.internal.zzaz: com.google.android.gms.common.logging.Logger zza
com.tekartik.sqflite.SqflitePlugin$BgResult: com.tekartik.sqflite.SqflitePlugin this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
com.google.android.gms.internal.firebase-auth-api.zzadf: int[] zzk
com.google.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: java.util.List messagingQueue
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes activityMissing
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
com.google.firebase.messaging.SyncTask$ConnectivityChangeReceiver: com.google.firebase.messaging.SyncTask task
com.google.firebase.auth.internal.zzaj: java.util.List zza
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp readTime_
com.google.firestore.v1.ListenResponse: int responseTypeCase_
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.android.gms.location.LocationRequest: int priority
com.google.android.gms.common.api.GoogleApiClient: java.util.Set zaa
io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: io.grpc.internal.ManagedChannelImpl this$0
io.grpc.okhttp.internal.Platform$JettyNegoProvider: java.lang.String selected
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: com.google.firebase.auth.FirebaseAuth firebaseAuth
com.google.firebase.firestore.Filter$CompositeFilter: java.util.List filters
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zag
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String appGroupId
com.google.android.gms.internal.firebase-auth-api.zzxy: java.lang.String zza
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: com.google.firebase.firestore.util.AsyncQueue$DelayedTask gcTask
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior ESTIMATE
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruDelegate delegate
com.google.android.gms.internal.firebase-auth-api.zzabu: com.google.android.gms.internal.firebase-auth-api.zzabp zzb
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke GET_MEMOIZED_IS_INITIALIZED
com.google.protobuf.WireFormat$JavaType: java.lang.Object defaultDefault
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code DATA_LOSS
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle reconnectTask
com.google.firebase.auth.internal.zzb: com.google.android.gms.tasks.TaskCompletionSource zza
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.protobuf.ByteString lastStreamToken
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl flutterApi
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.FirebaseFirestoreSettings settings
com.google.firebase.firestore.core.Target: java.lang.String collectionGroup
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result requestServiceResult
com.google.android.gms.common.zac: com.google.android.gms.common.GoogleApiAvailability zaa
com.google.android.gms.signin.internal.SignInClientImpl: boolean zab
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.model.FieldPath path
com.lyokone.location.NotificationOptions: java.lang.String title
io.grpc.internal.MessageDeframer: int requiredLength
com.google.protobuf.UnsafeUtil: boolean HAS_UNSAFE_BYTEBUFFER_OPERATIONS
com.google.android.gms.internal.firebase-auth-api.zzoe: int zzf
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.protobuf.IterableByteBufferInputStream: int currentByteBufferPos
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode UNSUPPORTED_VERSION
com.google.android.gms.internal.firebase-auth-api.zzpg: java.lang.String zzb
com.google.protobuf.BinaryReader$SafeHeapReader: int pos
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: io.grpc.CallCredentials$MetadataApplier delegate
com.google.firestore.v1.DocumentMask: int FIELD_PATHS_FIELD_NUMBER
io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.DelayedStream$DelayedStreamListener this$0
com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding$Alphabet alphabet
io.grpc.internal.AbstractClientStream$GetFramer: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.android.gms.internal.firebase-auth-api.zzju: int zze
com.google.firebase.auth.internal.zza: com.google.firebase.auth.internal.zzbm zzb
io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.internal.ConnectionClientTransport delegate
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle
com.google.firebase.firestore.bundle.BundleReader: java.io.InputStreamReader dataReader
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.android.gms.stats.WakeLock: java.util.Set zzk
io.grpc.internal.ExponentialBackoffPolicy: long nextBackoffNanos
io.grpc.Status: java.lang.String description
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: javax.inject.Provider dbNameProvider
com.google.android.gms.maps.model.Cap: int zzb
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.MethodDescriptor val$method
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zze
io.grpc.internal.ChannelLoggerImpl: io.grpc.internal.ChannelTracer tracer
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: io.grpc.okhttp.internal.framed.FrameReader frameReader
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.Parser PARSER
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
io.grpc.internal.DelayedStream$DelayedStreamListener: boolean $assertionsDisabled
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
com.google.android.gms.internal.firebase-auth-api.zzsm: com.google.android.gms.internal.firebase-auth-api.zzwx zza
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int length
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmk zze
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header METHOD_GET_HEADER
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: java.util.concurrent.atomic.AtomicInteger pendingApplier
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
androidx.collection.MapCollections$ArrayIterator: int mSize
com.google.android.gms.common.internal.TelemetryLoggingOptions: com.google.android.gms.common.internal.TelemetryLoggingOptions zaa
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzj
androidx.lifecycle.LiveData: java.lang.Object mPendingData
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.android.gms.internal.firebase-auth-api.zzjc: int zze
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId ALL
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
io.grpc.internal.DelayedStream$5: io.grpc.internal.DelayedStream this$0
io.grpc.okhttp.AsyncSink$2: io.perfmark.Link link
io.grpc.internal.MessageDeframer: boolean compressedFlag
com.google.android.gms.internal.location.zzas: java.util.Map zzcz
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.internal.firebase-auth-api.zzvq zze
io.grpc.internal.MessageDeframer$SingleMessageProducer: java.io.InputStream message
com.google.firestore.v1.StructuredQuery$Filter: int FIELD_FILTER_FIELD_NUMBER
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase VALUETYPE_NOT_SET
com.google.android.gms.internal.firebase-auth-api.zzjx: int zzf
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zzB
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse DEFAULT_INSTANCE
io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman INSTANCE
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api zag
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$enterTransition
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.lang.Class discoveryService
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase FILTER
com.google.android.gms.cloudmessaging.zzp: int zzc
com.google.android.gms.internal.firebase-auth-api.zzdz: com.google.android.gms.internal.firebase-auth-api.zzea zza
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getBatchGetDocumentsMethod
com.google.android.gms.stats.WakeLock: int zzm
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.ViewGroup mParent
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider metadataBackendRegistryProvider
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_CACHE_MODE
com.google.firebase.messaging.ByteStreams$LimitedInputStream: long left
androidx.collection.SparseArrayCompat: int[] mKeys
com.google.protobuf.UnsafeUtil: long BOOLEAN_ARRAY_INDEX_SCALE
com.google.firebase.auth.internal.zzk: com.google.firebase.auth.internal.zzk zza
io.grpc.internal.Http2Ping: java.lang.Throwable failureCause
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
io.flutter.plugins.googlemaps.CircleController: float density
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
io.grpc.Status$Code: io.grpc.Status$Code FAILED_PRECONDITION
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase EXISTS
com.tekartik.sqflite.Database: boolean inTransaction
com.google.firestore.v1.WriteRequest: com.google.protobuf.Internal$ProtobufList writes_
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzM
com.google.firestore.v1.CommitRequest: com.google.protobuf.ByteString transaction_
androidx.core.os.LocaleListCompatWrapper: java.util.Locale EN_LATN
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.InternalMetadata$TrustedAsciiMarshaller HTTP_STATUS_MARSHALLER
com.google.android.gms.internal.firebase-auth-api.zzsj: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String refreshToken
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode INADEQUATE_SECURITY
com.google.firebase.firestore.model.mutation.FieldTransform: com.google.firebase.firestore.model.FieldPath fieldPath
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: java.lang.Integer mSecondaryToolbarColor
com.google.firebase.firestore.local.MemoryBundleCache: java.util.Map namedQueries
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.firebase.firestore.FirebaseFirestore: android.content.Context context
io.grpc.internal.DelayedClientCall: io.grpc.ClientCall$Listener listener
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId HEALTH_CHECK_TIMEOUT
com.google.firestore.v1.StructuredQuery$FieldReference: int FIELD_PATH_FIELD_NUMBER
com.google.firebase.auth.internal.zzx: java.util.List zzf
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder offloadExecutorHolder
io.grpc.internal.DelayedStream$6: io.grpc.internal.DelayedStream this$0
com.google.firebase.auth.FirebaseAuthUserCollisionException: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzsq: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.firestore.v1.CommitResponse: com.google.protobuf.Parser PARSER
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
io.grpc.internal.ManagedChannelImpl$1NotifyStateChanged: io.grpc.ConnectivityState val$source
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String databaseURL
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
com.google.firestore.v1.Value$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.common.api.internal.zzb: android.os.Bundle zzd
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
io.grpc.okhttp.internal.framed.Hpack$Reader: int dynamicTableByteCount
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
io.grpc.internal.SharedResourcePool: io.grpc.internal.SharedResourceHolder$Resource resource
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: int current
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long currentByteBufferStartPos
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source DEFAULT
com.google.protobuf.FloatArrayList: float[] array
com.google.firebase.installations.RandomFidGenerator: byte FID_4BIT_PREFIX
io.grpc.internal.RetriableStream$1DeadlineEntry: io.grpc.internal.RetriableStream this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String androidClientId
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_0
com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationSettingsRequest mLocationSettingsRequest
com.google.firestore.v1.TargetChange: int CAUSE_FIELD_NUMBER
io.grpc.Status: io.grpc.Status CANCELLED
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean buildingsEnabled
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] zza
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.auth.CredentialsProvider authProvider
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType ADD
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzku zze
com.google.android.gms.tasks.zzz: java.util.concurrent.Callable zzb
com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries
com.google.firebase.auth.internal.zzz: long zzb
com.google.android.gms.internal.firebase-auth-api.zzuj: com.google.android.gms.internal.firebase-auth-api.zzzq zza
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal START_SAFE_BROWSING
io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object[] one
com.google.android.gms.safetynet.HarmfulAppsData: int apkCategory
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: com.google.firebase.firestore.core.ViewSnapshot viewSnapshot
com.google.android.gms.internal.firebase-auth-api.zzsz: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: com.google.firestore.v1.Value operand
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziw zzf
io.grpc.internal.ManagedChannelImpl: java.lang.String userAgent
com.google.firebase.auth.internal.zzt: java.lang.String zzd
com.google.firebase.firestore.local.LocalViewChanges: int targetId
com.google.android.gms.common.internal.zzo: android.os.IBinder zze
io.grpc.internal.ConnectivityStateManager: io.grpc.ConnectivityState state
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
com.google.firebase.messaging.SharedPreferencesQueue: java.util.ArrayDeque internalQueue
com.google.protobuf.MapEntryLite$Metadata: java.lang.Object defaultValue
com.google.firestore.v1.ListenRequest: int ADD_TARGET_FIELD_NUMBER
com.tekartik.sqflite.SqflitePlugin: int THREAD_PRIORITY
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.FragmentManagerImpl this$0
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry INSTANCE
com.google.android.gms.common.zzj: byte[] zza
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzf
io.grpc.internal.DelayedClientCall: io.grpc.Context context
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zze
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.MethodChannel$Result result
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.Status val$status
androidx.core.app.NotificationManagerCompat: java.util.Set sEnabledNotificationListenerPackages
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_TIMEOUT
io.grpc.okhttp.OkHttpClientTransport: java.net.Socket socket
com.google.firebase.auth.PhoneAuthOptions: boolean zzj
com.google.android.gms.common.internal.BaseGmsClient: long zzh
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase TARGETTYPE_NOT_SET
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: io.grpc.Metadata$Key HEART_BEAT_HEADER
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature[] $VALUES
com.google.android.gms.location.zzae: java.lang.String zzbf
com.google.android.gms.internal.firebase-auth-api.zzcc: java.nio.charset.Charset zza
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
com.google.firebase.firestore.local.SQLiteTargetCache: long lastListenSequenceNumber
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.View containerView
io.grpc.okhttp.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
com.google.android.gms.common.api.Status: int zzc
com.google.firebase.messaging.TopicsSyncTask: java.lang.Boolean hasWakeLockPermission
io.grpc.internal.DnsNameResolver: java.util.concurrent.Executor executor
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
io.grpc.internal.RetriableStream$RetryPlan: long backoffNanos
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] $VALUES
com.google.android.gms.common.internal.zzo: com.google.android.gms.common.internal.zzn zzf
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.core.UserData$ParseAccumulator accumulator
io.grpc.okhttp.OkHttpClientTransport: io.grpc.InternalChannelz$Security securityInfo
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
com.lyokone.location.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
com.google.firestore.v1.StructuredQuery$Order: com.google.protobuf.Parser PARSER
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
com.google.firebase.firestore.core.View: com.google.firebase.database.collection.ImmutableSortedSet mutatedKeys
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.core.util.LogWriter: java.lang.String mTag
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
com.baseflow.geolocator.LocationServiceHandlerImpl: android.content.Context context
com.google.android.gms.internal.firebase-auth-api.zzvd: com.google.android.gms.internal.firebase-auth-api.zzrm zza
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.internal.ObjectPool executorPool
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress DROPPED
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
com.google.common.base.Stopwatch: long elapsedNanos
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
com.google.android.gms.tasks.zzd: java.util.concurrent.Executor zza
io.grpc.internal.RetriableStream$State: boolean passThrough
com.google.firebase.installations.remote.RequestLimiter: long MAXIMUM_BACKOFF_DURATION_FOR_CONFIGURATION_ERRORS
io.grpc.internal.ChannelTracer$1: int val$maxEvents
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.firebase.FirebaseApp zzd
com.google.protobuf.JavaType: com.google.protobuf.JavaType INT
com.google.android.gms.common.api.internal.zaaf: com.google.android.gms.tasks.TaskCompletionSource zab
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder INSTANCE
com.google.android.gms.common.internal.MethodInvocation: int zab
io.grpc.internal.RetriableStream: io.grpc.Metadata headers
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor TIMEZONEOFFSETSECONDS_DESCRIPTOR
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped DEFAULT_INSTANCE
com.google.android.datatransport.AutoValue_Event: com.google.android.datatransport.Priority priority
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: java.lang.String value
com.google.firestore.v1.Document: int NAME_FIELD_NUMBER
com.google.firebase.firestore.core.EventManager$ListenOptions: boolean includeDocumentMetadataChanges
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor ANDROIDCLIENTINFO_DESCRIPTOR
com.google.firebase.installations.CrossProcessLock: java.nio.channels.FileChannel channel
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER
com.google.protobuf.UnsafeUtil: long LONG_ARRAY_INDEX_SCALE
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound startAt
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
com.tekartik.sqflite.SqflitePlugin$BgResult$2: java.lang.String val$errorMessage
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.internal.zzp zzb
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.Transformer transformer
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzaeg zzc
com.google.android.gms.internal.firebase-auth-api.zzzn: java.lang.String zzb
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: boolean shouldOverrideUrlLoading
com.google.android.gms.internal.firebase-auth-api.zzru: android.os.Parcelable$Creator CREATOR
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
com.google.android.gms.common.zzk: java.lang.ref.WeakReference zza
io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.android.gms.common.api.internal.zacf: com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient zaa
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.model.DocumentSet oldDocuments
io.grpc.Status: io.grpc.Status UNKNOWN
com.google.firestore.v1.Value$ValueTypeCase: int value
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.tekartik.sqflite.SqflitePlugin$BgResult$2: java.lang.Object val$data
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Internal$ProtobufList fields_
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.CallCredentials callCredentials
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.core.DatabaseInfo databaseInfo
com.google.firebase.firestore.auth.User: com.google.firebase.firestore.auth.User UNAUTHENTICATED
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.GoogleApiAvailabilityLight zzo
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$2: io.grpc.CallOptions val$callOptions
com.google.firebase.FirebaseApp$UiExecutor: android.os.Handler HANDLER
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
com.google.android.gms.internal.firebase-auth-api.zzsj: com.google.android.gms.internal.firebase-auth-api.zztx zzb
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruGarbageCollector$Params params
com.google.android.gms.internal.safetynet.zzl: byte[] zzw
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
com.google.firebase.internal.DataCollectionConfigStorage: boolean dataCollectionDefaultEnabled
com.google.android.gms.internal.firebase-auth-api.zzabk: boolean zzb
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zzka zzf
io.grpc.internal.RetriableStream$1CommitTask: java.util.concurrent.Future val$hedgingFuture
com.google.android.gms.internal.firebase-auth-api.zzaau: java.util.Comparator zza
com.google.firebase.firestore.local.DocumentReference: int targetOrBatchId
com.google.firestore.v1.DocumentRemove: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor startAt_
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zzc
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
com.google.firebase.auth.zze: java.lang.String zza
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.HedgingPolicy hedgingPolicy
com.google.android.gms.internal.firebase-auth-api.zzpg: int zzd
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] $VALUES
com.google.android.gms.common.api.internal.BasePendingResult: java.util.concurrent.atomic.AtomicReference zai
com.google.rpc.Status: com.google.rpc.Status DEFAULT_INSTANCE
com.tekartik.sqflite.SqflitePlugin$5: com.tekartik.sqflite.Database val$database
androidx.fragment.app.BackStackState: int mIndex
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED64_LIST
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.ApiKey zad
com.tekartik.sqflite.SqflitePlugin$BgResult$1: java.lang.Object val$results
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.SetOptions OVERWRITE
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: io.perfmark.Link val$link
io.grpc.internal.FailingClientStream: io.grpc.Status error
io.grpc.internal.MetadataApplierImpl: java.lang.Object lock
com.google.firebase.auth.zzj: com.google.firebase.auth.FirebaseAuth$IdTokenListener zza
com.google.android.gms.base.R$string: int common_google_play_services_update_button
com.google.firestore.v1.StructuredQuery$FieldFilter: int FIELD_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
io.grpc.internal.ReflectionLongAdderCounter: java.lang.reflect.Constructor defaultConstructor
io.grpc.internal.ManagedChannelImplBuilder: boolean fullStreamDecompression
com.google.android.gms.tasks.zzw: java.lang.Object zza
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.database.collection.ImmutableSortedSet mutatedKeys
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.emulators.EmulatedServiceSettings emulatorSettings
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzf
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code INVALID_ARGUMENT
com.google.firebase.firestore.index.FirestoreIndexValueWriter$1: int[] $SwitchMap$com$google$firestore$v1$Value$ValueTypeCase
com.google.firebase.firestore.core.DatabaseInfo: java.lang.String host
io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer callTracer
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.local.LocalStore localStore
com.google.firebase.firestore.model.Document: java.util.Comparator KEY_COMPARATOR
com.lyokone.location.FlutterLocationService: android.app.Activity activity
io.grpc.internal.InternalSubchannel$5: io.grpc.Status val$reason
io.grpc.internal.AtomicBackoff$State: io.grpc.internal.AtomicBackoff this$0
com.google.android.gms.internal.firebase-auth-api.zzpn: com.google.android.gms.internal.firebase-auth-api.zzds zza
com.google.android.gms.internal.firebase-auth-api.zzxk: com.google.android.gms.internal.firebase-auth-api.zzxn zza
com.google.android.gms.common.api.internal.zan: com.google.android.gms.common.api.internal.zao zab
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.InUseStateAggregator inUseState
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
com.google.firestore.admin.v1.Index$IndexField: int FIELD_PATH_FIELD_NUMBER
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: java.lang.Integer maxInboundMessageSize
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: java.lang.Object value
io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper helper
androidx.fragment.app.FragmentTransition$3: androidx.collection.ArrayMap val$inSharedElements
io.grpc.okhttp.OkHttpClientStream$TransportState: boolean pendingDataHasEndOfStream
io.grpc.LoadBalancerRegistry: java.util.LinkedHashMap effectiveProviders
io.flutter.plugins.googlemaps.TileProviderController$Worker: java.util.Map result
com.google.android.gms.stats.WakeLock: java.lang.String zzp
com.google.firebase.FirebaseOptions$Builder: java.lang.String databaseUrl
com.google.android.gms.internal.firebase-auth-api.zzxm: boolean zzh
com.google.common.collect.RegularImmutableMap: java.lang.Object hashTable
androidx.fragment.app.Fragment: boolean mHasMenu
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String model
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor PRODUCT_DESCRIPTOR
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
com.google.android.gms.maps.model.CameraPosition$Builder: float zzc
com.google.android.gms.internal.firebase-auth-api.zzib: com.google.android.gms.internal.firebase-auth-api.zzbe zza
com.google.firebase.auth.FirebaseAuth: com.google.firebase.FirebaseApp zza
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzpo zzb
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode FRAME_TOO_LARGE
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.android.gms.internal.firebase-auth-api.zzdf: com.google.android.gms.internal.firebase-auth-api.zzdg zza
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String apiKey
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.cloudmessaging.zzs zza
com.google.firestore.v1.ListenResponse: java.lang.Object responseType_
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory factory
com.google.android.gms.common.api.internal.BasePendingResult: java.util.ArrayList zag
com.google.firebase.firestore.local.SQLiteSchema: com.google.firebase.firestore.local.LocalSerializer serializer
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zzf
io.grpc.Status$Code: io.grpc.Status$Code DATA_LOSS
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType Removed
com.google.firestore.v1.WriteRequest: int STREAM_TOKEN_FIELD_NUMBER
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialPolygons
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor REQUESTTIMEMS_DESCRIPTOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNRECOGNIZED
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
com.google.firebase.firestore.UserDataWriter: com.google.firebase.firestore.FirebaseFirestore firestore
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zzb
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress REFUSED
com.google.android.gms.internal.firebase-auth-api.zzsk: com.google.android.gms.internal.firebase-auth-api.zzyq zzc
com.google.protobuf.ExtensionSchemaLite$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.util.Map additionalData
com.google.firebase.installations.Utils: com.google.firebase.installations.time.Clock clock
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase TRANSFORM
io.grpc.internal.DelayedStream$3: io.grpc.Deadline val$deadline
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value value_
com.google.firebase.auth.internal.zzt: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zza
com.google.firebase.messaging.Store: android.content.SharedPreferences store
io.grpc.okhttp.AsyncSink: java.lang.Object lock
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sExtrasField
com.google.android.gms.internal.firebase-auth-api.zzom: java.lang.String zzd
io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ConnectionClientTransport delegate
com.google.firestore.v1.TargetChange$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firestore.v1.Target$QueryTarget: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firebase.firestore.model.mutation.Precondition: com.google.firebase.firestore.model.mutation.Precondition NONE
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.LLRBNode root
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
io.grpc.okhttp.OkHttpClientTransport$4: io.grpc.okhttp.OkHttpClientTransport this$0
androidx.core.app.NotificationCompat$Builder: boolean mSilent
com.google.firebase.firestore.core.TargetIdGenerator: int generatorId
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Integer priority
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten
com.google.firebase.firestore.model.AutoValue_FieldIndex: com.google.firebase.firestore.model.FieldIndex$IndexState indexState
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult: int remoteVersion
com.google.protobuf.IterableByteBufferInputStream: byte[] currentArray
com.google.protobuf.BinaryReader$SafeHeapReader: int endGroupTag
com.google.android.gms.internal.firebase-auth-api.zzsm: com.google.firebase.auth.zze zze
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider schemaManagerProvider
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzg
io.grpc.internal.DelayedStream$11: io.grpc.internal.DelayedStream this$0
kotlin.random.Random: kotlin.random.Random$Default Default
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
com.google.android.gms.internal.firebase-auth-api.zzcd: com.google.android.gms.internal.firebase-auth-api.zznt zzc
androidx.core.app.NotificationManagerCompat: android.app.NotificationManager mNotificationManager
io.grpc.InternalLogId: java.lang.String details
io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.Attributes attributes
com.google.android.gms.internal.firebase-auth-api.zzxv: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzabp: boolean zzc
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status BAD_CONFIG
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp updateTime_
com.google.firebase.auth.zzk: com.google.firebase.auth.FirebaseAuth zzb
com.google.firebase.firestore.proto.UnknownDocument$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.okhttp.OkHttpClientStream$TransportState: io.grpc.okhttp.OkHttpClientTransport transport
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzj
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding SIGNED
com.google.firebase.firestore.remote.WatchStream: com.google.protobuf.ByteString EMPTY_RESUME_TOKEN
com.google.android.gms.maps.zzah: com.google.android.gms.maps.GoogleMapOptions zzd
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
com.google.protobuf.UnknownFieldSetLite: boolean isMutable
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBValueNode leaf
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
com.google.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] $VALUES
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
androidx.core.app.NotificationCompat$Builder: boolean mColorizedSet
com.google.android.gms.internal.firebase-auth-api.zzak: int zza
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Parser PARSER
com.google.android.gms.maps.model.PolylineOptions: boolean zzg
io.grpc.internal.ApplicationThreadDeframer: io.grpc.internal.MessageDeframer$Listener storedListener
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: com.google.firebase.encoders.FieldDescriptor NETWORKCONNECTIONINFO_DESCRIPTOR
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
com.google.firebase.firestore.core.Query: java.util.List memoizedOrderBy
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzbj zzc
io.grpc.internal.DelayedClientTransport: io.grpc.LoadBalancer$SubchannelPicker lastPicker
com.google.android.gms.internal.firebase-auth-api.zzwt: java.util.List zzh
com.google.android.gms.maps.model.CircleOptions: boolean zzh
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
com.google.protobuf.RawMessageInfo: java.lang.String info
com.google.android.gms.internal.firebase-auth-api.zzbd: java.util.concurrent.ConcurrentMap zzb
com.lyokone.location.StreamHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.google.protobuf.CodedInputStream: int sizeLimit
com.google.firebase.firestore.remote.Datastore$2: int[] $SwitchMap$com$google$firebase$firestore$FirebaseFirestoreException$Code
io.grpc.internal.ExponentialBackoffPolicy: java.util.Random random
okio.AsyncTimeout: long timeoutAt
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: java.io.OutputStream output
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: boolean persistenceEnabled
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions options
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: java.util.List elements
androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex
com.google.protobuf.LazyField$LazyIterator: java.util.Iterator iterator
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason reason_
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
com.google.android.gms.common.internal.service.zam: com.google.android.gms.common.internal.TelemetryData zaa
com.google.android.gms.common.internal.ClientSettings$Builder: androidx.collection.ArraySet zab
io.grpc.internal.DelayedClientCall$1DrainListenerRunnable: io.grpc.internal.DelayedClientCall$DelayedListener val$listener
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.Receive receive
com.google.protobuf.CodedInputStream: int recursionLimit
com.google.android.gms.common.internal.GmsClient: com.google.android.gms.common.internal.ClientSettings zab
kotlinx.coroutines.channels.ArrayChannel: int size
io.grpc.okhttp.internal.OptionalMethod: java.lang.Class returnType
com.google.firebase.firestore.remote.WatchChange$DocumentChange: com.google.firebase.firestore.model.MutableDocument newDocument
androidx.webkit.internal.WebViewFeatureInternal: java.lang.String mFeatureValue
androidx.fragment.app.BackStackState: int mTransition
androidx.core.R$id: int accessibility_custom_action_12
com.google.android.gms.maps.model.CircleOptions: java.util.List zzi
com.google.android.gms.internal.firebase-auth-api.zzta: com.google.android.gms.internal.firebase-auth-api.zzyq zzb
io.grpc.internal.ManagedChannelImpl: boolean shutdownNowed
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.Api$Client zac
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean persistenceEnabled
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzj
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType PARTIAL
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mContentView
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Open
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String DELIMITER
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
io.grpc.internal.Http2Ping$1: io.grpc.internal.ClientTransport$PingCallback val$callback
io.grpc.internal.DelayedClientCall$6: io.grpc.internal.DelayedClientCall this$0
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zza
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl flutterApi
io.grpc.CallOptions: java.lang.Integer maxInboundMessageSize
com.google.android.gms.common.util.CrashUtils: java.lang.String[] zza
com.google.firebase.auth.internal.zzbj: android.os.Handler zzb
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
com.google.android.gms.internal.firebase-auth-api.zzva: com.google.android.gms.internal.firebase-auth-api.zzrg zza
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.Encoding PROTOBUF_ENCODING
com.google.firebase.firestore.FieldValue$ArrayUnionFieldValue: java.util.List elements
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.util.concurrent.atomic.AtomicReference activityRef
io.grpc.internal.RetriableStream$Sublistener$1: io.grpc.Metadata val$headers
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_BACK_TO_SAFETY
com.google.android.gms.common.api.internal.ApiKey: java.lang.String zad
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag DEVICE_CHARGING
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.firebase-auth-api.zzsm: com.google.android.gms.internal.firebase-auth-api.zzvs zzf
io.flutter.plugins.googlemaps.GoogleMapController: boolean myLocationButtonEnabled
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: boolean mHasJobId
com.google.protobuf.ExtensionSchemas: com.google.protobuf.ExtensionSchema FULL_SCHEMA
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzs
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component component
com.google.android.gms.common.api.internal.zabp: com.google.android.gms.common.api.internal.zabq zaa
com.google.firebase.auth.PhoneAuthOptions$Builder: boolean zzj
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes locationServicesDisabled
com.google.protobuf.CodedInputStreamReader: int nextTag
androidx.core.app.NotificationManagerCompat: java.lang.String sEnabledNotificationListeners
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$StructuredQuery$Direction
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color BLACK
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config
com.google.firebase.auth.internal.GenericIdpActivity: boolean zze
com.google.android.gms.common.api.internal.zah: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zab
com.google.android.gms.internal.firebase-auth-api.zzpg: java.security.Key zzc
com.google.firebase.installations.GetAuthTokenListener: com.google.android.gms.tasks.TaskCompletionSource resultTaskCompletionSource
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
io.grpc.okhttp.OkHttpProtocolNegotiator: io.grpc.okhttp.internal.Platform platform
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue REQUEST_TIME
com.google.android.gms.stats.WakeLock: com.google.android.gms.common.util.Clock zzn
com.google.common.base.Stopwatch$1: int[] $SwitchMap$java$util$concurrent$TimeUnit
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase GEO_POINT_VALUE
com.google.firebase.firestore.remote.OnlineStateTracker: boolean shouldWarnClientIsOffline
com.google.protobuf.MessageSchema: com.google.protobuf.ListFieldSchema listFieldSchema
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.grpc.InternalStatus: io.grpc.Metadata$Key MESSAGE_KEY
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.SnapshotMetadata metadata
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
io.grpc.internal.RetriableStream: boolean isHedging
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Parser PARSER
com.google.protobuf.Protobuf: java.util.concurrent.ConcurrentMap schemaCache
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
io.grpc.internal.CompositeReadableBuffer: int readableBytes
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder holder
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason MAX_RETRIES_REACHED
androidx.webkit.internal.WebViewFeatureInternal: int mOsVersion
com.google.firebase.firestore.core.QueryListener: boolean raisedInitialEvent
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
com.google.protobuf.FieldType: com.google.protobuf.JavaType javaType
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: int value
com.google.firestore.v1.ExistenceFilter: int TARGET_ID_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.String zzr
io.flutter.plugins.googlemaps.TileOverlayController: com.google.android.gms.maps.model.TileOverlay tileOverlay
io.grpc.internal.DnsNameResolver: java.lang.String authority
com.google.android.gms.maps.model.CameraPosition: float tilt
io.grpc.internal.GrpcUtil: com.google.common.base.Supplier STOPWATCH_SUPPLIER
androidx.core.app.Person: java.lang.String mKey
com.google.protobuf.WireFormat$FieldType: int wireType
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator ARRAY_CONTAINS
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue$DelayedTask idleTimer
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext syncContext
io.grpc.CompositeCallCredentials: io.grpc.CallCredentials credentials1
io.grpc.internal.DelayedStream$3: io.grpc.internal.DelayedStream this$0
com.google.firebase.firestore.local.IndexBackfiller: com.google.common.base.Supplier indexManagerOfCurrentUser
io.grpc.Status: java.lang.Throwable cause
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzi
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable$1: io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable this$2
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzwi: android.content.Context zza
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState SYNCED
com.google.firebase.auth.internal.zzo: int zza
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zzc
com.google.firestore.admin.v1.Index$IndexField: int valueModeCase_
com.google.android.gms.internal.firebase-auth-api.zzaf: com.google.android.gms.internal.firebase-auth-api.zzn zza
io.flutter.plugins.googlemaps.PolylinesController: float density
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzi
com.google.firebase.firestore.core.QueryView: com.google.firebase.firestore.core.View view
com.tekartik.sqflite.operation.BatchOperation: java.util.Map map
io.grpc.internal.AbstractClientStream$TransportState$1: io.grpc.internal.AbstractClientStream$TransportState this$0
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase MAXIMUM
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api$AbstractClientBuilder CLIENT_BUILDER
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration MIGRATION_TO_V5
androidx.core.R$id: int accessibility_custom_action_18
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: java.util.Map val$wrapped
com.google.android.gms.internal.firebase-auth-api.zztt: com.google.android.gms.internal.firebase-auth-api.zztx zzc
com.google.firebase.database.collection.ImmutableSortedMapIterator: boolean isReverse
okio.Okio$4: java.net.Socket val$socket
io.grpc.internal.OobChannel: java.util.concurrent.ScheduledExecutorService deadlineCancellationExecutor
com.google.android.gms.internal.firebase-auth-api.zzaay: int zzb
io.grpc.okhttp.Headers: io.grpc.okhttp.internal.framed.Header TE_HEADER
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value DEFAULT_INSTANCE
com.google.android.gms.maps.model.PolygonOptions: int zze
com.google.protobuf.UnsafeUtil: int BYTE_ARRAY_ALIGNMENT
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ConcurrentLinkedQueue queue
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNMETERED_OR_DAILY
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FlutterAssetManagerHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FlutterAssetManagerHostApiCodec INSTANCE
com.tekartik.sqflite.SqflitePlugin$3: io.flutter.plugin.common.MethodCall val$call
io.grpc.internal.DelayedStream: long startTimeNanos
com.google.android.gms.common.internal.zzn: java.lang.String zzb
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: long nextRequestWaitMillis
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
androidx.window.core.Bounds: int bottom
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq[] zzZ
com.google.android.gms.safetynet.HarmfulAppsData: byte[] apkSha256
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String hardware
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: java.lang.String authority
io.flutter.plugin.common.FlutterException: java.lang.Object details
io.grpc.internal.OobChannel: java.lang.String authority
io.flutter.plugins.googlemaps.MarkerController: java.lang.String googleMapsMarkerId
com.google.android.gms.internal.firebase-auth-api.zzhu: java.util.HashMap zza
com.google.android.gms.maps.model.PolygonOptions: boolean zzi
com.google.protobuf.WireFormat: int MESSAGE_SET_MESSAGE_TAG
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
com.google.android.gms.common.internal.GmsClient: java.util.Set zac
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] $VALUES
com.google.firestore.v1.StructuredQuery$UnaryFilter: int operandTypeCase_
com.google.firebase.firestore.proto.Target: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Target: int ONCE_FIELD_NUMBER
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
com.google.android.gms.base.R$string: int common_google_play_services_install_text
com.google.firebase.auth.internal.RecaptchaActivity: boolean zzf
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.util.Map autoMetadata
com.google.android.gms.internal.firebase-auth-api.zzru: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzadz: com.google.android.gms.internal.firebase-auth-api.zzaeb zza
io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0
com.google.android.gms.internal.firebase-auth-api.zzsr: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType Reset
com.google.android.gms.internal.firebase-auth-api.zzsz: com.google.android.gms.internal.firebase-auth-api.zztx zzb
androidx.core.R$id: int accessibility_custom_action_29
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector INITIAL_PENDING_SELECTOR
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.firestore.bundle.BundleMetadata bundleMetadata
io.grpc.internal.RetriableStream: io.grpc.Metadata$Key GRPC_RETRY_PUSHBACK_MS
com.google.android.gms.signin.internal.SignInClientImpl: com.google.android.gms.common.internal.ClientSettings zac
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
io.grpc.internal.ManagedChannelImplBuilder: java.lang.String userAgent
io.grpc.internal.OobChannel: java.util.concurrent.CountDownLatch terminatedLatch
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.stats.WakeLock: java.util.concurrent.ScheduledExecutorService zzc
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl url
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzm
com.google.firebase.firestore.core.View$1: int[] $SwitchMap$com$google$firebase$firestore$core$DocumentViewChange$Type
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] $VALUES
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
com.google.firestore.v1.DocumentRemove: java.lang.String document_
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol HTTP_2
io.grpc.internal.Http2Ping: java.util.logging.Logger log
com.google.android.gms.common.api.internal.zal: boolean zae
okio.AsyncTimeout$1: okio.Sink val$sink
io.grpc.Status: io.grpc.Status DATA_LOSS
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzla zzb
io.grpc.Status: io.grpc.Status UNIMPLEMENTED
io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz channelz
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
com.google.protobuf.Int32Value: int VALUE_FIELD_NUMBER
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
com.google.android.gms.internal.firebase-auth-api.zzsn: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.firebase.firestore.proto.MaybeDocument: int UNKNOWN_DOCUMENT_FIELD_NUMBER
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_POST_MESSAGE
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest DEFAULT_INSTANCE
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
io.grpc.internal.HedgingPolicy: int maxAttempts
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String channelId
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zza
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.auth.CredentialsProvider authProvider
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke GET_PARSER
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzK
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: long start_ms_
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.database.collection.ImmutableSortedSet sortedSet
com.google.firebase.firestore.index.AutoValue_IndexEntry: byte[] arrayValue
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: com.google.firebase.firestore.local.SQLitePersistence persistence
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
com.google.protobuf.InvalidProtocolBufferException: boolean wasThrownFromInputStream
com.tekartik.sqflite.SqflitePlugin: java.util.Map _singleInstancesByPath
com.google.firebase.auth.internal.zzap: android.content.Context zzb
com.google.android.gms.internal.firebase-auth-api.zzgb: java.lang.Class zzc
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl: io.flutter.plugins.webviewflutter.WebStorageHostApiImpl$WebStorageCreator webStorageCreator
com.google.android.gms.internal.firebase-auth-api.zzmp: java.lang.String zze
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] zzd
kotlinx.coroutines.JobImpl: boolean handlesException
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig
com.google.android.gms.tasks.zzaf: int zze
io.grpc.InternalChannelz$Tls: java.lang.String cipherSuiteStandardName
io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.ClientStreamListener val$listener
com.google.firebase.auth.internal.zzo: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzaeg: java.lang.Object[] zzd
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: javax.inject.Provider wallClockProvider
com.google.android.gms.internal.firebase-auth-api.zzsi: com.google.firebase.auth.EmailAuthCredential zza
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform WEB
com.google.firebase.firestore.DocumentChange: com.google.firebase.firestore.QueryDocumentSnapshot document
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode COMPRESSION_ERROR
com.google.android.gms.internal.firebase-auth-api.zzdd: byte[] zza
com.google.android.gms.common.internal.ClientSettings$Builder: java.lang.String zad
com.google.android.gms.internal.firebase-auth-api.zzfz: java.lang.Object zza
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String zal
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzc
io.grpc.internal.DelayedStream: boolean passThrough
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbd zzdl
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: int offset
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] $VALUES
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: boolean skipDefault
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.android.gms.internal.firebase-auth-api.zzzn: java.lang.String zza
com.google.android.gms.signin.internal.zai: int zaa
com.google.android.gms.common.api.internal.zacg: android.os.IBinder zab
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng farLeft
com.google.android.gms.internal.firebase-auth-api.zzlq: int zzg
com.google.firestore.v1.TargetChange: com.google.protobuf.Parser PARSER
com.google.android.gms.common.SupportErrorDialogFragment: android.content.DialogInterface$OnCancelListener zab
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
com.google.android.gms.internal.firebase-auth-api.zzyg: java.lang.String zza
com.google.android.gms.maps.model.PolylineOptions: java.util.List zza
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: int mStartId
androidx.browser.customtabs.CustomTabsIntent$Builder: int mShareState
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader uploader
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result zza
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.internal.firebase-auth-api.zznq: com.google.android.gms.internal.firebase-auth-api.zzaca zza
io.grpc.okhttp.internal.DistinguishedNameParser: int cur
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int activityName
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose EXISTENCE_FILTER_MISMATCH
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: io.grpc.internal.ApplicationThreadDeframer this$0
io.grpc.internal.ChannelTracer$1: io.grpc.internal.ChannelTracer this$0
com.google.android.datatransport.runtime.EncodedPayload: byte[] bytes
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: boolean shouldOverrideUrlLoading
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller responseMarshaller
com.google.android.gms.internal.firebase-auth-api.zzht: byte[] zzb
com.google.firebase.auth.zzm: com.google.firebase.auth.FirebaseAuth zza
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat NONE
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.View rootView
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.internal.zzbb zzl
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor LOCALE_DESCRIPTOR
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.DecompressorRegistry DEFAULT_DECOMPRESSOR_REGISTRY
io.flutter.plugins.googlemaps.GoogleMapsPlugin: androidx.lifecycle.Lifecycle lifecycle
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory transportFactory
com.google.android.gms.internal.firebase-auth-api.zzt: java.util.regex.Pattern zza
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzj
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.app.job.JobWorkItem mJobWork
io.grpc.internal.ConnectivityStateManager$Listener: java.lang.Runnable callback
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.ConnectionResult zal
io.perfmark.Impl: io.perfmark.Link NO_LINK
io.grpc.okhttp.OkHttpClientStream: io.grpc.MethodDescriptor method
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl$1: android.webkit.WebView val$view
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.auth.CredentialsProvider appCheckProvider
com.google.android.gms.common.internal.MethodInvocation: java.lang.String zag
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzl
com.google.firebase.auth.internal.zzw: boolean zzc
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzwg zze
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzf
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.android.gms.maps.model.TileOverlayOptions: boolean zzc
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EncodedPayload encodedPayload
com.google.android.datatransport.runtime.AutoValue_SendRequest: java.lang.String transportName
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.lang.Integer logSource
com.google.firebase.auth.internal.zzak: com.google.firebase.auth.internal.zzal zza
com.tekartik.sqflite.SqflitePlugin$2: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite labels_
com.google.android.gms.internal.firebase-auth-api.zzro: boolean zzf
com.google.firestore.v1.StructuredQuery$Order: int DIRECTION_FIELD_NUMBER
com.google.protobuf.FieldType: com.google.protobuf.FieldType ENUM
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.firestore.v1.Value: int NULL_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AbstractClientBuilder zaa
com.google.firebase.installations.CrossProcessLock: java.nio.channels.FileLock lock
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList targetIds_
com.google.firebase.firestore.core.View$DocumentChanges: boolean needsRefill
okio.Okio: java.util.logging.Logger logger
com.google.android.gms.internal.firebase-auth-api.zzfh: com.google.android.gms.internal.firebase-auth-api.zzet zza
com.google.android.gms.common.api.internal.GoogleApiManager: android.os.Handler zat
com.google.android.gms.common.internal.zat: int zaa
io.grpc.SynchronizationContext$ScheduledHandle: io.grpc.SynchronizationContext$ManagedRunnable runnable
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
io.grpc.okhttp.internal.framed.Huffman: int[] CODES
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
io.grpc.DecompressorRegistry$DecompressorInfo: io.grpc.Decompressor decompressor
com.google.protobuf.Internal: com.google.protobuf.CodedInputStream EMPTY_CODED_INPUT_STREAM
com.google.firebase.firestore.remote.OnlineStateTracker: com.google.firebase.firestore.util.AsyncQueue workerQueue
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: io.flutter.embedding.engine.FlutterEngine backgroundFlutterEngine
io.flutter.plugin.common.MethodCall: java.lang.String method
com.google.firebase.firestore.local.MemoryPersistence: boolean started
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String sound
com.google.android.gms.signin.SignInOptions: boolean zab
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq zzb
io.grpc.okhttp.internal.framed.Hpack$Writer: boolean useCompression
com.google.protobuf.Any: java.lang.String typeUrl_
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: java.lang.String host
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
com.google.firebase.auth.ActionCodeSettings$Builder: boolean zzf
com.google.android.gms.tasks.zzl: java.lang.Object zzb
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: javax.inject.Provider workSchedulerProvider
com.google.android.gms.internal.firebase-auth-api.zzqw: com.google.firebase.auth.ActionCodeSettings zzb
com.google.android.gms.internal.firebase-auth-api.zzaba: int zzc
com.google.firestore.v1.ListenRequest: int DATABASE_FIELD_NUMBER
com.google.firebase.auth.UserProfileChangeRequest: boolean zzc
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes errorWhileAcquiringPosition
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzyq zzj
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider guardProvider
com.google.firestore.v1.TransactionOptions: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.bundle.BundleSerializer bundleSerializer
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType DOUBLE
com.google.android.gms.internal.firebase-auth-api.zznl: int zze
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.FirebaseApp firebaseApp
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus UNREGISTERED
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzb
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback locationCallback
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.util.Map autoMetadata
io.grpc.util.RoundRobinLoadBalancer: io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker currentPicker
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
io.grpc.okhttp.OkHttpClientTransport$4$1: io.grpc.okhttp.OkHttpClientTransport$4 this$1
kotlin.Unit: kotlin.Unit INSTANCE
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.core.ViewSnapshot snapshot
com.google.android.gms.common.internal.service.zao: com.google.android.gms.common.api.Api$ClientKey zac
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzf
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin this$0
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor CLIENTTYPE_DESCRIPTOR
io.grpc.internal.TransportTracer$Factory: io.grpc.internal.TimeProvider timeProvider
com.google.common.base.Charsets: java.nio.charset.Charset UTF_16BE
com.google.firebase.firestore.model.mutation.MutationBatchResult: java.util.List mutationResults
com.google.firebase.FirebaseApp$UserUnlockReceiver: android.content.Context applicationContext
com.google.android.gms.internal.location.zzbf: android.app.PendingIntent zzbv
io.grpc.CallOptions: java.util.concurrent.Executor executor
io.flutter.plugins.googlemaps.PolylineController: float density
com.google.protobuf.MessageSchema: boolean proto3
com.google.android.gms.internal.firebase-auth-api.zzxv: boolean zze
com.google.android.gms.internal.firebase-auth-api.zzal: com.google.android.gms.internal.firebase-auth-api.zzao zza
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
io.grpc.InternalConfigSelector$Result: io.grpc.Status status
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzi
io.grpc.internal.GrpcUtil: long DEFAULT_SERVER_KEEPALIVE_TIMEOUT_NANOS
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] $VALUES
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result result
com.google.common.base.Throwables: java.lang.reflect.Method getStackTraceElementMethod
com.google.android.gms.internal.firebase-auth-api.zzqy: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zzjo zzc
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: java.util.Set flags
com.google.firebase.firestore.core.Transaction: java.util.HashMap readVersions
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.runtime.TransportRuntime_Factory: javax.inject.Provider initializerProvider
io.grpc.internal.DnsNameResolver: io.grpc.NameResolver$Listener2 listener
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: int end
com.google.android.gms.internal.firebase-auth-api.zzfr: java.lang.String zzb
com.google.firebase.auth.FirebaseAuthMultiFactorException: com.google.firebase.auth.MultiFactorResolver zza
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType STRING
com.google.firestore.v1.ListenResponse$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
io.perfmark.Tag: java.lang.String tagName
com.google.android.gms.location.zzn: com.google.android.gms.common.api.internal.ListenerHolder zzz
com.google.android.gms.internal.firebase-auth-api.zzm: com.google.android.gms.internal.firebase-auth-api.zzm zza
com.google.android.gms.common.internal.zap: com.google.android.gms.tasks.TaskCompletionSource zab
com.google.firestore.v1.Target: int DOCUMENTS_FIELD_NUMBER
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: int length
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
io.grpc.internal.DelayedClientCall$1: io.grpc.internal.DelayedClientCall this$0
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
com.google.android.gms.maps.model.MapStyleOptions: java.lang.String zzb
com.google.android.gms.common.api.internal.zabx: android.content.Context zaa
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl this$1
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value NULL_VALUE
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
io.grpc.internal.ForwardingReadableBuffer: io.grpc.internal.ReadableBuffer buf
com.google.protobuf.FieldType: com.google.protobuf.FieldType BYTES_LIST
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.HostnameVerifier hostnameVerifier
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.messaging.Metadata metadata
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges EXCLUDE
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String device
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.util.HashMap forceResendingTokens
com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator EMPTY_ITR
io.grpc.internal.ClientCallImpl: java.util.concurrent.Executor callExecutor
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.ConnectionResult zab
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_MMS
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.core.TargetIdGenerator targetIdGenerator
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
com.google.android.gms.internal.firebase-auth-api.zzzz: boolean zzf
com.google.firebase.auth.OAuthProvider$Builder: android.os.Bundle zza
io.grpc.internal.ApplicationThreadDeframer$2: io.grpc.internal.ApplicationThreadDeframer this$0
io.grpc.internal.RetriableStream: long perRpcBufferUsed
com.google.android.gms.internal.firebase-auth-api.zzgh: java.util.concurrent.atomic.AtomicReference zzc
io.grpc.internal.DnsNameResolver: boolean shutdown
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzg
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
com.google.firebase.firestore.model.mutation.SetMutation: com.google.firebase.firestore.model.ObjectValue value
com.google.android.gms.maps.zzu: com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener zza
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType SFIXED32
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType SINT32
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] $VALUES
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
io.grpc.okhttp.OutboundFlowController: int initialWindowSize
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.core.Query query
com.google.android.gms.maps.model.PolygonOptions: java.util.List zzk
com.google.firebase.firestore.core.EventManager: java.util.Map queries
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: okio.Buffer pendingWriteBuffer
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String device
com.google.firebase.auth.internal.zzk: java.lang.String zzb
com.google.firestore.v1.ArrayValue$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet removedDocuments
okio.Segment: byte[] data
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
com.google.firebase.firestore.util.ExponentialBackoff: long nextMaxDelayMs
com.google.android.gms.dynamic.zae: android.content.Context zaa
com.google.android.gms.common.data.DataHolder: int[] zac
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.OutboundFlowController$OutboundFlowState connectionState
com.google.android.gms.common.api.internal.zabx: com.google.android.gms.common.api.internal.zabw zab
com.google.firebase.firestore.core.Query: java.util.List explicitSortOrder
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy lowest
com.google.android.gms.internal.location.zzbl: com.google.android.gms.location.LocationSettingsRequest zzdp
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
com.google.android.gms.cloudmessaging.zzz: com.google.android.gms.cloudmessaging.zzz zza
io.grpc.internal.ClientCallImpl: boolean fullStreamDecompression
com.google.android.gms.internal.firebase-auth-api.zzwi: com.google.firebase.FirebaseApp zzd
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabx zza
com.google.firebase.messaging.ProtoEncoderDoNotUse: com.google.firebase.encoders.proto.ProtobufEncoder ENCODER
com.google.android.gms.internal.location.zzc: java.lang.ClassLoader zzd
com.google.android.gms.internal.firebase-auth-api.zzabh: double[] zzb
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: io.grpc.internal.AtomicBackoff keepAliveBackoff
io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context context
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: com.google.firebase.firestore.local.SQLitePersistence db
com.google.firebase.auth.OAuthProvider$Builder: android.os.Bundle zzc
com.google.android.gms.stats.WakeLock: java.lang.Object zzd
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key USER_AGENT_KEY
com.google.android.gms.internal.location.zza: android.os.IBinder zza
io.grpc.internal.Http2ClientStreamTransportState: java.nio.charset.Charset errorCharset
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor PRIORITY_DESCRIPTOR
io.grpc.Context$ExecutableListener: io.grpc.Context context
com.google.firebase.firestore.model.DatabaseId: com.google.firebase.firestore.model.DatabaseId EMPTY
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin$Companion Companion
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzd
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: io.grpc.internal.MessageDeframer$Listener delegate
com.google.android.gms.maps.CameraUpdate: com.google.android.gms.dynamic.IObjectWrapper zza
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
io.grpc.HttpConnectProxiedSocketAddress$Builder: java.lang.String password
kotlin.ranges.IntProgression: int first
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask DEFAULT_INSTANCE
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
com.tekartik.sqflite.SqflitePlugin$3: com.tekartik.sqflite.SqflitePlugin this$0
androidx.browser.customtabs.CustomTabsIntent$Builder: java.util.ArrayList mMenuItems
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.android.gms.common.GoogleApiAvailabilityLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.google.protobuf.Android: boolean ASSUME_ANDROID
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.firestore.local.LocalDocumentsView localDocumentsView
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState HAS_COMMITTED_MUTATIONS
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.google.android.gms.common.util.concurrent.NamedThreadFactory: java.util.concurrent.ThreadFactory zzb
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor FINGERPRINT_DESCRIPTOR
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.firestore.v1.Target: int QUERY_FIELD_NUMBER
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneMultiFactorInfo zzi
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: java.lang.Runnable unregisterRunnable
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzh
com.google.android.gms.internal.firebase-auth-api.zzqo: java.lang.String zza
io.grpc.internal.RetriableStream$1CompressorEntry: io.grpc.internal.RetriableStream this$0
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding BASE32
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzi
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.internal.zace: int zad
io.grpc.internal.ChannelTracer: int eventsLogged
com.google.android.gms.internal.firebase-auth-api.zzsh: com.google.android.gms.internal.firebase-auth-api.zztx zzb
com.google.android.gms.maps.model.Cap: java.lang.String zza
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: io.grpc.Metadata$Key GMP_APP_ID_HEADER
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentDownloadListener
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: java.lang.Long maxAllowedDelay
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzpb: int[] zzb
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String refreshToken
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Backoff
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.ConcurrentMap zze
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.Metadata metadata
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.core.ViewSnapshot: boolean didSyncStateChange
com.google.firestore.bundle.BundledQuery: int PARENT_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzaba: int zzb
io.grpc.CallOptions: io.grpc.Deadline deadline
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase DOCUMENTS
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT64_LIST
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: long keepAliveTimeoutNanos
com.google.firebase.firestore.model.FieldIndex$IndexOffset: com.google.firebase.firestore.model.FieldIndex$IndexOffset NONE
com.google.android.gms.common.zzm: android.content.Context zzg
io.grpc.InternalChannelz$Security: io.grpc.InternalChannelz$OtherSecurity other
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite fields_
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.FragmentManagerImpl this$0
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: android.util.JsonWriter jsonWriter
com.google.android.gms.common.internal.service.zao: com.google.android.gms.common.api.Api$AbstractClientBuilder zad
com.baseflow.geolocator.location.FusedLocationClient$1: android.content.Context val$context
com.google.android.gms.common.api.internal.zam: com.google.android.gms.common.ConnectionResult zab
com.google.firestore.v1.Target: boolean once_
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNMETERED_ONLY
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.LatLng zza
io.grpc.Status: io.grpc.Status ABORTED
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmh zzb
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.google.firebase.firestore.core.UserData$ParsedUpdateData: com.google.firebase.firestore.model.ObjectValue data
io.grpc.internal.Rescheduler$ChannelFutureRunnable: io.grpc.internal.Rescheduler this$0
androidx.core.R$id: int accessibility_custom_action_28
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: java.lang.reflect.Method getApplicationProtocol
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_FILE_ACCESS
com.google.firebase.auth.internal.zzat: android.content.Context zzb
io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
io.grpc.internal.MetadataApplierImpl: io.grpc.CallOptions callOptions
com.lyokone.location.NotificationOptions: java.lang.String iconName
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.google.android.gms.internal.firebase-auth-api.zzwa: com.google.android.gms.internal.firebase-auth-api.zzwi zzb
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String analytics_label_
com.google.android.gms.common.api.Status: java.lang.String zzd
com.google.firestore.v1.Cursor: com.google.protobuf.Internal$ProtobufList values_
kotlinx.coroutines.DebugKt: boolean DEBUG
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Document: com.google.protobuf.Parser PARSER
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.GmsRpc gmsRpc
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap zzi
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
io.grpc.InternalConfigSelector$Result: java.lang.Object config
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus REGISTERED
com.google.firebase.firestore.FirebaseFirestoreException$Code: int value
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: javax.inject.Provider applicationContextProvider
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.datatransport.cct.internal.QosTier: android.util.SparseArray valueMap
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.firebase.messaging.TopicsSyncTask: android.os.PowerManager$WakeLock syncWakeLock
com.google.android.gms.maps.model.MarkerOptions: boolean zzh
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassMap
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String collapse_key_
io.grpc.internal.DelayedStream: io.grpc.Status error
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
com.google.android.gms.internal.firebase-auth-api.zzej: com.google.android.gms.internal.firebase-auth-api.zznt zza
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery DEFAULT_INSTANCE
com.google.android.gms.common.R$string: int common_google_play_services_unknown_issue
com.google.common.math.IntMath: int[] powersOf10
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
com.google.firebase.auth.OAuthProvider$CredentialBuilder: java.lang.String zzd
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: java.lang.Long timezoneOffsetSeconds
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
io.flutter.view.AccessibilityBridge$StringAttribute: int end
com.google.android.gms.common.api.internal.zadb: com.google.android.gms.common.api.internal.zadc zaa
com.google.firebase.firestore.core.DatabaseInfo: com.google.firebase.firestore.model.DatabaseId databaseId
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String trackingId
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String zzd
io.flutter.plugins.webviewflutter.FlutterAssetManager: android.content.res.AssetManager assetManager
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzg
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.util.Map values
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.Query originalQuery
com.google.firebase.firestore.remote.RemoteEvent: java.util.Map targetChanges
io.flutter.plugins.googlemaps.GoogleMapController$3: io.flutter.plugin.common.MethodChannel$Result val$_result
io.perfmark.Link: long linkId
com.google.android.gms.common.api.GoogleApi$Settings: android.os.Looper zab
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: androidx.fragment.app.FragmentManagerImpl this$0
com.google.firebase.firestore.remote.AbstractStream: io.grpc.MethodDescriptor methodDescriptor
com.google.android.gms.internal.firebase-auth-api.zzfj: com.google.android.gms.internal.firebase-auth-api.zzet zza
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType BOOLEAN
com.google.protobuf.FieldType: com.google.protobuf.FieldType MESSAGE_LIST
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzi
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Marshaller requestMarshaller
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.firebase-auth-api.zzah: int zza
com.google.firebase.auth.internal.zzbe: java.lang.String zzb
com.google.gson.stream.JsonReader: java.io.Reader in
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api zad
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider backendRegistryProvider
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED64_LIST
com.google.android.gms.location.LocationSettingsStates: boolean zzbo
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zzno zzf
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder INSTANCE
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: io.grpc.internal.ClientCallImpl this$0
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.protobuf.Android: java.lang.Class MEMORY_CLASS
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzf
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] $VALUES
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng nearRight
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.FirebaseFirestore firestore
com.google.firebase.database.collection.ArraySortedMap: java.util.Comparator comparator
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_NULL_SHA
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler
io.grpc.internal.AtomicBackoff$State: long savedValue
com.google.android.gms.internal.firebase-auth-api.zzxi: java.lang.String zzb
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.local.LocalStore localStore
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: java.util.Set orphanedDocuments
com.google.android.gms.internal.firebase-auth-api.zzps: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: javax.inject.Provider schemaVersionProvider
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
io.grpc.internal.CallTracer: io.grpc.internal.CallTracer$Factory DEFAULT_FACTORY
com.google.firebase.auth.internal.zzt: java.lang.String zzc
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Bound startAt
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzf
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly DEFAULT_INSTANCE
com.google.firestore.v1.ExistenceFilter$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firebase.firestore.model.TargetIndexMatcher: java.lang.String collectionId
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler handler
com.google.android.gms.cloudmessaging.zzd: android.os.Messenger zza
com.google.android.gms.internal.firebase-auth-api.zzpb: int[] zzd
androidx.collection.MapCollections$MapIterator: int mIndex
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype GSM
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.grpc.internal.AbstractClientStream: boolean shouldBeCountedForInUse
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error HTTP_1_1_REQUIRED
com.google.android.gms.cloudmessaging.zzaa: com.google.android.gms.cloudmessaging.Rpc zza
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean ignoreNullValues
io.grpc.internal.MessageDeframer: io.grpc.internal.CompositeReadableBuffer unprocessed
com.google.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString resumeToken_
io.grpc.internal.ManagedChannelImpl: boolean lookUpServiceConfig
com.google.android.gms.dynamite.DynamiteModule: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzme: int zze
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code ABORTED
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
com.google.firebase.auth.OAuthProvider$CredentialBuilder: java.lang.String zza
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer channelCallTracer
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
com.google.firebase.firestore.DocumentChange: com.google.firebase.firestore.DocumentChange$Type type
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.Metadata$Key HTTP2_STATUS
com.google.firebase.firestore.LoadBundleTaskProgress: long totalBytes
androidx.core.app.ActivityCompat$1: int val$requestCode
com.google.android.datatransport.cct.CctTransportBackend$HttpResponse: java.net.URL redirectUrl
com.google.firebase.components.Component: java.util.Set dependencies
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.ManagedChannelImpl this$0
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status shutdownStatus
io.flutter.view.AccessibilityBridge$Action: int value
com.google.firebase.auth.zzi: com.google.firebase.auth.FirebaseUser zza
androidx.window.R$styleable: int ActivityFilter_activityAction
io.grpc.okhttp.internal.framed.Hpack$Writer: io.grpc.okhttp.internal.framed.Header[] dynamicTable
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: android.os.Handler zag
androidx.core.app.NotificationCompat$Builder: boolean mShowWhen
io.grpc.internal.DelayedClientCall: io.grpc.ClientCall realCall
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.lang.String method
com.google.firebase.auth.internal.zzbh: com.google.firebase.auth.internal.zzbi zza
com.google.android.gms.internal.firebase-auth-api.zzabp: com.google.android.gms.internal.firebase-auth-api.zzaeb zza
com.google.protobuf.NioByteString: java.nio.ByteBuffer buffer
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.lang.Integer forceResendingToken
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value limit_
com.google.android.gms.internal.firebase-auth-api.zzfo: java.lang.String zzb
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri link
com.google.android.gms.internal.firebase-auth-api.zzadf: int[] zzc
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId WRITE_STREAM_IDLE
androidx.fragment.app.FragmentTransition$3: android.view.View val$epicenterView
com.google.android.gms.internal.firebase-auth-api.zzabr: float[] zzb
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzik zzb
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.android.gms.internal.firebase-auth-api.zzwp: com.google.android.gms.internal.firebase-auth-api.zzwr zza
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider
io.grpc.internal.ManagedChannelImpl$4: java.lang.String val$overrideAuthority
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument DEFAULT_INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
androidx.collection.ArraySet: int[] mHashes
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zzvs zzc
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
io.grpc.Metadata$Key: java.lang.Object marshaller
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
com.google.protobuf.Protobuf: com.google.protobuf.SchemaFactory schemaFactory
com.google.android.gms.internal.firebase-auth-api.zzer: int zza
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Channel channel
com.google.android.gms.internal.firebase-auth-api.zzh: int zzb
com.google.firebase.firestore.local.LruGarbageCollector$Results: int targetsRemoved
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.MapView mapView
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
com.google.firestore.v1.Precondition$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.cloudmessaging.zza: int zza
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.zze zzu
com.google.firebase.firestore.remote.WriteStream: com.google.protobuf.ByteString EMPTY_STREAM_TOKEN
com.google.firebase.auth.internal.zzi: java.lang.String zzc
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzld zze
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
com.google.android.gms.common.internal.zzo: android.content.ComponentName zzg
io.grpc.MethodDescriptor: java.util.concurrent.atomic.AtomicReferenceArray rawMethodNames
com.google.android.gms.maps.model.Tile: byte[] data
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: java.util.PriorityQueue queue
io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Instance val$cached
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zza
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: java.util.concurrent.Executor appExecutor
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.time.Clock clock
com.google.firebase.firestore.FieldValue$ArrayRemoveFieldValue: java.util.List elements
com.google.android.gms.maps.model.Dash: float length
io.flutter.embedding.android.KeyboardManager: android.view.View view
com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzd
com.google.protobuf.Timestamp$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.util.Iterator iterator
com.google.firebase.auth.PhoneMultiFactorInfo: long zzc
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue currentWebViewClient
com.google.firebase.firestore.core.TransactionRunner: int attemptsRemaining
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
io.grpc.internal.OobChannel: io.grpc.internal.InternalSubchannel subchannel
com.google.firebase.firestore.model.mutation.FieldTransform: com.google.firebase.firestore.model.mutation.TransformOperation operation
com.google.android.gms.internal.firebase-auth-api.zzzq: boolean zzj
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.os.Handler imeHandler
com.google.firebase.messaging.ServiceStarter: java.lang.Boolean hasWakeLockPermission
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.android.gms.internal.firebase-auth-api.zzabs: com.google.android.gms.internal.firebase-auth-api.zzabs zza
com.google.firebase.firestore.remote.RemoteStore: boolean networkEnabled
com.google.android.gms.internal.firebase-auth-api.zzaao: int zzc
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback: com.google.firebase.firestore.remote.AndroidConnectivityMonitor this$0
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzabh: int zzc
com.tekartik.sqflite.SqflitePlugin$5: io.flutter.plugin.common.MethodCall val$call
io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: io.grpc.Status failure
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod SET_HOSTNAME
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive
io.grpc.internal.DelayedClientCall$DelayedListener: boolean $assertionsDisabled
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mSummaryText
com.google.firestore.v1.Target: com.google.protobuf.Parser PARSER
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype mobileSubtype
io.flutter.plugins.googlemaps.CircleBuilder: float density
com.google.android.gms.internal.location.zzm: java.lang.String tag
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
com.google.firebase.firestore.local.IndexBackfiller: long INITIAL_BACKFILL_DELAY_MS
com.google.android.gms.internal.location.zzk: java.lang.String zzca
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$BubbleMetadata mBubbleMetadata
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzm
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.grpc.internal.ReadableBuffers$BufferInputStream: io.grpc.internal.ReadableBuffer buffer
com.google.android.gms.common.api.Scope: int zza
com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfiguration zzb
com.google.firestore.v1.MapValue: int FIELDS_FIELD_NUMBER
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder: com.google.firebase.encoders.config.Configurator CONFIG
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction VALUE
io.grpc.SynchronizationContext$ScheduledHandle: java.util.concurrent.ScheduledFuture future
io.grpc.okhttp.AsyncSink$1: io.perfmark.Link link
com.google.firebase.firestore.proto.Target: java.lang.Object targetType_
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.FlutterLocationServiceListener: io.flutter.plugin.common.MethodChannel$Result result
com.google.firebase.auth.internal.zzae: com.google.firebase.auth.internal.zzag zzb
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: long campaign_id_
com.google.firebase.installations.remote.AutoValue_TokenResult: long tokenExpirationTimestamp
com.google.protobuf.Int32Value: int value_
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider transportRuntimeProvider
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider uploaderProvider
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: long project_number_
com.google.android.gms.internal.firebase-auth-api.zzsu: com.google.android.gms.internal.firebase-auth-api.zzvs zzc
com.google.firebase.firestore.local.TargetData: int targetId
com.google.android.gms.stats.WakeLock: android.os.PowerManager$WakeLock zzg
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzo
io.grpc.internal.CallTracer: io.grpc.internal.LongCounter callsSucceeded
io.grpc.okhttp.OkHttpClientTransport: int maxConcurrentStreams
com.google.protobuf.IterableByteBufferInputStream: int currentArrayOffset
io.grpc.Status: io.grpc.Status ALREADY_EXISTS
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument DEFAULT_INSTANCE
io.grpc.internal.DelayedStream$13: boolean val$fullStreamDecompression
com.google.firebase.firestore.core.SyncEngine: java.util.Map queryViewsByQuery
com.google.android.gms.internal.firebase-auth-api.zzadf: sun.misc.Unsafe zzb
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: int schemaVersion
com.google.protobuf.CodedInputStream$StreamDecoder: int lastTag
com.google.android.gms.common.internal.RootTelemetryConfiguration: int zza
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: io.grpc.internal.InternalSubchannel this$0
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: java.util.Map val$wrapped
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.MutationQueue mutationQueue
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: java.util.concurrent.atomic.AtomicBoolean val$inBackground
com.google.android.gms.internal.firebase-auth-api.zzlq: int zzf
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.model.ResourcePath path
io.flutter.plugins.googlemaps.CircleController: com.google.android.gms.maps.model.Circle circle
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform sdk_platform_
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority HIGH_SPEED
io.grpc.CallOptions$Key: java.lang.Object defaultValue
com.google.android.gms.common.internal.BaseGmsClient: android.os.Handler zzb
com.google.android.datatransport.runtime.AutoValue_EventInternal: com.google.android.datatransport.runtime.EncodedPayload encodedPayload
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: android.content.SharedPreferences firebaseSharedPreferences
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzq
com.google.android.gms.internal.base.zal: int zaa
com.tekartik.sqflite.SqflitePlugin$BgResult$1: com.tekartik.sqflite.SqflitePlugin$BgResult this$1
com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks: com.google.android.gms.common.logging.Logger zza
com.google.common.io.BaseEncoding$Alphabet: boolean[] validPadding
com.google.firebase.firestore.core.UserData$ParsedSetData: com.google.firebase.firestore.model.ObjectValue data
com.google.android.gms.internal.firebase-auth-api.zzon: byte[] zzc
com.google.firebase.firestore.remote.RemoteEvent: java.util.Map documentUpdates
com.google.android.gms.location.LocationRequest: int zzx
io.flutter.plugins.webviewflutter.InstanceManager: java.util.Map instancesToInstanceIds
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzb
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_CANCELED
com.google.android.gms.internal.firebase-auth-api.zzkl: com.google.android.gms.internal.firebase-auth-api.zzaca zza
io.grpc.internal.ClientCallImpl$1ClosedByContext: io.grpc.internal.ClientCallImpl this$0
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
com.google.firebase.auth.internal.zzx: java.lang.Boolean zzh
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzso: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.protobuf.Timestamp: long seconds_
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
com.google.firebase.auth.ActionCodeUrl: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzku zzb
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
com.google.android.gms.internal.firebase-auth-api.zzhz: java.lang.Integer zzc
com.google.android.gms.common.internal.BaseGmsClient: int zzy
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.Object zae
com.google.android.gms.internal.firebase-auth-api.zzsa: android.os.Parcelable$Creator CREATOR
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType type
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zzz
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo$ClientType clientType
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory documents
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zze
com.google.firestore.v1.DocumentDelete: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzeo: com.google.android.gms.internal.firebase-auth-api.zzmp zzc
androidx.core.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler NOOP_HANDLER
io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.LoadBalancer$Subchannel val$subchannel
io.grpc.internal.Rescheduler: long runAtNanos
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
io.grpc.SecurityLevel: io.grpc.SecurityLevel NONE
com.google.firebase.auth.zzq: com.google.firebase.auth.FirebaseAuth zzb
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
com.google.android.gms.dynamic.DeferredLifecycleHelper: java.util.LinkedList zac
com.google.firestore.v1.StructuredQuery$Order: int FIELD_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator NOT_EQUAL
com.google.rpc.Status: int MESSAGE_FIELD_NUMBER
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
com.google.firebase.messaging.Metadata: java.lang.String appVersionName
io.grpc.internal.RetryPolicy: java.util.Set retryableStatusCodes
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.gms.common.util.concurrent.zza: java.lang.Runnable zza
com.google.protobuf.LazyFieldLite: com.google.protobuf.ExtensionRegistryLite EMPTY_REGISTRY
io.grpc.internal.KeepAliveManager$2: io.grpc.internal.KeepAliveManager this$0
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: java.util.concurrent.Executor backgroundExecutor
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: long targetTimeMs
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl lbHelper
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzg
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy medium
io.grpc.internal.RetriableStream$1HalfCloseEntry: io.grpc.internal.RetriableStream this$0
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Timestamp readTime_
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
com.google.firebase.messaging.WakeLockHolder: com.google.android.gms.stats.WakeLock wakeLock
androidx.collection.SparseArrayCompat: boolean mGarbage
com.google.protobuf.FieldType: com.google.protobuf.FieldType FLOAT
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2 this$0
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: java.util.List handlers
com.google.firebase.firestore.local.LruGarbageCollector: long REGULAR_GC_DELAY_MS
com.google.firebase.firestore.FirebaseFirestoreException: com.google.firebase.firestore.FirebaseFirestoreException$Code code
io.grpc.okhttp.internal.framed.Header: int hpackSize
com.google.firebase.firestore.remote.OnlineStateTracker: int watchStreamFailures
io.grpc.Deadline: long NANOS_PER_SECOND
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzin zzf
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
com.google.firestore.v1.WriteResult: int TRANSFORM_RESULTS_FIELD_NUMBER
io.grpc.okhttp.OkHttpClientTransport: java.lang.String defaultAuthority
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDefinitionsNotFound
androidx.webkit.internal.WebViewProviderFactoryAdapter: org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface mImpl
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
com.google.firestore.v1.Write: com.google.firestore.v1.Write DEFAULT_INSTANCE
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzd
io.grpc.internal.MessageFramer: io.grpc.Compressor compressor
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zzb
com.google.firebase.firestore.core.CompositeFilter: java.util.List memoizedFlattenedFilters
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: java.lang.String errorCode
io.flutter.plugins.googlemaps.MarkerBuilder: boolean consumeTapEvents
com.google.android.gms.base.R$string: int common_google_play_services_update_text
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
androidx.fragment.app.FragmentTransaction: int mTransitionStyle
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType BYTE_STRING
com.google.android.gms.common.data.DataHolder: boolean zak
io.grpc.okhttp.OkHttpWritableBuffer: int writableBytes
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.FragmentManagerImpl this$0
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
com.google.android.gms.internal.firebase-auth-api.zzye: com.google.android.gms.internal.firebase-auth-api.zzye zza
androidx.fragment.app.Fragment: boolean mRetainInstance
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_PROCEED
com.google.android.gms.maps.model.Polygon: com.google.android.gms.internal.maps.zzaa zza
io.grpc.internal.DnsNameResolver: java.util.Random random
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.google.android.gms.common.internal.LibraryVersion: com.google.android.gms.common.internal.GmsLogger zza
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.firebase.components.Component: java.util.Set publishedEvents
com.google.android.gms.internal.firebase-auth-api.zzqw: java.lang.String zza
com.google.firebase.firestore.index.IntMath$1: int[] $SwitchMap$java$math$RoundingMode
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor executor
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_BLOCK_NETWORK_LOADS
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: java.lang.Long tokenExpirationTimestamp
io.grpc.internal.AtomicBackoff$State: boolean $assertionsDisabled
com.google.android.gms.common.data.DataHolder: int zaa
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.firebase.auth.zze zzl
kotlin.ranges.IntProgressionIterator: int step
androidx.lifecycle.LiveData: int mActiveCount
com.google.android.gms.internal.firebase-auth-api.zzge: com.google.android.gms.internal.firebase-auth-api.zzhx zza
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: java.util.Map valueEncoders
io.grpc.internal.DelayedClientTransport$2: io.grpc.internal.ManagedClientTransport$Listener val$listener
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_REMOTE_VERSION_NO_FORCE_STAGING
com.google.firebase.firestore.remote.FirestoreChannel$3: com.google.firebase.firestore.remote.FirestoreChannel this$0
com.google.android.gms.maps.model.CircleOptions: float zzf
io.grpc.internal.TransportTracer: long lastMessageSentTimeNanos
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
io.grpc.internal.InternalSubchannel$6: io.grpc.internal.InternalSubchannel this$0
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField DEFAULT_INSTANCE
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState SUCCESS
io.grpc.InternalConfigSelector$Result$Builder: java.lang.Object config
com.lyokone.location.FlutterLocation$1: com.lyokone.location.FlutterLocation this$0
io.grpc.internal.InternalSubchannel: io.grpc.internal.ChannelTracer channelTracer
io.grpc.internal.ApplicationThreadDeframer$1: io.grpc.internal.ApplicationThreadDeframer this$0
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.tekartik.sqflite.dev.Debug: boolean _EXTRA_LOGV
io.grpc.Status: io.grpc.Status$Code code
io.flutter.plugins.googlemaps.GoogleMapController: boolean trackCameraPosition
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget DEFAULT_INSTANCE
com.google.firestore.v1.Target$QueryTarget: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner: com.google.firebase.firestore.remote.AbstractStream this$0
kotlinx.coroutines.channels.ArrayChannel$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransitionStyle
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.atomic.AtomicReference zzb
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: java.lang.Boolean isAutomaticDataCollectionEnabled
com.google.protobuf.CodedInputStream$ArrayDecoder: boolean enableAliasing
androidx.window.R$styleable: int ActivityFilter_activityName
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
com.google.common.collect.ByFunctionOrdering: com.google.common.collect.Ordering ordering
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: java.lang.String token
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition currentDocument_
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO
androidx.window.R$styleable: int[] SplitPairFilter
com.google.android.gms.maps.zzq: com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback zza
com.google.firebase.firestore.QuerySnapshot: java.util.List cachedChanges
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: android.os.Handler platformThreadHandler
com.google.firebase.firestore.local.Persistence: java.lang.String DATA_MIGRATION_BUILD_OVERLAYS
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.core.app.NotificationManagerCompat$NotifyTask: android.app.Notification notif
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzh
com.google.android.gms.internal.auth-api-phone.zzb: java.lang.String zzb
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApi$1: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.google.android.gms.internal.firebase-auth-api.zzxc: java.lang.String zzb
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.ByteString retryTransaction_
io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener
com.google.android.gms.internal.firebase-auth-api.zzom: com.google.android.gms.internal.firebase-auth-api.zzol zzf
com.google.firebase.DataCollectionDefaultChange: boolean enabled
com.google.firebase.firestore.core.ActivityScope$CallbackList: java.util.List callbacks
com.google.firestore.v1.DocumentRemove: int DOCUMENT_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: java.util.Map values
com.google.android.gms.internal.firebase-auth-api.zztr: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.android.gms.internal.firebase-auth-api.zzac: com.google.android.gms.internal.firebase-auth-api.zzq zza
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: com.google.firebase.encoders.FieldDescriptor REASON_DESCRIPTOR
io.grpc.okhttp.internal.ConnectionSpec: io.grpc.okhttp.internal.ConnectionSpec CLEARTEXT
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.internal.IGoogleMapDelegate zza
com.google.android.gms.cloudmessaging.zze: boolean zzd
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
com.google.protobuf.FieldType: com.google.protobuf.FieldType BOOL
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzadq: java.lang.Class zza
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT32_LIST
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_EN_XA
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzh
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType UINT32
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: io.flutter.plugins.firebase.messaging.JobIntentService mService
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
androidx.core.app.NotificationCompat$Builder: int mProgressMax
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzb
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: android.content.Context applicationContext
com.google.firebase.firestore.util.Executors: java.util.concurrent.Executor DEFAULT_CALLBACK_EXECUTOR
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec$1: int[] $SwitchMap$com$google$firebase$firestore$LoadBundleTaskProgress$TaskState
io.flutter.plugins.firebase.messaging.JobIntentService: java.util.HashMap sClassWorkEnqueuer
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzk
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
com.google.android.gms.cloudmessaging.zzm: java.util.Queue zzd
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zza
io.grpc.internal.DnsNameResolver: io.grpc.internal.SharedResourceHolder$Resource executorResource
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse DEFAULT_INSTANCE
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
com.google.firebase.firestore.core.ViewSnapshot: java.util.List changes
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: java.util.Map changedDocuments
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType RESET
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.Platform$TlsExtensionType tlsExtensionType
io.grpc.util.RoundRobinLoadBalancer: io.grpc.Attributes$Key STATE_INFO
com.google.android.gms.dynamic.zag: com.google.android.gms.dynamic.DeferredLifecycleHelper zaa
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer loadBatchSize
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Projection select_
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code DEADLINE_EXCEEDED
com.google.firebase.messaging.SharedPreferencesQueue: java.util.concurrent.Executor syncExecutor
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument DEFAULT_INSTANCE
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error INADEQUATE_SECURITY
com.lyokone.location.FlutterLocation: android.location.OnNmeaMessageListener mMessageListener
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.support.v4.app.INotificationSideChannel sDefaultImpl
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
io.grpc.InternalConfigSelector$Result: io.grpc.ClientInterceptor interceptor
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1 INSTANCE
androidx.fragment.app.FragmentTransition$4: boolean val$inIsPop
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzmx zzb
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus enabled
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialMarkers
io.grpc.internal.DnsNameResolver$Resolve: io.grpc.internal.DnsNameResolver this$0
com.google.firebase.firestore.proto.MaybeDocument: com.google.protobuf.Parser PARSER
io.flutter.plugins.googlemaps.GoogleMapController$3: io.flutter.plugins.googlemaps.GoogleMapController this$0
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker zzc
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder: com.google.firebase.encoders.FieldDescriptor STORAGEMETRICS_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzpa zzk
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat mIcon
com.lyokone.location.BackgroundNotification: com.lyokone.location.NotificationOptions options
com.google.firestore.v1.WriteRequest: int DATABASE_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzpo zza
com.google.protobuf.JavaType: com.google.protobuf.JavaType BOOLEAN
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList baseWrites_
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zznt zza
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.util.concurrent.Executor executor
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: com.google.firebase.firestore.local.SQLitePersistence db
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName
io.grpc.Status$Code: io.grpc.Status$Code UNIMPLEMENTED
com.google.firestore.v1.ListenRequest: int REMOVE_TARGET_FIELD_NUMBER
com.google.android.gms.stats.WakeLock: boolean zzl
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: long nextRequestWaitMillis
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.safetynet.zzo zzu
com.google.firebase.messaging.reporting.MessagingClientEventExtension: com.google.firebase.messaging.reporting.MessagingClientEvent messaging_client_event_
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.firebase.firestore.core.ViewChange: java.util.List limboChanges
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
com.google.android.gms.internal.firebase-auth-api.zzel: java.util.logging.Logger zza
com.google.android.gms.internal.firebase-auth-api.zzqy: com.google.android.gms.internal.firebase-auth-api.zzzd zza
com.google.android.gms.internal.safetynet.zzk$zza: com.google.android.gms.common.api.Status zzad
io.grpc.internal.DelayedClientTransport$1: io.grpc.internal.DelayedClientTransport this$0
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.firebase.inject.Provider userAgentProvider
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: com.google.android.datatransport.runtime.time.Clock wallClock
com.google.firebase.auth.EmailAuthCredential: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzd
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.Status error
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry instanceRegistry
androidx.core.R$id: int accessibility_custom_action_11
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator keyTranslator
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
com.google.android.gms.internal.firebase-auth-api.zzih: int zze
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException: java.lang.String code
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mBigContentView
io.grpc.CallOptions: java.lang.Integer maxOutboundMessageSize
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: java.util.concurrent.ScheduledExecutorService timeoutService
com.google.android.gms.internal.firebase-auth-api.zzbb: com.google.android.gms.internal.firebase-auth-api.zzgq zza
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
com.google.firestore.v1.TransactionOptions: int modeCase_
io.grpc.internal.ApplicationThreadDeframerListener: java.util.Queue messageReadQueue
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.atomic.AtomicLong val$count
com.google.android.gms.internal.firebase-auth-api.zzxp: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider clientStreamProvider
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.core.R$id: int accessibility_custom_action_6
androidx.core.app.NotificationCompat$BigPictureStyle: android.graphics.Bitmap mPicture
com.google.protobuf.MessageSchema: com.google.protobuf.NewInstanceSchema newInstanceSchema
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult panicPickResult
androidx.window.R$attr: int activityAction
com.google.android.gms.cloudmessaging.zzp: android.os.Bundle zzd
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
com.google.android.gms.common.GooglePlayServicesRepairableException: int zza
com.google.android.gms.internal.firebase-auth-api.zzyf: java.lang.String zza
io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Subchannel subchannel
com.google.firestore.v1.Document$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzqu: com.google.firebase.auth.ActionCodeSettings zzb
com.google.android.gms.internal.firebase-auth-api.zzaei: com.google.android.gms.internal.firebase-auth-api.zzaek zzc
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.Api$Client zab
io.grpc.NameResolverRegistry: io.grpc.NameResolver$Factory factory
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle parentHandle
com.google.android.gms.cloudmessaging.zzw: com.google.android.gms.cloudmessaging.Rpc zza
com.google.android.gms.internal.location.zzbf: com.google.android.gms.location.zzu zzdn
io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory destroyerFactory
com.google.android.gms.safetynet.zza: java.lang.String zze
io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.Attributes attributes
com.google.firestore.v1.BatchGetDocumentsResponse: int READ_TIME_FIELD_NUMBER
com.google.gson.stream.JsonReader: int peeked
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
com.google.firebase.firestore.model.ResourcePath: com.google.firebase.firestore.model.ResourcePath EMPTY
io.grpc.internal.RetriableStream$1SendMessageEntry: java.lang.Object val$message
com.google.firebase.firestore.core.CompositeFilter: java.util.List filters
com.google.android.gms.internal.firebase-auth-api.zzad: java.lang.CharSequence zzb
com.google.firebase.auth.internal.zzae: com.google.firebase.auth.zze zzd
com.google.firestore.v1.DocumentChange: int DOCUMENT_FIELD_NUMBER
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest DEFAULT_INSTANCE
com.google.firebase.auth.internal.zzo: com.google.firebase.auth.ActionCodeInfo zzd
com.google.android.gms.internal.firebase-auth-api.zzjr: int zze
com.google.android.gms.internal.firebase-auth-api.zzue: com.google.android.gms.internal.firebase-auth-api.zzqk zza
com.google.android.gms.internal.firebase-auth-api.zziq: int zze
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.RemoteStore$RemoteStoreCallback remoteStoreCallback
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialCircles
com.google.android.gms.internal.firebase-auth-api.zzsc: com.google.android.gms.common.api.Status zza
com.google.android.gms.maps.zzz: com.google.android.gms.maps.GoogleMap$OnMapLongClickListener zza
io.grpc.internal.CallCredentialsApplyingTransportFactory: java.util.concurrent.Executor appExecutor
com.google.android.gms.cloudmessaging.Rpc: android.os.Messenger zzi
androidx.window.R$attr: int clearTop
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzm
com.google.firestore.v1.DocumentTransform$FieldTransform: int INCREMENT_FIELD_NUMBER
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.google.firebase.auth.internal.zzn: com.google.firebase.auth.MultiFactorInfo zza
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.QosTier qosTier
com.google.android.gms.common.ConnectionResult: java.lang.String zzd
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
okio.Timeout: long timeoutNanos
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: java.lang.Long errorCode
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zada zap
com.google.firebase.firestore.FirebaseFirestoreSettings: java.lang.String host
com.google.android.gms.internal.firebase-auth-api.zzon: com.google.android.gms.internal.firebase-auth-api.zzol zzd
com.google.firestore.v1.Target: int RESUME_TOKEN_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.protobuf.Parser PARSER
androidx.collection.ArraySet: java.lang.Object[] OBJECT
com.google.firebase.messaging.reporting.MessagingClientEvent: long project_number_
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzb
com.google.firestore.v1.DocumentChange: int REMOVED_TARGET_IDS_FIELD_NUMBER
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
com.google.firebase.firestore.util.BackgroundQueue: int pendingTaskCount
io.grpc.internal.DnsNameResolver: boolean $assertionsDisabled
com.tekartik.sqflite.operation.MethodCallOperation$Result: com.tekartik.sqflite.operation.MethodCallOperation this$0
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task delegate
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
androidx.fragment.app.DialogFragment: boolean mCancelable
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.protobuf.MessageSchema: int[] intArray
com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS
com.google.android.gms.common.ErrorDialogFragment: android.app.Dialog zaa
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
com.google.android.gms.base.R$string: int common_google_play_services_notification_ticker
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ExecutorService executor
com.google.firebase.firestore.local.SQLiteTargetCache: int highestTargetId
com.google.android.gms.cloudmessaging.zzp: int zza
com.google.firestore.v1.StructuredQuery$Filter: int filterTypeCase_
com.google.android.gms.common.internal.zzn: android.content.ComponentName zzd
io.grpc.okhttp.OkHttpClientTransport: boolean hasStream
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: java.util.Map objectEncoders
com.google.firestore.v1.Write: int DELETE_FIELD_NUMBER
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
io.grpc.internal.ReflectionLongAdderCounter: java.util.logging.Logger logger
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zai
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.local.MutationQueue mutationQueue
com.google.firebase.firestore.LoadBundleTask: java.lang.Object lock
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.grpc.CompositeCallCredentials$CombiningMetadataApplier: io.grpc.Metadata firstHeaders
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory downloads
com.google.android.gms.internal.firebase-auth-api.zzev: com.google.android.gms.internal.firebase-auth-api.zzeu zzb
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryRemoteDocumentCache remoteDocumentCache
com.google.protobuf.UnsafeUtil: boolean IS_ANDROID_32
com.google.android.gms.common.internal.zzr: com.google.android.gms.common.internal.zzq zze
com.tekartik.sqflite.SqflitePlugin$7: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode SPDY_REPLY
io.grpc.okhttp.OkHttpClientTransport: java.lang.String userAgent
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zzd
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
com.google.android.gms.internal.firebase-auth-api.zzgv: com.google.android.gms.internal.firebase-auth-api.zzpo zzb
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status zza
androidx.core.app.NotificationCompatJellybean: boolean sExtrasFieldAccessFailed
com.google.android.gms.internal.location.zzad: com.google.android.gms.common.api.Status zzbl
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzm
com.google.android.gms.internal.firebase-auth-api.zzz: com.google.android.gms.internal.firebase-auth-api.zzaa zza
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.GmsClient: android.accounts.Account zad
io.grpc.okhttp.OkHttpClientStream$Sink: io.grpc.okhttp.OkHttpClientStream this$0
com.google.firebase.auth.internal.zzt: java.lang.String zzg
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: com.google.firebase.encoders.FieldDescriptor NETWORKTYPE_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zzuh: com.google.android.gms.internal.firebase-auth-api.zzqi zza
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.location.GeolocationManager geolocationManager
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.BinaryLog binlog
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractChannel this$0
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.android.gms.common.internal.zzn: android.net.Uri zza
com.google.protobuf.JavaType: com.google.protobuf.JavaType VOID
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String iosClientId
io.grpc.okhttp.OkHttpClientStream$TransportState: int processedWindow
com.google.firebase.encoders.json.JsonDataEncoderBuilder: boolean ignoreNullValues
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport activeTransport
androidx.webkit.internal.WebResourceErrorImpl: android.webkit.WebResourceError mFrameworksImpl
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Comparable zzb
com.tekartik.sqflite.SqflitePlugin$BgResult: android.os.Handler handler
com.google.android.gms.internal.firebase-auth-api.zzwi: boolean zze
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String pathToBundle
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase FOUND
com.google.firestore.v1.StructuredQuery$CompositeFilter: int FILTERS_FIELD_NUMBER
com.google.firebase.firestore.remote.WatchChange$DocumentChange: com.google.firebase.firestore.model.DocumentKey documentKey
com.google.protobuf.StructuralMessageInfo: boolean messageSetWireFormat
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: io.flutter.plugins.urllauncher.WebViewActivity this$0
io.grpc.Status$Code: io.grpc.Status$Code[] $VALUES
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.core.SyncEngine$SyncEngineCallback syncEngineListener
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialCircles
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzl
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzabb: byte[] zza
com.google.android.gms.internal.firebase-auth-api.zzms: java.lang.String zzi
io.grpc.okhttp.OkHttpProtocolNegotiator: io.grpc.okhttp.internal.Platform DEFAULT_PLATFORM
com.google.android.gms.internal.auth-api-phone.zzb: android.os.IBinder zza
com.google.firebase.firestore.core.SyncEngine: java.util.Map mutationUserCallbacks
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzr zzk
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode CONNECT_ERROR
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.util.regex.Pattern EXPIRATION_TIMESTAMP_PATTERN
com.google.android.gms.maps.model.CustomCap: com.google.android.gms.maps.model.BitmapDescriptor bitmapDescriptor
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzc
com.google.android.gms.common.Feature: long zzc
com.google.android.gms.cloudmessaging.zzj: com.google.android.gms.cloudmessaging.zzm zza
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.google.firebase.firestore.core.EventManager$ListenOptions: boolean includeQueryMetadataChanges
com.google.firebase.firestore.remote.WriteStream: com.google.protobuf.ByteString lastStreamToken
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
okio.SegmentedByteString: int[] directory
com.google.android.gms.common.internal.ClientSettings$Builder: java.lang.String zac
io.flutter.plugins.googlemaps.PolylinesController: com.google.android.gms.maps.GoogleMap googleMap
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: java.util.concurrent.Semaphore semaphore
io.grpc.okhttp.OkHttpChannelBuilder: java.util.logging.Logger log
com.google.android.gms.internal.firebase-auth-api.zzak: com.google.android.gms.internal.firebase-auth-api.zzal zzc
com.google.android.gms.internal.firebase-auth-api.zzxn: java.util.concurrent.ScheduledExecutorService zzc
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl this$0
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
com.google.firebase.auth.internal.RecaptchaActivity: java.util.concurrent.ExecutorService zzc
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: java.lang.String uid
com.google.android.gms.internal.firebase-auth-api.zzvi: java.lang.String zza
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.ClientInfo clientInfo
io.grpc.internal.AbstractClientStream$TransportState: java.lang.Runnable deframerClosedTask
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
com.google.android.gms.internal.firebase-auth-api.zzvu: android.util.SparseArray zza
com.google.android.gms.common.api.internal.TaskApiCall$Builder: boolean zab
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: boolean forceRefresh
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode BAD_CONFIG
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
com.google.protobuf.CodedOutputStreamWriter$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
com.google.android.gms.common.api.zad: com.google.android.gms.common.api.zad zaa
com.google.android.gms.internal.firebase-auth-api.zzpq: java.lang.String zzb
com.google.android.gms.location.zzj: int zzx
com.google.firebase.auth.internal.zzbm: com.google.firebase.auth.internal.zzbm zza
com.google.firebase.auth.FirebaseAuthException: java.lang.String zza
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$ListenResponse$ResponseTypeCase
com.google.android.gms.internal.firebase-auth-api.zzwm: com.google.firebase.auth.PhoneAuthCredential zza
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
io.grpc.internal.ApplicationThreadDeframer$1: int val$numMessages
com.google.android.gms.internal.firebase-auth-api.zzbu: int zzb
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter DEFAULT_INSTANCE
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype CDMA
com.google.android.gms.common.data.DataHolder: boolean zae
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: io.flutter.plugins.webviewflutter.WebViewHostApiImpl webViewHostApi
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzb
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase UPDATE
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
com.google.android.gms.common.UserRecoverableException: android.content.Intent zza
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzadc zza
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzkx zzb
androidx.fragment.app.Fragment: float mPostponedAlpha
com.google.android.datatransport.cct.CctTransportBackend$HttpResponse: int code
com.google.android.gms.internal.firebase-auth-api.zzaal: int zzc
com.google.android.gms.location.LocationSettingsRequest: boolean zzbi
io.flutter.plugins.googlemaps.CirclesController: java.util.Map circleIdToController
com.google.android.gms.internal.firebase-auth-api.zzyj: boolean zzc
io.grpc.okhttp.internal.ConnectionSpec: boolean tls
com.tekartik.sqflite.SqflitePlugin: boolean QUERY_AS_MAP_LIST
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: io.flutter.plugin.common.MethodChannel channel
io.grpc.internal.RetriableStream$1MaxInboundMessageSizeEntry: int val$maxSize
com.google.android.gms.internal.safetynet.zzk$zzb: com.google.android.gms.internal.safetynet.zzg zzaf
com.google.android.datatransport.runtime.TransportImpl: com.google.android.datatransport.Transformer transformer
okio.Segment: boolean owner
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.firebase.firestore.core.DatabaseInfo databaseInfo
com.google.firebase.firestore.DocumentChange$1: int[] $SwitchMap$com$google$firebase$firestore$core$DocumentViewChange$Type
com.google.firebase.firestore.local.QueryResult: com.google.firebase.database.collection.ImmutableSortedMap documents
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
com.google.android.gms.common.GoogleApiAvailability: java.lang.String zac
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.FieldPath DOCUMENT_ID_INSTANCE
com.google.protobuf.DoubleArrayList: com.google.protobuf.DoubleArrayList EMPTY_LIST
io.grpc.internal.DelayedClientTransport: java.util.concurrent.Executor defaultAppExecutor
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzdv: javax.crypto.SecretKey zzb
com.google.firebase.encoders.proto.AtProtobuf: com.google.firebase.encoders.proto.Protobuf$IntEncoding intEncoding
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: com.google.protobuf.MessageLite defaultInstance
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zza
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
io.grpc.internal.DnsNameResolver: io.grpc.NameResolver$ServiceConfigParser serviceConfigParser
com.squareup.okhttp.HttpUrl: java.lang.String password
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema PROTO3_UNKNOWN_FIELD_SET_SCHEMA
com.google.firestore.v1.Target$QueryTarget: java.lang.Object queryType_
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
kotlinx.coroutines.CommonPool: int requestedParallelism
com.baseflow.geolocator.location.FusedLocationClient: int activityRequestCode
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.google.firebase.firestore.proto.Target: long lastListenSequenceNumber_
io.grpc.internal.ClientCallImpl: io.grpc.MethodDescriptor method
com.google.android.gms.internal.location.zzm: com.google.android.gms.location.zzj zzcf
io.grpc.internal.DelayedClientTransport$4: io.grpc.Status val$status
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] sEmptyList
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.Api$ApiOptions zac
androidx.window.core.Bounds: int top
com.google.firestore.admin.v1.Index$IndexField: java.lang.Object valueMode_
com.google.android.gms.internal.firebase-auth-api.zzcg: com.google.android.gms.internal.firebase-auth-api.zzhx zzc
com.google.firebase.firestore.local.MemoryBundleCache: java.util.Map bundles
com.google.common.collect.ImmutableList$SubList: int length
com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList EMPTY
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.TelemetryData zai
com.google.android.gms.internal.firebase-auth-api.zznb: int zzf
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
io.flutter.plugins.googlemaps.PolygonsController: java.util.Map polygonIdToController
com.google.android.gms.common.internal.GetServiceRequest: int zzb
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_BASIC_USAGE
com.google.firebase.firestore.bundle.BundledDocumentMetadata: com.google.firebase.firestore.model.DocumentKey key
io.grpc.internal.ApplicationThreadDeframer$3: io.grpc.internal.ReadableBuffer val$data
com.google.android.gms.common.api.Scope: java.lang.String zzb
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicReferenceArray workers
io.grpc.InternalLogId: java.util.concurrent.atomic.AtomicLong idAlloc
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_ERROR
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: javax.inject.Provider schedulerProvider
com.google.firebase.auth.internal.zzaw: com.google.android.gms.tasks.TaskCompletionSource zzc
io.grpc.internal.ForwardingNameResolver: io.grpc.NameResolver delegate
io.grpc.okhttp.AsyncSink: okio.Sink sink
com.google.android.gms.internal.firebase-auth-api.zzev: java.math.BigInteger zzg
androidx.fragment.app.FragmentActivity: boolean mStopped
androidx.core.R$id: int accessibility_custom_action_8
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: java.lang.String authority
io.grpc.okhttp.OkHttpClientStream: io.grpc.okhttp.OkHttpClientStream$TransportState state
com.google.firebase.firestore.model.mutation.Mutation: java.util.List fieldTransforms
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
com.google.android.gms.common.GoogleApiAvailability: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.IidStore iidStore
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord: android.content.Intent intent
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
com.google.android.gms.internal.firebase-auth-api.zzno: java.lang.String zze
io.grpc.internal.RetryPolicy: long initialBackoffNanos
androidx.core.R$id: int accessibility_custom_action_25
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
androidx.window.embedding.SplitController: boolean sDebug
com.google.android.gms.internal.firebase-auth-api.zzyq: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.Blob: com.google.protobuf.ByteString bytes
io.grpc.NameResolver$Args: java.util.concurrent.Executor executor
androidx.window.R$attr: int alwaysExpand
com.google.firestore.v1.TargetChange: int TARGET_IDS_FIELD_NUMBER
com.google.android.gms.common.api.internal.zap: java.util.concurrent.atomic.AtomicReference zab
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzh
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: int value
com.google.firebase.auth.internal.zzac: com.google.firebase.auth.internal.zzx zza
com.google.android.gms.internal.firebase-auth-api.zztk: com.google.android.gms.internal.firebase-auth-api.zzyq zzb
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard
io.grpc.NameResolver$1: io.grpc.NameResolver this$0
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: javax.inject.Provider contextProvider
io.grpc.internal.StatsTraceContext: java.util.concurrent.atomic.AtomicBoolean closed
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzxy: java.lang.String zze
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.core.os.LocaleListPlatformWrapper: android.os.LocaleList mLocaleList
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzc
com.tekartik.sqflite.operation.MethodCallOperation: io.flutter.plugin.common.MethodCall methodCall
io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink
com.google.android.gms.location.zzaj: int zzas
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker this$1
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase INTEGER_VALUE
com.google.android.gms.common.api.internal.zzb: java.util.Map zzb
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State Error
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$1: com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor this$1
com.google.android.gms.internal.location.zzo: com.google.android.gms.location.zzr zzci
com.google.firestore.v1.Precondition: int EXISTS_FIELD_NUMBER
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallation persistedInstallation
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.RequestLimiter requestLimiter
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String appId
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: com.google.android.gms.common.api.internal.OnConnectionFailedListener zah
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.firestore.v1.StructuredQuery$UnaryFilter: int OP_FIELD_NUMBER
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.concurrent.atomic.AtomicBoolean zzb
io.grpc.Metadata: boolean $assertionsDisabled
com.google.android.gms.location.zzp: com.google.android.gms.tasks.TaskCompletionSource zzab
com.google.firebase.firestore.remote.WatchChange$DocumentChange: java.util.List updatedTargetIds
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.ClientStreamTracer[] tracers
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: io.grpc.ClientCall$Listener observer
com.google.firebase.auth.internal.zzj: com.google.firebase.auth.internal.zzj zza
androidx.window.R$styleable: int[] SplitPairRule
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec$1: int[] $SwitchMap$com$google$firebase$firestore$DocumentChange$Type
com.google.common.math.IntMath: int[] biggestBinomials
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.firestore.bundle.BundledDocumentMetadata currentMetadata
io.grpc.Status: io.grpc.Status UNAUTHENTICATED
com.google.android.gms.internal.firebase-auth-api.zztz: com.google.android.gms.internal.firebase-auth-api.zzpq zza
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long currentAddress
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions
com.google.android.gms.internal.firebase-auth-api.zzabk: java.util.Map zzd
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: io.grpc.okhttp.OkHttpClientStream stream
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
com.google.gson.stream.JsonReader: boolean lenient
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] $VALUES
com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
com.google.android.gms.internal.firebase-auth-api.zzhs: com.google.android.gms.internal.firebase-auth-api.zzhx zzb
com.google.firebase.firestore.local.LocalViewChanges: boolean fromCache
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: java.lang.String userAgent
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zar
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.cloudmessaging.zzt zzg
com.google.protobuf.Timestamp: int SECONDS_FIELD_NUMBER
com.google.firebase.firestore.core.UserData$ParseAccumulator: java.util.ArrayList fieldTransforms
com.google.android.gms.tasks.zzaf: boolean zzh
androidx.core.R$id: int accessibility_custom_action_22
com.google.firebase.firestore.remote.FirestoreCallCredentials: io.grpc.Metadata$Key X_FIREBASE_APPCHECK
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission denied
com.google.android.gms.internal.firebase-auth-api.zzabh: com.google.android.gms.internal.firebase-auth-api.zzabh zza
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: com.google.firebase.encoders.FieldDescriptor field
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke BUILD_MESSAGE_INFO
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: javax.inject.Provider contextProvider
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator OR
com.google.firebase.messaging.SyncTask: long nextDelaySeconds
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
io.grpc.internal.ManagedChannelImplBuilder: long retryBufferSize
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: android.content.Context mContext
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: long end_ms_
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType FULL
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase CONDITIONTYPE_NOT_SET
com.google.firebase.messaging.RemoteMessage$Notification: int[] lightSettings
androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager mInstance
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Internal$IntList removedTargetIds_
io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.firebase.components.LazySet: java.util.Set providers
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long maxStorageSizeInBytes
io.grpc.ConnectivityState: io.grpc.ConnectivityState READY
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ObjectPool executorPool
com.tekartik.sqflite.Database: int logLevel
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: byte[] sourceExtension
io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$MethodType type
io.grpc.internal.DnsNameResolver: java.lang.String JNDI_PROPERTY
com.google.firebase.messaging.reporting.MessagingClientEvent: long bulk_id_
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp snapshotVersion_
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Object lock
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: boolean initialized
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.Integer zae
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbm zzm
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service
com.google.android.gms.internal.firebase-auth-api.zzoe: java.lang.ThreadLocal zzb
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzd
io.grpc.okhttp.internal.framed.Hpack: okio.ByteString PSEUDO_PREFIX
io.grpc.okhttp.internal.ConnectionSpec: java.lang.String[] tlsVersions
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$FutureCanceller scheduledRetry
com.google.firebase.firestore.local.QueryResult: com.google.firebase.database.collection.ImmutableSortedSet remoteKeys
com.google.common.io.BaseEncoding$Alphabet: int charsPerChunk
io.grpc.internal.MessageDeframer: io.grpc.internal.MessageDeframer$State state
com.google.firebase.firestore.core.Transaction: java.util.concurrent.Executor defaultExecutor
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.firebase.auth.internal.zzao zzg
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: io.grpc.okhttp.internal.ConnectionSpec connectionSpec
com.google.firebase.firestore.local.OverlayedDocument: com.google.firebase.firestore.model.Document overlayedDocument
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String authDomain
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.atomic.AtomicBoolean isRunning
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zza
com.google.common.math.IntMath: int[] halfPowersOf10
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType UINT64
com.google.android.gms.internal.firebase-auth-api.zzcg: com.google.android.gms.internal.firebase-auth-api.zzhx zzb
com.google.firestore.bundle.BundledQuery: int limitType_
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int allocatedBytes
com.google.android.gms.location.LocationSettingsRequest$Builder: java.util.ArrayList zzbk
com.google.android.gms.internal.firebase-auth-api.zzqk: java.lang.String zza
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.internal.ICancelToken zao
androidx.lifecycle.LiveData: java.lang.Object mData
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
com.google.firebase.firestore.FieldPath: java.util.regex.Pattern RESERVED
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor OSBUILD_DESCRIPTOR
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Attributes attributes
com.google.common.collect.RegularImmutableSet: com.google.common.collect.RegularImmutableSet EMPTY
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions zzh
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzn
com.google.android.gms.internal.firebase-auth-api.zzyo: java.lang.String zza
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$Subchannel subchannel
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzb
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
io.grpc.internal.DelayedClientCall$CloseListenerRunnable: io.grpc.internal.DelayedClientCall this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
com.google.firebase.firestore.remote.AbstractStream$IdleTimeoutRunnable: com.google.firebase.firestore.remote.AbstractStream this$0
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.MessageInfoFactory EMPTY_FACTORY
com.google.protobuf.UnsafeUtil: long DOUBLE_ARRAY_BASE_OFFSET
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzyj: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.local.LocalStore$AllocateQueryHolder: com.google.firebase.firestore.local.TargetData cached
com.google.common.collect.ImmutableMap$Builder: java.util.Comparator valueComparator
com.google.android.gms.internal.firebase-auth-api.zztq: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.android.gms.internal.firebase-auth-api.zzfr: android.content.SharedPreferences zza
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zznw: int zze
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined
com.google.firebase.messaging.FcmBroadcastProcessor: android.content.Context context
com.google.android.gms.cloudmessaging.Rpc: android.content.Context zzf
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: com.google.firebase.firestore.model.SnapshotVersion readTime
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.WeakHashMap exceptionCtors
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
io.grpc.LoadBalancer$ResolvedAddresses: java.lang.Object loadBalancingPolicyConfig
com.google.firebase.auth.UserProfileChangeRequest: boolean zzd
io.grpc.internal.OobChannel: io.grpc.InternalLogId logId
io.grpc.okhttp.ExceptionHandlingFrameWriter: java.util.logging.Logger log
okio.SegmentPool: okio.Segment next
com.google.android.gms.common.api.internal.zabv: com.google.android.gms.common.api.GoogleApi zaa
com.google.android.gms.common.api.internal.zacr: com.google.android.gms.common.api.internal.zact zab
com.google.android.gms.internal.firebase-auth-api.zzrm: java.lang.String zzb
com.google.firebase.firestore.core.EventManager: com.google.firebase.firestore.core.SyncEngine syncEngine
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: byte[] extras
com.google.android.gms.internal.firebase-auth-api.zzadk: com.google.android.gms.internal.firebase-auth-api.zzadp zzb
io.grpc.Status$Code: io.grpc.Status$Code PERMISSION_DENIED
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
com.google.android.gms.stats.WakeLock: int zzh
com.google.android.gms.internal.firebase-auth-api.zzsu: java.lang.String zza
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: javax.inject.Provider creationContextFactoryProvider
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.protobuf.ByteString streamToken
com.google.firestore.v1.BatchGetDocumentsRequest: int DATABASE_FIELD_NUMBER
com.google.android.gms.common.api.internal.zap: com.google.android.gms.common.GoogleApiAvailability zac
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.core.DatabaseInfo databaseInfo
com.google.android.gms.internal.location.zzbd: boolean zzdi
com.google.android.gms.internal.firebase-auth-api.zzabn: com.google.android.gms.internal.firebase-auth-api.zzabl zzb
com.google.android.gms.internal.firebase-auth-api.zzos: java.util.logging.Logger zzh
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.local.SQLitePersistence db
io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.InternalSubchannel$CallTracingTransport this$0
io.grpc.okhttp.OkHttpClientTransport: java.util.Map streams
com.google.firebase.auth.internal.zzag: java.util.List zzc
okio.RealBufferedSource: okio.Buffer buffer
com.google.common.io.ByteStreams: java.io.OutputStream NULL_OUTPUT_STREAM
com.google.android.gms.internal.firebase-auth-api.zznb: int zzg
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String message_id_
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport shutdownDueToUpdateTransport
com.google.android.gms.internal.firebase-auth-api.zzzq: boolean zzo
com.google.android.gms.base.R$string: int common_google_play_services_unsupported_text
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
com.google.firebase.firestore.model.ObjectValue: java.util.Map overlayMap
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsOut
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
io.grpc.internal.RetriableStream: java.util.concurrent.atomic.AtomicBoolean noMoreTransparentRetry
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$ApiOptions zae
com.google.android.gms.internal.firebase-auth-api.zzft: com.google.android.gms.internal.firebase-auth-api.zzhj zza
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzb
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.android.gms.common.api.internal.zabu: java.util.Set zae
com.google.protobuf.WireFormat: int MESSAGE_SET_TYPE_ID_TAG
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
io.grpc.okhttp.internal.framed.Hpack$Reader: io.grpc.okhttp.internal.framed.Header[] dynamicTable
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator GREATER_THAN_OR_EQUAL
io.flutter.plugins.webviewflutter.InstanceManager: android.util.LongSparseArray instanceIdsToInstances
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
okio.RealBufferedSink: okio.Buffer buffer
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.BitmapDescriptor zzd
com.google.android.gms.internal.firebase-auth-api.zzvb: com.google.android.gms.internal.firebase-auth-api.zzri zza
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
okio.Buffer: byte[] DIGITS
io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String collectionId_
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
com.google.android.gms.internal.firebase-auth-api.zzaau: int zzc
com.google.android.gms.cloudmessaging.zzt: android.content.Context zza
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zzp
io.flutter.plugins.webviewflutter.JavaScriptChannel: java.lang.String javaScriptChannelName
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zzb
io.grpc.SynchronizationContext$ManagedRunnable: java.lang.Runnable task
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator OPERATOR_UNSPECIFIED
io.grpc.internal.JsonParser$1: int[] $SwitchMap$com$google$gson$stream$JsonToken
com.google.firestore.v1.Document: int CREATE_TIME_FIELD_NUMBER
com.tekartik.sqflite.SqflitePlugin$8: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source SERVER
com.google.protobuf.MessageSchema: int repeatedFieldOffsetStart
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.OnDelegateCreatedListener zad
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator NOT_IN
io.grpc.StatusRuntimeException: boolean fillInStackTrace
io.flutter.plugins.googlemaps.GoogleMapController: boolean trafficEnabled
com.google.firestore.v1.BatchGetDocumentsResponse: int FOUND_FIELD_NUMBER
io.flutter.embedding.android.KeyChannelResponder: int combiningCharacter
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzT
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type METADATA
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
com.tekartik.sqflite.SqflitePlugin: java.lang.Object openCloseLocker
androidx.fragment.app.Fragment: android.view.View mInnerView
com.google.android.gms.common.api.internal.zai: int zac
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsApi SettingsApi
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit
com.google.android.gms.internal.firebase-auth-api.zzji: int zzf
com.google.android.gms.internal.firebase-auth-api.zzadx: com.google.android.gms.internal.firebase-auth-api.zzaeb zza
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: com.google.firebase.encoders.FieldDescriptor APPNAMESPACE_DESCRIPTOR
com.google.android.gms.internal.firebase-auth-api.zznf: int zze
com.google.android.gms.tasks.zzaf: java.lang.Exception zzg
com.google.android.gms.internal.firebase-auth-api.zzaek: com.google.android.gms.internal.firebase-auth-api.zzack zza
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzmh zzf
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String mccMnc
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: int priority_
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider backendFactoryProvider
com.google.firebase.firestore.model.TargetIndexMatcher: java.util.List equalityFilters
com.google.common.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder zaa
com.google.android.gms.internal.firebase-auth-api.zzadk: com.google.android.gms.internal.firebase-auth-api.zzadk zza
com.google.firestore.v1.BatchGetDocumentsRequest: int NEW_TRANSACTION_FIELD_NUMBER
com.google.firebase.firestore.bundle.BundleMetadata: int totalDocuments
com.google.firebase.auth.zzo: com.google.firebase.auth.FirebaseAuth zzh
io.flutter.plugins.googlemaps.GoogleMapController: boolean myLocationEnabled
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding DEFAULT
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] VALUES
com.google.android.gms.internal.firebase-auth-api.zzzb: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType[] $VALUES
androidx.core.app.BundleCompat$BundleCompatBaseImpl: boolean sPutIBinderMethodFetched
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: com.google.firebase.firestore.remote.AndroidConnectivityMonitor this$0
androidx.fragment.app.FragmentManagerImpl: boolean DEBUG
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzi
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzaei: int zzb
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzf
com.google.firestore.v1.WriteRequest: int STREAM_ID_FIELD_NUMBER
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: io.grpc.okhttp.internal.OptionalMethod SET_NPN_PROTOCOLS
com.google.firebase.firestore.remote.FirestoreChannel$2: com.google.firebase.firestore.remote.FirestoreChannel this$0
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zza
com.google.android.gms.internal.maps.zza: android.os.IBinder zza
com.google.firebase.messaging.DisplayNotification: java.util.concurrent.ExecutorService networkIoExecutor
com.google.firebase.events.Event: java.lang.Object payload
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String fisError
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.model.SnapshotVersion snapshotVersion
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_DEAD_CLIENT
io.grpc.internal.ManagedChannelImplBuilder: long perRpcBufferLimit
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
com.google.android.gms.cloudmessaging.Rpc: java.util.concurrent.Executor zzc
io.grpc.Attributes$Builder: boolean $assertionsDisabled
com.squareup.okhttp.Request: java.lang.Object tag
io.grpc.okhttp.OkHttpClientTransport: io.grpc.HttpConnectProxiedSocketAddress proxiedAddr
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl: io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCreator webViewClientCreator
com.google.firebase.firestore.core.Query$QueryComparator: java.util.List sortOrder
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg[] zzk
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
com.google.protobuf.MapEntryLite$Metadata: com.google.protobuf.WireFormat$FieldType keyType
com.lyokone.location.FlutterLocation: float distanceFilter
com.baseflow.geolocator.StreamHandlerImpl: android.content.Context context
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.remote.GrpcCallProvider callProvider
androidx.core.app.NotificationCompat$Builder: java.lang.String mGroupKey
com.google.android.gms.internal.firebase-auth-api.zzaaw: byte[] zze
com.google.protobuf.FieldType: com.google.protobuf.FieldType BOOL_LIST_PACKED
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
com.google.android.gms.internal.location.zzas: java.util.Map zzcx
com.google.android.gms.internal.auth-api-phone.zzaa: com.google.android.gms.common.Feature zzb
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
com.google.protobuf.MapFieldSchemas: com.google.protobuf.MapFieldSchema LITE_SCHEMA
com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator ITERATOR
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.ExponentialBackoff backoff
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase NULL_VALUE
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
io.flutter.plugins.googlemaps.PolylineController: com.google.android.gms.maps.model.Polyline polyline
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: com.google.firebase.encoders.FieldDescriptor MAXCACHESIZEBYTES_DESCRIPTOR
io.grpc.okhttp.internal.Util: byte[] EMPTY_BYTE_ARRAY
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zza
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator[] $VALUES
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind DESCENDING
com.google.android.gms.internal.firebase-auth-api.zzaeb: com.google.android.gms.internal.firebase-auth-api.zzadz zze
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String libraryName
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzd
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzmk zzb
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: android.content.Context applicationContext
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$ServiceConfigParser serviceConfigParser
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.auth.CredentialsProvider authProvider
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: io.grpc.Context context
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State HEADER
io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap perServerSockets
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
io.grpc.internal.RetriableStream$StartEntry: io.grpc.internal.RetriableStream this$0
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.Http2Ping ping
io.grpc.internal.TransportTracer: long streamsStarted
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String bodyLocKey
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider defaultSchedulerProvider
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel ERROR
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory oobTransportFactory
com.google.android.gms.internal.firebase-auth-api.zzx: com.google.android.gms.internal.firebase-auth-api.zzw zzb
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int value
io.grpc.internal.ManagedChannelImpl$2: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzbw: java.lang.Class zzc
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Set pendingTargetResets
com.google.android.gms.common.internal.BaseGmsClient: boolean zzC
com.google.firebase.auth.internal.zzl: java.lang.String zza
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String country
com.google.firebase.firestore.remote.FirestoreChannel$1: io.grpc.ClientCall[] val$call
io.grpc.internal.ManagedChannelImplBuilder: java.util.Map defaultServiceConfig
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] $VALUES
com.google.android.gms.common.GooglePlayServicesNotAvailableException: int errorCode
com.google.firebase.firestore.remote.ExistenceFilter: int count
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.internal.framed.FrameWriter testFrameWriter
com.google.android.gms.common.internal.StringResourceValueReader: android.content.res.Resources zza
io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.DelayedStream$DelayedStreamListener this$0
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzhw zzd
com.google.firebase.firestore.local.MemoryTargetCache: java.util.Map targets
com.google.firebase.FirebaseOptions$Builder: java.lang.String apiKey
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType BYTES
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String ticker
com.google.firebase.FirebaseOptions$Builder: java.lang.String gcmSenderId
com.google.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer
com.google.android.gms.internal.firebase-auth-api.zzhi: com.google.android.gms.internal.firebase-auth-api.zzhi zza
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
com.google.android.gms.maps.MapView: com.google.android.gms.maps.zzah zza
com.google.android.gms.internal.firebase-auth-api.zzsk: com.google.android.gms.internal.firebase-auth-api.zzwx zza
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean throwOnUnknownProperties
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaew zzt
com.google.common.base.Throwables: java.lang.reflect.Method getStackTraceDepthMethod
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String appId
io.grpc.InternalChannelz$Tls: java.security.cert.Certificate localCert
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
com.google.android.gms.internal.firebase-auth-api.zznt: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
com.google.android.gms.common.api.internal.BasePendingResult: boolean zam
com.google.android.gms.internal.firebase-auth-api.zzaar: byte[] zza
com.google.android.gms.internal.firebase-auth-api.zzadm: int zzd
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Parser PARSER
io.grpc.internal.RetriableStream: boolean isClosed
kotlinx.coroutines.Empty: boolean isActive
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
com.google.android.gms.internal.firebase-auth-api.zzzl: java.lang.String zzb
com.google.android.gms.internal.location.zzas: java.util.Map zzcy
io.grpc.internal.AbstractClientStream$GetFramer: io.grpc.Metadata headers
com.google.protobuf.CodedInputStream$ArrayDecoder: int pos
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzr
com.google.android.gms.internal.firebase-auth-api.zzht: java.util.logging.Logger zza
com.google.android.gms.internal.firebase-auth-api.zzye: com.google.android.gms.internal.firebase-auth-api.zzye zzb
com.google.firebase.FirebaseOptions: java.lang.String gcmSenderId
io.grpc.internal.ManagedChannelImpl: boolean terminating
com.google.firebase.auth.GoogleAuthCredential: java.lang.String zza
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object filterType_
com.google.android.gms.tasks.zzj: java.lang.Object zzb
com.google.android.gms.location.LocationAvailability: int zzar
io.grpc.internal.DnsNameResolver$InternalResolutionResult: java.util.List addresses
io.grpc.Attributes$Builder: java.util.Map newdata
com.google.android.gms.stats.WakeLock: android.os.WorkSource zzo
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$ResponseCode responseCode
io.grpc.internal.RetriableStream$Substream: int previousAttemptCount
com.google.firestore.v1.StructuredQuery$CollectionSelector: int COLLECTION_ID_FIELD_NUMBER
com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex: java.util.HashMap index
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzk
io.grpc.internal.ClientCallImpl: io.grpc.internal.CallTracer channelCallsTracer
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase INCREMENT
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
com.google.android.datatransport.runtime.TransportRuntime_Factory: javax.inject.Provider uptimeClockProvider
io.grpc.Status$Code: io.grpc.Status$Code UNKNOWN
com.google.android.gms.internal.firebase-auth-api.zztf: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.common.io.BaseEncoding$Alphabet: char[] chars
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: boolean ENABLE_ALLOCATION_TRACKING
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: com.google.android.datatransport.runtime.backends.CreationContextFactory creationContextFactory
androidx.window.core.Version: int major
io.grpc.internal.DnsNameResolver: io.grpc.ProxyDetector proxyDetector
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: io.flutter.plugins.webviewflutter.Releasable value
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver nameResolver
com.google.firebase.firestore.proto.Target: int LAST_LIMBO_FREE_SNAPSHOT_VERSION_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzzf: java.lang.String zzb
androidx.core.app.NotificationCompat$Action: boolean mIsContextual
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List addressGroups
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key MESSAGE_ACCEPT_ENCODING_KEY
com.google.firebase.FirebaseOptions: java.lang.String databaseUrl
okio.Buffer: okio.Segment head
com.google.protobuf.UnsafeUtil$MemoryAccessor: sun.misc.Unsafe unsafe
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzg
com.google.android.gms.internal.firebase-auth-api.zzzw: java.lang.String zzb
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.android.gms.maps.model.Marker: com.google.android.gms.internal.maps.zzx zza
com.google.android.gms.internal.firebase-auth-api.zzon: java.lang.String zzb
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.TaskCompletionSource completionSource
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaa
com.google.firebase.auth.internal.zzam: com.google.android.gms.common.logging.Logger zzg
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzE
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider creationContextFactoryProvider
io.flutter.plugins.googlemaps.GoogleMapController: boolean loadedCallbackPending
androidx.lifecycle.LiveData: boolean mDispatchingValue
io.grpc.CallOptions$Key: java.lang.String debugString
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
io.grpc.internal.DelayedStream$10: int val$numMessages
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.google.android.gms.signin.SignInOptions: java.lang.String zad
androidx.core.app.NotificationCompat$Builder: boolean mAllowSystemGeneratedContextualActions
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] $VALUES
io.grpc.internal.RetriableStream$Throttle: java.util.concurrent.atomic.AtomicInteger tokenCount
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestoreSettings settings
com.google.android.gms.internal.firebase-auth-api.zzaay: int zzd
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source MergeSet
io.grpc.internal.ConnectivityStateManager: java.util.ArrayList listeners
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
androidx.fragment.app.Fragment: android.os.Bundle mArguments
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl$WebSettingsCreator webSettingsCreator
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler
com.google.android.gms.stats.zzc: int zza
io.grpc.internal.MetadataApplierImpl: io.grpc.internal.ClientStream returnedStream
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect val$epicenter
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zze
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzb
com.google.firebase.FirebaseApp: java.lang.String name
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Internal$ProtobufList fieldTransforms_
com.google.android.gms.internal.firebase-auth-api.zzgx: java.lang.Class zzb
com.google.android.gms.common.api.internal.zap: boolean zaa
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey zaf
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] $VALUES
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.LatLng zza
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.common.api.internal.zabt: com.google.android.gms.common.api.internal.zabu zab
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
com.google.android.datatransport.runtime.TransportFactoryImpl: java.util.Set supportedPayloadEncodings
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String zab
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.zzu zza
com.google.firebase.firestore.local.DocumentReference: java.util.Comparator BY_TARGET
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.fragment.app.Fragment$AnimationInfo: int mNextAnim
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.grpc.internal.DnsNameResolver: boolean resolving
com.google.firestore.v1.BatchGetDocumentsResponse$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String measurementId
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzaah: java.lang.Object zzc
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor LOGSOURCE_DESCRIPTOR
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
com.google.android.gms.safetynet.SafeBrowsingData: java.io.File zzs
io.grpc.okhttp.OkHttpClientTransport$2: io.grpc.okhttp.OkHttpClientTransport this$0
com.google.android.gms.internal.firebase-auth-api.zzfm: java.lang.String zzb
com.google.firebase.auth.zzk: com.google.firebase.auth.FirebaseAuth$AuthStateListener zza
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code ALREADY_EXISTS
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: com.google.firebase.firestore.util.AsyncQueue this$0
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: com.google.firebase.messaging.TopicsSyncTask this$0
io.grpc.okhttp.OkHttpClientStream$TransportState: io.grpc.okhttp.ExceptionHandlingFrameWriter frameWriter
com.google.android.gms.internal.firebase-auth-api.zzwa: java.lang.String zza
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: com.google.firebase.firestore.util.AsyncQueue asyncQueue
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
com.google.android.gms.internal.firebase-auth-api.zzsk: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.grpc.okhttp.OkHttpChannelBuilder: long keepAliveTimeoutNanos
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath EMPTY_PATH
com.google.firebase.auth.OAuthProvider$CredentialBuilder: java.lang.String zzb
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType DUMMY
com.google.protobuf.NewInstanceSchemas: com.google.protobuf.NewInstanceSchema FULL_SCHEMA
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
io.grpc.internal.DelayedStream$8: io.grpc.Status val$reason
kotlinx.coroutines.channels.AbstractSendChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
io.flutter.plugins.googlemaps.PolylineBuilder: float density
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder mBuilder
io.grpc.internal.DnsNameResolver: java.util.Set SERVICE_CONFIG_CHOICE_KEYS
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.firebase.messaging.RemoteMessage: com.google.firebase.messaging.RemoteMessage$Notification notification
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: java.util.ArrayList val$webViewListeners
com.google.android.gms.internal.location.zzo: com.google.android.gms.internal.location.zzm zzch
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
com.tekartik.sqflite.Database: android.database.sqlite.SQLiteDatabase sqliteDatabase
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source Set
com.google.android.gms.internal.firebase-auth-api.zzvt: com.google.android.gms.common.logging.Logger zza
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: com.google.firebase.firestore.model.FieldIndex$IndexOffset offset
com.google.protobuf.ByteString$CodedBuilder: byte[] buffer
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.iid.internal.FirebaseInstanceIdInternal iid
com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.LazyStringList list
io.grpc.internal.RetriableStream$Sublistener$5: io.grpc.internal.StreamListener$MessageProducer val$producer
io.grpc.Metadata: io.grpc.Metadata$AsciiMarshaller ASCII_STRING_MARSHALLER
com.google.android.gms.common.internal.ClientSettings: java.util.Map zad
com.google.firestore.v1.Write$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzza: java.lang.String zzc
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp commitTime_
kotlinx.coroutines.CommonPool: kotlinx.coroutines.CommonPool INSTANCE
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event UNKNOWN_EVENT
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] $VALUES
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.common.base.Charsets: java.nio.charset.Charset UTF_8
androidx.core.R$id: int accessibility_custom_action_4
com.google.android.gms.internal.firebase-auth-api.zzqi: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzld: int zzf
com.google.android.gms.internal.firebase-auth-api.zzog: byte[] zzd
com.google.firebase.firestore.core.Target: java.util.List filters
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.location.LocationAvailability: long zzat
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.HashSet documentIdPropertyNames
com.google.android.gms.internal.firebase-auth-api.zzye: java.lang.String zzd
com.google.android.gms.common.internal.zaq: com.google.android.gms.common.api.Response zaa
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_ENABLE
androidx.core.R$id: int accessibility_custom_action_0
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status FATAL_ERROR
com.google.firebase.firestore.proto.WriteBatch: int BATCH_ID_FIELD_NUMBER
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String title
com.lyokone.location.FlutterLocation: com.google.android.gms.location.SettingsClient mSettingsClient
com.google.firebase.firestore.local.IndexBackfiller: com.google.firebase.firestore.local.Persistence persistence
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_A
com.google.firebase.auth.internal.zzi: java.lang.String zza
com.google.android.gms.common.api.internal.zach: com.google.android.gms.common.api.internal.zai zaa
com.google.android.gms.signin.internal.zai: com.google.android.gms.common.internal.zat zab
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.android.gms.tasks.Task channelTask
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.database.collection.ImmutableSortedMap documents
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase MINIMUM
com.google.protobuf.MapFieldLite: boolean isMutable
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order[] $VALUES
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.firebase.auth.internal.zzau: android.content.Context zzb
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: android.os.Handler mainLooper
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$FutureCanceller scheduledHedging
com.google.common.collect.SingletonImmutableSet: int cachedHashCode
com.google.android.gms.internal.firebase-auth-api.zzuk: com.google.firebase.auth.PhoneAuthCredential zza
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] $VALUES
com.google.protobuf.JavaType: com.google.protobuf.JavaType STRING
io.grpc.internal.RetriableStream: long nextBackoffIntervalNanos
com.google.firebase.firestore.model.mutation.PatchMutation: com.google.firebase.firestore.model.ObjectValue value
com.google.firestore.v1.Write: int UPDATE_FIELD_NUMBER
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics DEFAULT_INSTANCE
androidx.fragment.app.DialogFragment: boolean mDismissed
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
com.google.firestore.v1.CommitRequest: int TRANSACTION_FIELD_NUMBER
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: java.lang.Thread thread
com.google.common.math.IntMath: byte[] maxLog10ForLeadingZeros
com.google.protobuf.ArrayDecoders$Registers: int int1
io.grpc.internal.AbstractClientStream: java.util.logging.Logger log
com.google.firestore.v1.Write: java.lang.Object operation_
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
io.flutter.plugins.googlemaps.CirclesController: java.util.Map googleMapsCircleIdToDartCircleId
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.firestore.local.MemoryPersistence persistence
io.grpc.internal.RetriableStream$State: java.util.Collection drainedSubstreams
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.GeolocationManager geolocationManager
com.google.firebase.messaging.reporting.MessagingClientEvent: int ttl_
io.grpc.internal.RetriableStream: java.util.concurrent.Executor listenerSerializeExecutor
com.google.android.gms.internal.location.zzk: com.google.android.gms.internal.location.zzbj zzcb
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit
com.google.protobuf.Timestamp: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzrg: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean shutdown
com.google.android.gms.internal.firebase-auth-api.zzxt: java.lang.String zzb
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean usingSharedExecutor
com.google.protobuf.UnmodifiableLazyStringList$1: int val$index
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.UserDataReader userDataReader
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: com.google.firebase.firestore.remote.ExistenceFilter existenceFilter
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zzg
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzd
io.grpc.internal.RetriableStream$1FlushEntry: io.grpc.internal.RetriableStream this$0
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzb
com.tekartik.sqflite.SqflitePlugin$BgResult$2: com.tekartik.sqflite.SqflitePlugin$BgResult this$1
com.google.firebase.firestore.proto.NoDocument: java.lang.String name_
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EDGE
com.google.android.gms.common.internal.Objects$ToStringHelper: java.util.List zza
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$OnCredentialsListener onCredentialsListener
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: java.lang.Object result
com.google.android.gms.common.internal.ClientSettings: int zae
io.flutter.plugins.googlemaps.TileProviderController$Worker: java.util.concurrent.CountDownLatch countDownLatch
com.google.android.gms.internal.firebase-auth-api.zzbb: com.google.android.gms.internal.firebase-auth-api.zzgb zzb
io.grpc.NameResolverRegistry$NameResolverFactory: io.grpc.NameResolverRegistry this$0
androidx.window.R$styleable: int SplitPairRule_splitRatio
io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry compressorRegistry
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbi zze
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.EventListener listener
androidx.window.R$attr: int placeholderActivityName
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor this$0
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.internal.maps.zzi zza
com.google.android.gms.maps.model.PolylineOptions: boolean zze
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseUser zzf
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.Fragment val$fragment
com.tekartik.sqflite.SqflitePlugin$6: java.lang.Boolean val$readOnly
com.google.protobuf.MessageSchema: int maxFieldNumber
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.zze zzk
com.google.android.gms.internal.firebase-auth-api.zztl: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.android.gms.common.internal.zzac: android.os.IBinder zza
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.local.IndexManager indexManager
com.google.common.base.MoreObjects$ToStringHelper: java.lang.String className
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzxv zzl
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: javax.inject.Provider monotonicClockProvider
com.google.android.gms.internal.firebase-auth-api.zzui: com.google.firebase.auth.EmailAuthCredential zza
com.google.firebase.firestore.core.EventManager: com.google.firebase.firestore.core.OnlineState onlineState
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.remote.Stream$State state
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzaej: java.util.Iterator zza
io.grpc.ServiceProviders$1: io.grpc.ServiceProviders$PriorityAccessor val$priorityAccessor
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] $VALUES
androidx.localbroadcastmanager.content.LocalBroadcastManager: java.util.HashMap mActions
io.grpc.internal.ManagedChannelImpl$RealChannel$4: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall val$pendingCall
com.google.firebase.firestore.proto.NoDocument: int NAME_FIELD_NUMBER
com.google.android.gms.tasks.zzm: com.google.android.gms.tasks.Task zza
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzg
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zzb
com.google.android.gms.internal.location.zzo: int zzcg
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
com.google.firebase.auth.internal.zzx: com.google.android.gms.internal.firebase-auth-api.zzyq zza
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mHeadsUpContentView
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_IMS
com.google.android.gms.internal.location.zzl: com.google.android.gms.internal.location.zzk zzcc
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: java.lang.Long delta
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode AUTH_ERROR
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zzzg zza
com.google.firebase.auth.internal.zzd: com.google.android.gms.tasks.TaskCompletionSource zza
androidx.core.app.NotificationCompat$Builder: androidx.core.content.LocusIdCompat mLocusId
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_IA
com.google.android.gms.internal.location.zzbf: com.google.android.gms.location.zzx zzdm
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType TLS
com.google.android.gms.internal.firebase-auth-api.zzpb: int[] zzc
com.google.firebase.encoders.proto.AtProtobuf: int tag
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.android.gms.common.internal.zzt: android.net.Uri zzb
io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
androidx.browser.customtabs.CustomTabColorSchemeParams: java.lang.Integer toolbarColor
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
io.grpc.MethodDescriptor: java.lang.String serviceName
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.Internal$EnumLiteMap enumTypeMap
io.grpc.internal.MessageDeframer: io.grpc.internal.MessageDeframer$Listener listener
com.google.android.gms.internal.safetynet.zzc: java.lang.ClassLoader zzd
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context deviceProtectedContext
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.String description
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.util.List logEvents
io.grpc.internal.ManagedChannelOrphanWrapper: io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference phantom
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Parser PARSER
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firebase$firestore$core$CompositeFilter$Operator
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzfh: int zzb
io.grpc.okhttp.internal.framed.Hpack$Writer: okio.Buffer out
com.google.firebase.database.collection.ArraySortedMap$1: com.google.firebase.database.collection.ArraySortedMap this$0
androidx.core.os.LocaleListCompatWrapper: java.lang.String mStringRepresentation
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zzd
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke SET_MEMOIZED_IS_INITIALIZED
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.TransportContext transportContext
com.google.protobuf.GeneratedMessageLite$Builder: boolean isBuilt
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: java.lang.Object errorData
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.grpc.DecompressorRegistry: com.google.common.base.Joiner ACCEPT_ENCODING_JOINER
io.grpc.NameResolver$ResolutionResult: java.util.List addresses
com.google.firestore.v1.TargetChange: com.google.protobuf.Internal$IntList targetIds_
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String body
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] $VALUES
com.google.firestore.bundle.BundledQuery: int queryTypeCase_
com.google.firebase.components.LazySet: java.util.Set actualSet
okio.RealBufferedSource: boolean closed
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange DEFAULT_INSTANCE
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds zzp
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue UNRECOGNIZED
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
com.google.android.gms.internal.safetynet.zzk: java.lang.String TAG
com.google.android.gms.common.internal.zzb: com.google.android.gms.common.internal.BaseGmsClient zza
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
com.google.android.gms.internal.firebase-auth-api.zzxm: java.lang.String zzd
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_RC4_128_SHA
io.grpc.MethodDescriptor$Builder: java.lang.Object schemaDescriptor
io.grpc.internal.ManagedChannelImplBuilder: java.net.SocketAddress directServerAddress
com.google.firebase.firestore.util.ExponentialBackoff: long initialDelayMs
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: boolean started
io.grpc.internal.CompositeReadableBuffer: boolean marked
io.grpc.internal.DelayedClientCall: io.grpc.internal.DelayedClientCall$DelayedListener delayedListener
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String currentLocationProvider
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.android.gms.internal.firebase-auth-api.zzzd: boolean zzg
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
androidx.core.app.NotificationCompat$Builder: boolean mUseChronometer
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.Context context
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State IDLE
io.grpc.internal.DelayedStream: io.grpc.internal.DelayedStream$DelayedStreamListener delayedListener
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType UNARY
com.google.android.gms.internal.firebase-auth-api.zzrw: java.lang.String zzb
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzi
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] mList
com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite EMPTY_REGISTRY_LITE
io.grpc.internal.DelayedClientCall$DelayedListener: boolean passThrough
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: javax.inject.Provider backendRegistryProvider
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zzaau zzf
com.baseflow.geolocator.MethodCallHandlerImpl: android.app.Activity activity
com.google.firestore.bundle.BundledQuery$LimitType: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.firebase.internal.DataCollectionConfigStorage: com.google.firebase.events.Publisher publisher
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat GLOBAL
com.google.firebase.auth.zze: java.lang.String zzg
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.database.collection.ImmutableSortedSet EMPTY_KEY_SET
com.google.android.gms.internal.firebase-auth-api.zzyp: java.lang.String zza
io.grpc.ManagedChannelRegistry: java.util.logging.Logger logger
com.lyokone.location.LocationPlugin: android.content.ServiceConnection serviceConnection
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object instance
com.google.android.gms.common.api.internal.zabu: boolean zaf
com.google.android.gms.internal.firebase-auth-api.zzin: int zze
com.google.firebase.messaging.TopicsSubscriber: long MAX_DELAY_SEC
io.grpc.okhttp.internal.framed.Hpack: java.util.Map NAME_TO_FIRST_INDEX
com.google.firestore.v1.DocumentMask$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
androidx.core.app.NotificationCompat$Builder: java.lang.String mSortKey
com.google.android.gms.maps.model.CircleOptions: float zzc
com.google.android.gms.internal.firebase-auth-api.zzhs: com.google.android.gms.internal.firebase-auth-api.zzbw zza
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status TRANSIENT_ERROR
com.google.firebase.auth.PhoneAuthOptions$Builder: java.lang.Long zzc
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Long eventTime
kotlinx.coroutines.internal.AtomicKt: java.lang.Object RETRY_ATOMIC
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLngBounds latLngBounds
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.FirebaseFirestore firestore
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: boolean isPacked
io.grpc.internal.Http2Ping: java.util.Map callbacks
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String userAgent
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus NO_ACTIVITY
com.google.android.gms.common.data.DataHolder: android.os.Bundle zab
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
com.google.android.gms.internal.firebase-auth-api.zzaay: com.google.android.gms.internal.firebase-auth-api.zzaaz zzc
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zzwx zze
com.google.android.gms.common.GooglePlayServicesManifestException: int zza
androidx.webkit.internal.WebViewGlueCommunicator$LAZY_FACTORY_HOLDER: androidx.webkit.internal.WebViewProviderFactory INSTANCE
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason reason_
io.grpc.internal.RetriableStream$State: boolean cancelled
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: boolean firstSettings
com.google.firebase.firestore.core.SyncEngine$1: int[] $SwitchMap$com$google$firebase$firestore$core$LimboDocumentChange$Type
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error FRAME_SIZE_ERROR
com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body
com.google.android.gms.common.internal.zzag: java.lang.String zzc
io.grpc.internal.DelayedStream$5: java.lang.String val$authority
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: java.lang.String mName
com.google.android.gms.common.Feature: java.lang.String zza
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.lang.Long uptimeMillis
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$ResponseCode responseCode
com.google.android.gms.internal.firebase-auth-api.zzld: int zze
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: java.util.Map backendProviders
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
com.google.firebase.firestore.FirestoreMultiDbComponent: android.content.Context context
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: javax.inject.Provider clockProvider
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzfr zzf
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId RETRY_TRANSACTION
io.flutter.plugins.googlemaps.GoogleMapBuilder: com.google.android.gms.maps.GoogleMapOptions options
com.google.android.datatransport.runtime.AutoValue_TransportContext: com.google.android.datatransport.Priority priority
com.google.rpc.Status: int CODE_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType CLIENT_STREAMING
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String authToken
io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap otherSockets
com.google.firestore.v1.Cursor: int VALUES_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzld zzb
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: com.google.firebase.firestore.util.AsyncQueue$TimerId timerId
com.google.protobuf.Internal: java.nio.ByteBuffer EMPTY_BYTE_BUFFER
com.google.firebase.firestore.remote.FirestoreCallCredentials: com.google.firebase.firestore.auth.CredentialsProvider appCheckProvider
com.google.firebase.firestore.local.SQLiteIndexManager: byte[] EMPTY_BYTES_VALUE
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.TransportTracer transportTracer
com.google.android.gms.internal.firebase-auth-api.zzeg: byte[] zza
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: com.google.firebase.firestore.local.IndexBackfiller this$0
com.google.firestore.v1.Document$FieldsDefaultEntryHolder: com.google.protobuf.MapEntryLite defaultEntry
com.google.android.gms.auth.api.signin.internal.Storage: android.content.SharedPreferences zad
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzr
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
io.grpc.internal.ClientCallImpl: boolean cancelCalled
com.google.android.gms.common.api.Status: android.app.PendingIntent zze
com.google.firestore.v1.WriteRequest: java.lang.String streamId_
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
com.google.firebase.firestore.core.SyncEngine: java.util.Map pendingWritesCallbacks
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration MIGRATE_TO_V4
com.google.android.gms.internal.firebase-auth-api.zzcd: java.lang.String zzb
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
io.grpc.internal.DnsNameResolver: java.lang.String JNDI_TXT_PROPERTY
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.String database_
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: int largestBatchId
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
com.google.firebase.firestore.remote.FirestoreChannel$1: com.google.firebase.firestore.remote.FirestoreChannel this$0
okio.ByteString: byte[] data
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzi
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzd
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.Long expiresInSecs
io.grpc.internal.InternalSubchannel$4: java.util.List val$newImmutableAddressGroups
com.google.firebase.firestore.LoadBundleTaskProgress: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState taskState
com.google.android.gms.internal.firebase-auth-api.zzfs: android.content.SharedPreferences$Editor zza
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zzb
androidx.fragment.app.DialogFragment: boolean mShowsDialog
com.google.protobuf.DoubleArrayList: double[] array
io.grpc.internal.GrpcUtil: io.grpc.ProxyDetector DEFAULT_PROXY_DETECTOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
com.google.firestore.v1.Document: com.google.protobuf.Timestamp createTime_
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzd
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor ANALYTICSLABEL_DESCRIPTOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
okio.Buffer: long size
com.google.android.gms.internal.firebase-auth-api.zzse: java.lang.String zza
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: com.google.firebase.firestore.local.LruGarbageCollector this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlt zze
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: java.util.Map val$wrapped
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value MAX_VALUE
com.google.firestore.v1.DocumentRemove: int READ_TIME_FIELD_NUMBER
com.google.firebase.messaging.GmsRpc: com.google.firebase.FirebaseApp app
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.remote.Datastore datastore
com.google.android.gms.common.api.internal.zact: android.os.Handler zac
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
com.google.firebase.firestore.core.UserData$ParseAccumulator: java.util.Set fieldMask
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
io.grpc.internal.ManagedChannelImpl$1Shutdown: io.grpc.internal.ManagedChannelImpl this$0
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.grpc.internal.MetadataApplierImpl: io.grpc.internal.MetadataApplierImpl$MetadataApplierListener listener
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: android.util.SparseArray valueMap
com.google.firebase.components.Component: java.util.Set providedInterfaces
com.google.android.gms.tasks.TaskExecutors: java.util.concurrent.Executor MAIN_THREAD
io.grpc.util.RoundRobinLoadBalancer: io.grpc.LoadBalancer$Helper helper
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CoroutineContextKt: boolean useCoroutinesScheduler
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider workInitializerProvider
com.google.android.gms.internal.firebase-auth-api.zzbe: com.google.android.gms.internal.firebase-auth-api.zzbe zza
com.google.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: com.google.protobuf.MessageInfoFactory[] factories
com.google.protobuf.CodedInputStream$ArrayDecoder: int currentLimit
com.lyokone.location.BackgroundNotification: int notificationId
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: java.lang.String log_source_
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList
com.google.android.gms.internal.firebase-auth-api.zzvp: com.google.android.gms.internal.firebase-auth-api.zzqy zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
com.google.android.gms.common.util.AndroidUtilsLight: int zza
io.flutter.plugins.webviewflutter.InputAwareWebView: android.view.View threadedInputConnectionProxyView
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
com.google.firebase.auth.zzq: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zza
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
com.google.firebase.firestore.model.SnapshotVersion: com.google.firebase.firestore.model.SnapshotVersion NONE
com.google.protobuf.ExtensionRegistryLite: boolean doFullRuntimeInheritanceCheck
com.google.android.gms.common.api.internal.zaab: com.google.android.gms.common.api.internal.BasePendingResult zaa
com.google.firebase.components.ComponentRuntime: java.util.Map lazyInstanceMap
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal DISABLED_ACTION_MODE_MENU_ITEMS
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.CallOptions callOptions
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.local.SQLitePersistence db
com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal POST_WEB_MESSAGE
com.google.android.gms.maps.model.Cap: java.lang.Float zzd
com.tekartik.sqflite.SqflitePlugin$4: com.tekartik.sqflite.SqflitePlugin this$0
io.grpc.okhttp.internal.framed.Header: okio.ByteString VERSION
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId LISTEN_STREAM_IDLE
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzms: boolean zzh
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzq
com.google.android.gms.internal.firebase-auth-api.zztm: com.google.android.gms.internal.firebase-auth-api.zztn zzb
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjo zzb
com.google.firebase.database.collection.ArraySortedMap$1: int val$pos
com.google.android.gms.internal.firebase-auth-api.zzyf: java.lang.String zzb
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
com.google.firebase.messaging.WithinAppServiceConnection: java.util.Queue intentQueue
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider delegate
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zznc zzb
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.StreamHandlerImpl streamHandler
com.google.android.datatransport.runtime.AutoValue_EventInternal: long uptimeMillis
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: java.lang.Runnable task
com.google.android.gms.internal.firebase-auth-api.zzaeb: int zza
com.google.android.gms.internal.firebase-auth-api.zzpu: java.lang.String zzb
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor COUNTRY_DESCRIPTOR
com.google.firestore.bundle.BundledQuery: com.google.protobuf.Parser PARSER
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: com.google.firebase.messaging.FirebaseMessaging val$firebaseMessaging
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.nio.ByteBuffer currentByteBuffer
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat
com.google.firebase.auth.internal.zzw: java.lang.String zzb
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.firebase.auth.FirebaseAuth: java.util.List zzc
io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel realChannel
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult: int selection
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT32_LIST
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_FAILED
io.grpc.NameResolver$ResolutionResult$Builder: java.util.List addresses
com.squareup.okhttp.Request$Builder: java.lang.String method
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: com.google.firebase.auth.internal.InternalAuthProvider internalAuthProvider
com.google.android.gms.common.api.internal.TaskApiCall$Builder: int zad
com.google.protobuf.ArrayDecoders$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.Task zza
com.google.android.gms.internal.firebase-auth-api.zzba: com.google.android.gms.internal.firebase-auth-api.zzgb zza
com.google.android.gms.internal.firebase-auth-api.zzsc: com.google.firebase.auth.zze zzb
com.google.common.math.IntMath$1: int[] $SwitchMap$java$math$RoundingMode
androidx.window.embedding.SplitInfo: float splitRatio
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder DEFAULT_FALLBACK_ENCODER
com.google.firebase.firestore.model.mutation.FieldMask: java.util.Set mask
com.google.android.gms.cloudmessaging.Rpc: android.os.Messenger zzj
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState ERROR
io.grpc.internal.ApplicationThreadDeframer$4: io.grpc.internal.ApplicationThreadDeframer this$0
androidx.window.R$id: int rtl
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] $VALUES
com.google.firebase.firestore.local.SQLiteTargetCache$DocumentKeysHolder: com.google.firebase.database.collection.ImmutableSortedSet keys
com.google.android.gms.internal.firebase-auth-api.zzob: int zzc
com.google.firestore.v1.Value: int TIMESTAMP_VALUE_FIELD_NUMBER
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.FirebaseFirestore firestore
com.google.android.gms.internal.firebase-auth-api.zzxp: int zzb
com.google.android.gms.internal.firebase-auth-api.zzzt: java.lang.String zza
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.reflect.Constructor $constructor$inlined
io.grpc.internal.TransportTracer: io.grpc.internal.TimeProvider timeProvider
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] $VALUES
io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mBigContentView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin this$0
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] $VALUES
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: com.google.firebase.encoders.FieldDescriptor LOGREQUEST_DESCRIPTOR
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
com.google.android.gms.internal.base.zaa: android.os.IBinder zaa
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider workSchedulerProvider
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType BIDI_STREAMING
io.grpc.internal.RetriableStream$1OptimizeDirectEntry: io.grpc.internal.RetriableStream this$0
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int streamId
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
com.google.android.gms.location.zzj: float zzv
io.grpc.internal.AbstractStream$TransportState: boolean deallocated
com.google.firebase.firestore.model.mutation.PatchMutation: com.google.firebase.firestore.model.mutation.FieldMask mask
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer
com.google.android.gms.common.api.internal.zza: com.google.android.gms.common.api.internal.zzb zzc
com.google.android.gms.cloudmessaging.zzk: com.google.android.gms.cloudmessaging.zzp zzb
com.google.protobuf.BinaryReader$SafeHeapReader: byte[] buffer
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
androidx.fragment.app.FragmentTransaction: int mExitAnim
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zze
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntimeComponent instance
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Integer maxBlobByteSizePerRow
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: android.content.Context setApplicationContext
io.grpc.internal.AbstractClientStream: io.grpc.Metadata headers
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: java.util.concurrent.CountDownLatch val$latch
io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.Channel clientCallImplChannel
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform DEFAULT_INSTANCE
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzgo zzb
com.google.firebase.FirebaseOptions: java.lang.String projectId
com.lyokone.location.FlutterLocationService: boolean isForeground
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED32_LIST
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String version
com.google.firebase.installations.FirebaseInstallations$3: int[] $SwitchMap$com$google$firebase$installations$remote$InstallationResponse$ResponseCode
androidx.core.view.OneShotPreDrawListener: android.view.View mView
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse$Status status
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] $VALUES
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema PROTO2_UNKNOWN_FIELD_SET_SCHEMA
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason CACHE_FULL
com.google.android.gms.tasks.TaskExecutors: java.util.concurrent.Executor zza
io.grpc.okhttp.internal.framed.Hpack$Writer: boolean emitDynamicTableSizeUpdate
com.google.android.gms.common.internal.zzj: com.google.android.gms.common.Feature[] zzb
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
com.google.firebase.firestore.model.AutoValue_FieldIndex: int indexId
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
io.grpc.internal.RetriableStream$HedgingRunnable$1: io.grpc.internal.RetriableStream$HedgingRunnable this$1
io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader
io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int value
io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.StreamListener$MessageProducer val$producer
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: int value
com.google.android.gms.maps.model.LatLng: double latitude
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.messaging.TopicsSubscriber topicsSubscriber
com.google.android.gms.internal.firebase-auth-api.zzzk: com.google.android.gms.internal.firebase-auth-api.zzxs zzg
io.grpc.internal.DelayedClientCall$2: io.grpc.Status val$status
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String[] GOOGLE_PLUS_REQUIRED_FEATURES
io.perfmark.PerfMark: io.perfmark.Impl impl
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy nameResolverBackoffPolicy
com.google.android.gms.location.LocationRequest: long zzax
com.google.protobuf.NewInstanceSchemas: com.google.protobuf.NewInstanceSchema LITE_SCHEMA
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema UNKNOWN_FIELD_SET_LITE_SCHEMA
com.google.firebase.auth.OAuthProvider$Builder: com.google.firebase.auth.FirebaseAuth zzb
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase DELETE
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase MISSING
com.google.android.gms.internal.firebase-auth-api.zzta: com.google.android.gms.internal.firebase-auth-api.zztb zzc
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzmb zze
com.google.android.gms.internal.stats.zzb: com.google.android.gms.internal.stats.zzb zza
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: int largestBatchId
com.google.android.gms.maps.zzah: android.content.Context zzc
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.google.android.gms.internal.firebase-auth-api.zzew: byte[] zza
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
com.google.android.gms.location.zzj: long zzw
com.google.android.gms.internal.firebase-auth-api.zzdx: java.util.concurrent.atomic.AtomicBoolean zzb
com.google.firebase.components.Dependency: java.lang.Class anInterface
com.google.android.gms.internal.firebase-auth-api.zzpl: java.util.regex.Pattern zzb
com.google.protobuf.UnsafeUtil: long OBJECT_ARRAY_INDEX_SCALE
com.google.firebase.firestore.core.UserData$1: int[] $SwitchMap$com$google$firebase$firestore$core$UserData$Source
com.google.android.gms.common.api.internal.GoogleApiManager: long zae
com.google.firebase.components.ComponentRuntime: java.util.List unprocessedRegistrarProviders
com.google.android.gms.common.internal.zzag: boolean zzb
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter DEFAULT_INSTANCE
com.google.android.gms.cloudmessaging.zzj: android.os.IBinder zzb
io.grpc.ClientInterceptors$InterceptorChannel: io.grpc.Channel channel
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] $VALUES
com.google.firebase.auth.internal.zzav: java.lang.ref.WeakReference zzb
com.google.android.gms.internal.firebase-auth-api.zzzb: com.google.android.gms.internal.firebase-auth-api.zzyu zze
io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue
com.google.firebase.firestore.remote.RemoteStore$1: com.google.firebase.firestore.remote.RemoteStore this$0
io.grpc.Status: io.grpc.Metadata$TrustedAsciiMarshaller STATUS_MESSAGE_MARSHALLER
com.google.protobuf.UnknownFieldSetLite: int memoizedSerializedSize
io.grpc.okhttp.OkHttpClientTransport: int connectionUnacknowledgedBytesRead
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel WARNING
com.google.android.gms.common.internal.GetServiceRequest: boolean zzk
com.google.android.gms.common.api.internal.zach: com.google.android.gms.common.api.GoogleApi zac
com.google.android.gms.location.LocationResult: java.util.List zzbb
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.mutation.Precondition precondition
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzul: com.google.firebase.auth.EmailAuthCredential zza
com.google.android.gms.internal.firebase-auth-api.zzmb: int zze
com.google.firestore.admin.v1.Index: int queryScope_
com.google.firebase.auth.ActionCodeSettings: boolean zzg
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzmp zze
com.google.android.gms.safetynet.zzh: boolean zzl
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
com.google.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit
com.google.android.gms.internal.firebase-auth-api.zzni: java.lang.String zze
io.grpc.internal.ClientCallImpl$1ClosedByNotFoundCompressor: io.grpc.internal.ClientCallImpl this$0
com.google.android.gms.location.zzae: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzacj: java.util.List zzc
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedPublishedEvents
com.tekartik.sqflite.SqflitePlugin$4: com.tekartik.sqflite.Database val$database
com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent messaging_client_event_
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzc
com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStream output
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$Write$OperationCase
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody body
com.lyokone.location.StreamHandlerImpl: com.lyokone.location.FlutterLocation location
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.core.R$id: int tag_transition_group
com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String clickAction
com.google.android.gms.internal.firebase-auth-api.zzgb: java.lang.Class zza
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.tekartik.sqflite.SqflitePlugin$6: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
com.google.android.gms.common.internal.MethodInvocation: int zac
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
io.grpc.okhttp.ExceptionHandlingFrameWriter: io.grpc.okhttp.OkHttpFrameLogger frameLogger
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType UNRECOGNIZED
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
io.grpc.protobuf.lite.ProtoLiteUtils: com.google.protobuf.ExtensionRegistryLite globalRegistry
io.grpc.internal.ApplicationThreadDeframerListener$2: io.grpc.internal.ApplicationThreadDeframerListener this$0
io.flutter.Log: int ERROR
com.google.android.gms.internal.firebase-auth-api.zzvt: com.google.android.gms.internal.firebase-auth-api.zztx zzb
androidx.fragment.app.Fragment: boolean mPerformedCreateView
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: io.grpc.okhttp.OutboundFlowController this$0
com.google.firebase.messaging.ByteStreams$LimitedInputStream: long mark
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.model.DocumentKey key
com.google.protobuf.FieldType: com.google.protobuf.FieldType STRING_LIST
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
io.grpc.internal.DnsNameResolver$Resolve$1: io.grpc.internal.DnsNameResolver$Resolve this$1
com.google.firebase.firestore.LoadBundleTaskProgress: com.google.firebase.firestore.LoadBundleTaskProgress INITIAL
com.google.android.gms.internal.firebase-auth-api.zzrg: java.lang.String zzb
com.google.android.gms.tasks.zzw: boolean zzd
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
okio.Buffer$1: okio.Buffer this$0
com.google.firebase.firestore.proto.MaybeDocument$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.common.internal.zzf: com.google.android.gms.common.internal.BaseGmsClient zzf
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zzb
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: int timeout
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.android.gms.maps.model.MarkerOptions: float zze
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
com.google.firebase.auth.internal.zzal: java.lang.String zzb
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl javaScriptChannelHostApi
com.google.firebase.firestore.proto.Target$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.firebase.FirebaseApp: java.util.Map INSTANCES
com.google.android.gms.internal.firebase-auth-api.zzwi: com.google.android.gms.internal.firebase-auth-api.zzxc zzb
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Scope zae
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.google.protobuf.MessageSchema: com.google.protobuf.MapFieldSchema mapFieldSchema
com.google.firebase.firestore.local.MemoryTargetCache: int highestTargetId
com.google.protobuf.FieldType$1: int[] $SwitchMap$com$google$protobuf$JavaType
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApiCodec INSTANCE
com.google.android.gms.maps.zzy: com.google.android.gms.maps.GoogleMap$OnMapClickListener zza
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
io.grpc.MethodDescriptor$Builder: boolean sampledToLocalTracing
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator lazyOverflowIterator
com.google.android.gms.common.internal.BaseGmsClient: android.content.Context zzl
androidx.arch.core.internal.SafeIterableMap: int mSize
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.gms.internal.firebase-auth-api.zzadg: com.google.android.gms.internal.firebase-auth-api.zzabl zzd
io.flutter.plugins.googlemaps.GoogleMapController: boolean indoorEnabled
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_RESOURCE_REQUEST_IS_REDIRECT
io.grpc.internal.ManagedChannelImpl$1ShutdownNow: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzF
com.google.android.gms.internal.firebase-auth-api.zzps: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzgq: java.lang.Class zza
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object key
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationSettingsRequest$Builder: boolean zzbh
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneMultiFactorInfo zzi
io.grpc.internal.KeepAliveManager: boolean keepAliveDuringTransportIdle
com.google.firebase.messaging.threads.PoolableExecutors: com.google.firebase.messaging.threads.ExecutorFactory instance
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
com.google.protobuf.SmallSortedMap$Entry: com.google.protobuf.SmallSortedMap this$0
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: long requestUptimeMs
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_NULL_SHA256
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason INVALID_PAYLOD
okio.ByteString: okio.ByteString EMPTY
com.google.firebase.firestore.local.LocalDocumentsResult: com.google.firebase.database.collection.ImmutableSortedMap documents
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.MessageDeframer rawDeframer
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation
com.google.android.gms.internal.firebase-auth-api.zzsg: com.google.android.gms.internal.firebase-auth-api.zzvs zza
com.google.android.gms.internal.firebase-auth-api.zzvw: java.lang.String zzf
io.grpc.internal.SerializingExecutor: java.util.logging.Logger log
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] $VALUES
io.flutter.plugins.webviewflutter.JavaScriptChannel: io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl flutterApi
com.google.android.gms.common.api.internal.ApiKey: int zaa
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: io.grpc.ClientCall$Listener val$observer
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean trafficEnabled
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: com.google.firebase.encoders.FieldDescriptor MESSAGINGCLIENTEVENTEXTENSION_DESCRIPTOR
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg zze
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.grpc.internal.RetryPolicy: java.lang.Long perAttemptRecvTimeoutNanos
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzln zzg
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: long delta
com.google.android.gms.internal.firebase-auth-api.zzadi: com.google.android.gms.internal.firebase-auth-api.zzadh zza
com.google.protobuf.BinaryReader$SafeHeapReader: int initialPos
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
io.grpc.internal.RetriableStream: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.android.gms.maps.model.PolylineOptions: java.util.List zzk
com.google.android.gms.internal.location.zzm: java.util.List zzcd
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior NONE
com.google.firebase.messaging.FirebaseMessaging: java.util.concurrent.ScheduledExecutorService syncExecutor
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzd
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key TE_HEADER
io.grpc.internal.MessageDeframer: long pendingDeliveries
com.google.firebase.firestore.remote.Datastore$1: java.util.List val$keys
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: int value
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
com.google.android.gms.internal.firebase-auth-api.zzor: int zzc
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.CompressorRegistry compressorRegistry
io.grpc.internal.AtomicLongCounter: java.util.concurrent.atomic.AtomicLong counter
io.flutter.plugins.googlemaps.TileProviderController: java.lang.String tileOverlayId
io.grpc.okhttp.internal.ConnectionSpec$Builder: java.lang.String[] tlsVersions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
kotlin.KotlinVersion: int version
com.google.firebase.firestore.FirebaseFirestoreException$Code: android.util.SparseArray STATUS_LIST
io.flutter.plugins.webviewflutter.FlutterWebViewFactory: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
io.grpc.internal.RetriableStream$ChannelBufferMeter: java.util.concurrent.atomic.AtomicLong bufferUsed
io.grpc.internal.DelayedClientTransport$3: io.grpc.internal.ManagedClientTransport$Listener val$listener
io.grpc.internal.MessageFramer: int messagesBuffered
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier NEVER
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
io.grpc.NameResolver$Args$Builder: io.grpc.ProxyDetector proxyDetector
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code RESOURCE_EXHAUSTED
com.google.android.gms.common.api.internal.RegisterListenerMethod: boolean zac
kotlin.jvm.internal.Lambda: int arity
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
com.google.firebase.firestore.core.ComponentProvider$Configuration: android.content.Context context
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] $VALUES
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: long max_cache_size_bytes_
com.google.android.gms.internal.firebase-auth-api.zzqs: java.lang.String zza
io.grpc.internal.ExponentialBackoffPolicy: double multiplier
com.google.firebase.auth.internal.zzb: android.app.Activity zzd
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.CountDownLatch terminatedLatch
io.grpc.okhttp.internal.framed.Hpack$Reader: int nextDynamicTableIndex
com.google.firestore.v1.StructuredQuery$UnaryFilter: int op_
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String fingerprint
com.google.android.datatransport.cct.CctTransportBackend: android.net.ConnectivityManager connectivityManager
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String osBuild
com.google.protobuf.RopeByteString: int[] minLengthByDepth
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.concurrent.atomic.AtomicInteger zao
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Context val$context
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: java.lang.Long timestampNanos
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzi
androidx.collection.ArraySet: int[] INT
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzw zzg
com.google.android.gms.internal.firebase-auth-api.zztk: com.google.android.gms.internal.firebase-auth-api.zztl zzc
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode right
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp lastLimboFreeSnapshotVersion_
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration MIGRATE_TO_V3
io.flutter.plugins.googlemaps.TileProviderController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzin zzb
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$1: io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport this$1
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.model.SnapshotVersion lastRemoteSnapshotVersion
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Internal$ProtobufList documents_
com.google.common.math.LongMath: long[][] millerRabinBaseSets
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzom: byte[] zza
com.google.android.gms.internal.firebase-auth-api.zzacr: int zzc
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.reflect.Constructor $constructor$inlined
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.firebase.firestore.local.SQLiteTargetCache: long targetCount
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] bodyLocArgs
com.google.android.gms.internal.firebase-auth-api.zzf: com.google.android.gms.internal.firebase-auth-api.zzc zzb
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.Attributes attributes
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code UNAUTHENTICATED
androidx.window.R$attr: int secondaryActivityAction
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersionCurrentValue INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzsc: java.lang.String zzd
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
com.google.firestore.v1.TargetChange: int TARGET_CHANGE_TYPE_FIELD_NUMBER
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] $VALUES
com.google.firebase.auth.ActionCodeSettings: int zzi
com.google.android.gms.safetynet.SafeBrowsingData: android.os.ParcelFileDescriptor zzo
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.SnapshotVersion version
com.google.android.gms.internal.firebase-auth-api.zzabk: com.google.android.gms.internal.firebase-auth-api.zzabk zza
com.lyokone.location.MethodCallHandlerImpl: com.lyokone.location.FlutterLocationService locationService
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zzA
io.grpc.CallOptions: java.util.List streamTracerFactories
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: com.google.firebase.firestore.model.mutation.ServerTimestampOperation SHARED_INSTANCE
io.grpc.CallOptions: java.lang.String compressorName
io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.zzj zzD
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: java.lang.Iterable events
io.grpc.internal.MessageDeframer: int inboundBodyWireSize
com.google.firestore.v1.Value: java.lang.Object valueType_
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.firebase.firestore.proto.WriteBatch: int WRITES_FIELD_NUMBER
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: java.util.HashMap notifications
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.firebase.firestore.remote.Datastore$1: com.google.android.gms.tasks.TaskCompletionSource val$completionSource
androidx.fragment.app.BackStackState: java.lang.String mName
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] $VALUES
com.google.firebase.firestore.proto.WriteBatch$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firebase.firestore.remote.FirestoreCallCredentials: io.grpc.Metadata$Key AUTHORIZATION_HEADER
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
com.google.protobuf.Int32Value: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.grpc.Status: boolean FAIL_ON_EQUALS_FOR_TEST
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState LOCAL
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzC
com.google.android.gms.maps.zzaf: com.google.android.gms.maps.OnMapReadyCallback zza
io.grpc.internal.RetriableStream$Sublistener$3: io.grpc.internal.RetriableStream$Substream val$newSubstream
com.google.protobuf.CodedOutputStream$ArrayEncoder: int offset
com.google.firebase.auth.UserProfileChangeRequest$Builder: android.net.Uri zzb
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke NEW_BUILDER
com.google.android.gms.location.LocationSettingsStates: boolean zzbn
com.google.android.datatransport.runtime.util.PriorityMapping: android.util.SparseArray PRIORITY_MAP
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocationService$LocalBinder binder
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.local.SQLitePersistence db
com.squareup.okhttp.HttpUrl$Builder: java.util.List encodedPathSegments
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.ViewSnapshot$SyncState syncState
com.google.protobuf.Int32Value$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SERVICE_WORKER_SHOULD_INTERCEPT_REQUEST
com.lyokone.location.NotificationOptions: java.lang.String subtitle
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.firebase.firestore.util.AsyncQueue: com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor executor
com.google.rpc.Status$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.gson.stream.JsonReader: int[] pathIndices
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
com.google.firebase.firestore.bundle.BundleLoader: long bytesLoaded
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore instance
androidx.core.app.NotificationCompat$Builder: android.graphics.drawable.Icon mSmallIcon
androidx.window.R$attr: int splitRatio
kotlin.ranges.IntProgression: int step
com.google.android.gms.internal.firebase-auth-api.zzaeg: boolean zzf
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: java.util.List INCREMENTAL_MIGRATIONS
com.google.android.gms.internal.firebase-auth-api.zzkx: int zze
com.google.firestore.v1.Value: int REFERENCE_VALUE_FIELD_NUMBER
com.google.protobuf.ArrayDecoders$Registers: com.google.protobuf.ExtensionRegistryLite extensionRegistry
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView webview
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String trackingId
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean warnOnUnknownProperties
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState lastResolutionState
com.google.firebase.auth.internal.zze: java.lang.String zzb
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: java.lang.Runnable runnable
com.google.android.gms.internal.firebase-auth-api.zzoj: com.google.android.gms.internal.firebase-auth-api.zzdp zza
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext syncContext
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long currentByteBufferLimit
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmb zzf
com.google.firebase.firestore.proto.Target: int LAST_LISTEN_SEQUENCE_NUMBER_FIELD_NUMBER
com.google.protobuf.RawMessageInfo: com.google.protobuf.MessageLite defaultInstance
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order DESCENDING
io.grpc.okhttp.internal.ConnectionSpec$Builder: boolean tls
com.google.android.gms.cloudmessaging.zzd: com.google.android.gms.cloudmessaging.IMessengerCompat zzb
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.FieldDescriptor MAP_VALUE_DESC
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
com.google.android.gms.internal.firebase-auth-api.zzkd: com.google.android.gms.internal.firebase-auth-api.zzkd zzb
com.google.firestore.admin.v1.Index$IndexField: int ORDER_FIELD_NUMBER
com.google.android.gms.common.internal.RootTelemetryConfiguration: int zze
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor COMPOSERLABEL_DESCRIPTOR
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.lang.String code
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.GmsClientSupervisor zzn
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_DUN
com.google.android.gms.common.api.internal.zaab: com.google.android.gms.common.api.internal.zaad zab
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.local.IndexManager indexManager
io.grpc.internal.ClientCallImpl: boolean cancelListenersShouldBeRemoved
com.google.firebase.auth.internal.zzp: java.lang.String zzb
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzre: com.google.android.gms.internal.firebase-auth-api.zzzq zza
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.RemoteDocumentCache remoteDocuments
com.google.android.gms.internal.firebase-auth-api.zzsm: java.lang.Boolean zzd
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException$1: int[] $SwitchMap$com$google$firebase$firestore$FirebaseFirestoreException$Code
io.flutter.view.AccessibilityBridge$Flag: int value
com.google.firebase.auth.PhoneAuthOptions$Builder: java.lang.String zzb
androidx.core.content.ContextCompat: java.lang.Object sLock
com.google.firebase.firestore.proto.Target: int RESUME_TOKEN_FIELD_NUMBER
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus disabled
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.MessageLite unfinishedMessage
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
io.grpc.internal.ClientCallImpl$1ClosedByNotFoundCompressor: java.lang.String val$compressorName
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.internal.ConnectionSpec connectionSpec
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator NOT_IN
androidx.core.app.NotificationCompatBuilder: int mGroupAlertBehavior
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
com.google.android.gms.internal.firebase-auth-api.zzad: com.google.android.gms.internal.firebase-auth-api.zzn zzc
androidx.core.R$id: int accessibility_custom_action_31
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
com.google.firebase.messaging.RemoteMessage: android.os.Bundle bundle
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult: int localVersion
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.os.IBinder windowToken
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.stats.WakeLock: android.content.Context zzr
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: java.util.Iterator iterator
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: com.google.firebase.firestore.model.mutation.Mutation mutation
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean isSerial
io.flutter.plugins.googlemaps.GoogleMapController: boolean zoomControlsEnabled
com.google.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
io.grpc.internal.RetriableStream$Sublistener$1: io.grpc.internal.RetriableStream$Sublistener this$1
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: com.google.firebase.firestore.util.CustomClassMapper$ErrorPath EMPTY
com.google.firebase.firestore.model.FieldIndex: java.util.Comparator SEMANTIC_COMPARATOR
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
kotlinx.coroutines.scheduling.Task: long submissionTime
com.google.firebase.components.Lazy: java.lang.Object UNINITIALIZED
io.grpc.internal.DelayedClientCall$1DrainListenerRunnable: io.grpc.internal.DelayedClientCall this$0
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
io.grpc.SynchronizationContext: java.util.Queue queue
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] $VALUES
io.grpc.internal.JsonUtil: boolean $assertionsDisabled
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$StructuredQuery$UnaryFilter$Operator
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.concurrent.atomic.AtomicReference activity
kotlin.KotlinVersion: kotlin.KotlinVersion$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzdm: boolean zzc
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore
io.grpc.internal.DelayedStream$6: java.io.InputStream val$message
com.google.firestore.v1.CommitResponse: int COMMIT_TIME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzsc: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.ThreadLocal zaa
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value
com.google.android.gms.tasks.zzaf: com.google.android.gms.tasks.zzw zzc
com.google.android.gms.base.R$string: int common_google_play_services_notification_channel_name
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_WHITELIST
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzre: android.os.Parcelable$Creator CREATOR
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams HEADER_TABLE_SIZE
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbj zza
com.google.android.gms.common.api.internal.BackgroundDetector: boolean zze
io.grpc.internal.ManagedChannelServiceConfig: java.util.Map serviceMap
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId logId
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: java.util.Iterator argsIter
com.google.protobuf.Any: int TYPE_URL_FIELD_NUMBER
com.google.android.gms.common.api.internal.zact: com.google.android.gms.common.internal.ClientSettings zaf
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zza
io.grpc.internal.DelayedClientCall$DelayedListener$1: io.grpc.internal.DelayedClientCall$DelayedListener this$0
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: java.lang.Integer eventCode
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzbu: java.lang.String zza
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId WRITE_STREAM_CONNECTION_BACKOFF
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction UNRECOGNIZED
com.google.android.gms.dynamite.DynamiteModule: java.lang.ThreadLocal zzf
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices
io.grpc.internal.ManagedChannelImpl: java.util.Collection pendingCalls
com.google.android.gms.cloudmessaging.zzh: com.google.android.gms.cloudmessaging.zzm zza
com.google.android.gms.common.api.internal.zabq: java.util.Map zag
io.grpc.InternalChannelz: java.util.concurrent.ConcurrentMap subchannels
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
kotlinx.coroutines.CompletedExceptionally: int _handled
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall this$2
com.google.firebase.messaging.WakeLockHolder: long WAKE_LOCK_ACQUIRE_TIMEOUT_MILLIS
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
com.google.firestore.v1.ArrayValue: com.google.protobuf.Parser PARSER
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int[] Fragment
com.google.android.gms.internal.firebase-auth-api.zzek: com.google.android.gms.internal.firebase-auth-api.zzbw zza
com.google.type.LatLng$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.firebase.auth.FirebaseUser zze
io.flutter.plugins.googlemaps.MarkerController: boolean consumeTapEvents
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.CallOptions$Key KEY
com.google.firebase.messaging.GmsRpc: com.google.firebase.messaging.Metadata metadata
com.google.android.gms.internal.firebase-auth-api.zzzu: java.lang.String zzc
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
androidx.core.R$id: int tag_unhandled_key_listeners
com.google.firebase.Timestamp: long seconds
com.google.firestore.admin.v1.Index: int state_
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever retriever
com.google.android.gms.location.LocationSettingsRequest$Builder: boolean zzbi
com.google.firebase.auth.internal.zzag: java.lang.String zza
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: long maxAllowedDelay
com.google.android.gms.internal.firebase-auth-api.zzhm: com.google.android.gms.internal.firebase-auth-api.zzhn zza
com.google.firebase.auth.zzy: com.google.firebase.auth.FirebaseUser zzc
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zznt zzc
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.firestore.local.IndexManager indexManager
com.google.firebase.auth.OAuthProvider$CredentialBuilder: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzacg: java.lang.Object zzn
com.tekartik.sqflite.Database: boolean singleInstance
com.google.firebase.auth.PhoneAuthOptions$Builder: java.util.concurrent.Executor zze
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzabl zzp
io.flutter.plugins.urllauncher.WebViewActivity$2: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.android.gms.maps.internal.zzca: com.google.android.gms.maps.internal.zzf zzc
io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current
com.google.firebase.messaging.RemoteMessage$Notification: boolean defaultSound
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] $VALUES
com.google.firebase.auth.internal.zzam: android.os.HandlerThread zzd
com.google.android.gms.internal.firebase-auth-api.zzyj: java.util.List zzm
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzmu zza
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryTargetCache targetCache
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: com.google.firebase.events.Publisher delegate
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: javax.inject.Provider executorProvider
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
com.google.android.gms.location.LocationSettingsStates: boolean zzbr
io.grpc.Deadline: long MIN_OFFSET
com.google.firebase.firestore.remote.AbstractStream: long HEALTHY_TIMEOUT_MS
io.grpc.okhttp.OkHttpClientTransport$4: io.grpc.okhttp.AsyncSink val$asyncSink
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ValueEncoder BOOLEAN_ENCODER
com.google.common.io.BaseEncoding$Alphabet: java.lang.String name
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long expiresInSecs
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
kotlinx.coroutines.scheduling.TasksKt: int BLOCKING_DEFAULT_PARALLELISM
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
androidx.window.embedding.SplitRule: float splitRatio
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method SSL_SOCKETS_SET_USE_SESSION_TICKET
com.google.firestore.v1.WriteResult: com.google.protobuf.Parser PARSER
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype mobileSubtype
com.google.protobuf.JavaType: com.google.protobuf.JavaType BYTE_STRING
com.google.android.gms.internal.location.zzat: com.google.android.gms.common.api.internal.ListenerHolder zzda
com.google.android.gms.common.internal.BaseGmsClient: long zzg
com.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsStore store
com.google.firebase.messaging.TopicOperation: java.lang.String topic
com.google.firebase.auth.PhoneAuthCredential: boolean zzc
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
androidx.savedstate.SavedStateRegistry: boolean mRestored
io.flutter.plugins.googlemaps.PolylinesController: java.util.Map googleMapsPolylineIdToDartPolylineId
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
com.baseflow.geolocator.location.FusedLocationClient: android.content.Context context
com.google.firestore.v1.BatchGetDocumentsRequest$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.firebase.auth.FirebaseAuthWeakPasswordException: java.lang.String zza
io.grpc.internal.RetriableStream$1CommitTask: io.grpc.internal.RetriableStream$Substream val$winningSubstream
com.google.android.gms.internal.firebase-auth-api.zzxy: java.lang.String zzc
com.google.firebase.firestore.FirebaseFirestore: java.lang.String persistenceKey
com.google.android.datatransport.runtime.TransportRuntime_Factory: javax.inject.Provider schedulerProvider
com.google.firebase.firestore.bundle.NamedQuery: com.google.firebase.firestore.model.SnapshotVersion readTime
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] $VALUES
io.grpc.internal.DelayedStream$2: int val$maxSize
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzA
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzb
com.google.firebase.auth.internal.zzbm: com.google.firebase.auth.internal.zzbd zzb
com.google.android.gms.cloudmessaging.zzv: com.google.android.gms.cloudmessaging.zzv zza
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
com.google.firebase.internal.InternalTokenResult: java.lang.String zza
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzhg zza
io.flutter.plugins.androidintent.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.plugins.googlemaps.PolygonsController: com.google.android.gms.maps.GoogleMap googleMap
com.google.android.gms.common.internal.zza: android.os.Bundle zzb
androidx.browser.customtabs.CustomTabsIntent$Builder: java.util.ArrayList mActionButtons
com.google.firebase.firestore.core.CompositeFilter: com.google.firebase.firestore.core.CompositeFilter$Operator operator
androidx.core.app.NotificationCompatBuilder: java.util.List mActionExtrasList
androidx.core.app.NotificationCompat$Builder: android.os.Bundle mExtras
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.protobuf.UnsafeUtil: boolean HAS_UNSAFE_ARRAY_OPERATIONS
com.google.android.gms.internal.firebase-auth-api.zzvy: com.google.android.gms.common.logging.Logger zza
com.google.android.gms.common.zzm: com.google.android.gms.common.zzk zzd
io.grpc.okhttp.OkHttpFrameLogger: java.util.logging.Level level
io.grpc.internal.RetriableStream$Sublistener$2: io.grpc.Metadata val$trailers
io.grpc.internal.TransportTracer: long streamsFailed
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator LESS_THAN_OR_EQUAL
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zzd
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: java.util.List addrs
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
io.flutter.plugins.packageinfo.PackageInfoPlugin: android.content.Context applicationContext
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String product
com.google.protobuf.CodedInputStream$ArrayDecoder: int lastTag
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
com.google.android.gms.maps.model.CircleOptions: boolean zzg
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
com.google.android.gms.cloudmessaging.zzu: com.google.android.gms.cloudmessaging.Rpc zza
com.google.firebase.messaging.FirebaseMessaging: long MAX_DELAY_SEC
com.google.firebase.installations.local.PersistedInstallation: java.io.File dataFile
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: int targetId
androidx.core.app.NotificationCompat$Action: int mSemanticAction
io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer NOOP_TRACER
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
com.google.firestore.v1.StructuredQuery$FieldFilter: int op_
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: long current_cache_size_bytes_
io.grpc.SecurityLevel: io.grpc.SecurityLevel INTEGRITY
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String zza
com.google.android.gms.cloudmessaging.zzn: com.google.android.gms.cloudmessaging.zzd zzb
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.ObjectValue value
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType FIXED32
androidx.core.app.NotificationCompat$Builder: int mProgress
com.google.firebase.firestore.LoadBundleTask$ManagedListener: com.google.firebase.firestore.OnProgressListener listener
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code CANCELLED
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.android.gms.internal.firebase-auth-api.zzdm: java.lang.ThreadLocal zza
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSettingsText
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzf
com.google.android.gms.common.zzl: com.google.android.gms.common.zzi[] zza
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.android.gms.internal.firebase-auth-api.zzvf: com.google.android.gms.internal.firebase-auth-api.zzrq zza
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzj
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: java.lang.String backendName
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzd
com.google.firebase.firestore.bundle.BundleMetadata: java.lang.String bundleId
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
kotlin.KotlinVersion: int major
com.google.android.gms.internal.firebase-auth-api.zzacr: com.google.android.gms.internal.firebase-auth-api.zzacr zza
com.google.android.gms.internal.firebase-auth-api.zzbw: com.google.android.gms.internal.firebase-auth-api.zzhw zzd
io.grpc.internal.DelayedStream$10: io.grpc.internal.DelayedStream this$0
com.google.firebase.auth.internal.zzi: java.lang.String zzd
com.google.firestore.v1.TransactionOptions$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.internal.ClientCallImpl: io.grpc.DecompressorRegistry decompressorRegistry
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.grpc.internal.ReflectionLongAdderCounter: java.lang.Object instance
io.grpc.internal.RetriableStream$1RequestEntry: io.grpc.internal.RetriableStream this$0
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
com.google.android.gms.signin.internal.SignInClientImpl: int zaa
io.grpc.internal.RetriableStream: io.grpc.internal.RetryPolicy retryPolicy
com.google.protobuf.UnsafeUtil: long INT_ARRAY_BASE_OFFSET
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value MIN_VALUE
com.google.android.gms.maps.model.zzt: com.google.android.gms.maps.model.TileOverlayOptions zza
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference DEFAULT_INSTANCE
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String deepLinkURLScheme
io.flutter.plugins.googlemaps.PolygonController: boolean consumeTapEvents
androidx.fragment.app.FragmentTransition$4: androidx.collection.ArrayMap val$nameOverrides
androidx.core.graphics.drawable.IconCompat: byte[] mData
io.grpc.internal.RetriableStream$State: java.util.Collection activeHedges
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: java.util.concurrent.ScheduledFuture scheduledFuture
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype LTE_CA
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: int chunkSize
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.TileOverlaysController tileOverlaysController
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzc
com.google.android.gms.common.api.internal.zabq: int zam
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec INSTANCE
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
com.google.android.gms.common.api.GoogleApi: java.lang.String zac
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzws zzv
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT64_LIST_PACKED
androidx.fragment.app.Fragment: boolean mAdded
com.google.firebase.messaging.FirebaseMessaging: com.google.android.datatransport.TransportFactory transportFactory
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: android.content.Context context
com.google.firebase.FirebaseOptions$Builder: java.lang.String applicationId
com.google.protobuf.SmallSortedMap: java.util.List entryList
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
com.google.firebase.auth.internal.zzam: android.os.Handler zze
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType[] $VALUES
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater indexUpdater
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken zzg
com.google.android.gms.internal.firebase-auth-api.zzdm: javax.crypto.SecretKey zzb
io.grpc.Grpc: io.grpc.Attributes$Key TRANSPORT_ATTR_LOCAL_ADDR
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.local.Scheduler gcScheduler
com.google.android.gms.cloudmessaging.zzs: int zze
com.google.firestore.v1.BatchGetDocumentsRequest: int DOCUMENTS_FIELD_NUMBER
com.google.firebase.firestore.core.DatabaseInfo: java.lang.String persistenceKey
androidx.core.app.NotificationCompat$Builder: boolean mGroupSummary
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
io.grpc.internal.RetriableStream$Substream: io.grpc.internal.ClientStream stream
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider: io.grpc.okhttp.OkHttpChannelBuilder this$0
com.google.protobuf.UnmodifiableLazyStringList$2: com.google.protobuf.UnmodifiableLazyStringList this$0
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.lang.String logSourceName
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: boolean encoded
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.UiSettings zzb
com.google.android.gms.maps.model.PolylineOptions: int zzj
com.google.firebase.Timestamp: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.signin.SignInOptions zae
com.tekartik.sqflite.SqflitePlugin$3: com.tekartik.sqflite.Database val$database
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
com.google.android.gms.maps.model.BitmapDescriptor: com.google.android.gms.dynamic.IObjectWrapper zza
io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec: io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec INSTANCE
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.RemoteSerializer serializer
com.google.android.gms.internal.firebase-auth-api.zzmx: int zze
com.google.firestore.v1.Cursor: boolean before_
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.google.android.gms.internal.firebase-auth-api.zzfv: com.google.android.gms.internal.firebase-auth-api.zzpo zza
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.internal.StatusExceptionMapper zaa
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
com.google.firebase.firestore.index.OrderedCodeWriter: byte[][] LENGTH_TO_HEADER_BITS
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: long end_ms_
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzpq: java.lang.String zza
com.tekartik.sqflite.SqflitePlugin$3: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
com.google.firebase.firestore.LoadBundleTaskProgress: long bytesLoaded
com.google.firebase.auth.zzv: com.google.firebase.auth.zzv zza
com.google.android.gms.common.ConnectionResult: android.app.PendingIntent zzc
io.flutter.plugins.pathprovider.Messages$StorageDirectory: int index
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzse zzs
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int maxBlobByteSizePerRow
com.google.firestore.admin.v1.Index: com.google.protobuf.Parser PARSER
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDenied
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason MESSAGE_TOO_OLD
io.grpc.internal.DelayedClientCall$DelayedListener$4: io.grpc.internal.DelayedClientCall$DelayedListener this$0
com.google.android.gms.internal.firebase-auth-api.zzacd: java.nio.charset.Charset zzc
com.google.protobuf.LazyField: com.google.protobuf.MessageLite defaultInstance
com.google.firebase.auth.internal.zzb: com.google.firebase.auth.FirebaseAuth zzb
com.google.firebase.firestore.core.UserData$ParsedUpdateData: java.util.List fieldTransforms
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority VERY_LOW
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzP
com.google.android.gms.common.internal.MethodInvocation: int zah
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] values
io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.internal.ManagedChannelImpl$LbHelperImpl helper
io.grpc.Attributes: boolean $assertionsDisabled
com.google.android.gms.internal.firebase-auth-api.zzqm: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzvw: java.lang.ref.WeakReference zzd
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard guard
io.grpc.internal.DnsNameResolver: boolean enableTxt
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion SSL_3_0
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
io.grpc.okhttp.internal.OkHostnameVerifier: java.util.regex.Pattern VERIFY_AS_IP_ADDRESS
com.google.firebase.FirebaseApp: com.google.firebase.components.ComponentRuntime componentRuntime
com.google.android.gms.cloudmessaging.zzm: com.google.android.gms.cloudmessaging.zzs zzf
androidx.core.app.NotificationCompat$Action: android.os.Bundle mExtras
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String topic_
com.google.android.datatransport.runtime.backends.CreationContextFactory: com.google.android.datatransport.runtime.time.Clock monotonicClock
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zau
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager
com.google.firestore.v1.Document: com.google.firestore.v1.Document DEFAULT_INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.WindowInsetsController mInsetsController
com.tekartik.sqflite.SqflitePlugin: int databaseId
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior DEFAULT
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: android.content.ComponentName mComponentName
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzB
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: int targetId
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
androidx.fragment.app.FragmentState: int mFragmentId
com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzS
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Bound endAt
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: long id
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.ManagedClientTransport$Listener listener
com.google.android.gms.cloudmessaging.zzn: android.os.Messenger zza
io.grpc.internal.DelayedClientCall: java.util.logging.Logger logger
androidx.core.app.NotificationManagerCompat$NotifyTask: int id
io.grpc.Status: io.grpc.Status PERMISSION_DENIED
androidx.core.app.Person: java.lang.String mUri
com.google.firebase.installations.GetIdListener: com.google.android.gms.tasks.TaskCompletionSource taskCompletionSource
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: java.util.Map valueEncoders
com.google.android.gms.internal.firebase-auth-api.zzkj: com.google.android.gms.internal.firebase-auth-api.zzkj zzb
com.google.android.gms.common.api.internal.zabo: com.google.android.gms.common.api.internal.zabp zaa
io.grpc.Status: io.grpc.Status INVALID_ARGUMENT
com.google.android.gms.common.api.internal.zag: com.google.android.gms.tasks.TaskCompletionSource zab
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.plugins.firebase.messaging.JobIntentService: io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor mCurProcessor
androidx.core.app.NotificationCompat$Builder: int mBadgeIcon
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
com.google.android.gms.common.internal.GmsClientSupervisor: boolean zze
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledExecutorService delegate
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.grpc.internal.RetriableStream$2: io.grpc.ClientStreamTracer val$bufferSizeTracer
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.firebase-auth-api.zzms: com.google.android.gms.internal.firebase-auth-api.zzms zzb
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection SCALAR
io.grpc.okhttp.internal.framed.Http2$Writer: boolean client
io.grpc.internal.KeepAliveManager: long keepAliveTimeInNanos
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: com.google.firebase.firestore.core.MemoryComponentProvider this$0
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean zzc
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: com.google.firebase.firestore.core.ListenSequence listenSequence
io.grpc.internal.ManagedChannelImplBuilder: java.lang.String target
com.google.firebase.components.Component$Builder: java.util.Set providedInterfaces
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result getLocationResult
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite DEFAULT_INSTANCE
com.google.firebase.components.CycleDetector$Dep: java.lang.Class anInterface
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: com.google.firebase.firestore.model.DocumentKey documentKey
io.grpc.LoadBalancer$ResolvedAddresses$Builder: java.util.List addresses
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzcd: com.google.android.gms.internal.firebase-auth-api.zznt zze
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.OptionalMethod getAlpnSelectedProtocol
com.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.CloudMessagingReceiver zza
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar gamesSDKRegistrar
com.google.firebase.auth.zzo: android.app.Activity zze
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
com.google.android.gms.cloudmessaging.zzw: java.util.concurrent.ScheduledFuture zzc
com.google.protobuf.MessageSchema$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.google.android.datatransport.runtime.TransportFactoryImpl: com.google.android.datatransport.runtime.TransportContext transportContext
com.google.firebase.auth.internal.zzw: boolean zzd
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer channelTracer
kotlinx.coroutines.internal.ArrayQueue: int head
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.lang.Boolean hasGesture
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: android.content.Context context
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.firestore.model.SnapshotVersion commitVersion
com.google.android.gms.internal.firebase-auth-api.zzacw: boolean zzb
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: boolean isConnected
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: com.google.firebase.firestore.model.FieldPath fieldPath
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.util.AsyncQueue asyncQueue
io.grpc.internal.ApplicationThreadDeframer$CloseableInitializingMessageProducer: io.grpc.internal.ApplicationThreadDeframer this$0
com.google.android.gms.tasks.zzi: com.google.android.gms.tasks.Task zza
com.google.android.gms.common.internal.GetServiceRequest: android.accounts.Account zzh
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.Map getters
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
com.google.protobuf.FieldType: com.google.protobuf.FieldType BOOL_LIST
com.google.android.gms.internal.firebase-auth-api.zzo: java.nio.charset.Charset zzf
com.google.android.gms.common.internal.RootTelemetryConfiguration: int zzd
com.google.android.gms.internal.location.zzbd: java.util.List zzm
io.grpc.internal.SerializeReentrantCallsDirectExecutor: java.util.logging.Logger log
com.google.firestore.v1.StructuredQuery$Filter: int UNARY_FILTER_FIELD_NUMBER
com.google.protobuf.IterableByteBufferInputStream: int dataSize
com.google.protobuf.FieldType: com.google.protobuf.FieldType SFIXED32
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.android.gms.internal.safetynet.zza: java.lang.String zzb
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int startOffset
com.tekartik.sqflite.dev.Debug: boolean EXTRA_LOGV
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
com.google.firebase.messaging.ServiceStarter: java.lang.Boolean hasAccessNetworkStatePermission
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long maxStorageSizeInBytes
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api API
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
com.google.firestore.v1.Write: int operationCase_
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.model.DocumentSet documents
com.google.android.gms.dynamic.zae: android.content.Intent zab
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
com.google.android.gms.internal.firebase-auth-api.zzaci: com.google.android.gms.internal.firebase-auth-api.zzabk zzb
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation SKIP_OP
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.LocalDocumentsView localDocuments
com.google.firestore.v1.BatchGetDocumentsRequest: int consistencySelectorCase_
com.google.firebase.firestore.Filter$UnaryFilter: java.lang.Object value
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: com.google.firebase.auth.internal.IdTokenListener idTokenListener
io.grpc.internal.ManagedChannelServiceConfig: java.util.Map serviceMethodMap
io.grpc.internal.Http2ClientStreamTransportState: boolean headersReceived
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.NameResolver$Factory nameResolverFactory
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate
io.flutter.plugins.webviewflutter.InputAwareWebView: android.view.View containerView
com.google.firebase.components.Component: int instantiation
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.GoogleMap googleMap
com.google.protobuf.RopeByteString: int totalLength
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition zzd
io.grpc.Status$Code: io.grpc.Status$Code DEADLINE_EXCEEDED
io.grpc.okhttp.OkHttpClientTransport: java.util.concurrent.Executor executor
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
io.grpc.okhttp.OkHttpClientTransport: javax.net.SocketFactory socketFactory
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.WriteStream writeStream
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EHRPD
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.google.firestore.admin.v1.Index$IndexField: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.auth.CredentialsProvider appCheckProvider
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_REMOTE_VERSION
io.grpc.okhttp.ExceptionHandlingFrameWriter: io.grpc.okhttp.internal.framed.FrameWriter frameWriter
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
io.grpc.StatusRuntimeException: io.grpc.Metadata trailers
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: java.lang.Integer maxOutboundMessageSize
com.google.android.gms.common.api.internal.zacb: com.google.android.gms.common.api.internal.ListenerHolder zaa
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zze
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String firebaseInstallationId
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: java.util.concurrent.atomic.AtomicBoolean connectionRequested
com.google.android.gms.internal.firebase-auth-api.zzcs: com.google.android.gms.internal.firebase-auth-api.zzct zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq[] zzaa
com.google.firestore.v1.DocumentTransform$FieldTransform: int FIELD_PATH_FIELD_NUMBER
okio.SegmentPool: long byteCount
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
io.grpc.android.AndroidChannelBuilder: android.content.Context context
com.google.android.gms.internal.firebase-auth-api.zzts: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.grpc.internal.KeepAliveManager$1: io.grpc.internal.KeepAliveManager this$0
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzg
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: io.flutter.plugin.common.StandardMethodCodec MESSAGE_CODEC
com.google.protobuf.CodedInputStreamReader: com.google.protobuf.CodedInputStream input
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase BOOLEAN_VALUE
com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight zza
com.google.android.gms.maps.model.PolylineOptions: int zzc
com.tekartik.sqflite.SqflitePlugin$BgResult$3: com.tekartik.sqflite.SqflitePlugin$BgResult this$1
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED
com.google.android.gms.internal.firebase-auth-api.zzjl: com.google.android.gms.internal.firebase-auth-api.zzjl zzb
androidx.window.embedding.SplitPairRule: boolean clearTop
io.grpc.internal.RetriableStream: java.util.concurrent.Executor callExecutor
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String titleLocKey
com.google.firestore.v1.DocumentMask: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.auth-api-phone.zzz: com.google.android.gms.tasks.TaskCompletionSource zza
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat mIcon
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLitePersistence$OpenHelper opener
io.grpc.okhttp.internal.framed.Http2$Writer: io.grpc.okhttp.internal.framed.Hpack$Writer hpackWriter
io.grpc.internal.TransportTracer: long messagesSent
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase SET_TO_SERVER_VALUE
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
io.grpc.Status$Code: io.grpc.Status$Code RESOURCE_EXHAUSTED
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl: io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl flutterApi
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.firebase-auth-api.zzbp: java.lang.Class zza
com.google.android.gms.internal.firebase-auth-api.zztt: java.lang.String zza
com.google.firebase.firestore.index.OrderedCodeWriter: int position
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction DESCENDING
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object[] alternatingKeysAndValues
androidx.collection.ArraySet: int sBaseCacheSize
com.google.android.gms.internal.firebase-auth-api.zzvm: com.google.firebase.auth.UserProfileChangeRequest zza
io.grpc.internal.ApplicationThreadDeframerListener$3: java.lang.Throwable val$cause
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zza
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase TARGET_CHANGE
com.google.firebase.messaging.ServiceStarter: java.util.Queue messagingEvents
com.google.android.gms.common.zzm: com.google.android.gms.common.zzk zzb
io.grpc.ClientStreamTracer$StreamInfo: io.grpc.CallOptions callOptions
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet addedDocuments
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus NOT_GENERATED
com.google.android.gms.maps.model.LatLngBounds: com.google.android.gms.maps.model.LatLng northeast
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okio.RealBufferedSink: okio.Sink sink
com.google.android.gms.common.api.internal.zabk: android.os.Handler zaa
androidx.fragment.app.Fragment: boolean mMenuVisible
com.google.protobuf.JavaType: com.google.protobuf.JavaType MESSAGE
com.google.android.gms.maps.model.PatternItem: java.lang.String zza
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState OFFLINE
io.grpc.internal.ManagedChannelImplBuilder: boolean statsEnabled
androidx.core.app.Person: boolean mIsImportant
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String token
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: int maxMessageSize
com.google.android.gms.common.internal.GmsLogger: java.lang.String zzb
com.google.android.gms.stats.WakeLock: long zzb
com.tekartik.sqflite.Database: int id
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zza
com.google.firebase.firestore.local.LocalViewChanges$1: int[] $SwitchMap$com$google$firebase$firestore$core$DocumentViewChange$Type
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType UNRECOGNIZED
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
com.google.firebase.firestore.local.IndexBackfiller: long REGULAR_BACKFILL_DELAY_MS
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: boolean $assertionsDisabled
com.google.android.gms.internal.firebase-auth-api.zzbe: com.google.android.gms.internal.firebase-auth-api.zzbe zzb
com.google.android.gms.maps.model.PolylineOptions: float zzb
io.grpc.internal.RetriableStream: io.grpc.internal.HedgingPolicy hedgingPolicy
androidx.browser.customtabs.CustomTabsIntent$Builder: boolean mInstantAppsEnabled
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction KEY
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zzf
io.grpc.internal.ProxyDetectorImpl: java.util.logging.Logger log
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
com.google.android.gms.internal.firebase-auth-api.zzzo: int zza
com.google.android.gms.internal.firebase-auth-api.zzsv: com.google.android.gms.internal.firebase-auth-api.zzsw zzb
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
com.google.android.gms.common.api.internal.UnregisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zaa
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
com.google.android.gms.maps.zzah: com.google.android.gms.dynamic.OnDelegateCreatedListener zza
com.google.android.gms.common.internal.GmsClientSupervisor: com.google.android.gms.common.internal.zzr zzd
com.google.android.gms.common.internal.zzd: int zzb
com.google.firebase.firestore.core.LimboDocumentChange: com.google.firebase.firestore.core.LimboDocumentChange$Type type
io.grpc.internal.ManagedChannelImplBuilder: boolean recordRetryMetrics
com.google.firebase.firestore.local.SQLitePersistence: boolean started
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
io.grpc.CallOptions: io.grpc.CallCredentials credentials
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger channelLogger
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.List baseMutations
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: com.google.firebase.encoders.FieldDescriptor CURRENTCACHESIZEBYTES_DESCRIPTOR
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
com.google.firebase.firestore.remote.FirestoreChannel: io.grpc.Metadata$Key X_GOOG_REQUEST_PARAMS_HEADER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.util.List initialTileOverlays
io.grpc.internal.RetriableStream: java.util.Random random
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api$AbstractClientBuilder zac
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase FIELD_FILTER
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
com.google.protobuf.CodedInputStream$StreamDecoder: int pos
io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config
kotlin.ranges.IntProgressionIterator: boolean hasNext
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zzc
io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Metadata val$trailers
com.google.android.gms.tasks.zzf: java.util.concurrent.Executor zza
com.google.firestore.v1.DocumentDelete: int removedTargetIdsMemoizedSerializedSize
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock
com.google.firebase.firestore.remote.RemoteStore: java.util.Deque writePipeline
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
androidx.browser.customtabs.CustomTabsIntent: android.content.Intent intent
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.LatLng zza
com.google.android.gms.common.logging.Logger: int zzd
com.google.android.gms.internal.firebase-auth-api.zzvw: com.google.android.gms.common.logging.Logger zza
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.android.gms.cloudmessaging.zzu: android.os.Bundle zzb
com.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector zza
com.google.firestore.v1.Write: int CURRENT_DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.local.LruGarbageCollector$Results: boolean hasRun
io.grpc.internal.ManagedChannelImplBuilder: java.lang.String defaultLbPolicy
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzd
io.grpc.NameResolver$ConfigOrError: java.lang.Object config
com.google.firebase.firestore.core.ViewSnapshot: boolean excludesMetadataChanges
io.grpc.internal.ProxyDetectorImpl: java.net.InetSocketAddress overrideProxyAddress
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory$1: io.grpc.internal.AtomicBackoff$State val$keepAliveTimeNanosState
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSPA
com.google.firebase.auth.internal.zza: com.google.android.gms.tasks.TaskCompletionSource zzd
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zze
io.grpc.okhttp.internal.framed.Hpack$Reader: int maxDynamicTableByteCount
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.reflect.Method GET_APPLICATION_PROTOCOLS
com.google.android.gms.common.ConnectionResult: int zza
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: java.lang.Integer mNavigationBarDividerColor
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: java.lang.String errorMessage
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.HttpConnectProxiedSocketAddress connectProxiedSocketAddr
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.CancellableContinuation cont
com.google.firebase.messaging.FirebaseMessaging: boolean syncScheduledOrRunning
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler$OnTransactionStartedListener onTransactionStartedListener
io.grpc.okhttp.AsyncSink: io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler transportExceptionHandler
com.google.firebase.auth.UserProfileChangeRequest$Builder: java.lang.String zza
com.google.firestore.v1.Write: int VERIFY_FIELD_NUMBER
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependencies
com.google.firebase.firestore.local.Persistence: java.lang.String TAG
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: com.google.android.datatransport.runtime.firebase.transport.TimeWindow DEFAULT_INSTANCE
io.grpc.ClientInterceptors$InterceptorChannel: io.grpc.ClientInterceptor interceptor
com.google.protobuf.CodedInputStream$StreamDecoder: int currentLimit
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.TimeWindow window_
io.grpc.internal.DelayedStream: long streamSetTimeNanos
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver INSTANCE
io.flutter.plugins.googlemaps.GoogleMapController: boolean buildingsEnabled
com.google.firebase.firestore.core.View$DocumentChanges: com.google.firebase.firestore.model.DocumentSet documentSet
com.google.firebase.auth.internal.zzz: long zza
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzacq zzn
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType FIXED64
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: long events_dropped_count_
com.google.firebase.messaging.Metadata: int gmsVersionCode
io.grpc.okhttp.internal.DistinguishedNameParser: int pos
com.google.android.gms.common.api.internal.zacd: long zae
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType FOUND_DOCUMENT
com.google.firebase.messaging.RemoteMessage: java.util.Map data
com.google.android.gms.common.api.internal.zaci: com.google.android.gms.common.api.internal.UnregisterListenerMethod zab
com.google.firebase.firestore.model.DatabaseId: java.lang.String databaseId
com.google.firebase.firestore.remote.GrpcCallProvider: io.grpc.CallCredentials firestoreHeaders
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.util.Map transactions
com.google.common.collect.RegularImmutableMap: int size
com.google.android.gms.tasks.zzn: java.util.concurrent.Executor zza
com.google.firebase.firestore.remote.FirestoreCallCredentials: com.google.firebase.firestore.auth.CredentialsProvider authProvider
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator IS_NOT_NULL
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
com.google.firebase.messaging.FcmLifecycleCallbacks: java.util.Set seenIntents
io.grpc.internal.Http2Ping: long roundTripTimeNanos
com.google.firestore.v1.CommitRequest$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: boolean mLaunchingService
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase DOUBLE_VALUE
com.lyokone.location.LocationPlugin: com.lyokone.location.FlutterLocationService locationService
io.grpc.internal.OobChannel: io.grpc.internal.DelayedClientTransport delayedTransport
io.grpc.internal.GrpcUtil: io.grpc.CallOptions$Key CALL_OPTIONS_RPC_OWNED_BY_BALANCER
io.grpc.okhttp.internal.framed.Hpack$Writer: int dynamicTableHeaderCount
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzxs: java.lang.String zza
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature MTLS
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code UNKNOWN
com.google.android.gms.internal.firebase-auth-api.zzhw: java.util.Map zzb
com.google.firebase.auth.internal.zzi: java.lang.String zze
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
io.grpc.internal.ManagedChannelImpl: java.util.logging.Logger logger
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
com.google.android.gms.common.api.internal.zact: android.content.Context zab
com.google.android.gms.internal.firebase-auth-api.zzs: java.util.regex.Matcher zza
com.google.firebase.firestore.util.BackgroundQueue: java.util.concurrent.Semaphore completedTasks
com.google.android.gms.internal.firebase-auth-api.zzwt: java.lang.String zzn
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider setApplicationContextProvider
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
com.google.firebase.components.ComponentRuntime: java.util.Map lazySetMap
com.google.firestore.v1.TargetChange$TargetChangeType: int value
io.grpc.LoadBalancerRegistry: java.lang.Iterable HARDCODED_CLASSES
com.google.android.gms.common.api.internal.zacv: com.google.android.gms.common.api.internal.TaskApiCall$Builder zaa
com.google.firestore.v1.Write: com.google.protobuf.Parser PARSER
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
com.google.android.gms.internal.common.zzc: java.lang.ClassLoader zza
com.google.android.gms.internal.firebase-auth-api.zzbq: int zze
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzpf: com.google.android.gms.internal.firebase-auth-api.zzpg zza
com.google.android.datatransport.runtime.backends.CreationContextFactory: android.content.Context applicationContext
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams INITIAL_WINDOW_SIZE
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int bufferSizeAfterCurrentLimit
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzU
com.google.firebase.auth.internal.zzal: com.google.firebase.auth.internal.zzam zza
com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit
com.google.android.gms.location.LocationResult: java.util.List zzbc
io.grpc.internal.TransportTracer: long streamsSucceeded
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
com.google.android.gms.common.internal.zzu: java.lang.String zza
io.grpc.internal.InternalSubchannel$8: io.grpc.Status val$reason
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction ASCENDING
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: int ttl_
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error COMPRESSION_ERROR
io.grpc.InternalChannelz$ChannelTrace$Event: long timestampNanos
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: boolean closed
io.grpc.ClientInterceptors: io.grpc.ClientCall NOOP_CALL
com.google.android.gms.internal.firebase-auth-api.zzzy: boolean zzf
androidx.fragment.app.FragmentState: boolean mHidden
io.grpc.internal.ManagedChannelImpl$NameResolverListener: io.grpc.NameResolver resolver
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus registrationStatus
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzt
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
kotlinx.coroutines.DispatchedTask: int resumeMode
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api zah
com.google.firestore.v1.Document: java.lang.String name_
com.google.android.gms.internal.firebase-auth-api.zzrg: java.lang.String zza
com.google.firestore.v1.StructuredQuery$Direction: int value
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzwb zzb
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: boolean dead
com.google.android.gms.internal.firebase-auth-api.zzom: com.google.android.gms.internal.firebase-auth-api.zzoo zzc
com.google.android.gms.internal.location.zzau: com.google.android.gms.location.LocationResult zzdb
com.google.android.gms.stats.WakeLock: java.util.concurrent.atomic.AtomicInteger zzt
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzog: com.google.android.gms.internal.firebase-auth-api.zzpe zzc
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zza
com.google.firebase.firestore.local.SQLiteBundleCache: com.google.firebase.firestore.local.LocalSerializer serializer
com.google.protobuf.FieldType: com.google.protobuf.FieldType$Collection collection
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.lang.Boolean hasGesture
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: java.lang.String description
com.google.android.gms.internal.firebase-auth-api.zzbq: com.google.android.gms.internal.firebase-auth-api.zzbn zzd
com.google.android.gms.internal.maps.zzc: java.lang.ClassLoader zza
io.perfmark.Impl: io.perfmark.Tag NO_TAG
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$StructuredQuery$FieldFilter$Operator
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzka zzb
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.internal.AutoConfiguredLoadBalancerFactory this$0
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzR
io.grpc.internal.ExponentialBackoffPolicy: long initialBackoffNanos
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialMarkers
com.google.android.gms.common.internal.zzr: com.google.android.gms.common.stats.ConnectionTracker zzf
io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: io.grpc.internal.ManagedChannelImpl$LbHelperImpl this$1
com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzhw zzb
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map streamHandlers
io.grpc.internal.AbstractClientStream$TransportState: io.grpc.internal.StatsTraceContext statsTraceCtx
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType SINT64
com.google.firebase.auth.zzt: com.google.firebase.auth.FirebaseAuth zza
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.local.RemoteDocumentCache remoteDocumentCache
com.google.android.gms.internal.firebase-auth-api.zzrq: long zzd
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: int number_
io.flutter.plugins.googlemaps.TileProviderController$Worker: int zoom
com.google.android.gms.common.internal.zap: com.google.android.gms.common.api.PendingResult zaa
com.google.android.gms.internal.firebase-auth-api.zzeo: com.google.android.gms.internal.firebase-auth-api.zzmp zzb
com.google.android.gms.internal.firebase-auth-api.zzqu: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ListenRequest: int LABELS_FIELD_NUMBER
io.grpc.protobuf.lite.ProtoInputStream: com.google.protobuf.Parser parser
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
io.grpc.Status$Code: io.grpc.Status$Code OUT_OF_RANGE
io.grpc.NameResolver$ConfigOrError: io.grpc.Status status
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
com.google.firebase.messaging.EnhancedIntentService: int lastStartId
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzl
com.google.android.gms.internal.firebase-auth-api.zzzh: com.google.android.gms.internal.firebase-auth-api.zzyy zzg
com.google.android.gms.cloudmessaging.zzf: com.google.android.gms.cloudmessaging.zzm zza
com.google.android.gms.internal.firebase-auth-api.zzte: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.internal.RetriableStream$BufferSizeTracer: io.grpc.internal.RetriableStream$Substream substream
com.google.firebase.firestore.remote.WatchChangeAggregator: com.google.firebase.firestore.remote.WatchChangeAggregator$TargetMetadataProvider targetMetadataProvider
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.ConnectivityMonitor connectivityMonitor
com.google.android.gms.signin.SignInOptions: java.lang.Long zai
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzY
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableMap EMPTY
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientStream[] EMPTY_STREAM_ARRAY
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source CACHE
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.internal.DelayedClientTransport this$0
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
io.grpc.InternalChannelz: java.util.concurrent.ConcurrentNavigableMap rootChannels
io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_HOST
com.google.android.gms.cloudmessaging.Rpc: androidx.collection.SimpleArrayMap zze
com.google.android.gms.common.zzm: com.google.android.gms.common.zzk zza
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy zza
com.google.android.gms.maps.zzv: com.google.android.gms.maps.GoogleMap$OnCameraMoveListener zza
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos
io.grpc.okhttp.AsyncSink: boolean closed
com.google.android.gms.maps.model.MarkerOptions: float zzf
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zah
com.google.android.gms.security.ProviderInstaller: java.lang.Object zzb
io.grpc.Context$ExecutableListener: io.grpc.Context$CancellationListener listener
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: java.lang.Runnable delegate
com.google.android.gms.internal.firebase-auth-api.zzpw: java.lang.String zzb
okio.Okio$1: okio.Timeout val$timeout
com.google.firestore.v1.StructuredQuery$UnaryFilter: int FIELD_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firebase$firestore$local$QueryPurpose
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
io.grpc.internal.RetriableStream$HedgingPlan: boolean isHedgeable
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus REACHABLE
com.google.android.gms.common.api.ApiException: com.google.android.gms.common.api.Status mStatus
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
io.grpc.internal.DelayedStream$DelayedStreamListener$2: io.grpc.internal.DelayedStream$DelayedStreamListener this$0
androidx.fragment.app.DialogFragment: int mTheme
com.google.firebase.messaging.EnhancedIntentService$1: com.google.firebase.messaging.EnhancedIntentService this$0
com.google.android.gms.internal.firebase-auth-api.zzxc: java.lang.String zza
com.google.android.gms.tasks.zzw: java.lang.Object zze
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
io.grpc.internal.DelayedClientCall$1DeadlineExceededRunnable: io.grpc.internal.DelayedClientCall this$0
com.google.common.base.Charsets: java.nio.charset.Charset ISO_8859_1
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object consistencySelector_
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.reflect.Method removeMethod
com.squareup.okhttp.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzly zzb
com.google.firebase.firestore.core.View: com.google.firebase.database.collection.ImmutableSortedSet syncedDocuments
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzc
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.util.Map requestHeaders
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.model.ResourcePath path
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufValueEncoderContext valueEncoderContext
com.google.android.gms.internal.firebase-auth-api.zzex: com.google.android.gms.internal.firebase-auth-api.zzey zzb
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_BUF_OP
com.google.android.gms.common.api.internal.zabn: int zaa
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.LocalStore localStore
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl this$1
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal VISUAL_STATE_CALLBACK_FEATURE
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
com.google.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics DEFAULT_INSTANCE
com.google.firebase.firestore.core.TransactionRunner: com.google.firebase.firestore.remote.RemoteStore remoteStore
com.google.firestore.v1.ListenResponse: com.google.protobuf.Parser PARSER
io.grpc.okhttp.OkHttpClientStream$TransportState: java.lang.Object lock
com.google.firebase.auth.UserProfileChangeRequest$Builder: boolean zzd
com.google.firebase.firestore.index.AutoValue_IndexEntry: com.google.firebase.firestore.model.DocumentKey documentKey
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String icon
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value NAN_VALUE
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$finalSharedElementTransition
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: java.util.Map val$wrapped
androidx.core.app.NotificationCompat$Action: int icon
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzaeg: int[] zzc
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag NETWORK_UNMETERED
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzjl zze
com.google.android.gms.internal.firebase-auth-api.zzabj: int zzb
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode HTTP_1_1_REQUIRED
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
io.grpc.internal.RetriableStream$1CommitTask: java.util.concurrent.Future val$retryFuture
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: io.grpc.CallCredentials$RequestInfo requestInfo
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: com.google.firebase.encoders.proto.ProtobufEncoder ENCODER
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type REMOVED
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzc
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.android.gms.internal.firebase-auth-api.zzsw: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.flutter.plugins.googlemaps.MarkerController: com.google.android.gms.maps.model.Marker marker
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
io.grpc.internal.ClientCallImpl: java.util.concurrent.ScheduledExecutorService deadlineCancellationExecutor
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzn
io.flutter.plugins.googlemaps.CircleController: boolean consumeTapEvents
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.time.Clock clock
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
com.google.android.gms.internal.firebase-auth-api.zzqq: java.lang.String zza
com.google.protobuf.RopeByteString$1: com.google.protobuf.RopeByteString this$0
io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService scheduler
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String authDomain
com.google.protobuf.RopeByteString$Balancer: java.util.ArrayDeque prefixesStack
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzt
io.grpc.ManagedChannelRegistry: java.util.LinkedHashSet allProviders
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType FUTURE
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl flutterApi
io.grpc.internal.InternalSubchannel$4: io.grpc.internal.InternalSubchannel this$0
io.grpc.okhttp.OkHttpReadableBuffer: okio.Buffer buffer
com.google.protobuf.BooleanArrayList: com.google.protobuf.BooleanArrayList EMPTY_LIST
com.google.firebase.firestore.local.IndexBackfiller: com.google.firebase.firestore.local.IndexBackfiller$Scheduler scheduler
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbj zzq
com.google.rpc.Status: java.lang.String message_
com.google.firebase.auth.internal.zzav: com.google.firebase.auth.FirebaseUser zze
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] $VALUES
io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.InternalSubchannel$CallTracingTransport$1 this$1
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: com.google.firebase.firestore.util.AsyncQueue this$0
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: com.google.firebase.encoders.FieldDescriptor QOSTIER_DESCRIPTOR
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor scheduledExecutor
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.model.mutation.FieldMask fieldMask
com.google.firestore.v1.Target: int TARGET_ID_FIELD_NUMBER
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder INSTANCE
com.google.firebase.firestore.FirestoreMultiDbComponent: com.google.firebase.firestore.remote.GrpcMetadataProvider metadataProvider
androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
io.grpc.internal.DelayedClientTransport$2: io.grpc.internal.DelayedClientTransport this$0
com.google.firebase.auth.internal.zzax: android.content.BroadcastReceiver zzc
io.grpc.Metadata: io.grpc.Metadata$BinaryMarshaller BINARY_BYTE_MARSHALLER
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.RemoteCall zaa
com.google.android.gms.internal.firebase-auth-api.zzadu: java.util.Iterator zza
com.squareup.okhttp.HttpUrl$Builder: java.lang.String scheme
com.google.protobuf.FieldType: com.google.protobuf.FieldType MAP
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.Boolean zzd
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
io.grpc.okhttp.internal.framed.Header: okio.ByteString TARGET_SCHEME
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT32_LIST_PACKED
com.google.android.gms.safetynet.zzd: boolean zzi
com.google.firebase.installations.FirebaseInstallations$1: java.util.concurrent.atomic.AtomicInteger mCount
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.CallOptions callOptions
com.google.firebase.auth.internal.zzt: java.lang.String zzi
io.grpc.okhttp.OkHttpClientTransport: long keepAliveTimeNanos
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath KEY_PATH
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: com.google.android.datatransport.runtime.EventInternal event
io.perfmark.Tag: long tagId
com.google.firebase.auth.internal.zzay: com.google.android.gms.common.logging.Logger zza
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zzb
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Target memoizedTarget
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zab
com.google.firebase.auth.zzx: com.google.firebase.auth.ActionCodeSettings zza
io.grpc.okhttp.OkHttpClientTransport: boolean useGetForSafeMethods
com.google.protobuf.FieldType: com.google.protobuf.FieldType FIXED64_LIST_PACKED
com.google.android.gms.internal.firebase-auth-api.zzrq: boolean zzf
io.grpc.util.RoundRobinLoadBalancer: io.grpc.ConnectivityState currentState
com.google.android.gms.internal.firebase-auth-api.zzos: com.google.android.gms.internal.firebase-auth-api.zzos zzf
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.google.firebase.auth.GithubAuthCredential: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzm
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.Persistence persistence
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zzni zzf
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.zal zam
com.google.android.gms.internal.firebase-auth-api.zzfq: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzub: com.google.android.gms.internal.firebase-auth-api.zzpy zza
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState[] $VALUES
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
com.google.android.gms.signin.internal.zag: java.util.List zaa
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.protobuf.Parser PARSER
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3
com.google.protobuf.FieldType: com.google.protobuf.FieldType SINT32_LIST
com.google.firebase.firestore.local.SQLiteMutationQueue: int nextBatchId
io.grpc.internal.ManagedChannelImplBuilder: java.util.List interceptors
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: int bit
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
io.grpc.okhttp.OkHttpChannelBuilder: java.util.concurrent.Executor transportExecutor
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zzb
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.google.type.LatLng: int LATITUDE_FIELD_NUMBER
io.flutter.plugins.googlemaps.TileOverlayBuilder: com.google.android.gms.maps.model.TileOverlayOptions tileOverlayOptions
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaau zzb
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder INSTANCE
com.google.firestore.v1.WriteResult$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
okio.Segment: okio.Segment prev
com.squareup.okhttp.HttpUrl: java.lang.String url
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
com.google.android.gms.internal.firebase-auth-api.zzxv: java.lang.String zzd
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId CONNECTIVITY_ATTEMPT_TIMER
io.grpc.internal.HedgingPolicy: long hedgingDelayNanos
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient zai
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
io.flutter.plugins.firebase.auth.IdTokenChannelStreamHandler: com.google.firebase.auth.FirebaseAuth firebaseAuth
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zza
com.google.android.gms.internal.firebase-auth-api.zzrq: boolean zze
com.google.android.gms.internal.location.zzm: java.util.List zzm
io.flutter.Log: int DEBUG
io.grpc.MethodDescriptor: boolean $assertionsDisabled
io.grpc.internal.FailingClientStream: io.grpc.internal.ClientStreamListener$RpcProgress rpcProgress
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.ConcurrentMap zzg
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.base.R$string: int common_google_play_services_updating_text
com.google.android.gms.internal.firebase-auth-api.zzmb: int zzg
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue DEFAULT_INSTANCE
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
com.google.android.gms.internal.firebase-auth-api.zzbq: byte[] zzb
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
com.lyokone.location.FlutterLocation: java.lang.Double mLastMslAltitude
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase DOCUMENT
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.LoadBalancer$PickSubchannelArgs args
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zzc
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.Store store
com.google.android.gms.internal.firebase-auth-api.zzwn: java.lang.String zza
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.Metadata transportErrorMetadata
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
com.google.firestore.v1.Value: int DOUBLE_VALUE_FIELD_NUMBER
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.type.LatLng: com.google.protobuf.Parser PARSER
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzk
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: int mFlags
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
com.google.android.gms.internal.firebase-auth-api.zzeo: byte[] zzd
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter channelBufferUsed
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: byte[] sourceExtension
com.google.protobuf.MessageSchema: int checkInitializedCount
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalWithLogId subchannelRef
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
com.google.firebase.firestore.util.ExponentialBackoff: com.google.firebase.firestore.util.AsyncQueue$TimerId timerId
com.google.firebase.firestore.core.ViewChange: com.google.firebase.firestore.core.ViewSnapshot snapshot
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zznw zzb
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: io.grpc.internal.ManagedChannelImpl$SubchannelImpl this$1
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: com.google.firebase.encoders.FieldDescriptor ENDMS_DESCRIPTOR
com.google.android.gms.common.api.internal.zaae: androidx.collection.ArraySet zad
com.google.android.gms.common.api.internal.zad: com.google.android.gms.tasks.TaskCompletionSource zaa
com.google.firebase.firestore.proto.Target: int targetTypeCase_
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.lang.String message
io.grpc.CompressorRegistry: io.grpc.CompressorRegistry DEFAULT_INSTANCE
com.google.firebase.firestore.local.LocalSerializer$1: int[] $SwitchMap$com$google$firebase$firestore$proto$MaybeDocument$DocumentTypeCase
com.google.firestore.v1.Target$DocumentsTarget: int DOCUMENTS_FIELD_NUMBER
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex collectionParentsCache
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
com.tekartik.sqflite.SqflitePlugin$6: int val$databaseId
com.google.firebase.firestore.local.SQLiteBundleCache: com.google.firebase.firestore.local.SQLitePersistence db
com.google.firebase.firestore.bundle.NamedQuery: com.google.firebase.firestore.bundle.BundledQuery bundledQuery
com.baseflow.geolocator.location.LocationManagerClient: android.content.Context context
com.google.firestore.v1.WriteRequest$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
com.google.android.gms.internal.location.zzbd: com.google.android.gms.location.LocationRequest zzdg
com.google.protobuf.MapFieldLite: com.google.protobuf.MapFieldLite EMPTY_MAP_FIELD
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.remote.RemoteStore remoteStore
io.grpc.internal.ManagedChannelImpl: int maxTraceEvents
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: java.lang.Long tokenExpirationTimestamp
io.grpc.internal.DelayedClientCall$1: io.grpc.ClientCall$Listener val$finalListener
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String fieldPath_
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.google.android.gms.maps.zzag: com.google.android.gms.maps.internal.IMapViewDelegate zzb
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
com.google.protobuf.LazyFieldLite: com.google.protobuf.MessageLite value
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType MESSAGE
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbf zzd
io.grpc.okhttp.internal.Platform: java.util.logging.Logger logger
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol HTTP_1_0
com.google.android.gms.internal.firebase-auth-api.zzadl: com.google.android.gms.internal.firebase-auth-api.zzadl zza
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zak
com.google.firebase.messaging.FirebaseMessaging$AutoInit: java.lang.Boolean autoInitEnabled
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.firebase.firestore.model.DatabaseId: java.lang.String projectId
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.firebase.firestore.core.OrderBy: com.google.firebase.firestore.model.FieldPath field
com.google.android.gms.common.util.concurrent.HandlerExecutor: android.os.Handler zza
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] $VALUES
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT32
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzb
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
com.tekartik.sqflite.SqflitePlugin$1: com.tekartik.sqflite.Database val$database
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: int size
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zze
io.grpc.Deadline: io.grpc.Deadline$SystemTicker SYSTEM_TICKER
com.google.android.gms.internal.location.zzbd: boolean zzdh
io.grpc.internal.Http2Ping$2: java.lang.Throwable val$failureCause
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: com.google.firebase.firestore.local.SQLitePersistence db
com.google.firebase.installations.remote.RequestLimiter: long nextRequestTime
io.grpc.LoadBalancer$ResolvedAddresses: java.util.List addresses
io.flutter.plugins.googlemaps.PolygonBuilder: float density
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: boolean broadcasting
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzln zzb
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite instance
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator OPERATOR_UNSPECIFIED
com.tekartik.sqflite.SqflitePlugin: android.content.Context context
io.grpc.internal.MessageDeframer: int maxInboundMessageSize
com.google.android.gms.tasks.zzh: com.google.android.gms.tasks.OnCanceledListener zzc
io.grpc.internal.DelayedClientCall$3: java.lang.Object val$message
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.MarkersController markersController
com.google.android.gms.internal.firebase-auth-api.zzaej: com.google.android.gms.internal.firebase-auth-api.zzaek zzb
io.grpc.internal.AbstractClientStream$TransportState: io.grpc.internal.ClientStreamListener listener
io.grpc.internal.GrpcUtil: io.grpc.internal.SharedResourceHolder$Resource SHARED_CHANNEL_EXECUTOR
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
io.grpc.internal.ChannelTracer: long channelCreationTimeNanos
com.google.firebase.messaging.WithinAppServiceBinder: com.google.firebase.messaging.WithinAppServiceBinder$IntentHandler intentHandler
com.google.android.gms.maps.model.Circle: com.google.android.gms.internal.maps.zzl zza
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
com.google.android.gms.maps.UiSettings: com.google.android.gms.maps.internal.IUiSettingsDelegate zza
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
androidx.window.R$attr: int primaryActivityName
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zze
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code NOT_FOUND
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: com.google.firebase.encoders.FieldDescriptor LOGEVENTDROPPED_DESCRIPTOR
com.google.firebase.firestore.local.DocumentReference: com.google.firebase.firestore.model.DocumentKey key
com.google.firestore.v1.Write: int UPDATE_MASK_FIELD_NUMBER
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status OK
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
com.tekartik.sqflite.SqflitePlugin$5: com.tekartik.sqflite.SqflitePlugin$BgResult val$bgResult
io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput
com.google.firestore.v1.CommitResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.firebase.firestore.remote.WatchChangeAggregator$1: int[] $SwitchMap$com$google$firebase$firestore$remote$WatchChange$WatchTargetChangeType
com.google.firebase.auth.internal.zzp: java.util.Map zzc
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] $VALUES
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialPolygons
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
com.google.protobuf.FieldType: com.google.protobuf.FieldType UINT64
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: java.lang.String log_source_
com.google.firebase.firestore.local.LocalSerializer$1: int[] $SwitchMap$com$google$firebase$firestore$proto$Target$TargetTypeCase
com.lyokone.location.LocationPlugin$1: com.lyokone.location.LocationPlugin this$0
com.google.android.gms.common.api.internal.zacd: com.google.android.gms.common.api.internal.GoogleApiManager zaa
com.google.firebase.messaging.TopicsSyncTask: java.lang.Object TOPIC_SYNC_TASK_LOCK
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zze
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform sdk_platform_
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Internal$ProtobufList filters_
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.internal.ManagedChannelImpl this$0
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Continuation zzb
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mHeadsUpContentView
io.grpc.okhttp.internal.Protocol: java.lang.String protocol
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady: io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl this$1
com.squareup.okhttp.HttpUrl: java.lang.String username
com.google.firebase.firestore.proto.NoDocument$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
androidx.fragment.app.FragmentActivity: boolean mCreated
com.google.android.gms.internal.firebase-auth-api.zzef: com.google.android.gms.internal.firebase-auth-api.zzeg zza
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
com.google.android.gms.common.internal.GetServiceRequest: java.lang.String zzd
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.remote.GrpcMetadataProvider metadataProvider
com.google.firebase.encoders.proto.ProtobufDataEncoderContext$1: int[] $SwitchMap$com$google$firebase$encoders$proto$Protobuf$IntEncoding
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziq zzb
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.lang.String phoneNumber
com.google.protobuf.WireFormat: int MESSAGE_SET_ITEM_TAG
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal WEB_MESSAGE_PORT_CLOSE
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider contextProvider
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zznc zzf
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType networkType
androidx.browser.R$dimen: int browser_actions_context_menu_max_width
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl: io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerCreator downloadListenerCreator
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue$TimerId idleTimerId
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object consistencySelector_
com.google.firestore.v1.TargetChange: com.google.rpc.Status cause_
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzd
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.common.api.Status zzu
com.google.android.gms.internal.firebase-auth-api.zzdq: com.google.android.gms.internal.firebase-auth-api.zzdo zza
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
com.google.android.gms.internal.firebase-auth-api.zzog: byte[] zzb
com.google.firebase.firestore.core.ListenerRegistrationImpl: com.google.firebase.firestore.core.FirestoreClient client
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
com.google.firebase.firestore.remote.WriteStream: boolean handshakeComplete
androidx.core.R$id: int accessibility_custom_action_30
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer LATEST
com.squareup.okhttp.HttpUrl: char[] HEX_DIGITS
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] $VALUES
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory podcasts
io.grpc.InternalLogId: java.lang.String typeName
io.grpc.internal.ManagedChannelImpl: java.util.regex.Pattern URI_PATTERN
io.grpc.okhttp.OkHttpClientStream$TransportState: io.grpc.okhttp.OutboundFlowController outboundFlow
io.grpc.internal.KeepAliveManager: long MIN_KEEPALIVE_TIMEOUT_NANOS
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String dn
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: java.lang.Integer logSource
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
com.google.common.collect.RegularImmutableSet: java.lang.Object[] table
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
com.google.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY
com.baseflow.geolocator.location.LocationManagerClient: android.location.Location currentBestLocation
com.google.android.gms.common.internal.zai: com.google.android.gms.common.api.internal.OnConnectionFailedListener zaa
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String refreshToken
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set zan
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: java.util.concurrent.Executor callExecutor
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.local.Persistence persistence
io.grpc.okhttp.internal.DistinguishedNameParser: char[] chars
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
com.google.firestore.v1.WriteRequest$LabelsDefaultEntryHolder: com.google.protobuf.MapEntryLite defaultEntry
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.ByteString transaction_
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zza
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
com.google.android.gms.internal.firebase-auth-api.zztx: com.google.android.gms.internal.firebase-auth-api.zzwz zza
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
com.google.firestore.v1.StructuredQuery$Order: int direction_
com.google.firebase.firestore.DocumentChange: int newIndex
com.google.firebase.auth.PhoneAuthOptions: java.util.concurrent.Executor zzd
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_AES_128_GCM_SHA256
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: boolean $assertionsDisabled
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzry: java.lang.String zzb
com.google.firebase.firestore.SnapshotMetadata: boolean isFromCache
com.google.android.gms.common.internal.zzn: boolean zzf
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.android.gms.common.zzm: com.google.android.gms.common.zzk zzc
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.firebase.firestore.core.Bound: java.util.List position
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportTerminated
androidx.core.R$id: int accessibility_custom_action_26
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzc
io.grpc.internal.MetadataApplierImpl: boolean finalized
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer notificationPriority
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status INVALID_PAYLOAD
com.google.protobuf.JavaType: com.google.protobuf.JavaType LONG
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator ARRAY_CONTAINS_ANY
com.google.android.gms.internal.firebase-auth-api.zzet: java.lang.String zza
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
com.google.android.datatransport.cct.CCTDestination: java.lang.String DEFAULT_END_POINT
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.google.protobuf.Timestamp: int NANOS_FIELD_NUMBER
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.ResourcePath path
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.database.collection.ImmutableSortedMap keyIndex
com.google.android.gms.cloudmessaging.zzi: com.google.android.gms.cloudmessaging.zzm zza
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
com.google.firebase.messaging.RemoteMessage$Notification: boolean localOnly
io.grpc.util.RoundRobinLoadBalancer: java.util.Map subchannels
com.google.firestore.v1.StructuredQuery$Filter: int COMPOSITE_FILTER_FIELD_NUMBER
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] $VALUES
androidx.collection.ArraySet: int sTwiceBaseCacheSize
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] $VALUES
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.FragmentManagerImpl this$0
com.google.type.LatLng: int LONGITUDE_FIELD_NUMBER
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
com.google.android.gms.location.LocationSettingsStates: boolean zzbp
io.grpc.okhttp.internal.framed.Hpack$Reader: int dynamicTableHeaderCount
com.google.android.gms.internal.firebase-auth-api.zzhj: com.google.android.gms.internal.firebase-auth-api.zzhj zza
com.google.android.gms.internal.location.zzm: com.google.android.gms.location.zzj zzce
io.grpc.okhttp.OkHttpClientTransport$4: io.grpc.okhttp.internal.framed.Variant val$variant
io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Status val$status
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String osBuild
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus ACTIVITY_NOT_FOUND
io.grpc.internal.InternalSubchannel$Index: java.util.List addressGroups
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSPAP
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration MIGRATE_TO_V2
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider configProvider
com.google.android.gms.signin.internal.zag: java.lang.String zab
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0
com.google.protobuf.UnknownFieldSetLite: int count
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.core.app.NotificationCompat$Action: boolean mAllowGeneratedReplies
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList writes_
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: javax.inject.Provider clockProvider
io.grpc.internal.GrpcUtil$6: io.grpc.ClientStreamTracer$Factory val$streamTracerFactory
androidx.core.app.RemoteActionCompat: boolean mEnabled
io.grpc.internal.DnsNameResolver: io.grpc.internal.DnsNameResolver$ResourceResolverFactory resourceResolverFactory
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzbw: com.google.android.gms.internal.firebase-auth-api.zzbq zzb
com.google.android.gms.internal.firebase-auth-api.zzacu: com.google.android.gms.internal.firebase-auth-api.zzada zzb
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.core.SyncEngine syncEngine
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase BYTES_VALUE
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke NEW_MUTABLE_INSTANCE
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
io.grpc.protobuf.lite.ProtoInputStream: com.google.protobuf.MessageLite message
com.google.android.gms.maps.zzn: com.google.android.gms.maps.GoogleMap$OnCircleClickListener zza
kotlinx.coroutines.CoroutineName: java.lang.String name
io.flutter.plugins.firebase.messaging.JobIntentService$ComponentNameWithWakeful: android.content.ComponentName componentName
com.google.android.gms.common.api.internal.zabq: java.util.Queue zab
androidx.webkit.internal.WebResourceErrorImpl: org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface mBoundaryInterface
io.grpc.okhttp.OkHttpClientTransport$4: java.util.concurrent.CountDownLatch val$latch
com.google.android.gms.internal.firebase-auth-api.zzcg: com.google.android.gms.internal.firebase-auth-api.zzbw zza
androidx.fragment.app.FragmentTransition$4: android.graphics.Rect val$inEpicenter
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: com.google.firebase.firestore.index.IndexByteEncoder this$0
io.grpc.internal.ManagedChannelImplBuilder: int maxRetryAttempts
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol HTTP_1_1
com.google.firebase.firestore.proto.NoDocument: int READ_TIME_FIELD_NUMBER
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.CommitRequest: java.lang.String database_
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
com.google.protobuf.IterableByteBufferInputStream: boolean hasArray
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: android.view.View containerView
io.flutter.plugins.googlemaps.TileOverlaysController: com.google.android.gms.maps.GoogleMap googleMap
com.google.firebase.messaging.WithinAppServiceConnection: android.content.Intent connectionIntent
com.google.firestore.v1.MapValue$FieldsDefaultEntryHolder: com.google.protobuf.MapEntryLite defaultEntry
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
com.google.protobuf.FieldType: com.google.protobuf.FieldType INT64
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_WITH_NULL_MD5
io.grpc.internal.ProxyDetectorImpl: io.grpc.internal.ProxyDetectorImpl$AuthenticationProvider DEFAULT_AUTHENTICATOR
com.google.android.gms.common.internal.zal: com.google.android.gms.common.GoogleApiAvailabilityLight zab
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.Map targetToDnfSubTargets
io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback val$defaultNetworkCallback
io.grpc.internal.DelayedClientCall: io.grpc.ClientCall NOOP_CALL
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder fallbackEncoder
com.google.firestore.v1.MapValue$1: int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke
io.grpc.internal.ManagedChannelImpl: boolean nameResolverStarted
io.grpc.okhttp.internal.OkHostnameVerifier: io.grpc.okhttp.internal.OkHostnameVerifier INSTANCE
io.grpc.okhttp.AsyncSink: java.net.Socket socket
com.google.android.gms.internal.firebase-auth-api.zzacd: com.google.android.gms.internal.firebase-auth-api.zzaay zzf
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzj
com.google.android.gms.common.internal.zav: int zaa
com.google.android.gms.common.internal.zzr: long zzh
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.reflect.Method putMethod
com.google.android.gms.common.internal.BaseGmsClient: int zzv
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Style mStyle
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
com.google.protobuf.FieldType: com.google.protobuf.FieldType DOUBLE_LIST
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC
com.google.firebase.firestore.model.AutoValue_FieldIndex: java.lang.String collectionGroup
com.google.firebase.messaging.Store$Token: java.lang.String appVersion
com.google.android.gms.internal.firebase-auth-api.zzvj: java.lang.String zza
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String composer_label_
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder: com.google.firebase.encoders.config.Configurator CONFIG
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String projectId
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.google.android.gms.cloudmessaging.zzm: android.util.SparseArray zze
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.Scheduler scheduler
com.google.firebase.auth.internal.zzbf: java.lang.String zza
io.grpc.InternalMetadata: java.nio.charset.Charset US_ASCII
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: com.google.firebase.firestore.local.LocalSerializer serializer
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype UNKNOWN_MOBILE_SUBTYPE
androidx.core.R$id: int tag_unhandled_key_event_manager
com.google.firebase.auth.internal.zzi: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzpw: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBEmptyNode INSTANCE
io.grpc.SynchronizationContext: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler
io.grpc.internal.RetriableStream$State: boolean hedgingFrozen
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode left
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.Feature[] zzi
io.grpc.Status$Code: io.grpc.Status$Code ALREADY_EXISTS
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
com.google.android.gms.internal.firebase-auth-api.zzam: com.google.android.gms.internal.firebase-auth-api.zzal zza
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
com.google.firebase.firestore.model.ObjectValue: com.google.firestore.v1.Value partialValue
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
com.google.firebase.auth.PhoneAuthOptions: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzh
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.firebase.auth.ActionCodeSettings zze
com.google.protobuf.CodedInputStream$StreamDecoder: com.google.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPersonList
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.google.android.gms.tasks.zzj: java.util.concurrent.Executor zza
com.google.firebase.firestore.remote.Datastore$1: com.google.firebase.firestore.remote.Datastore this$0
com.google.android.gms.common.internal.zaf: android.content.Intent zaa
io.grpc.internal.GrpcUtil: java.nio.charset.Charset US_ASCII
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind ASCENDING
io.grpc.internal.AbstractClientStream: io.grpc.internal.TransportTracer transportTracer
com.google.android.gms.common.api.internal.zach: int zab
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.auth-api-phone.zzd: java.lang.ClassLoader zza
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] $VALUES
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.WatchStream watchStream
io.flutter.plugins.firebase.firestore.streamhandler.SnapshotsInSyncStreamHandler: com.google.firebase.firestore.ListenerRegistration listenerRegistration
com.squareup.okhttp.HttpUrl$Builder: java.lang.String encodedPassword
io.grpc.internal.InternalSubchannel$Index: int groupIndex
kotlinx.coroutines.channels.ConflatedChannel: java.util.concurrent.locks.ReentrantLock lock
io.grpc.okhttp.OkHttpChannelBuilder: boolean keepAliveWithoutCalls
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zzc
io.grpc.internal.OobChannel: java.util.concurrent.Executor executor
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.android.gms.internal.firebase-auth-api.zzah: int zzb
com.google.firebase.auth.zze: java.lang.String zzb
com.baseflow.geolocator.location.GeolocationManager: java.util.List locationClients
androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String imageUrl
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialPolylines
com.google.android.gms.internal.firebase-auth-api.zzyj: long zzj
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
com.google.firebase.firestore.core.EventManager: java.util.Set snapshotsInSyncListeners
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC
io.grpc.NameResolverRegistry: java.util.logging.Logger logger
com.google.android.gms.internal.firebase-auth-api.zzzw: java.lang.String zzc
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
io.grpc.internal.ClientCallImpl: io.perfmark.Tag tag
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
com.google.android.gms.internal.firebase-auth-api.zzxh: java.util.Map zza
com.google.firebase.firestore.proto.WriteBatch: int batchId_
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference field_
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
io.grpc.MethodDescriptor$Builder: java.lang.String fullMethodName
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: int value
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.internal.Storage zab
com.google.android.gms.common.api.internal.zacg: com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient zaa
io.grpc.internal.KeepAliveManager: long MIN_KEEPALIVE_TIME_NANOS
com.google.android.gms.common.internal.zzj: android.os.Bundle zza
io.grpc.internal.RetriableStream: java.lang.Object lock
com.google.firebase.auth.PlayGamesAuthCredential: java.lang.String zza
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStreamReader wrapper
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object operandType_
com.google.android.gms.internal.firebase-auth-api.zzfy: java.lang.Class zzb
com.google.firebase.firestore.local.LocalStore: java.util.Map targetIdByTarget
io.grpc.internal.AbstractStream$TransportState: java.lang.Object onReadyLock
io.grpc.internal.InternalSubchannel$TransportListener$2: io.grpc.internal.InternalSubchannel$TransportListener this$1
com.google.android.gms.common.api.internal.zabt: com.google.android.gms.common.ConnectionResult zaa
io.grpc.internal.ClientCallImpl$DeadlineTimer: long remainingNanos
com.google.android.gms.internal.firebase-auth-api.zzku: int zzg
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase APPEND_MISSING_ELEMENTS
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.List zzb
com.google.firestore.v1.StructuredQuery$Direction: com.google.protobuf.Internal$EnumLiteMap internalValueMap
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzb
io.grpc.okhttp.OkHttpChannelBuilder$2: int[] $SwitchMap$io$grpc$okhttp$NegotiationType
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId
io.grpc.internal.ApplicationThreadDeframerListener$1: int val$numBytes
com.google.firebase.auth.internal.zzbd: com.google.android.gms.tasks.Task zzc
com.google.protobuf.UnsafeUtil: sun.misc.Unsafe UNSAFE
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier FAST_IF_RADIO_AWAKE
io.grpc.internal.ManagedChannelImplBuilder: boolean retryEnabled
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
com.google.android.gms.common.internal.zav: boolean zae
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zzd
com.google.android.gms.cloudmessaging.zze: android.content.Context zzc
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder INSTANCE
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType PLAINTEXT
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding BASE16
kotlin.text.DelimitedRangesSequence: int startIndex
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzf
com.google.android.gms.internal.stats.zzh: com.google.android.gms.internal.stats.zze zzb
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode STREAM_IN_USE
io.grpc.internal.RetriableStream$Substream: boolean bufferLimitExceeded
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler
com.google.firebase.auth.ActionCodeSettings: boolean zze
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientHostApiCodec INSTANCE
com.google.android.gms.common.api.internal.zzc: com.google.android.gms.common.api.internal.LifecycleCallback zza
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: java.lang.String authToken
com.google.firestore.v1.StructuredQuery: int OFFSET_FIELD_NUMBER
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.model.FieldPath field
com.google.firebase.messaging.FcmBroadcastProcessor: java.util.concurrent.Executor executor
io.grpc.okhttp.OkHttpClientTransport: io.grpc.InternalLogId logId
io.grpc.internal.KeepAliveManager: java.lang.Runnable sendPing
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor endAt_
com.google.firebase.auth.internal.zzae: java.util.List zza
io.grpc.internal.ManagedChannelImpl: java.util.Set oobChannels
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApiCodec INSTANCE
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.lang.RuntimeException missingCallSite
io.grpc.internal.ManagedChannelImpl: boolean panicMode
com.google.android.gms.internal.firebase-auth-api.zzvz: java.lang.Boolean zza
com.google.android.gms.internal.firebase-auth-api.zztu: com.google.android.gms.internal.firebase-auth-api.zztx zzc
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.View mChild
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String name_
com.google.android.gms.common.internal.zat: android.accounts.Account zab
com.google.android.gms.tasks.zzo: com.google.android.gms.tasks.zzp zzb
io.grpc.internal.AbstractClientStream$TransportState$1: io.grpc.Metadata val$trailers
io.grpc.internal.ChannelTracer: io.grpc.InternalLogId logId
androidx.fragment.app.FragmentManagerImpl$4: android.view.View val$viewToAnimate
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState ERROR
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.Fragment val$fragment
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew zzb
com.google.android.gms.maps.zzah: android.view.ViewGroup zzb
io.grpc.internal.MessageFramer: int currentMessageSeqNo
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.FirebaseFirestore firestore
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
com.google.protobuf.RawMessageInfo: java.lang.Object[] objects
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.zzw zzc
com.google.android.gms.safetynet.HarmfulAppsData: java.lang.String apkPackageName
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzf
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocationService$Companion Companion
io.grpc.okhttp.OkHttpClientTransport: boolean stopped
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] $VALUES
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: java.lang.String instance_id_
com.google.android.gms.maps.MapsInitializer: com.google.android.gms.maps.MapsInitializer$Renderer zzc
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.squareup.okhttp.HttpUrl$Builder: java.lang.String encodedFragment
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: java.lang.String tag
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.lang.ref.ReferenceQueue refqueue
com.google.android.gms.common.internal.zac: java.util.Locale zab
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Map targetStates
com.google.protobuf.AbstractParser: com.google.protobuf.ExtensionRegistryLite EMPTY_REGISTRY
com.google.firebase.firestore.bundle.NamedQuery: java.lang.String name
io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalWithLogId subchannelRef
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.InternalLogId subchannelLogId
com.google.android.gms.tasks.zzo: com.google.android.gms.tasks.Task zza
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder INSTANCE
com.google.firebase.encoders.FieldDescriptor: java.util.Map properties
com.google.android.gms.base.R$drawable: int common_full_open_on_phone
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: com.google.firebase.encoders.FieldDescriptor MANUFACTURER_DESCRIPTOR
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams ENABLE_PUSH
com.google.android.gms.internal.firebase-auth-api.zzjr: com.google.android.gms.internal.firebase-auth-api.zzjr zzb
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.Long zzd
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
com.google.firebase.firestore.model.mutation.MutationResult: com.google.firebase.firestore.model.SnapshotVersion version
com.google.android.gms.signin.SignInOptions: boolean zac
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzla zzf
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding FIXED
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType INT64
com.google.firebase.auth.zzo: java.lang.String zza
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] $VALUES
com.google.firebase.auth.zzj: com.google.firebase.auth.FirebaseAuth zzb
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
io.grpc.internal.ApplicationThreadDeframer$3: io.grpc.internal.ApplicationThreadDeframer this$0
io.grpc.okhttp.internal.framed.ErrorCode: int spdyGoAwayCode
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object result
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler clientFrameHandler
com.google.android.datatransport.cct.CctTransportBackend: int readTimeout
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.core.EventManager eventManager
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] $VALUES
com.google.android.gms.common.api.GoogleApi$Settings: com.google.android.gms.common.api.GoogleApi$Settings DEFAULT_SETTINGS
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: com.google.firebase.encoders.FieldDescriptor CLIENTMETRICS_DESCRIPTOR
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
com.google.android.gms.internal.firebase-auth-api.zzgj: com.google.android.gms.internal.firebase-auth-api.zzhh zza
com.tekartik.sqflite.SqflitePlugin$6: boolean val$inMemory
okio.Segment: int pos
com.google.android.gms.internal.firebase-auth-api.zzaby: int[] zzb
com.google.android.gms.internal.firebase-auth-api.zzsx: com.google.android.gms.internal.firebase-auth-api.zzwy zza
io.grpc.internal.ManagedChannelImpl$RealChannel$3: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
okio.ByteString: int hashCode
com.google.firebase.auth.internal.zzax: boolean zzb
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason PAYLOAD_TOO_BIG
com.google.android.gms.internal.firebase-auth-api.zzzu: java.lang.String zzb
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedProviderInterfaces
com.google.firestore.v1.Target: java.lang.Object resumeType_
androidx.fragment.app.FragmentManagerImpl$3$1: androidx.fragment.app.FragmentManagerImpl$3 this$1
com.google.android.gms.internal.firebase-auth-api.zzla: int zze
com.google.android.gms.internal.firebase-auth-api.zzaaj: int zzc
com.google.firebase.firestore.core.DocumentViewChange: com.google.firebase.firestore.core.DocumentViewChange$Type type
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory movies
com.google.firebase.firestore.remote.FirestoreChannel: java.lang.String resourcePrefixValue
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: java.util.Iterator it
com.google.android.gms.auth.api.signin.internal.Storage: java.util.concurrent.locks.Lock zac
com.google.protobuf.ByteString$BoundedByteString: int bytesLength
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.firebase.firestore.FirestoreMultiDbComponent: java.util.Map instances
io.grpc.internal.ChannelTracer: java.lang.Object lock
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode INVALID_CREDENTIALS
io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List addrs
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
com.google.common.io.BaseEncoding$Alphabet: byte[] decodabet
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Event event
com.google.firebase.auth.TwitterAuthCredential: java.lang.String zza
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: java.lang.Object zaa
com.google.firebase.auth.internal.zzbi: com.google.firebase.auth.internal.zzam zzb
androidx.fragment.app.FragmentState: java.lang.String mWho
com.google.firebase.firestore.core.ListenerRegistrationImpl: com.google.firebase.firestore.core.QueryListener queryListener
kotlinx.coroutines.CoroutineId: long id
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.android.gms.common.api.internal.zzd: int zzc
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] $VALUES
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.HashSet serverTimestamps
com.google.android.gms.internal.firebase-auth-api.zzacj: com.google.android.gms.internal.firebase-auth-api.zzack zza
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object element
io.grpc.Status: io.grpc.Status NOT_FOUND
io.grpc.internal.MessageDeframer: io.grpc.internal.CompositeReadableBuffer nextFrame
io.grpc.util.RoundRobinLoadBalancer: io.grpc.Status EMPTY_OK
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzf
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzb
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.Map zzf
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
com.google.firebase.auth.EmailAuthCredential: boolean zze
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev[] zzs
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzb
io.grpc.Status$Code: io.grpc.Status$Code NOT_FOUND
com.google.protobuf.UnsafeUtil: long FLOAT_ARRAY_INDEX_SCALE
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode PROTOCOL_ERROR
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: com.google.firebase.firestore.remote.AbstractStream this$0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
com.google.android.gms.common.internal.MethodInvocation: long zad
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.core.ViewSnapshot snapshot
io.grpc.internal.JsonUtil: long NANOS_PER_SECOND
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzg
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.fragment.app.FragmentState: boolean mRetainInstance
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
com.google.android.gms.cloudmessaging.Rpc: java.util.concurrent.ScheduledExecutorService zzh
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion TLS_1_0
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mInvisibleActions
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions options
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver: boolean wasConnected
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl$1: io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl this$0
com.google.android.gms.internal.firebase-auth-api.zzzi: java.lang.String zzc
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
io.grpc.Context$LazyStorage: io.grpc.Context$Storage storage
io.grpc.internal.SerializeReentrantCallsDirectExecutor: boolean executing
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
com.google.android.gms.internal.firebase-auth-api.zzqq: com.google.firebase.auth.PhoneAuthCredential zzb
com.google.android.gms.internal.firebase-auth-api.zzph: int zzb
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type REMOVED
com.google.android.gms.internal.firebase-auth-api.zzph: com.google.android.gms.internal.firebase-auth-api.zzie zza
androidx.window.core.Version: int patch
androidx.browser.customtabs.CustomTabsIntent$Builder: android.os.Bundle mDefaultColorSchemeBundle
io.grpc.Status: java.util.List STATUS_LIST
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier stopwatchSupplier
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzno zzb
io.grpc.internal.GrpcUtil: io.grpc.Metadata$Key CONTENT_LENGTH_KEY
com.google.firebase.firestore.UserDataWriter$1: int[] $SwitchMap$com$google$firebase$firestore$DocumentSnapshot$ServerTimestampBehavior
com.google.android.gms.internal.firebase-auth-api.zzzw: java.lang.String zza
com.google.firebase.firestore.model.TargetIndexMatcher: java.util.List orderBys
io.grpc.okhttp.internal.ConnectionSpec: java.lang.String[] cipherSuites
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api$ClientKey CLIENT_KEY
com.google.android.gms.internal.firebase-auth-api.zzws: com.google.android.gms.tasks.TaskCompletionSource zzb
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] $VALUES
io.grpc.internal.ChannelTracer: java.util.logging.Logger logger
com.google.android.gms.common.api.AvailabilityException: androidx.collection.ArrayMap zaa
com.squareup.okhttp.Request: java.lang.String method
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.firebase.messaging.FirebaseMessaging$AutoInit: boolean initialized
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: com.google.firebase.inject.Provider userAgentPublisherProvider
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.android.gms.internal.location.zzbl: java.lang.String zzdq
io.grpc.NameResolverRegistry: io.grpc.NameResolverRegistry instance
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zam
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean usingSharedScheduler
com.google.android.gms.internal.firebase-auth-api.zzut: com.google.android.gms.internal.firebase-auth-api.zzrm zza
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzq
com.google.firebase.messaging.FcmBroadcastProcessor: com.google.firebase.messaging.WithinAppServiceConnection fcmServiceConn
io.grpc.internal.DelayedStream: java.util.List pendingCalls
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long eventTimeMs
com.google.firestore.v1.DocumentChange: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.local.LocalStore localStore
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzc
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApi$1: java.util.Map val$wrapped
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.internal.PickFirstLoadBalancer this$0
com.google.firebase.messaging.WakeLockHolder: java.lang.Object syncObject
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
com.google.firebase.firestore.remote.FirestoreChannel: java.lang.String clientLanguage
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] $VALUES
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbg zzl
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: int value
com.google.android.gms.internal.firebase-auth-api.zzxm: boolean zzc
com.google.android.gms.internal.firebase-auth-api.zzabf: com.google.android.gms.internal.firebase-auth-api.zzabg zze
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
com.google.android.gms.internal.firebase-auth-api.zzms: java.lang.String zzf
com.google.android.gms.internal.firebase-auth-api.zzxn: android.content.Context zzb
com.google.firestore.v1.Value: int valueTypeCase_
com.google.firebase.messaging.CommonNotificationBuilder: java.util.concurrent.atomic.AtomicInteger requestCodeProvider
androidx.localbroadcastmanager.content.LocalBroadcastManager: android.os.Handler mHandler
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zze
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zaa
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentTransition$3: boolean val$inIsPop
com.google.android.gms.internal.firebase-auth-api.zzor: com.google.android.gms.internal.firebase-auth-api.zzbm zzb
io.grpc.okhttp.internal.ConnectionSpec: io.grpc.okhttp.internal.ConnectionSpec MODERN_TLS
com.google.android.gms.cloudmessaging.zzw: java.lang.String zzb
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
io.grpc.internal.CallTracer: io.grpc.internal.LongCounter callsFailed
com.google.android.gms.common.api.internal.GoogleApiManager: long zaf
com.google.android.gms.internal.firebase-auth-api.zzua: com.google.android.gms.internal.firebase-auth-api.zzpw zza
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
com.google.firebase.messaging.ImageDownload: java.util.concurrent.Future future
com.google.android.gms.internal.firebase-auth-api.zzeq: java.lang.String zza
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
com.google.firebase.messaging.Constants: long WAKE_LOCK_ACQUIRE_TIMEOUT_MILLIS
io.grpc.stub.ClientCalls: java.util.logging.Logger logger
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
io.grpc.SynchronizationContext$ManagedRunnable: boolean hasStarted
com.google.firebase.firestore.util.AsyncQueue: java.util.ArrayList delayedTasks
com.tekartik.sqflite.operation.MethodCallOperation$Result: io.flutter.plugin.common.MethodChannel$Result result
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.firestore.local.MemoryIndexManager indexManager
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zzyq zzd
com.google.firebase.firestore.remote.WatchChange$DocumentChange: java.util.List removedTargetIds
com.google.android.gms.common.api.GoogleApi$Settings$Builder: android.os.Looper zab
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: io.grpc.MethodDescriptor method
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int loadBatchSize
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType NONE
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.lang.String url
io.flutter.plugins.googlemaps.TileProviderController$Worker: io.flutter.plugins.googlemaps.TileProviderController this$0
com.google.firestore.v1.WriteResult: com.google.protobuf.Internal$ProtobufList transformResults_
com.google.firebase.components.ComponentRuntime$Builder: java.util.concurrent.Executor defaultExecutor
com.google.android.gms.common.api.internal.zzd: java.util.Map zzb
com.squareup.okhttp.HttpUrl: int port
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: boolean enableAliasing
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zze
io.grpc.DecompressorRegistry: java.util.Map decompressors
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzf
com.google.android.gms.location.LocationAvailability: int zzau
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer
com.google.firestore.v1.DocumentMask: com.google.protobuf.Internal$ProtobufList fieldPaths_
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.SerializingExecutor serializingExecutor
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean closed
com.google.android.gms.signin.internal.zak: int zaa
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
androidx.collection.ArraySet: int mSize
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean immutable
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
com.google.android.gms.internal.firebase-auth-api.zzem: com.google.android.gms.internal.firebase-auth-api.zzbw zza
io.grpc.ConnectivityStateInfo: io.grpc.Status status
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_JS_EXTRA
com.google.gson.stream.JsonReader: long peekedLong
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: java.util.concurrent.CountDownLatch latch
androidx.core.R$id: int accessibility_custom_action_7
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetDirectInterfaces
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: javax.net.SocketFactory socketFactory
io.flutter.plugins.packageinfo.PackageInfoPlugin: io.flutter.plugin.common.MethodChannel methodChannel
kotlinx.coroutines.channels.ArrayChannel: int capacity
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
com.google.android.datatransport.cct.CCTDestination: java.util.Set SUPPORTED_ENCODINGS
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
com.google.android.gms.internal.firebase-auth-api.zzzi: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzqw: java.lang.String zzc
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzq zzj
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zze
com.google.firebase.firestore.bundle.BundleMetadata: int schemaVersion
io.grpc.internal.ManagedChannelImpl$IdleModeTimer: io.grpc.internal.ManagedChannelImpl this$0
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.google.android.gms.cloudmessaging.IMessengerCompat$Proxy: android.os.IBinder zza
com.google.android.gms.internal.firebase-auth-api.zzlf: com.google.android.gms.internal.firebase-auth-api.zzaca zza
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.google.android.gms.internal.firebase-auth-api.zzid: java.util.List zzb
com.google.android.gms.internal.firebase-auth-api.zzps: java.lang.String zzb
androidx.core.app.Person: java.lang.CharSequence mName
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: io.grpc.internal.ManagedChannelImpl$RealChannel this$1
com.google.firestore.v1.ExistenceFilter: int COUNT_FIELD_NUMBER
com.google.common.collect.ComparatorOrdering: java.util.Comparator comparator
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.lyokone.location.FlutterLocation: long updateIntervalMilliseconds
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteRemoteDocumentCache remoteDocumentCache
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: java.lang.String val$token
io.grpc.CallOptions: java.lang.Boolean waitForReady
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] titleLocArgs
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: javax.inject.Provider packageNameProvider
com.google.android.gms.signin.SignInOptions: java.lang.String zaf
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
com.google.common.collect.AbstractIndexedListIterator: int size
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.auth.User currentUser
com.google.firebase.components.Component$Builder: java.util.Set publishedEvents
com.google.android.gms.internal.location.zzas: android.content.Context zzcu
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.concurrent.ConcurrentMap zzd
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: javax.inject.Provider guardProvider
androidx.core.app.NotificationCompat$Builder: java.lang.String mChannelId
com.google.android.gms.internal.firebase-auth-api.zzaba: int zzd
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String packageName
androidx.browser.customtabs.CustomTabColorSchemeParams: java.lang.Integer secondaryToolbarColor
io.grpc.Context: java.util.logging.Logger log
com.google.android.gms.internal.firebase-auth-api.zzmm: com.google.android.gms.internal.firebase-auth-api.zzaca zza
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: java.lang.String fid
com.google.android.gms.maps.zzag: android.view.ViewGroup zza
com.google.protobuf.BinaryReader$SafeHeapReader: int tag
com.google.firebase.firestore.model.BasePath: java.util.List segments
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode SPDY_SYN_STREAM
com.google.android.gms.safetynet.SafeBrowsingData: byte[] zzq
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source ArrayArgument
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory INSTANCE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
com.google.firebase.firestore.auth.User: java.lang.String uid
com.google.android.gms.internal.firebase-auth-api.zzur: com.google.android.gms.internal.firebase-auth-api.zzri zza
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int currentLimit
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: boolean configured
com.google.firebase.auth.internal.GenericIdpActivity: long zzb
com.google.firebase.FirebaseApp: java.lang.Object LOCK
io.grpc.okhttp.internal.ConnectionSpec: io.grpc.okhttp.internal.CipherSuite[] APPROVED_CIPHER_SUITES
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.google.protobuf.ArrayDecoders$Registers: java.lang.Object object1
com.google.android.gms.internal.firebase-auth-api.zztt: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
com.google.android.gms.common.internal.service.zao: int zab
com.google.android.datatransport.cct.CctTransportBackend: android.content.Context applicationContext
com.google.android.gms.internal.firebase-auth-api.zzdk: int[] zza
com.google.android.gms.common.GoogleApiAvailability: java.lang.Object zaa
com.google.firebase.firestore.local.SQLitePersistence$Query: android.database.sqlite.SQLiteDatabase db
com.google.android.gms.internal.firebase-auth-api.zzeb: com.google.android.gms.internal.firebase-auth-api.zznt zzc
com.google.firebase.firestore.core.Query: java.lang.String collectionGroup
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.google.firebase.firestore.local.LocalViewChanges: com.google.firebase.database.collection.ImmutableSortedSet added
io.flutter.plugins.firebase.auth.AuthStateChannelStreamHandler: com.google.firebase.auth.FirebaseAuth$AuthStateListener authStateListener
com.google.android.gms.cloudmessaging.zzy: com.google.android.gms.tasks.TaskCompletionSource zza
com.google.android.gms.internal.firebase-auth-api.zzh: java.lang.Object zza
com.lyokone.location.BackgroundNotification: android.content.Context context
com.google.protobuf.JavaType: java.lang.Class boxedType
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApiCodec: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApiCodec INSTANCE
io.grpc.internal.RetriableStream$3: io.grpc.internal.RetriableStream this$0
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.GoogleApiManager zaa
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory INSTANCE
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.nio.charset.Charset UTF_8
com.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.String zza
com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zac
com.google.firebase.firestore.model.TargetIndexMatcher: com.google.firebase.firestore.core.FieldFilter inequalityFilter
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.firebase.FirebaseApp zzf
io.grpc.NameResolver$Args$Builder: java.util.concurrent.Executor executor
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal SAFE_BROWSING_RESPONSE_SHOW_INTERSTITIAL
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection PACKED_VECTOR
io.flutter.view.VsyncWaiter$1$1: long val$cookie
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzadh zzq
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode INTERNAL_ERROR
com.squareup.okhttp.HttpUrl$Builder: java.lang.String host
com.google.firestore.v1.TransactionOptions: int READ_WRITE_FIELD_NUMBER
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code INTERNAL
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzh
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Status zak
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TransactionOptions$ReadWrite: int RETRY_TRANSACTION_FIELD_NUMBER
com.tekartik.sqflite.operation.ExecuteOperation: java.lang.Boolean inTransaction
io.grpc.internal.DelayedClientCall$DelayedListener: java.util.List pendingCallbacks
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzacx zzr
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: int maxElements
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: com.google.firebase.encoders.FieldDescriptor GLOBALMETRICS_DESCRIPTOR
com.google.firebase.firestore.remote.OnlineStateTracker: com.google.firebase.firestore.util.AsyncQueue$DelayedTask onlineStateTimer
com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfiguration zzc
com.google.firebase.firestore.core.EventManager$ListenOptions: boolean waitForSyncWhenOnline
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig config
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl this$1
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
com.google.common.base.Splitter: com.google.common.base.Splitter$Strategy strategy
com.google.android.gms.cloudmessaging.zze: android.content.Intent zzb
com.google.android.gms.internal.firebase-auth-api.zzve: com.google.android.gms.internal.firebase-auth-api.zzro zza
com.google.protobuf.UnsafeUtil: long INT_ARRAY_INDEX_SCALE
com.google.android.gms.internal.firebase-auth-api.zzxm: java.util.concurrent.ScheduledFuture zzf
com.google.android.gms.maps.model.CameraPosition: float zoom
com.google.android.gms.internal.location.zzay: android.location.Location zzdd
com.google.android.gms.internal.firebase-auth-api.zzec: com.google.android.gms.internal.firebase-auth-api.zzbw zza
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
io.grpc.internal.InternalSubchannel$1: io.grpc.internal.InternalSubchannel this$0
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebStorageHostApiCodec: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebStorageHostApiCodec INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzsw: com.google.android.gms.internal.firebase-auth-api.zztx zzc
com.google.android.gms.stats.WakeLock: com.google.android.gms.stats.zzd zze
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq zzg
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map valueEncoders
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzpo zza
com.google.firestore.v1.WriteResponse: com.google.protobuf.Parser PARSER
io.grpc.internal.RetriableStream$Sublistener$4: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.Class serverProviderClass
io.grpc.internal.DelayedStream$14: io.grpc.DecompressorRegistry val$decompressorRegistry
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.FirebaseApp firebaseApp
io.grpc.internal.RetriableStream$1AuthorityEntry: io.grpc.internal.RetriableStream this$0
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: java.util.List log_source_metrics_
io.grpc.internal.Rescheduler: java.lang.Runnable runnable
com.google.firebase.firestore.proto.MaybeDocument: int NO_DOCUMENT_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzxf: java.lang.String zzb
com.google.android.gms.internal.base.zad: com.google.android.gms.common.Feature[] zab
com.google.android.gms.maps.Projection: com.google.android.gms.maps.internal.IProjectionDelegate zza
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApi$1: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.Persistence persistence
androidx.fragment.app.Fragment: java.lang.String mWho
io.grpc.InternalConfigSelector$Result$Builder: io.grpc.ClientInterceptor interceptor
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzaau zzg
com.google.android.gms.maps.model.Tile: int width
com.google.android.gms.location.zzae: java.lang.String zzbe
androidx.browser.customtabs.CustomTabsIntent$Builder: android.util.SparseArray mColorSchemeParamBundles
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator inUseStateAggregator
io.grpc.ManagedChannelRegistry: io.grpc.ManagedChannelRegistry instance
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationRequest mLocationRequest
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type ADDED
io.grpc.LoadBalancerProvider: io.grpc.NameResolver$ConfigOrError UNKNOWN_CONFIG
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.reflect.Method getMethod
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: java.util.List log_source_metrics_
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.grpc.internal.RetriableStream$Sublistener$4: io.grpc.Status val$status
com.google.protobuf.MapEntryLite: com.google.protobuf.MapEntryLite$Metadata metadata
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzh
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error CONNECT_ERROR
com.google.firebase.auth.internal.zzax: com.google.firebase.auth.internal.zzax zza
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
com.google.protobuf.BooleanArrayList: int size
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.ObjectEncoder DEFAULT_FALLBACK_ENCODER
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzc
com.google.android.gms.internal.firebase-auth-api.zzwo: com.google.android.gms.common.api.Status zza
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: android.content.res.AssetManager androidAssetManager
com.google.firebase.firestore.LoadBundleTask: com.google.firebase.firestore.LoadBundleTaskProgress snapshot
com.google.firebase.installations.FirebaseInstallations: java.util.concurrent.ThreadFactory THREAD_FACTORY
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: io.grpc.internal.ManagedChannelImpl$NameResolverListener this$1
com.google.firebase.firestore.FirestoreMultiDbComponent: com.google.firebase.inject.Deferred authProvider
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
com.google.android.gms.common.internal.zze: int zzb
com.google.firestore.v1.StructuredQuery: int WHERE_FIELD_NUMBER
androidx.browser.R$dimen: int browser_actions_context_menu_min_padding
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp version_
com.baseflow.geolocator.location.FusedLocationClient$1: com.baseflow.geolocator.location.FusedLocationClient this$0
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator LESS_THAN_OR_EQUAL
com.google.android.gms.internal.firebase-auth-api.zzabb: int zzb
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query$LimitType limitType
io.grpc.internal.GrpcAttributes: io.grpc.Attributes$Key ATTR_SECURITY_LEVEL
com.google.firebase.messaging.TopicsSubscriber: java.util.concurrent.ScheduledExecutorService syncExecutor
com.google.android.gms.internal.firebase-auth-api.zzxz: java.util.List zzh
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.ResultCallback zah
com.google.firebase.firestore.local.LocalStore: long RESUME_TOKEN_MAX_AGE_SECONDS
com.google.protobuf.FieldType$1: int[] $SwitchMap$com$google$protobuf$FieldType$Collection
com.google.firestore.v1.Precondition$ConditionTypeCase: int value
com.google.android.gms.internal.firebase-auth-api.zzoe: java.lang.ThreadLocal zza
io.grpc.internal.GzipInflatingBuffer: long expectedGzipTrailerIsize
com.google.firebase.firestore.core.Target$1: int[] $SwitchMap$com$google$firebase$firestore$core$FieldFilter$Operator
com.google.android.gms.location.zzaj: long zzbt
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner dispatcher
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firebase.firestore.core.OrderBy: com.google.firebase.firestore.core.OrderBy$Direction direction
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: boolean enableKeepAlive
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zznf zzb
com.google.firebase.firestore.remote.RemoteSerializer$1: int[] $SwitchMap$com$google$firestore$v1$TargetChange$TargetChangeType
kotlin.Pair: java.lang.Object first
io.grpc.internal.InternalSubchannel: io.grpc.internal.CallTracer callsTracer
com.google.android.gms.common.internal.LibraryVersion: java.util.concurrent.ConcurrentHashMap zzc
io.grpc.stub.ClientCalls: io.grpc.CallOptions$Key STUB_TYPE_OPTION
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mTransitionEnded
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedMap map
com.google.android.gms.internal.firebase-auth-api.zzpq: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol ENQUEUE_FAILED
com.google.firebase.firestore.core.Bound: boolean inclusive
com.google.android.gms.common.internal.zat: com.google.android.gms.auth.api.signin.GoogleSignInAccount zad
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics global_metrics_
io.grpc.Attributes: io.grpc.Attributes EMPTY
io.grpc.okhttp.OkHttpClientTransport: java.util.Map ERROR_CODE_TO_STATUS
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel subchannel
com.google.android.gms.common.stats.ConnectionTracker: java.lang.Object zzb
com.google.android.gms.internal.firebase-auth-api.zzsa: java.lang.String zza
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
com.google.protobuf.JavaType: com.google.protobuf.JavaType DOUBLE
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder: io.grpc.okhttp.OkHttpChannelBuilder this$0
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSUPA
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzr
io.grpc.internal.MetadataApplierImpl: io.grpc.ClientStreamTracer[] tracers
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
com.google.protobuf.FieldSet: com.google.protobuf.SmallSortedMap fields
com.google.firebase.firestore.remote.GrpcCallProvider: io.grpc.CallOptions callOptions
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat$Impl mImpl
com.google.android.gms.internal.firebase-auth-api.zztf: com.google.android.gms.internal.firebase-auth-api.zztx zzb
com.google.android.gms.tasks.zzh: java.util.concurrent.Executor zza
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: java.lang.String zab
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport delayedTransport
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: com.google.firebase.firestore.local.IndexManager indexManager
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$2: io.grpc.MethodDescriptor val$method
com.google.firebase.firestore.util.Logger: com.google.firebase.firestore.util.Logger$Level logLevel
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
com.google.android.gms.stats.WakeLock: long zzj
com.google.firebase.firestore.index.AutoValue_IndexEntry: byte[] directionalValue
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: boolean isRepeated
com.google.firebase.events.Event: java.lang.Class type
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.common.api.Status zzbl
com.google.android.gms.internal.firebase-auth-api.zzww: com.google.android.gms.internal.firebase-auth-api.zzvt zza
com.tekartik.sqflite.SqflitePlugin$BgResult: io.flutter.plugin.common.MethodChannel$Result result
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
io.flutter.plugins.webviewflutter.InputAwareWebView$1: io.flutter.plugins.webviewflutter.InputAwareWebView this$0
com.google.protobuf.CodedInputStream: boolean shouldDiscardUnknownFields
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
com.google.firebase.auth.internal.zzaw: java.lang.ref.WeakReference zzb
com.google.android.gms.maps.zzb: com.google.android.gms.maps.GoogleMap$OnMarkerDragListener zza
com.google.android.gms.safetynet.SafeBrowsingData: com.google.android.gms.common.data.DataHolder zzn
com.google.android.gms.internal.firebase-auth-api.zzsl: com.google.android.gms.internal.firebase-auth-api.zztx zzf
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: boolean isShuttingDown
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zzd
com.google.android.datatransport.runtime.backends.CreationContextFactory: com.google.android.datatransport.runtime.time.Clock wallClock
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: javax.inject.Provider executorProvider
com.google.android.gms.internal.firebase-auth-api.zzabt: boolean zzb
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBValueNode root
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
com.google.firebase.firestore.proto.MaybeDocument: int HAS_COMMITTED_MUTATIONS_FIELD_NUMBER
io.grpc.internal.DnsNameResolver: com.google.common.base.Stopwatch stopwatch
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: java.lang.String method
androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
io.grpc.okhttp.OkHttpChannelBuilder: boolean useGetForSafeMethods
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason SERVER_ERROR
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document document_
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: java.lang.String transportName
com.google.android.gms.internal.firebase-auth-api.zztj: com.google.android.gms.internal.firebase-auth-api.zzvs zza
io.grpc.internal.DelayedClientTransport: java.lang.Runnable reportTransportNotInUse
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: java.lang.String tail
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzg
com.google.android.gms.internal.firebase-auth-api.zzacd: java.nio.ByteBuffer zze
com.google.firebase.messaging.TopicsSubscriber: boolean syncScheduledOrRunning
io.grpc.okhttp.OkHttpChannelBuilder: java.util.concurrent.ScheduledExecutorService scheduledExecutorService
com.google.android.gms.maps.zzx: com.google.android.gms.maps.GoogleMap$OnCameraIdleListener zza
com.google.firebase.firestore.remote.AbstractStream: long BACKOFF_CLIENT_NETWORK_FAILURE_MAX_DELAY_MS
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zzjc zzf
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase VALUEMODE_NOT_SET
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory dcim
com.google.android.gms.base.R$string: int common_google_play_services_wear_update_text
com.google.android.gms.common.internal.zzag: java.lang.Object zza
com.google.android.gms.internal.firebase-auth-api.zzaby: int zzc
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zzc
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.TelemetryLoggingClient zaj
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Metadata val$headers
com.google.android.gms.internal.firebase-auth-api.zztb: com.google.android.gms.internal.firebase-auth-api.zzvs zzb
com.tekartik.sqflite.SqflitePlugin$2: com.tekartik.sqflite.Database val$database
com.google.android.gms.internal.firebase-auth-api.zzaaj: boolean[] zzb
io.grpc.Status: io.grpc.Status FAILED_PRECONDITION
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol EMPTY
com.google.firebase.firestore.bundle.BundleLoader: java.util.Map documentsMetadata
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_LOCAL
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler this$0
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object UNINITIALIZED
com.google.android.gms.internal.firebase-auth-api.zzwi: java.lang.String zzf
com.google.protobuf.LongArrayList: com.google.protobuf.LongArrayList EMPTY_LIST
io.grpc.Attributes$Builder: io.grpc.Attributes base
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.protobuf.ByteString$LiteralByteString: byte[] bytes
com.google.android.gms.base.R$string: int common_google_play_services_install_title
com.google.android.gms.internal.firebase-auth-api.zztb: com.google.android.gms.internal.firebase-auth-api.zztx zzc
io.grpc.internal.RetriableStream$1DecompressorRegistryEntry: io.grpc.internal.RetriableStream this$0
com.google.firebase.firestore.core.ComponentProvider$Configuration: int maxConcurrentLimboResolutions
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Map pendingDocumentTargetMapping
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor BULKID_DESCRIPTOR
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
io.grpc.okhttp.internal.framed.ErrorCode: int spdyRstCode
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: java.lang.String androidClientId
com.google.firebase.installations.FirebaseInstallations$3: int[] $SwitchMap$com$google$firebase$installations$remote$TokenResult$ResponseCode
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: java.util.ArrayList chunks
io.flutter.plugins.googlemaps.PolygonsController: java.util.Map googleMapsPolygonIdToDartPolygonId
com.google.firebase.firestore.core.SyncEngine: java.util.Map activeLimboResolutionsByTarget
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
com.google.android.gms.internal.firebase-auth-api.zzjx: int zze
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: java.lang.String head
com.google.firebase.messaging.Metadata: android.content.Context context
com.google.firebase.auth.internal.zzag: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzeq: int zzb
io.grpc.internal.AbstractManagedChannelImplBuilder: int maxInboundMessageSize
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
com.google.android.gms.internal.firebase-auth-api.zzcp: com.google.android.gms.internal.firebase-auth-api.zzcq zza
io.grpc.internal.ScParser: int maxRetryAttemptsLimit
androidx.core.content.ContextCompat: java.lang.Object sSync
com.google.firebase.firestore.local.LruGarbageCollector: long INITIAL_GC_DELAY_MS
androidx.fragment.app.Fragment: boolean mRestored
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: javax.inject.Provider configProvider
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady: io.perfmark.Link val$link
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: long events_dropped_count_
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
com.baseflow.geolocator.location.FusedLocationClient: android.app.Activity activity
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
com.google.common.base.CharMatcher$Whitespace: com.google.common.base.CharMatcher$Whitespace INSTANCE
com.google.firebase.firestore.core.SyncEngine: java.util.Map activeLimboTargetsByKey
com.google.firebase.firestore.LoadBundleTask: java.util.Queue progressListeners
io.grpc.CallOptions: java.lang.String authority
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.LoadBalancer$CreateSubchannelArgs args
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: io.flutter.plugins.webviewflutter.InstanceManager instanceManager
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order ORDER_UNSPECIFIED
com.google.android.gms.internal.firebase-auth-api.zzqo: com.google.android.gms.internal.firebase-auth-api.zzzq zzb
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzhw zza
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: java.lang.Long eventCleanUpAge
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
com.tekartik.sqflite.SqflitePlugin: io.flutter.plugin.common.MethodChannel methodChannel
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev zzp
com.google.android.gms.location.LocationSettingsRequest: com.google.android.gms.location.zzae zzbj
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher IO
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: long id
com.google.firebase.firestore.core.SyncEngine: java.util.Map queriesByTarget
com.tekartik.sqflite.SqlCommand: java.lang.String sql
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
io.grpc.internal.DelayedClientCall: java.util.concurrent.ScheduledFuture initialDeadlineMonitor
io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService scheduledExecutor
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int zze
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.MultiFactorSession zzh
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
com.google.protobuf.SmallSortedMap$EntryIterator: boolean nextCalledBeforeRemove
androidx.window.core.Bounds: int right
com.google.firebase.installations.AutoValue_InstallationTokenResult: long tokenExpirationTimestamp
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean trackCameraPosition
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListInterface mImpl
com.google.android.gms.internal.firebase-auth-api.zzxv: java.util.List zzg
com.google.protobuf.IntArrayList: int size
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString resumeToken_
com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean zzc
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzvv: java.lang.String zza
com.google.android.gms.maps.model.Gap: float length
com.squareup.okhttp.HttpUrl$Builder: int port
com.google.protobuf.FieldType: java.lang.reflect.Type[] EMPTY_TYPES
com.google.firebase.firestore.core.View: com.google.firebase.database.collection.ImmutableSortedSet limboDocuments
com.google.android.gms.internal.firebase-auth-api.zzdo: int[] zza
com.google.firebase.auth.zzo: java.util.concurrent.TimeUnit zzc
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode STREAM_CLOSED
io.grpc.okhttp.OkHttpClientStream: int id
com.google.protobuf.BinaryReader$SafeHeapReader: int limit
com.google.android.gms.maps.MapsInitializer: java.lang.String zza
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax PROTO2
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean automaticResourceManagementEnabled
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Object zzc
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
com.google.firebase.firestore.bundle.BundleReader: long bytesRead
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zzjc zze
com.google.android.gms.internal.firebase-auth-api.zzabr: int zzc
com.google.firestore.v1.TargetChange: int RESUME_TOKEN_FIELD_NUMBER
com.google.android.gms.common.internal.BaseGmsClient: java.util.ArrayList zzt
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
androidx.core.util.LogWriter: java.lang.StringBuilder mBuilder
com.google.android.gms.internal.firebase-auth-api.zzadu: java.lang.Iterable zzb
com.google.android.gms.common.api.internal.zabm: com.google.android.gms.common.api.internal.zabq zaa
io.grpc.internal.InternalSubchannel$4$1: io.grpc.internal.InternalSubchannel$4 this$1
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.util.List keys
io.grpc.internal.RetriableStream: long perRpcBufferLimit
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore
io.grpc.internal.RetriableStream$Sublistener$4: io.grpc.Metadata val$trailers
com.google.android.gms.common.api.internal.LifecycleActivity: java.lang.Object zza
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.DatabaseId databaseId
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetProviderInterfaces
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz channelz
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter where_
io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegateBuilder
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: java.util.concurrent.atomic.AtomicBoolean val$inBackground
io.grpc.MethodDescriptor: boolean sampledToLocalTracing
com.google.firebase.firestore.model.AutoValue_FieldIndex: java.util.List segments
com.google.protobuf.UninitializedMessageException: java.util.List missingFields
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.core.EventManager$ListenOptions options
com.google.android.gms.internal.firebase-auth-api.zzam: java.lang.Object[] zzb
com.google.android.gms.internal.firebase-auth-api.zzabq: int zzac
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.NameResolver$ConfigOrError config
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color RED
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.ref.WeakReference zac
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerRegistry instance
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.DocumentKey key
com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.Continuation zzb
com.google.firebase.firestore.util.ThrottledForwardingExecutor: java.util.concurrent.Executor executor
com.google.protobuf.Android: boolean IS_ROBOLECTRIC
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
com.google.firebase.firestore.remote.WatchStream: com.google.firebase.firestore.remote.RemoteSerializer serializer
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSDPA
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder INSTANCE
io.grpc.okhttp.internal.framed.Hpack$Writer: int headerTableSizeSetting
com.google.android.gms.internal.firebase-auth-api.zzadm: java.lang.Object[] zzc
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
com.google.android.gms.internal.firebase-auth-api.zzej: com.google.android.gms.internal.firebase-auth-api.zznt zzc
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbi zzp
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: io.flutter.plugins.webviewflutter.DisplayListenerProxy this$0
com.google.protobuf.UnsafeUtil: com.google.protobuf.UnsafeUtil$MemoryAccessor MEMORY_ACCESSOR
io.grpc.internal.DelayedStream$8: io.grpc.internal.DelayedStream this$0
io.grpc.internal.ApplicationThreadDeframer$2: io.grpc.internal.ReadableBuffer val$data
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
com.google.android.gms.internal.firebase-auth-api.zzadm: java.lang.String zzb
io.grpc.okhttp.OkHttpChannelBuilder: int maxInboundMetadataSize
com.google.firebase.firestore.SnapshotMetadata: boolean hasPendingWrites
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType BLOCKING
io.grpc.okhttp.OkHttpClientStream: io.grpc.okhttp.OkHttpClientStream$Sink sink
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
com.google.firebase.firestore.core.QueryView: com.google.firebase.firestore.core.Query query
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: java.util.Set consumers
com.google.android.gms.common.api.internal.zaaf: com.google.android.gms.common.api.internal.ApiKey zaa
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction OUTBOUND
com.google.firebase.firestore.core.KeyFieldFilter: com.google.firebase.firestore.model.DocumentKey key
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
com.google.firebase.auth.zzl: com.google.firebase.auth.FirebaseAuth zza
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: int maxMessageSize
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Status goAwayStatus
kotlin.text.DelimitedRangesSequence: int limit
com.google.protobuf.Timestamp: int nanos_
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager schemaManager
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzi
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: boolean isOne
com.google.firebase.firestore.remote.TargetChange: com.google.protobuf.ByteString resumeToken
com.google.firebase.auth.UserProfileChangeRequest: java.lang.String zzb
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.util.AsyncQueue asyncQueue
com.google.android.gms.internal.firebase-auth-api.zzzq: boolean zzi
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.Scheduler garbageCollectionScheduler
com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers
com.google.firebase.firestore.remote.RemoteEvent: java.util.Set targetMismatches
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: java.lang.ThreadLocal bufs
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: long current_cache_size_bytes_
com.google.android.gms.internal.firebase-auth-api.zzpe: byte[] zzc
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: java.lang.reflect.Method setApplicationProtocols
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mRunWakeLock
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator IS_NOT_NAN
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.firebase.firestore.core.View$DocumentChanges: com.google.firebase.firestore.core.DocumentViewChangeSet changeSet
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
com.google.firebase.firestore.model.DocumentKey: java.util.Comparator COMPARATOR
com.google.android.gms.common.util.WorkSourceUtil: java.lang.reflect.Method zzg
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzh
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer visibility
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal RECEIVE_HTTP_ERROR
io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority
com.google.android.gms.internal.firebase-auth-api.zzabq: java.lang.Class zzad
io.grpc.internal.PickFirstLoadBalancer$1: io.grpc.internal.PickFirstLoadBalancer this$0
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: com.google.firebase.encoders.FieldDescriptor PROJECTNUMBER_DESCRIPTOR
com.google.firebase.messaging.TopicsStore: android.content.SharedPreferences sharedPreferences
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: io.flutter.plugin.common.BasicMessageChannel$Reply val$reply
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialTileOverlays
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer
io.grpc.internal.RetriableStream$Sublistener$2: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress
io.grpc.SynchronizationContext$1: java.lang.Runnable val$task
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
io.grpc.okhttp.AsyncSink$1: io.grpc.okhttp.AsyncSink this$0
com.google.firebase.firestore.util.Util: java.util.Random rand
com.google.android.gms.internal.firebase-auth-api.zzacy: com.google.android.gms.internal.firebase-auth-api.zzacx zza
com.google.firebase.firestore.util.ExponentialBackoff: long currentBaseMs
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zze
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed
com.google.firebase.auth.PhoneAuthOptions: android.app.Activity zzf
io.grpc.okhttp.OkHttpClientTransport: long keepAliveTimeoutNanos
com.google.firestore.v1.DocumentRemove: int removedTargetIdsMemoizedSerializedSize
com.google.firebase.firestore.remote.WriteStream: com.google.firebase.firestore.remote.RemoteSerializer serializer
com.tekartik.sqflite.Database$1: com.tekartik.sqflite.Database this$0
com.google.android.gms.common.logging.Logger: java.lang.String zzb
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$ReadOperation STREAM_OP
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
io.grpc.okhttp.internal.ConnectionSpec: boolean supportsTlsExtensions
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.WireFormat$FieldType type
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
io.grpc.Status$Code: io.grpc.Status$Code UNAUTHENTICATED
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.OnlineStateTracker onlineStateTracker
io.grpc.internal.RetriableStream$Sublistener$5: io.grpc.internal.RetriableStream$Sublistener this$1
com.google.protobuf.RopeByteString$PieceIterator: com.google.protobuf.ByteString$LeafByteString next
androidx.window.R$id: int androidx_window_activity_scope
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken zzg
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: java.lang.String mccMnc
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.StatusExceptionMapper zaj
io.flutter.plugins.androidintent.AndroidIntentPlugin: io.flutter.plugins.androidintent.IntentSender sender
com.google.firebase.messaging.TopicsSyncTask: java.lang.Boolean hasAccessNetworkStatePermission
com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: java.net.URL url
androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive
com.google.protobuf.FieldType: com.google.protobuf.FieldType FLOAT_LIST
io.grpc.internal.SerializingExecutor$FieldUpdaterAtomicHelper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater runStateUpdater
io.flutter.plugins.webviewflutter.FlutterAssetManagerHostApiImpl: java.util.List list(java.lang.String)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.Cap toCap(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
com.google.android.gms.maps.GoogleMapOptions: java.lang.String getMapId()
com.google.firebase.firestore.Transaction: com.google.android.gms.tasks.Task getAsync(com.google.firebase.firestore.DocumentReference)
com.google.firebase.auth.GithubAuthProvider: com.google.firebase.auth.AuthCredential getCredential(java.lang.String)
io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: void handleInUse()
io.grpc.ManagedChannelRegistry$1: ManagedChannelRegistry$1(io.grpc.ManagedChannelRegistry)
com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: CctTransportBackend$HttpRequest(java.net.URL,com.google.android.datatransport.cct.internal.BatchedLogRequest,java.lang.String)
androidx.core.os.LocaleListPlatformWrapper: LocaleListPlatformWrapper(android.os.LocaleList)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: java.util.Map toMap()
com.google.protobuf.FloatArrayList: void addFloat(int,float)
com.google.android.gms.internal.firebase-auth-api.zzqk: zzqk(java.lang.String,java.lang.String)
com.google.firestore.v1.FirestoreGrpc$FirestoreStub: com.google.firestore.v1.FirestoreGrpc$FirestoreStub build(io.grpc.Channel,io.grpc.CallOptions)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext internalAddIgnoreNullValues(java.lang.String,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzact: boolean zzc(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzru: zzru(java.lang.String)
com.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafe(byte[])
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: GeneratedAndroidWebView$WebViewClientFlutterApi(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzM(java.util.List)
io.flutter.plugins.googlemaps.MarkerController: void setVisible(boolean)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: java.lang.String getUserAgent()
com.google.firebase.auth.internal.zzx: java.lang.String zzf()
com.google.firebase.firestore.core.FieldFilter: boolean matchesComparison(int)
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,int,android.app.PendingIntent,java.lang.String)
com.google.android.gms.dynamic.zac: zac(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: java.util.List access$000(com.google.firebase.firestore.core.EventManager$QueryListenersInfo)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
io.grpc.internal.ManagedChannelImpl$NameResolverListener: void access$7700(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.Status)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.google.firebase.auth.ActionCodeSettings$Builder: ActionCodeSettings$Builder(com.google.firebase.auth.zza)
com.google.android.gms.internal.firebase-auth-api.zzut: void zzb()
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: void copyMemory(long,byte[],long,long)
com.google.firebase.auth.TwitterAuthCredential: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(com.google.firebase.auth.TwitterAuthCredential,java.lang.String)
com.google.protobuf.IntArrayList: com.google.protobuf.Internal$IntList mutableCopyWithCapacity(int)
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setUptimeMillis(long)
com.google.android.gms.common.data.DataHolder: DataHolder(int,java.lang.String[],android.database.CursorWindow[],int,android.os.Bundle)
com.google.android.gms.common.api.internal.ApiExceptionMapper: java.lang.Exception getException(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzld: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.grpc.internal.ServiceConfigUtil: java.util.Set getRetryableStatusCodesFromRetryPolicy(java.util.Map)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.plugins.googlemaps.CircleBuilder: void setVisible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzn(int,com.google.android.gms.internal.firebase-auth-api.zzadc,com.google.android.gms.internal.firebase-auth-api.zzado)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.remote.ConnectivityMonitor createConnectivityMonitor(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.internal.firebase-auth-api.zzub: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzht: java.util.logging.Logger zzd()
com.google.android.gms.internal.firebase-auth-api.zzadl: java.lang.Object remove(int)
com.google.android.gms.internal.firebase-auth-api.zzoj: zzoj(byte[])
com.google.firebase.components.Lazy: Lazy(com.google.firebase.inject.Provider)
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: void run()
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidEndTag()
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
com.google.android.gms.common.ConnectionResult: boolean isSuccess()
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzsw: void zzb(java.lang.Object)
com.google.android.gms.tasks.zzw: void zzg()
com.google.android.gms.internal.firebase-auth-api.zzex: com.google.android.gms.internal.firebase-auth-api.zzex zza(com.google.android.gms.internal.firebase-auth-api.zzmh)
com.google.android.gms.internal.firebase-auth-api.zzcz: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
io.grpc.Metadata$Key: int hashCode()
com.google.firestore.v1.Precondition$Builder: Precondition$Builder()
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.google.android.gms.internal.firebase-auth-api.zzfb: zzfb(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzyy: zzyy()
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage build()
com.google.firebase.firestore.FirebaseFirestore: void ensureClientConfigured()
com.google.android.gms.common.api.internal.zzb: void onStart()
com.google.android.gms.internal.firebase-auth-api.zzaam: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getChannelId()
com.google.firebase.FirebaseOptions: java.lang.String getDatabaseUrl()
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder addLogSourceMetrics(com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query$LimitType getLimitType()
androidx.collection.SparseArrayCompat: int indexOfKey(int)
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzf()
com.google.common.collect.ImmutableCollection: int internalArrayStart()
androidx.fragment.app.FragmentController: void noteStateNotSaved()
com.google.android.gms.internal.firebase-auth-api.zzfh: com.google.android.gms.internal.firebase-auth-api.zzfh zzc(int)
io.grpc.HttpConnectProxiedSocketAddress: java.lang.String getUsername()
com.google.firebase.installations.Utils: boolean isValidAppIdFormat(java.lang.String)
io.grpc.okhttp.OkHttpClientStream$Sink: void cancel(io.grpc.Status)
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri getLink()
com.google.android.gms.internal.firebase-auth-api.zzvm: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)
com.google.firebase.firestore.remote.WatchChange: WatchChange()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzi(int,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzaeg,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.firebase.firestore.local.SQLiteSchema: void createV1TargetCache()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol valueOf(java.lang.String)
com.google.android.gms.maps.model.LatLngBounds: int hashCode()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
com.google.firebase.firestore.util.CustomClassMapper: com.google.firebase.firestore.util.CustomClassMapper$BeanMapper loadOrCreateBeanMapperForClass(java.lang.Class)
com.google.protobuf.SmallSortedMap: java.lang.Object access$800(com.google.protobuf.SmallSortedMap,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig create(com.google.android.datatransport.runtime.time.Clock,java.util.Map)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
com.google.android.gms.internal.firebase-auth-api.zzhe: java.lang.String zzc()
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzado zzF(int)
kotlinx.coroutines.EventLoop: long getNextTime()
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: boolean hasMoreSubqueries()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
io.grpc.okhttp.OkHttpClientTransport: java.lang.String getOverridenHost()
io.grpc.internal.AbstractClientStream$TransportState: void access$400(io.grpc.internal.AbstractClientStream$TransportState,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.protobuf.ManifestSchemaFactory: boolean isProto2(com.google.protobuf.MessageInfo)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder()
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedMap executeFullCollectionScan(com.google.firebase.firestore.core.Query)
com.google.android.gms.internal.safetynet.zzh: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp getVersion()
com.google.firebase.firestore.core.Transaction: void write(java.util.List)
io.grpc.internal.ManagedChannelImpl$5: void sendMessage(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzss: zzss(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzZ(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.firebase.messaging.FcmBroadcastProcessor: FcmBroadcastProcessor(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzed: java.util.logging.Logger zzd()
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics getGlobalMetricsInternal()
com.google.protobuf.BinaryReader$SafeHeapReader: long readSInt64()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseUserInfo(com.google.firebase.auth.UserInfo)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: boolean equals(java.lang.Object)
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.TargetData getTargetData(com.google.firebase.firestore.core.Target)
com.google.firebase.messaging.CommonNotificationBuilder: android.net.Uri getSound(java.lang.String,com.google.firebase.messaging.NotificationParams,android.content.res.Resources)
com.google.android.gms.internal.firebase-auth-api.zzzk: zzzk(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.Status statusFromTrailers(io.grpc.Metadata)
com.google.android.datatransport.runtime.util.PriorityMapping: com.google.android.datatransport.Priority valueOf(int)
com.google.android.gms.common.api.Api$ClientKey: Api$ClientKey()
io.grpc.stub.AbstractStub: io.grpc.CallOptions getCallOptions()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
io.grpc.okhttp.internal.framed.Header: Header(okio.ByteString,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzrv: java.lang.Object[] newArray(int)
kotlin.collections.EmptyList: java.util.Iterator iterator()
com.google.android.gms.signin.internal.zab: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void create(java.lang.Long,java.lang.Boolean)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setLiteModeEnabled(boolean)
kotlin.ranges.IntRange: java.lang.String toString()
com.google.android.gms.maps.model.zzb: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
io.flutter.plugins.googlemaps.CircleBuilder: void setStrokeColor(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
com.google.protobuf.NullValue$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.maps.model.PolygonOptions: int getFillColor()
com.google.firebase.firestore.model.FieldIndex$Segment: com.google.firebase.firestore.model.FieldIndex$Segment create(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.FieldIndex$Segment$Kind)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzG(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,java.lang.String,com.google.firebase.auth.internal.zzbk)
com.google.firebase.firestore.model.MutableDocument: boolean hasCommittedMutations()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void attachToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.grpc.internal.ManagedChannelImpl$2: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzacw: void zzc()
kotlinx.coroutines.InactiveNodeList: boolean isActive()
com.google.firebase.firestore.UserDataWriter: java.util.List convertArray(com.google.firestore.v1.ArrayValue)
com.google.firebase.firestore.remote.AbstractStream: void onOpen()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.ManagedChannelBuilder delegate()
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
com.google.android.gms.internal.firebase-auth-api.zzpl: void zzc(int,int)
io.grpc.internal.ForwardingNameResolver: void shutdown()
com.google.android.gms.internal.firebase-auth-api.zzla: int zza()
io.grpc.internal.GzipInflatingBuffer: GzipInflatingBuffer()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: AutoValue_InstallationResponse(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode)
com.google.android.gms.internal.firebase-auth-api.zzbi: boolean zzi(int)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task terminate()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toDescription()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: SecretRoundRobinLoadBalancerProvider$Provider()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxBlobByteSizePerRow(int)
com.google.android.gms.internal.firebase-auth-api.zzzb: zzzb()
io.grpc.internal.RetriableStream: void setAuthority(java.lang.String)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)
com.google.android.gms.internal.firebase-auth-api.zzcn: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.google.firebase.firestore.util.Assert: java.lang.AssertionError fail(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzadz: java.util.Iterator iterator()
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzkg: void zzf(com.google.android.gms.internal.firebase-auth-api.zzkg,int)
com.google.firebase.firestore.DocumentSnapshot: java.util.Map getData()
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: void handleDelayElapsed()
io.flutter.plugins.firebase.messaging.ContextHolder: void setApplicationContext(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzjl: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzgi: void zzd(com.google.android.gms.internal.firebase-auth-api.zzgl)
io.flutter.plugins.androidintent.IntentSender: IntentSender(android.app.Activity,android.content.Context)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeGenerateAuthTokenRequestBodyToOutputStream(java.net.HttpURLConnection)
com.google.firebase.firestore.core.KeyFieldInFilter: KeyFieldInFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
io.grpc.internal.KeepAliveManager: void onTransportStarted()
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzb()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int)
com.google.android.gms.internal.firebase-auth-api.zzga: java.lang.Class zzg()
com.google.firebase.firestore.local.SQLiteSchema: void ensureReadTime()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition getCamera()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView access$000(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.firebase.installations.Utils: long getRandomDelayForSyncPrevention()
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.model.FieldIndex$IndexOffset getMinOffset(com.google.firebase.firestore.core.Target)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.android.gms.internal.firebase-auth-api.zzt: zzt(java.util.regex.Pattern)
com.google.android.gms.internal.location.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)
io.grpc.HttpConnectProxiedSocketAddress: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzfc: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.tekartik.sqflite.SqflitePlugin: boolean isInMemoryPath(java.lang.String)
com.google.firebase.firestore.core.ViewSnapshot: ViewSnapshot(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.DocumentSet,com.google.firebase.firestore.model.DocumentSet,java.util.List,boolean,com.google.firebase.database.collection.ImmutableSortedSet,boolean,boolean)
com.google.firebase.auth.ActionCodeSettings: ActionCodeSettings(com.google.firebase.auth.ActionCodeSettings$Builder,com.google.firebase.auth.zzb)
com.google.common.collect.ImmutableMap: java.util.Set keySet()
com.google.android.gms.internal.firebase-auth-api.zzgv: java.lang.String toString()
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter)
kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
com.google.firebase.messaging.WakeLockHolder: void sendWakefulServiceIntent(android.content.Context,com.google.firebase.messaging.WithinAppServiceConnection,android.content.Intent)
com.google.android.gms.maps.GoogleMap: void setOnMapLoadedCallback(com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback)
io.flutter.plugins.googlemaps.Convert: int toPixels(java.lang.Object,float)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$ParsedSetData toSetData(com.google.firebase.firestore.model.ObjectValue)
com.google.firebase.firestore.remote.WatchChange$DocumentChange: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.grpc.internal.RetryPolicy: java.lang.String toString()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: void encode(com.google.android.datatransport.runtime.ProtoEncoderDoNotUse,com.google.firebase.encoders.ObjectEncoderContext)
kotlin.collections.EmptyIterator: java.lang.Void previous()
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: com.google.firebase.firestore.model.mutation.Overlay getOverlay(com.google.firebase.firestore.model.DocumentKey)
io.grpc.okhttp.OkHttpClientTransport$1: void handleInUse()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
com.google.protobuf.ArrayDecoders: int decodeExtensionOrUnknownField(int,byte[],int,int,java.lang.Object,com.google.protobuf.MessageLite,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ArrayDecoders$Registers)
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor getOrCreatePoolSync()
com.google.android.gms.internal.firebase-auth-api.zzabr: void zze(float)
com.google.firebase.auth.internal.zzas: zzas(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzi(int)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
com.google.firebase.auth.GetTokenResult: long getIssuedAtTimestamp()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void onPageStarted(android.webkit.WebViewClient,android.webkit.WebView,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zab()
io.grpc.internal.ServiceConfigUtil: io.grpc.internal.RetriableStream$Throttle getThrottlePolicy(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzadf: float zzp(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzog: byte[] zza(byte[],byte[])
com.google.firebase.firestore.bundle.BundleMetadata: com.google.firebase.firestore.model.SnapshotVersion getCreateTime()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setFullStreamDecompression(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument parseFrom(byte[])
io.grpc.internal.RetriableStream$Sublistener: RetriableStream$Sublistener(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$Substream)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
com.google.android.gms.internal.firebase-auth-api.zzaby: int size()
androidx.window.core.Version: int getMinor()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task updatePassword(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzwm: zzwm(com.google.android.gms.internal.firebase-auth-api.zzwq,com.google.firebase.auth.PhoneAuthCredential)
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder newBuilder()
com.google.android.gms.common.ConnectionResult: java.lang.String zza(int)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzb(java.lang.String)
io.grpc.internal.GrpcUtil: void closeQuietly(java.io.Closeable)
com.google.android.gms.location.LocationRequest: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzxn: boolean zzl(java.lang.String)
com.google.firebase.auth.GithubAuthCredential: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzdi: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void removeJavascriptInterface(java.lang.String)
com.google.protobuf.MessageSetSchema: MessageSetSchema(com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MessageLite)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzF(java.util.List,com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.grpc.internal.JndiResourceResolverFactory: java.lang.Throwable unavailabilityCause()
com.google.firebase.messaging.RemoteMessage: com.google.firebase.messaging.RemoteMessage$Notification getNotification()
com.google.android.gms.internal.firebase-auth-api.zzkf: zzkf(com.google.android.gms.internal.firebase-auth-api.zzke)
com.google.firebase.firestore.proto.UnknownDocument: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.ServiceConfigUtil: java.lang.Integer getMaxAttemptsFromRetryPolicy(java.util.Map)
com.google.firebase.firestore.model.DocumentKey: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: void serviceStartReceived()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor access$4500(io.grpc.internal.ManagedChannelImpl)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.datatransport.cct.CCTDestination: CCTDestination(java.lang.String,java.lang.String)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.RBTreeSortedMap fromMap(java.util.Map,java.util.Comparator)
com.google.firebase.auth.internal.GenericIdpActivity: android.content.Context zza()
com.google.android.gms.internal.location.zzap: zzap(android.os.IBinder)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.FirebaseApp getApp()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: NetworkConnectionInfo$NetworkType(java.lang.String,int,int)
com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)
com.google.protobuf.UnknownFieldSetLiteSchema: int getSerializedSize(com.google.protobuf.UnknownFieldSetLite)
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor getEndAt()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.android.gms.location.zzn: void registerListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.internal.firebase-auth-api.zzdj: zzdj()
com.google.firebase.auth.internal.zzi: java.lang.String zzc()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getAuthToken()
com.google.android.gms.common.internal.ApiExceptionUtil: com.google.android.gms.common.api.ApiException fromStatus(com.google.android.gms.common.api.Status)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaD(com.google.android.gms.common.api.internal.zaae)
io.grpc.internal.InternalSubchannel$1: void handleInUse()
com.google.common.io.ByteStreams$1: ByteStreams$1()
com.google.firebase.firestore.model.mutation.MutationBatch: int getBatchId()
com.google.android.gms.internal.firebase-auth-api.zzid: zzid(com.google.android.gms.internal.firebase-auth-api.zzhw,java.util.List,java.lang.Integer,com.google.android.gms.internal.firebase-auth-api.zzic)
io.flutter.plugins.googlemaps.CircleBuilder: void setConsumeTapEvents(boolean)
kotlin.jvm.internal.FunctionReference: int getArity()
com.google.protobuf.CodedOutputStream: void writeSFixed32(int,int)
io.grpc.internal.NoopClientStream: NoopClientStream()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getLocalStartServiceAction()
com.google.firestore.v1.ArrayValue$Builder: com.google.firestore.v1.ArrayValue$Builder addValues(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzai: boolean remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzmo zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
com.google.firebase.firestore.core.SQLiteComponentProvider: com.google.firebase.firestore.local.IndexBackfiller createIndexBackfiller(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.internal.firebase-auth-api.zzld: void zze(com.google.android.gms.internal.firebase-auth-api.zzld,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.common.collect.ImmutableCollection: boolean add(java.lang.Object)
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
com.google.firebase.firestore.remote.WriteStream: void tearDown()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.firebase.firestore.local.SQLiteSchema: boolean tableExists(java.lang.String)
io.grpc.okhttp.internal.framed.Huffman$Node: int access$100(io.grpc.okhttp.internal.framed.Huffman$Node)
com.google.firebase.auth.internal.zzp: zzp(boolean)
com.google.firebase.firestore.model.mutation.PatchMutation: com.google.firebase.firestore.model.mutation.FieldMask applyToLocalView(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.Timestamp)
com.google.android.gms.auth.api.signin.zab: zab()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzg()
io.grpc.internal.JsonUtil: boolean durationIsValid(long,int)
io.grpc.okhttp.OutboundFlowController: void writeStreams()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setIndoorEnabled(boolean)
io.grpc.internal.RetriableStream: java.util.concurrent.atomic.AtomicBoolean access$1700(io.grpc.internal.RetriableStream)
com.google.protobuf.MessageSchema: boolean isInitialized(java.lang.Object)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.firebase.firestore.UserDataReader: com.google.firebase.firestore.core.UserData$ParsedSetData parseSetData(java.lang.Object)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
io.grpc.internal.SerializingExecutor$FieldUpdaterAtomicHelper: SerializingExecutor$FieldUpdaterAtomicHelper(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,io.grpc.internal.SerializingExecutor$1)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
com.google.android.gms.common.data.zaf: java.lang.Object[] newArray(int)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
okio.Timeout: long deadlineNanoTime()
com.google.android.gms.internal.firebase-auth-api.zzbw: zzbw(java.util.concurrent.ConcurrentMap,com.google.android.gms.internal.firebase-auth-api.zzbq,com.google.android.gms.internal.firebase-auth-api.zzhw,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzbv)
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
io.grpc.LoadBalancer$Subchannel: java.lang.Object getInternalSubchannel()
com.google.android.gms.maps.model.Polyline: void remove()
com.google.android.gms.common.internal.ClientIdentity: boolean equals(java.lang.Object)
io.grpc.internal.DnsNameResolver: void shutdown()
com.google.android.gms.cloudmessaging.CloudMessage: CloudMessage(android.content.Intent)
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: long getStartMs()
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
com.google.android.gms.internal.firebase-auth-api.zzaaz: long zzm()
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$1)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.BitmapDescriptor toBitmapDescriptor(java.lang.Object)
io.grpc.Deadline: boolean isExpired()
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
com.google.protobuf.CodedOutputStreamWriter: void writeFixed32List(int,java.util.List,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzmh zze()
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.google.android.gms.internal.firebase-auth-api.zzrw: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.Target$QueryTarget$Builder: com.google.firestore.v1.Target$QueryTarget$Builder setStructuredQuery(com.google.firestore.v1.StructuredQuery$Builder)
com.google.protobuf.CodedOutputStreamWriter: void writeStartGroup(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void dispose(java.lang.Long)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzq(int,java.util.List,boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions$Builder setTimeout(java.lang.Long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zzvw: java.lang.Object doInBackground(java.lang.Object[])
io.grpc.okhttp.internal.framed.Http2$Reader: void close()
com.google.firestore.v1.CommitRequest$Builder: com.google.firestore.v1.CommitRequest$Builder setDatabase(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.android.gms.tasks.Task getHeartBeatsHeader()
com.google.android.gms.maps.model.CustomCap: CustomCap(com.google.android.gms.maps.model.BitmapDescriptor)
io.grpc.internal.AbstractClientStream$TransportState$1: void run()
io.grpc.internal.DelayedStream: void writeMessage(java.io.InputStream)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.local.TargetData decodeTargetData(byte[])
androidx.fragment.app.FragmentManagerImpl: int getBackStackEntryCount()
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$Filter encodeCompositeFilter(com.google.firebase.firestore.core.CompositeFilter)
okio.Buffer: okio.BufferedSink writeByte(int)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation$Union: ArrayTransformOperation$Union(java.util.List)
com.google.firestore.v1.WriteResult: com.google.firestore.v1.Value getTransformResults(int)
com.google.firebase.auth.UserProfileChangeRequest: java.lang.String zza()
io.flutter.plugins.googlemaps.PolylineBuilder: void setVisible(boolean)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task useEmulator(java.util.Map)
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: FragmentManagerImpl$PopBackStackState(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zznh: zznh(com.google.android.gms.internal.firebase-auth-api.zzng)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteTargetCache getTargetCache()
com.google.firebase.auth.internal.zzx: java.lang.String zze()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapController: void moveCamera(com.google.android.gms.maps.CameraUpdate)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.gms.internal.auth-api-phone.zzb: android.os.IBinder asBinder()
io.grpc.okhttp.internal.framed.Huffman$Node: Huffman$Node()
com.google.common.base.CharMatcher: java.lang.String showCharacter(char)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)
com.google.firebase.auth.UserProfileChangeRequest: android.net.Uri getPhotoUri()
io.grpc.okhttp.internal.framed.Settings: int getMaxFrameSize(int)
io.grpc.internal.AbstractClientStream$GetFramer: void writePayload(java.io.InputStream)
com.google.android.gms.internal.firebase-auth-api.zzadg: java.lang.Object zze()
com.google.firebase.auth.zzd: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.cloudmessaging.Rpc: boolean zzi(android.os.Bundle)
com.google.android.gms.maps.model.PatternItem: boolean equals(java.lang.Object)
io.grpc.internal.InternalSubchannel$TransportListener$3: void run()
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.fragment.app.Fragment$1: void run()
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjo zzc()
com.google.firebase.auth.zzah: java.lang.Object[] newArray(int)
com.google.firebase.firestore.core.ViewSnapshot: boolean excludesMetadataChanges()
com.google.firebase.encoders.EncodingException: EncodingException(java.lang.String)
com.google.protobuf.CodedOutputStreamWriter: void writeGroupList(int,java.util.List,com.google.protobuf.Schema)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.firebase.firestore.local.MemoryTargetCache: void removeMatchingKeysForTargetId(int)
com.google.android.gms.maps.model.CameraPosition: CameraPosition(com.google.android.gms.maps.model.LatLng,float,float,float)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Long getTransportContextId(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)
com.google.firebase.firestore.index.AutoValue_IndexEntry: int getIndexId()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void removeEventListeners()
com.google.android.gms.internal.firebase-auth-api.zzlx: com.google.android.gms.internal.firebase-auth-api.zzlx zza(com.google.android.gms.internal.firebase-auth-api.zzmb)
io.flutter.embedding.android.FlutterImageView: void pause()
com.google.android.gms.internal.firebase-auth-api.zzkt: zzkt(com.google.android.gms.internal.firebase-auth-api.zzks)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int[] createIntArray(android.os.Parcel,int)
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder setSetToServerValue(com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue)
com.google.android.gms.maps.GoogleMap: void setMaxZoomPreference(float)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi: void dispose(java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi$Reply)
com.google.android.gms.internal.firebase-auth-api.zzabr: boolean addAll(java.util.Collection)
com.google.firebase.auth.internal.zzba: java.util.List zzb(java.util.List)
com.google.firestore.v1.Cursor$Builder: com.google.firestore.v1.Cursor$Builder addAllValues(java.lang.Iterable)
io.grpc.Metadata: void expand(int)
io.grpc.StatusRuntimeException: StatusRuntimeException(io.grpc.Status)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.android.gms.internal.firebase-auth-api.zzuw: java.lang.String zza()
io.grpc.internal.ManagedChannelImpl: void refreshAndResetNameResolution()
com.google.firebase.firestore.FieldValue$ServerTimestampFieldValue: java.lang.String getMethodName()
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zze()
okio.RealBufferedSink: void write(okio.Buffer,long)
androidx.collection.MapCollections$KeySet: int hashCode()
io.grpc.internal.DnsNameResolver: void resolve()
com.tekartik.sqflite.SqflitePlugin$4: void run()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
com.google.android.gms.internal.firebase-auth-api.zzyq: boolean zzj()
com.google.protobuf.UnsafeUtil$MemoryAccessor: int arrayIndexScale(java.lang.Class)
com.google.protobuf.Utf8$DecodeUtil: boolean isThreeBytes(byte)
com.google.android.gms.internal.location.zzay: void onNotifyListenerFailed()
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmv zzc()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object get(java.lang.Object)
io.grpc.internal.AtomicBackoff: AtomicBackoff(java.lang.String,long)
com.google.android.gms.internal.firebase-auth-api.zzzb: boolean zzh()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.google.common.collect.RegularImmutableMap: java.lang.Object createHashTable(java.lang.Object[],int,int,int)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
com.google.firebase.components.OptionalProvider: void set(com.google.firebase.inject.Provider)
com.google.protobuf.UnsafeUtil: long addressOffset(java.nio.ByteBuffer)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzf()
com.google.protobuf.AbstractMessageLite: void addAll(java.lang.Iterable,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziv zzb()
io.grpc.stub.AbstractAsyncStub: io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory,io.grpc.Channel,io.grpc.CallOptions)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.google.firestore.v1.WriteRequest: void access$800(com.google.firestore.v1.WriteRequest,com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzbd: com.google.android.gms.internal.firebase-auth-api.zzax zzg(java.lang.String,java.lang.Class)
io.grpc.NameResolver$ConfigOrError: NameResolver$ConfigOrError(java.lang.Object)
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
com.google.common.math.IntMath: int lessThanBranchFree(int,int)
com.google.firebase.installations.CrossProcessLock: CrossProcessLock(java.nio.channels.FileChannel,java.nio.channels.FileLock)
io.grpc.internal.Rescheduler$FutureRunnable: void run()
io.grpc.internal.DnsNameResolver: long access$700(io.grpc.internal.DnsNameResolver)
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: void mergeListsAt(java.lang.Object,java.lang.Object,long)
com.google.protobuf.BinaryReader$SafeHeapReader: long readFixed64()
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: ClientMetrics$Builder()
androidx.collection.ArraySet: java.lang.Object[] toArray()
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzh(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzaau,java.lang.Class)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.type.LatLng: void setLongitude(double)
com.google.android.gms.location.LocationRequest: LocationRequest(int,long,long,boolean,long,int,float,long)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyl: java.util.List zzb()
com.google.protobuf.BinaryReader$SafeHeapReader: void readStringListInternal(java.util.List,boolean)
com.baseflow.geolocator.MethodCallHandlerImpl: void stopListening()
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
com.google.android.gms.tasks.zzj: java.lang.Object zzb(com.google.android.gms.tasks.zzj)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setEagAttributes(io.grpc.Attributes)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
io.grpc.internal.DelayedStream: boolean isReady()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat)
com.google.android.gms.location.zzaa: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.signin.internal.zah: java.lang.Object createFromParcel(android.os.Parcel)
com.google.protobuf.MessageSetSchema: int getUnknownFieldsSerializedSize(com.google.protobuf.UnknownFieldSchema,java.lang.Object)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
io.grpc.CallOptions: CallOptions(io.grpc.CallOptions)
io.grpc.internal.RetriableStream: void setMaxOutboundMessageSize(int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
com.google.protobuf.FieldSet: boolean isInitialized(java.util.Map$Entry)
io.grpc.internal.MetadataApplierImpl: io.grpc.internal.ClientStream returnStream()
com.google.firestore.v1.StructuredQuery$FieldReference: void access$5900(com.google.firestore.v1.StructuredQuery$FieldReference,java.lang.String)
com.google.firestore.v1.TransactionOptions$ReadWrite$Builder: TransactionOptions$ReadWrite$Builder()
io.flutter.plugins.googlemaps.Convert: java.lang.Object polygonIdToJson(java.lang.String)
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
com.google.protobuf.UnsafeUtil: void putBoolean(java.lang.Object,long,boolean)
com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder: com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder setAllDescendants(boolean)
com.google.android.gms.internal.firebase-auth-api.zzkj: com.google.android.gms.internal.firebase-auth-api.zzkj zza()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzM(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLng(com.google.android.gms.maps.model.LatLng)
io.grpc.internal.ApplicationThreadDeframer: io.grpc.internal.ApplicationThreadDeframerListener access$100(io.grpc.internal.ApplicationThreadDeframer)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
com.google.protobuf.NewInstanceSchemas: com.google.protobuf.NewInstanceSchema full()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData createWebResourceErrorData(android.webkit.WebResourceError)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: ManagedChannelImpl$RestrictedScheduledExecutor(java.util.concurrent.ScheduledExecutorService,io.grpc.internal.ManagedChannelImpl$1)
com.google.android.gms.common.api.internal.zabq: boolean zaz()
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zze(java.lang.String,byte[],byte[])
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: ManagedChannelImpl$ChannelStreamProvider(io.grpc.internal.ManagedChannelImpl)
io.flutter.Log: void i(java.lang.String,java.lang.String)
io.grpc.okhttp.internal.framed.Settings: int get(int)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void release()
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.backends.BackendResponse logAndUpdateState(com.google.android.datatransport.runtime.TransportContext,int)
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzadx: java.util.Iterator zza()
com.google.android.gms.maps.model.zzv: zzv()
com.google.protobuf.MapFieldSchemaLite: int getSerializedSizeLite(int,java.lang.Object,java.lang.Object)
kotlin.collections.EmptyMap: java.lang.Void remove(java.lang.Object)
androidx.fragment.app.Fragment: void onResume()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzY(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: void error(java.lang.Throwable)
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.google.protobuf.ByteOutput: ByteOutput()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.google.android.gms.common.api.PendingResult: PendingResult()
com.google.android.gms.internal.firebase-auth-api.zzuj: zzuj(com.google.firebase.auth.AuthCredential)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.android.gms.internal.firebase-auth-api.zzsk: void zza(java.lang.String)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: long readUnsignedInt()
com.google.android.gms.dynamite.zzn: zzn()
io.grpc.internal.InternalSubchannel$Index: InternalSubchannel$Index(java.util.List)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
com.google.firebase.firestore.proto.NoDocument: void setReadTime(com.google.protobuf.Timestamp)
com.google.firebase.firestore.core.EventManager: void addSnapshotsInSyncListener(com.google.firebase.firestore.EventListener)
androidx.lifecycle.LifecycleRegistry: void sync()
com.google.common.base.Joiner: Joiner(java.lang.String)
com.google.protobuf.DoubleArrayList: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzM(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.firebase.firestore.LoadBundleTaskProgress: long getTotalBytes()
com.google.protobuf.ArrayDecoders$Registers: ArrayDecoders$Registers(com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.maps.internal.zzby: boolean isRotateGesturesEnabled()
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzf()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()
com.google.android.gms.internal.firebase-auth-api.zzadm: int zzc()
com.google.protobuf.FloatArrayList: FloatArrayList()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzo(int,java.lang.String)
io.grpc.internal.ManagedChannelImpl: void shutdownNameResolverAndLoadBalancer(boolean)
com.google.protobuf.UnsafeUtil: java.lang.reflect.Field bufferAddressField()
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zzade: java.lang.String zzc(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setLocale(java.lang.String)
com.google.firebase.firestore.local.OverlayedDocument: OverlayedDocument(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.model.mutation.FieldMask)
com.google.android.gms.internal.firebase-auth-api.zzht: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzbw)
io.flutter.plugins.googlemaps.GoogleMapController: void setGoogleMapListener(io.flutter.plugins.googlemaps.GoogleMapListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.maps.zzq: void zzb(android.graphics.Bitmap)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretPolylineOptions(java.lang.Object,io.flutter.plugins.googlemaps.PolylineOptionsSink)
com.google.firebase.firestore.core.DatabaseInfo: com.google.firebase.firestore.model.DatabaseId getDatabaseId()
com.google.android.gms.common.api.CommonStatusCodes: java.lang.String getStatusCodeString(int)
okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)
com.google.android.gms.internal.firebase-auth-api.zzve: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.common.internal.RootTelemetryConfiguration: int getBatchPeriodMillis()
com.google.firebase.firestore.model.mutation.Overlay: Overlay()
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: ExecutionModule_ExecutorFactory()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
com.google.android.gms.internal.firebase-auth-api.zzst: void zzb(java.lang.Object)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)
io.perfmark.Impl: void startTask(java.lang.String)
com.google.protobuf.Utf8: int incompleteStateFor(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzpn: byte[] zza(byte[],byte[])
com.google.android.gms.common.api.internal.BasePendingResult: void setResult(com.google.android.gms.common.api.Result)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: com.google.firebase.firestore.FirebaseFirestoreSettings$Builder setHost(java.lang.String)
com.google.android.gms.common.api.internal.zas: void finalize()
com.google.firebase.firestore.core.View$DocumentChanges: boolean access$100(com.google.firebase.firestore.core.View$DocumentChanges)
io.grpc.EquivalentAddressGroup: java.lang.String toString()
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: int onStartCommand(android.content.Intent,int,int)
com.google.android.gms.internal.firebase-auth-api.zzah: int previousIndex()
com.google.android.gms.location.zzo: void unregisterListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
androidx.lifecycle.LiveData: java.lang.Object getValue()
com.google.android.gms.internal.firebase-auth-api.zzwq: zzwq(com.google.android.gms.internal.firebase-auth-api.zzwt)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.Filter decodeFilter(com.google.firestore.v1.StructuredQuery$Filter)
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder zoom(float)
com.google.firebase.firestore.proto.NoDocument: void setName(java.lang.String)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
com.google.firebase.Timestamp: long getSeconds()
com.google.android.gms.internal.firebase-auth-api.zziq: void zzg(com.google.android.gms.internal.firebase-auth-api.zziq,int)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter equalTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzse: zzse(java.lang.String,java.util.List,com.google.firebase.auth.zze)
com.google.firebase.firestore.SetOptions: boolean equals(java.lang.Object)
io.grpc.ServiceProviders: java.util.List loadAll(java.lang.Class,java.lang.Iterable,java.lang.ClassLoader,io.grpc.ServiceProviders$PriorityAccessor)
io.grpc.internal.ManagedChannelImpl: boolean access$3402(io.grpc.internal.ManagedChannelImpl,boolean)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
com.google.common.collect.ImmutableMap: java.lang.Object remove(java.lang.Object)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.firebase.firestore.model.mutation.FieldMask: com.google.firebase.firestore.model.mutation.FieldMask fromSet(java.util.Set)
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: com.google.firestore.v1.StructuredQuery$FieldFilter$Builder setValue(com.google.firestore.v1.Value)
com.google.protobuf.LongArrayList: boolean addAll(java.util.Collection)
com.google.firebase.firestore.core.Transaction: com.google.android.gms.tasks.Task lookup(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzim: zzim()
androidx.collection.MapCollections$EntrySet: void clear()
com.google.firebase.firestore.core.SyncEngine: void removeLimboTarget(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.core.SQLiteComponentProvider: SQLiteComponentProvider()
io.grpc.Attributes$Key: io.grpc.Attributes$Key create(java.lang.String)
com.google.android.gms.safetynet.SafetyNet: com.google.android.gms.safetynet.SafetyNetClient getClient(android.content.Context)
com.google.protobuf.WireFormat$FieldType: int getWireType()
com.google.firebase.firestore.local.SQLiteSchema: void createV1MutationQueue()
io.grpc.internal.ManagedChannelImpl: boolean access$3400(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)
com.google.protobuf.LongArrayList: void add(int,java.lang.Long)
com.google.android.gms.internal.maps.zzah: com.google.android.gms.maps.model.Tile zzb(int,int,int)
com.google.firebase.firestore.FirebaseFirestoreSettings: long access$300(com.google.firebase.firestore.FirebaseFirestoreSettings)
com.google.android.gms.internal.firebase-auth-api.zzzu: zzzu()
io.grpc.internal.AbstractClientStream: boolean shouldBeCountedForInUse()
com.google.firebase.firestore.core.UserData$ParseContext: void validatePath()
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalLogId getLogId()
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: boolean isPacked()
com.google.android.gms.common.zzc: zzc()
com.google.android.gms.internal.firebase-auth-api.zzuw: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.maps.model.LatLngBounds: LatLngBounds(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query limitToFirst(long)
com.google.firebase.firestore.model.mutation.Mutation: Mutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition)
com.google.protobuf.MessageSetSchema: void writeUnknownFieldsHelper(com.google.protobuf.UnknownFieldSchema,java.lang.Object,com.google.protobuf.Writer)
com.google.common.collect.ImmutableList$Itr: java.lang.Object get(int)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
io.grpc.okhttp.OkHttpClientStream$TransportState: void cancel(io.grpc.Status,boolean,io.grpc.Metadata)
com.tekartik.sqflite.operation.BatchOperation: java.lang.String getMethod()
com.google.android.gms.internal.firebase-auth-api.zzz: int zzd(int)
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound getUpperBound(com.google.firebase.firestore.model.FieldIndex)
kotlin.ranges.IntProgression: int getFirst()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjw: zzjw(com.google.android.gms.internal.firebase-auth-api.zzjv)
com.google.protobuf.UnsafeUtil$MemoryAccessor: UnsafeUtil$MemoryAccessor(sun.misc.Unsafe)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void clearCache(java.lang.Long,java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzvn: java.lang.String zza()
com.google.protobuf.WireFormat$FieldType: WireFormat$FieldType(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)
com.google.android.gms.internal.firebase-auth-api.zzqx: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromString(java.lang.String,android.os.Parcelable$Creator)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
com.lyokone.location.StreamHandlerImpl: void onCancel(java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions minZoomPreference(float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzcy: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set getRegisteredVersions()
com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)
io.grpc.ForwardingClientCall: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
io.grpc.internal.ManagedChannelImpl: io.grpc.DecompressorRegistry access$3800(io.grpc.internal.ManagedChannelImpl)
io.grpc.internal.DelayedClientCall: void setCall(io.grpc.ClientCall)
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder setVerify(java.lang.String)
io.grpc.internal.AbstractStream: void setCompressor(io.grpc.Compressor)
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest$Builder newBuilder()
kotlinx.coroutines.JobSupport: void onStart()
kotlin.collections.EmptySet: int getSize()
com.google.android.gms.common.api.internal.zabq: void zak(com.google.android.gms.common.api.internal.zabq,int)
com.google.android.gms.internal.firebase-auth-api.zzse: com.google.firebase.auth.zze zza()
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: void onProgressChanged(android.webkit.WebView,int)
com.google.android.gms.internal.firebase-auth-api.zzf: com.google.android.gms.internal.firebase-auth-api.zzc zza()
com.google.android.gms.internal.firebase-auth-api.zzip: zzip(com.google.android.gms.internal.firebase-auth-api.zzio)
com.google.android.gms.maps.internal.zzau: zzau()
io.grpc.StatusRuntimeException: io.grpc.Status getStatus()
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzb(java.util.List)
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader newInstance(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.ClientHealthMetricsStore)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl: void create(java.lang.Long)
com.google.android.gms.maps.GoogleMap: void setOnCircleClickListener(com.google.android.gms.maps.GoogleMap$OnCircleClickListener)
io.flutter.plugins.googlemaps.PolylineController: void setEndCap(com.google.android.gms.maps.model.Cap)
com.google.firestore.v1.StructuredQuery$Order: void setDirection(com.google.firestore.v1.StructuredQuery$Direction)
com.google.android.gms.internal.common.zza: android.os.Parcel zzB(int,android.os.Parcel)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,char,java.lang.Object)
com.google.firebase.firestore.LoadBundleTask: java.lang.Object getResult(java.lang.Class)
com.google.firebase.firestore.local.SQLitePersistence: java.lang.String databaseName(java.lang.String,com.google.firebase.firestore.model.DatabaseId)
com.google.android.gms.common.internal.zag: com.google.android.gms.common.internal.zag zab(android.app.Activity,android.content.Intent,int)
com.google.firebase.firestore.remote.RemoteStore: RemoteStore(com.google.firebase.firestore.remote.RemoteStore$RemoteStoreCallback,com.google.firebase.firestore.local.LocalStore,com.google.firebase.firestore.remote.Datastore,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.ConnectivityMonitor)
com.google.android.gms.internal.firebase-auth-api.zzgv: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzer: zzer(int)
com.google.firebase.firestore.core.Query: boolean isDocumentQuery()
com.google.android.gms.internal.firebase-auth-api.zzsf: zzsf()
com.google.android.gms.maps.model.zza: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzqi: zzqi(java.lang.String)
io.grpc.NameResolverRegistry$NameResolverFactory: NameResolverRegistry$NameResolverFactory(io.grpc.NameResolverRegistry)
io.grpc.okhttp.internal.Platform: io.grpc.okhttp.internal.Platform$TlsExtensionType getTlsExtensionType()
io.grpc.internal.MessageFramer: MessageFramer(io.grpc.internal.MessageFramer$Sink,io.grpc.internal.WritableBufferAllocator,io.grpc.internal.StatsTraceContext)
com.google.android.gms.internal.firebase-auth-api.zzda: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.Object zzf(int)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzo(com.google.firebase.auth.FirebaseUser,java.lang.String)
com.google.common.collect.ImmutableCollection: java.lang.Object[] internalArray()
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query endBefore(java.lang.Object[])
com.google.android.gms.common.internal.zzm: java.lang.Object[] newArray(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void removeJavascriptInterface(java.lang.String)
com.google.android.gms.maps.model.PolylineOptions: int getJointType()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.Protobuf getProtobuf(com.google.firebase.encoders.FieldDescriptor)
com.google.android.gms.internal.firebase-auth-api.zzrq: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzxr: java.lang.String zzb(java.lang.String)
com.google.firebase.firestore.proto.Target: void access$1400(com.google.firebase.firestore.proto.Target,com.google.firestore.v1.Target$DocumentsTarget)
com.google.android.gms.internal.firebase-auth-api.zzadx: zzadx(com.google.android.gms.internal.firebase-auth-api.zzaeb,com.google.android.gms.internal.firebase-auth-api.zzadw)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
io.grpc.internal.DelayedClientTransport$PendingStream: void cancel(io.grpc.Status)
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.MessageLite getDefaultInstanceForType()
com.google.firebase.firestore.util.CustomClassMapper: void hardAssert(boolean,java.lang.String)
com.google.firebase.messaging.ByteStreams: byte[] combineBuffers(java.util.Queue,int)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder setApplicationContext(android.content.Context)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialCircles()
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
com.google.firebase.firestore.local.MemoryIndexManager: MemoryIndexManager()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: boolean isSuccessfulResponseCode(int)
com.tekartik.sqflite.operation.BatchOperation: java.util.Map getOperationError()
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzf()
io.flutter.plugins.googlemaps.MarkerController: void remove()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzf(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzyj,com.google.android.gms.internal.firebase-auth-api.zzzg,com.google.android.gms.internal.firebase-auth-api.zzwx)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: MessagingClientEvent$SDKPlatform(java.lang.String,int,int)
com.google.firebase.firestore.remote.Datastore$1: void onMessage(java.lang.Object)
io.flutter.plugins.googlemaps.PolylineBuilder: PolylineBuilder(float)
com.google.android.gms.maps.Projection: com.google.android.gms.maps.model.VisibleRegion getVisibleRegion()
io.grpc.internal.DelayedClientCall$3: DelayedClientCall$3(io.grpc.internal.DelayedClientCall,java.lang.Object)
io.grpc.android.AndroidChannelBuilder: AndroidChannelBuilder(io.grpc.ManagedChannelBuilder)
io.grpc.ManagedChannelRegistry$1: int compare(io.grpc.ManagedChannelProvider,io.grpc.ManagedChannelProvider)
com.google.android.gms.cloudmessaging.zzx: zzx()
io.grpc.okhttp.OkHttpChannelBuilder$1: void close(java.util.concurrent.Executor)
com.google.android.gms.common.internal.TelemetryData: void zac(com.google.android.gms.common.internal.MethodInvocation)
com.google.protobuf.UnknownFieldSetLiteSchema: UnknownFieldSetLiteSchema()
com.google.android.gms.common.wrappers.Wrappers: Wrappers()
io.grpc.okhttp.internal.framed.Http2: int lengthWithoutPadding(int,byte,short)
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
com.google.protobuf.SmallSortedMap: void makeImmutable()
com.google.android.gms.internal.maps.zzy: void zzo()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,com.google.protobuf.MessageLite)
com.google.firebase.messaging.WithinAppServiceConnection: WithinAppServiceConnection(android.content.Context,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.grpc.HttpConnectProxiedSocketAddress$Builder: io.grpc.HttpConnectProxiedSocketAddress$Builder setUsername(java.lang.String)
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest$Builder newBuilder()
com.google.firebase.firestore.FirebaseFirestore: void setFirestoreSettings(com.google.firebase.firestore.FirebaseFirestoreSettings)
com.google.protobuf.CodedInputStream: int setSizeLimit(int)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
io.grpc.ClientStreamTracer: void streamCreated(io.grpc.Attributes,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzuu: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzam: java.lang.Object[] zze()
com.google.android.gms.internal.location.zzas: com.google.android.gms.internal.location.zzat zzb(com.google.android.gms.common.api.internal.ListenerHolder)
com.google.android.gms.internal.firebase-auth-api.zzfh: byte[] zzb()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.LatLngBounds toLatLngBounds(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.common.api.internal.BasePendingResult: void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener)
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: CustomTabColorSchemeParams$Builder()
io.grpc.internal.DnsNameResolver: java.lang.String getLocalHostname()
com.google.firebase.database.collection.ArraySortedMap$1: java.util.Map$Entry next()
com.google.firebase.installations.remote.AutoValue_TokenResult: com.google.firebase.installations.remote.TokenResult$ResponseCode getResponseCode()
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getDocumentsMatchingDocumentQuery(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)
com.baseflow.geolocator.location.LocationManagerClient: boolean isBetterLocation(android.location.Location,android.location.Location)
okio.Buffer: okio.ByteString readByteString(long)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzs(int)
com.google.android.gms.internal.location.zzp: java.lang.Object[] newArray(int)
com.google.firebase.components.OptionalProvider: java.lang.Object get()
com.google.android.gms.common.GoogleApiAvailabilityLight: void verifyGooglePlayServicesIsAvailable(android.content.Context,int)
com.google.android.gms.internal.firebase-auth-api.zzxt: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: void removeAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzaau zzd()
okio.AsyncTimeout: void exit(boolean)
okio.Buffer: okio.Buffer write(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzaeb: int zzk(java.lang.Comparable)
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery$Builder newBuilder()
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse access$000()
com.google.firebase.firestore.local.MemoryBundleCache: void saveNamedQuery(com.google.firebase.firestore.bundle.NamedQuery)
androidx.window.embedding.SplitPairFilter: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzrh: java.lang.Object[] newArray(int)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaau: int hashCode()
io.grpc.internal.RetriableStream: void writeMessage(java.io.InputStream)
io.grpc.okhttp.internal.DistinguishedNameParser: DistinguishedNameParser(javax.security.auth.x500.X500Principal)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void setInMemoryPins(com.google.firebase.firestore.local.ReferenceSet)
com.google.android.gms.internal.firebase-auth-api.zzxn: java.lang.String zzb(java.lang.String)
com.google.android.gms.tasks.zzd: void zzc()
com.google.android.gms.internal.firebase-auth-api.zzyj: long zzb()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzV(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
io.grpc.internal.InternalSubchannel$1: InternalSubchannel$1(io.grpc.internal.InternalSubchannel)
com.google.firebase.auth.GetTokenResult: java.util.Map getClaims()
com.google.firebase.installations.RandomFidGenerator: byte[] getBytesFromUUID(java.util.UUID,byte[])
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.TelemetryLoggingClient zaJ()
com.google.firebase.firestore.util.Util: int compareMixed(double,long)
com.google.protobuf.BooleanArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
com.google.android.gms.internal.firebase-auth-api.zzcb: void zzm(com.google.android.gms.internal.firebase-auth-api.zzgq,com.google.android.gms.internal.firebase-auth-api.zzgb,boolean)
io.grpc.internal.JsonUtil: java.lang.String getString(java.util.Map,java.lang.String)
kotlinx.coroutines.internal.DispatchedContinuation: void release()
io.grpc.internal.AbstractClientStream: void setMaxInboundMessageSize(int)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void create(java.lang.Long,java.lang.Long)
com.google.android.gms.internal.maps.zzj: void zzu(float)
com.google.android.gms.location.LocationResult: java.lang.String toString()
com.google.firebase.auth.internal.zzbm: zzbm()
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.Object zzP(com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firestore.bundle.BundledQuery: BundledQuery()
com.google.android.gms.internal.maps.zzj: zzj(android.os.IBinder)
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
com.google.android.gms.internal.base.zaa: void zad(int,android.os.Parcel)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: com.google.protobuf.ByteString readBytes()
com.google.protobuf.GeneratedMessageLite$Builder: java.lang.Object clone()
com.google.firestore.v1.StructuredQuery$UnaryFilter: void setField(com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhz zza(com.google.android.gms.internal.firebase-auth-api.zzbe,int,com.google.android.gms.internal.firebase-auth-api.zzbn)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: byte getByte(long)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
com.google.android.gms.internal.firebase-auth-api.zzak: int zzc()
com.google.common.collect.RegularImmutableMap$EntrySet$1: RegularImmutableMap$EntrySet$1(com.google.common.collect.RegularImmutableMap$EntrySet)
com.google.firestore.v1.Target: void access$3000(com.google.firestore.v1.Target,int)
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: java.lang.Object get()
com.baseflow.geolocator.StreamHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readUInt32()
io.grpc.internal.ProxyDetectorImpl: ProxyDetectorImpl(com.google.common.base.Supplier,io.grpc.internal.ProxyDetectorImpl$AuthenticationProvider,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: void create(java.lang.Long,java.lang.String)
io.flutter.plugins.googlemaps.CirclesController: CirclesController(io.flutter.plugin.common.MethodChannel,float)
com.google.android.gms.internal.firebase-auth-api.zzaem: void zzc(java.lang.Object,long,boolean)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: float readFloat()
com.google.firestore.v1.Write: com.google.firestore.v1.Write access$000()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.firebase.firestore.local.QueryResult: com.google.firebase.database.collection.ImmutableSortedSet getRemoteKeys()
io.grpc.DecompressorRegistry: io.grpc.Decompressor lookupDecompressor(java.lang.String)
com.google.firebase.firestore.local.SQLiteBundleCache: com.google.firebase.firestore.bundle.NamedQuery getNamedQuery(java.lang.String)
io.flutter.plugins.webviewflutter.CookieManagerHostApiImpl: CookieManagerHostApiImpl()
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.local.Persistence createPersistence(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.common.ConnectionResult: java.lang.String toString()
com.google.firestore.v1.Value: java.lang.String getReferenceValue()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite)
com.google.android.gms.internal.firebase-auth-api.zzlf: int zza(int)
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: void closeThenThrow(javax.naming.NamingEnumeration,javax.naming.NamingException)
com.google.android.datatransport.runtime.logging.Logging: java.lang.String getTag(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzb(java.lang.Object)
com.google.firebase.firestore.Blob: java.lang.String toString()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByte(android.os.Parcel,int,byte)
androidx.fragment.app.FragmentManagerImpl: void dispatchStart()
io.flutter.plugins.firebase.firestore.streamhandler.LoadBundleStreamHandler: void onCancel(java.lang.Object)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.core.EventManager getEventManager()
com.google.android.gms.internal.firebase-auth-api.zzyq: zzyq()
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzl(int,int)
com.google.android.gms.internal.firebase-auth-api.zzxv: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.NewInstanceSchemaLite: java.lang.Object newInstance(java.lang.Object)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
com.google.firebase.firestore.Filter$UnaryFilter: com.google.firebase.firestore.FieldPath getField()
io.flutter.embedding.android.KeyChannelResponder: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebStorageHostApiCodec: GeneratedAndroidWebView$WebStorageHostApiCodec()
com.google.android.gms.internal.firebase-auth-api.zzaae: void zzp(int)
com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)
com.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
com.google.android.gms.location.zzaj: int hashCode()
com.google.firebase.firestore.local.LocalViewChanges: int getTargetId()
io.grpc.util.RoundRobinLoadBalancer: void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
com.google.firebase.auth.ActionCodeSettings: void zzg(int)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzxp: int zza()
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
com.google.android.gms.internal.firebase-auth-api.zzaec: int zzc()
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
io.grpc.internal.ForwardingClientStreamListener: java.lang.String toString()
io.grpc.internal.MetadataApplierImpl: void apply(io.grpc.Metadata)
com.google.android.datatransport.runtime.TransportRuntimeComponent: void close()
kotlin.Unit: java.lang.String toString()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
io.grpc.internal.ForwardingReadableBuffer: void readBytes(java.nio.ByteBuffer)
com.google.firestore.v1.Value: long getIntegerValue()
com.google.firebase.firestore.model.DatabaseId: boolean equals(java.lang.Object)
com.google.android.gms.maps.internal.zzl: zzl(android.os.IBinder)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.grpc.internal.JsonParser: java.util.List parseJsonArray(com.google.gson.stream.JsonReader)
io.grpc.Metadata$Key: Metadata$Key(java.lang.String,boolean,java.lang.Object,io.grpc.Metadata$1)
com.google.android.gms.common.internal.IAccountAccessor$Stub: com.google.android.gms.common.internal.IAccountAccessor asInterface(android.os.IBinder)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
com.google.firestore.v1.DocumentTransform$FieldTransform: void access$800(com.google.firestore.v1.DocumentTransform$FieldTransform,com.google.firestore.v1.Value)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyj: long zza()
io.flutter.plugins.googlemaps.PolygonController: void setFillColor(int)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.lyokone.location.LocationPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.protobuf.MessageSchema: int getSerializedSizeProto3(java.lang.Object)
com.google.android.gms.internal.base.zab: android.os.IBinder asBinder()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.fragment.app.FragmentTransition$4: void run()
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.core.FirestoreClient getClient()
com.google.android.gms.common.api.internal.zacg: void run()
com.google.firebase.firestore.core.Target: android.util.Pair getAscendingBound(com.google.firebase.firestore.model.FieldIndex$Segment,com.google.firebase.firestore.core.Bound)
com.google.firebase.auth.internal.zzax: com.google.firebase.auth.AuthCredential zzi(android.content.Intent)
com.google.firebase.auth.ActionCodeSettings: java.lang.String zze()
com.google.firebase.firestore.core.ActivityScope: com.google.firebase.firestore.ListenerRegistration bind(android.app.Activity,com.google.firebase.firestore.ListenerRegistration)
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zzf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzjq: zzjq()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: MetadataBackendRegistry_Factory(javax.inject.Provider,javax.inject.Provider)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.grpc.internal.RetriableStream$StartEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
io.grpc.internal.ApplicationThreadDeframer: void setDecompressor(io.grpc.Decompressor)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.fragment.app.Fragment: void performResume()
io.grpc.internal.Http2Ping$2: void run()
io.grpc.internal.RetriableStream$BufferSizeTracer: RetriableStream$BufferSizeTracer(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$Substream)
com.google.android.gms.internal.firebase-auth-api.zztq: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyn: zzyn(int)
kotlin.collections.EmptySet: java.lang.Object[] toArray()
io.grpc.okhttp.OkHttpProtocolNegotiator: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.firebase.firestore.LoadBundleTask: void setException(java.lang.Exception)
io.grpc.SynchronizationContext: io.grpc.SynchronizationContext$ScheduledHandle schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
io.grpc.SynchronizationContext$1: void run()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: void success(java.lang.Void)
com.google.android.gms.common.internal.ClientSettings: java.util.Set getRequiredScopes()
com.google.android.gms.common.internal.service.zap: com.google.android.gms.common.Feature[] getApiFeatures()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setTargetId(int)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
io.grpc.Attributes$Builder: io.grpc.Attributes$Builder set(io.grpc.Attributes$Key,java.lang.Object)
io.grpc.internal.RetriableStream: boolean access$1800(io.grpc.internal.RetriableStream)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
com.lyokone.location.FlutterLocation: java.lang.Double access$000(com.lyokone.location.FlutterLocation)
com.google.android.gms.internal.firebase-auth-api.zzmh: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firestore.v1.Target$QueryTarget: void access$1200(com.google.firestore.v1.Target$QueryTarget,com.google.firestore.v1.StructuredQuery)
com.google.firebase.firestore.DocumentSnapshot: int hashCode()
com.google.android.gms.common.api.internal.zaac: void onComplete(com.google.android.gms.tasks.Task)
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzc()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: boolean access$1100(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
com.google.android.gms.internal.firebase-auth-api.zzfo: zzfo(com.google.android.gms.internal.firebase-auth-api.zzfm,com.google.android.gms.internal.firebase-auth-api.zzfn)
io.grpc.internal.DelayedStream: void onEarlyCancellation(io.grpc.Status)
com.google.protobuf.BinaryReader$SafeHeapReader: void readFixed64List(java.util.List)
com.google.firebase.firestore.model.Values: boolean isNanValue(com.google.firestore.v1.Value)
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] values()
io.grpc.okhttp.OkHttpClientStream$TransportState: void onStreamAllocated()
io.grpc.ClientInterceptors$InterceptorChannel: ClientInterceptors$InterceptorChannel(io.grpc.Channel,io.grpc.ClientInterceptor,io.grpc.ClientInterceptors$1)
com.google.firestore.v1.StructuredQuery$FieldFilter: void access$3700(com.google.firestore.v1.StructuredQuery$FieldFilter,com.google.firestore.v1.Value)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.LoadBundleTask loadBundle(byte[])
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings build()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.android.gms.security.ProviderInstaller: void zzc(android.content.Context,android.content.Context,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzdn: int zza()
com.google.android.gms.internal.firebase-auth-api.zzqo: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.AbstractParser: AbstractParser()
com.google.firestore.v1.Value: void setReferenceValue(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzsb: zzsb()
com.google.firebase.auth.zze: zze(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzzq,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.proto.WriteBatch: void access$900(com.google.firebase.firestore.proto.WriteBatch,com.google.protobuf.Timestamp)
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: void serviceProcessingStarted()
com.google.firebase.database.collection.ArraySortedMap$1: ArraySortedMap$1(com.google.firebase.database.collection.ArraySortedMap,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzsn: zzsn(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzkj: com.google.android.gms.internal.firebase-auth-api.zzkj zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.messaging.TopicsSubscriber: void blockingSubscribeToTopic(java.lang.String)
io.grpc.Deadline$SystemTicker: Deadline$SystemTicker()
kotlin.collections.EmptyMap: void clear()
com.google.android.gms.internal.firebase-auth-api.zzaaj: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
com.google.android.gms.common.stats.ConnectionTracker: void zzb(android.content.Context,android.content.ServiceConnection)
com.google.android.gms.maps.model.Marker: void setInfoWindowAnchor(float,float)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
com.google.protobuf.BinaryReader$SafeHeapReader: void readFloatList(java.util.List)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
com.google.android.gms.common.api.internal.zact: void zad(com.google.android.gms.common.api.internal.zact,com.google.android.gms.signin.internal.zak)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzm(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.internal.firebase-auth-api.zzes: zzes()
com.google.firebase.auth.zzah: zzah()
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] $values()
com.google.android.gms.common.internal.BaseGmsClient: android.accounts.Account getAccount()
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
io.grpc.internal.InternalSubchannel: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()
com.google.android.datatransport.cct.internal.BatchedLogRequest: com.google.android.datatransport.cct.internal.BatchedLogRequest create(java.util.List)
io.grpc.internal.DnsNameResolver$InternalResolutionResult: java.util.List access$102(io.grpc.internal.DnsNameResolver$InternalResolutionResult,java.util.List)
com.google.firebase.firestore.LoadBundleTask$ManagedListener: void invokeAsync(com.google.firebase.firestore.LoadBundleTaskProgress)
com.google.firebase.database.collection.RBTreeSortedMap$Builder: RBTreeSortedMap$Builder(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeSeparatorAscending()
com.google.android.gms.common.api.internal.GoogleApiManager: void zaA()
io.flutter.plugins.googlemaps.GoogleMapController: void setIndoorEnabled(boolean)
com.google.firestore.bundle.BundledQuery$LimitType: int getNumber()
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
com.google.firebase.auth.zzae: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzl(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.protobuf.Any: com.google.protobuf.Any access$000()
com.google.firebase.messaging.TopicsSubscriber: boolean hasPendingOperation()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzn(int,com.google.android.gms.internal.firebase-auth-api.zzadc,com.google.android.gms.internal.firebase-auth-api.zzado)
androidx.core.util.LogWriter: LogWriter(java.lang.String)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.Target decodeQueryTarget(java.lang.String,com.google.firestore.v1.StructuredQuery)
com.google.android.gms.common.internal.ClientIdentity: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDragStart(com.google.android.gms.maps.model.Marker)
com.google.firebase.auth.internal.zzbi: boolean zzg()
io.flutter.plugins.packageinfo.PackageInfoPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.google.firebase.auth.GoogleAuthCredential: java.lang.String getSignInMethod()
io.grpc.internal.InsightBuilder: io.grpc.internal.InsightBuilder append(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onCreate(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
com.google.android.gms.maps.model.TileOverlay: void setZIndex(float)
com.google.firebase.firestore.model.MutableDocument: int hashCode()
com.google.common.collect.ImmutableSet: int hashCode()
com.google.firebase.auth.internal.RecaptchaActivity: java.net.HttpURLConnection zzd(java.net.URL)
com.google.firestore.v1.Value: boolean getBooleanValue()
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
io.grpc.Metadata$LazyValue: Metadata$LazyValue(io.grpc.Metadata$BinaryStreamMarshaller,java.lang.Object)
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener getServiceRequestPermissionsResultListener()
com.google.firebase.messaging.TopicsSyncTask: com.google.firebase.messaging.TopicsSubscriber access$200(com.google.firebase.messaging.TopicsSyncTask)
io.grpc.LoadBalancer$CreateSubchannelArgs: java.lang.String toString()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.android.gms.tasks.zzh: zzh(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.security.spec.ECParameterSpec zzl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
io.grpc.okhttp.internal.framed.Hpack: java.util.Map nameToFirstIndex()
com.google.android.gms.internal.auth-api-phone.zzi: zzi(android.os.IBinder)
io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityStateInfo forNonError(io.grpc.ConnectivityState)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: com.google.android.datatransport.cct.internal.ClientInfo getClientInfo()
com.google.protobuf.CodedOutputStreamWriter: CodedOutputStreamWriter(com.google.protobuf.CodedOutputStream)
io.flutter.embedding.android.FlutterActivity: void onStop()
com.google.firebase.auth.internal.zzbm: com.google.firebase.auth.internal.zzbm zzc()
com.lyokone.location.NotificationOptions: java.lang.String getDescription()
com.tekartik.sqflite.SqflitePlugin$4: SqflitePlugin$4(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.SqflitePlugin$BgResult)
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.SetOptions mergeFieldPaths(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzln zzd()
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
com.google.protobuf.CodedOutputStream: int computeUInt64Size(int,long)
com.google.firebase.firestore.core.Target: java.util.List getFilters()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)
com.google.protobuf.RopeByteString$1: byte nextByte()
io.grpc.LoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
com.google.common.collect.RegularImmutableMap$EntrySet: int copyIntoArray(java.lang.Object[],int)
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbp zzc(com.google.android.gms.internal.firebase-auth-api.zzhw)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: MemoryEagerReferenceDelegate(com.google.firebase.firestore.local.MemoryPersistence)
com.google.firebase.messaging.SyncTask: boolean maybeRefreshToken()
com.google.firebase.messaging.ProxyNotificationPreferences: void setProxyNotificationsInitialized(android.content.Context,boolean)
com.google.android.gms.internal.location.zzk: void zza(com.google.android.gms.internal.location.zzk)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: java.lang.String get()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] values()
com.google.android.gms.internal.firebase-auth-api.zzaee: zzaee(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long getTimezoneOffsetSeconds()
com.google.android.gms.internal.firebase-auth-api.zzlq: int zza()
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzkz zzc(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl$WebStorageCreator: WebStorageHostApiImpl$WebStorageCreator()
com.google.android.gms.maps.model.TileOverlay: TileOverlay(com.google.android.gms.internal.maps.zzag)
com.google.android.gms.cloudmessaging.zzm: void zza(int,java.lang.String)
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseScalarValue(java.lang.Object,com.google.firebase.firestore.core.UserData$ParseContext)
com.google.android.gms.internal.firebase-auth-api.zzps: zzps(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseFirebaseUser(com.google.firebase.auth.FirebaseUser)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxc: zzxc(android.content.Context,java.lang.String)
com.google.common.collect.Iterators$9: java.lang.Object next()
com.google.common.base.Splitter: com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher)
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath fromSingleSegment(java.lang.String)
com.google.protobuf.LongArrayList: java.lang.Long get(int)
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level valueOf(java.lang.String)
io.grpc.internal.MessageFramer: void writePayload(java.io.InputStream)
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.DataEncoder build()
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)
com.google.android.gms.common.internal.zaw: java.lang.Object[] newArray(int)
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
androidx.fragment.app.Fragment: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialPolylines()
com.google.android.gms.dynamite.zzb: java.lang.ClassLoader zza()
io.grpc.internal.CallCredentialsApplyingTransportFactory: CallCredentialsApplyingTransportFactory(io.grpc.internal.ClientTransportFactory,io.grpc.CallCredentials,java.util.concurrent.Executor)
io.flutter.plugins.googlemaps.MarkersController: void removeMarkers(java.util.List)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventTimeMs(long)
io.flutter.plugins.googlemaps.PolylineController: void setGeodesic(boolean)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback access$300(com.baseflow.geolocator.location.FusedLocationClient)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccount()
io.grpc.ManagedChannelRegistry: void refreshProviders()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.AbstractStream: void markIdle()
com.google.android.gms.internal.firebase-auth-api.zzbq: int zzf()
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue$1: DocumentTransform$FieldTransform$ServerValue$1()
com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.res.Resources getRemoteResource(android.content.Context)
com.google.protobuf.UnknownFieldSetLiteSchema: void addGroup(java.lang.Object,int,java.lang.Object)
com.google.firebase.firestore.model.MutableDocument: java.lang.String toString()
com.google.firebase.firestore.index.OrderedCodeWriter: void writeByteDescending(byte)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzS(int)
com.google.firebase.firestore.core.FieldFilter: boolean matches(com.google.firebase.firestore.model.Document)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void ping(boolean,int,int)
com.google.android.gms.common.internal.zal: int zaa(android.content.Context,int)
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzla: void zzl(com.google.android.gms.internal.firebase-auth-api.zzla,com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.googlemaps.CirclesController: void addCircle(java.lang.String,com.google.android.gms.maps.model.CircleOptions,boolean)
com.google.android.gms.common.api.internal.zaci: zaci(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void setAutomaticResourceManagementEnabled(java.lang.String,java.lang.Boolean,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
com.google.firestore.v1.ArrayValue: void addAllValues(java.lang.Iterable)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setProjectId(java.lang.String)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeTimestamp(com.google.firestore.v1.Value$Builder,java.lang.Object)
com.tekartik.sqflite.operation.MethodCallOperation$Result: MethodCallOperation$Result(com.tekartik.sqflite.operation.MethodCallOperation,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
com.google.firebase.firestore.Blob: int compareTo(com.google.firebase.firestore.Blob)
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.grpc.okhttp.internal.Platform: java.security.Provider getAndroidSecurityProvider()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeString(int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
com.google.firebase.auth.internal.zzah: java.lang.Object[] newArray(int)
com.google.android.gms.tasks.zzo: void run()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
com.google.firebase.firestore.core.FirestoreClient: boolean isTerminated()
com.google.android.gms.internal.firebase-auth-api.zzzm: com.google.android.gms.internal.firebase-auth-api.zzzm zzb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.grpc.internal.MessageFramer: int writeUncompressed(java.io.InputStream,int)
io.grpc.internal.MessageFramer: void writeRaw(byte[],int,int)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onLaunch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound getLowerBound(com.google.firebase.firestore.model.FieldIndex)
io.grpc.internal.StatsTraceContext: void clientInboundTrailers(io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzlm: zzlm()
com.google.android.gms.internal.firebase-auth-api.zzws: zzws(com.google.android.gms.internal.firebase-auth-api.zzwt,com.google.android.gms.tasks.TaskCompletionSource)
okio.RealBufferedSource: okio.ByteString readByteString(long)
com.google.android.gms.internal.firebase-auth-api.zzfv: com.google.android.gms.internal.firebase-auth-api.zzfv zzc(com.google.android.gms.internal.firebase-auth-api.zzhj,com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
com.google.common.base.Stopwatch: java.util.concurrent.TimeUnit chooseUnit(long)
io.grpc.Deadline$SystemTicker: Deadline$SystemTicker(io.grpc.Deadline$1)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
androidx.collection.MapCollections$MapIterator: int hashCode()
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
com.google.android.gms.internal.location.zzo: zzo(int,com.google.android.gms.internal.location.zzm,android.os.IBinder,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzse: java.util.List zzc()
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zzb()
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: void setLocked(boolean)
com.google.common.collect.RegularImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder tilt(float)
io.grpc.internal.GrpcUtil: boolean shouldBeCountedForInUse(io.grpc.CallOptions)
io.grpc.internal.ManagedChannelImpl$3: ManagedChannelImpl$3(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.firestore.core.Target: java.lang.String getCanonicalId()
io.flutter.plugins.pathprovider.PathProviderPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.cloudmessaging.zzr: zzr(int,int,android.os.Bundle)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)
com.google.android.gms.common.api.internal.zabo: void run()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
io.grpc.internal.InternalSubchannel$TransportListener$1: InternalSubchannel$TransportListener$1(io.grpc.internal.InternalSubchannel$TransportListener)
kotlin.jvm.internal.Intrinsics: Intrinsics()
io.grpc.internal.ForwardingReadableBuffer: io.grpc.internal.ReadableBuffer readBytes(int)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
com.google.android.gms.internal.firebase-auth-api.zzvu: java.lang.String zzd(int)
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzc(java.lang.Object,byte[],int,int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.android.gms.internal.firebase-auth-api.zzuz: zzuz(com.google.firebase.auth.AuthCredential,java.lang.String)
com.google.android.gms.common.internal.zzt: android.content.Intent zzb(java.lang.String,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
com.google.android.gms.maps.model.CircleOptions: float getStrokeWidth()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
com.google.firebase.firestore.proto.Target: void setLastLimboFreeSnapshotVersion(com.google.protobuf.Timestamp)
io.flutter.plugins.googlemaps.PolygonsController: void addPolygon(java.lang.Object)
com.google.firebase.firestore.model.BasePath: int hashCode()
com.google.firebase.firestore.index.AutoValue_IndexEntry: java.lang.String toString()
com.lyokone.location.LocationPlugin$1: void onServiceDisconnected(android.content.ComponentName)
com.google.android.gms.internal.firebase-auth-api.zzqc: zzqc(java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: void shutdownNow(io.grpc.Status)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()
com.google.android.gms.internal.firebase-auth-api.zzla: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)
com.google.firebase.firestore.DocumentReference: DocumentReference(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.FirebaseFirestore)
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzno: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.grpc.internal.GzipInflatingBuffer: int inflate(byte[],int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.android.gms.internal.firebase-auth-api.zzxp: zzxp(java.lang.String,int)
kotlinx.coroutines.CommonPool: int getParallelism()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()
io.grpc.internal.ApplicationThreadDeframer$5: void run()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task sendEmailVerification(com.google.firebase.auth.ActionCodeSettings)
io.grpc.internal.DelayedClientTransport$1: DelayedClientTransport$1(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)
androidx.fragment.app.Fragment: void performStop()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
com.google.android.gms.internal.firebase-auth-api.zzabf: boolean zzK()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,android.app.PendingIntent,java.lang.String)
com.google.firestore.v1.MapValue: java.util.Map getMutableFieldsMap()
com.google.firebase.messaging.NotificationParams: boolean isReservedKey(java.lang.String)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setStorageBucket(java.lang.String)
io.flutter.plugins.googlemaps.TileProviderController: TileProviderController(io.flutter.plugin.common.MethodChannel,java.lang.String)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationRequest buildLocationRequest(com.baseflow.geolocator.location.LocationOptions)
com.google.android.gms.maps.model.Marker: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.LocalStore$AllocateQueryHolder: LocalStore$AllocateQueryHolder()
io.grpc.internal.ClientCallImpl$ContextCancellationListener: ClientCallImpl$ContextCancellationListener(io.grpc.internal.ClientCallImpl)
com.google.android.gms.internal.firebase-auth-api.zzkr: zzkr()
com.google.firebase.firestore.core.DatabaseInfo: boolean isSslEnabled()
com.google.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: boolean isSupported(java.lang.Class)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzai: boolean removeAll(java.util.Collection)
com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,com.google.android.gms.common.ConnectionResult)
com.google.android.gms.internal.firebase-auth-api.zzci: zzci(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzaeb: void zzn()
com.google.firebase.firestore.util.ExponentialBackoff: ExponentialBackoff(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$TimerId,long,double,long)
com.google.firestore.v1.Value: void setTimestampValue(com.google.protobuf.Timestamp)
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getCommitMethod()
com.google.android.gms.internal.firebase-auth-api.zzaef: boolean zzp(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzadn)
com.google.android.gms.internal.firebase-auth-api.zzba: java.lang.Class zzd()
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
com.google.firestore.v1.DocumentMask$Builder: DocumentMask$Builder(com.google.firestore.v1.DocumentMask$1)
com.google.android.gms.safetynet.HarmfulAppsData: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ArraySortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
io.grpc.internal.ManagedChannelOrphanWrapper: io.grpc.ManagedChannel shutdownNow()
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
io.grpc.PartialForwardingClientCall: void request(int)
io.grpc.ManagedChannel: void notifyWhenStateChanged(io.grpc.ConnectivityState,java.lang.Runnable)
com.google.android.gms.signin.internal.zad: zad()
com.squareup.okhttp.Request$Builder: java.lang.Object access$400(com.squareup.okhttp.Request$Builder)
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: WatchChange$ExistenceFilterWatchChange(int,com.google.firebase.firestore.remote.ExistenceFilter)
com.google.android.gms.tasks.zzw: boolean isSuccessful()
io.grpc.internal.GzipInflatingBuffer: boolean fill()
com.google.protobuf.UnsafeUtil: java.lang.Object allocateInstance(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzaeg: zzaeg(int,int[],java.lang.Object[],boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: DefaultHeartBeatController(android.content.Context,java.lang.String,java.util.Set,com.google.firebase.inject.Provider)
com.google.android.gms.maps.GoogleMap: boolean isBuildingsEnabled()
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
androidx.collection.ArrayMap: java.util.Collection values()
io.grpc.internal.Rescheduler: void cancel(boolean)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task signInWithEmailAndPassword(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzac: zzac(com.google.android.gms.internal.firebase-auth-api.zzq)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zza(com.google.android.gms.internal.firebase-auth-api.zzpq,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: int hashCode()
com.google.protobuf.UnsafeUtil: sun.misc.Unsafe getUnsafe()
kotlin.collections.EmptyIterator: void set(java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzc(android.os.Parcel,int,int)
com.google.firebase.firestore.remote.AbstractStream: void close(com.google.firebase.firestore.remote.Stream$State,io.grpc.Status)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
com.tekartik.sqflite.SqflitePlugin: void onQueryCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.protobuf.GeneratedMessageLite: int hashCode()
com.google.android.gms.maps.internal.zzb: zzb(android.os.IBinder)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
com.google.android.gms.common.api.internal.zaaf: com.google.android.gms.common.api.internal.ApiKey zaa()
io.grpc.internal.ManagedChannelImpl$RealChannel$2: void run()
io.grpc.InternalConfigSelector$Result$Builder: InternalConfigSelector$Result$Builder(io.grpc.InternalConfigSelector$1)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
androidx.webkit.internal.SafeBrowsingResponseImpl: void showInterstitial(boolean)
com.google.android.gms.tasks.zzh: void zzc()
com.google.firebase.auth.internal.zzbl: com.google.android.gms.common.api.Status zzb(java.lang.String)
com.google.android.gms.common.api.internal.zabq: boolean zay()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void forEachOrphanedDocumentSequenceNumber(com.google.firebase.firestore.util.Consumer)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.google.firebase.firestore.proto.Target: void setResumeToken(com.google.protobuf.ByteString)
io.grpc.internal.ManagedChannelImpl$3: void execute(java.lang.Runnable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
kotlin.ranges.IntProgression: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzc(int,int,int,int,int)
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
io.grpc.okhttp.internal.ConnectionSpec$Builder: java.lang.String[] access$100(io.grpc.okhttp.internal.ConnectionSpec$Builder)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getCacheFid()
io.grpc.internal.RetriableStream: java.util.Random access$2400()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
io.grpc.InternalChannelz$Tls: InternalChannelz$Tls(javax.net.ssl.SSLSession)
io.grpc.internal.KeepAliveManager: com.google.common.base.Stopwatch access$900(io.grpc.internal.KeepAliveManager)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void notImplemented()
com.google.android.gms.common.stats.ConnectionTracker: boolean zze(android.content.Context,android.content.Intent,android.content.ServiceConnection,int,java.util.concurrent.Executor)
com.google.android.gms.maps.model.MarkerOptions: boolean isFlat()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void urlLoading(android.webkit.WebViewClient,android.webkit.WebView,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.grpc.DecompressorRegistry: byte[] getRawAdvertisedMessageEncodings()
com.google.android.gms.internal.firebase-auth-api.zzls: com.google.android.gms.internal.firebase-auth-api.zzls zza(int)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.firebase.firestore.auth.User: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabm: com.google.android.gms.internal.firebase-auth-api.zzabp zzb(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.firestore.Query: boolean equals(java.lang.Object)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder: com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder addAllFilters(java.lang.Iterable)
io.grpc.Status$StatusCodeMarshaller: io.grpc.Status parseAsciiString(byte[])
com.google.protobuf.ProtobufArrayList: ProtobufArrayList(java.lang.Object[],int)
com.google.firebase.messaging.TopicOperation: java.lang.String getTopic()
com.google.android.gms.internal.firebase-auth-api.zzlp: zzlp(com.google.android.gms.internal.firebase-auth-api.zzlo)
com.google.android.gms.internal.firebase-auth-api.zziw: void zzh(com.google.android.gms.internal.firebase-auth-api.zziw,int)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String,java.lang.Throwable,com.google.android.gms.dynamite.zzp)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
com.google.firebase.firestore.core.EventManager: EventManager(com.google.firebase.firestore.core.SyncEngine)
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleMetadata getBundleMetadata()
com.google.android.gms.location.zzj: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
com.google.firebase.firestore.core.QueryListener: QueryListener(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.core.EventManager$ListenOptions,com.google.firebase.firestore.EventListener)
com.google.protobuf.CodedInputStream$ArrayDecoder: boolean readBool()
com.google.firebase.messaging.FirebaseMessagingService: void passMessageIntentToSdk(android.content.Intent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
com.google.android.gms.internal.firebase-auth-api.zzsu: void zza(java.lang.String)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: com.google.firestore.v1.Value computeBaseValue(com.google.firestore.v1.Value)
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor getDefaultInstance()
com.google.firebase.firestore.model.FieldIndex$IndexState: com.google.firebase.firestore.model.FieldIndex$IndexState create(long,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.DocumentKey,int)
com.google.firebase.firestore.proto.UnknownDocument: void setVersion(com.google.protobuf.Timestamp)
com.google.protobuf.UnsafeUtil: void access$500(java.lang.Object,long,byte)
com.google.android.gms.internal.firebase-auth-api.zztf: zztf(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzhw: boolean equals(java.lang.Object)
com.google.protobuf.MessageSchema: float floatAt(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzzd: void writeToParcel(android.os.Parcel,int)
com.google.firebase.auth.internal.RecaptchaActivity: void onResume()
androidx.fragment.app.FragmentTransitionImpl$3: void run()
com.google.firebase.firestore.FieldValue$ArrayRemoveFieldValue: FieldValue$ArrayRemoveFieldValue(java.util.List)
io.flutter.plugins.urllauncher.UrlLauncher: boolean canLaunch(java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
io.grpc.internal.DelayedClientCall$CloseListenerRunnable: void runInContext()
com.google.android.gms.internal.firebase-auth-api.zzme: int zza()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.gms.internal.firebase-auth-api.zzva: zzva(java.lang.String,java.lang.String)
com.lyokone.location.FlutterLocation: void requestService(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzj()
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.DocumentSnapshot fromNoDocument(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.model.DocumentKey,boolean)
io.grpc.protobuf.lite.ProtoInputStream: ProtoInputStream(com.google.protobuf.MessageLite,com.google.protobuf.Parser)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: AutoValue_InstallationResponse(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode,com.google.firebase.installations.remote.AutoValue_InstallationResponse$1)
com.google.android.gms.internal.firebase-auth-api.zzyw: android.net.Uri zza()
com.google.firestore.bundle.BundledQuery$LimitType$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
io.grpc.internal.RetriableStream: void access$2000(io.grpc.internal.RetriableStream)
com.google.protobuf.MessageSetSchema: int getSerializedSize(java.lang.Object)
com.google.android.gms.maps.model.Polyline: void setStartCap(com.google.android.gms.maps.model.Cap)
com.google.protobuf.SchemaUtil: int computeSizeFixed64ListNoTag(java.util.List)
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.android.gms.common.api.internal.zaae: androidx.collection.ArraySet zaa()
com.google.android.gms.internal.firebase-auth-api.zzam: int zza(java.lang.Object[],int)
io.grpc.internal.ManagedChannelServiceConfig: java.lang.String toString()
com.google.firebase.firestore.core.SyncEngine: void handleRejectedWrite(int,io.grpc.Status)
com.google.android.gms.maps.zzv: void zzb()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
com.google.android.gms.common.api.internal.zact: void onConnectionSuspended(int)
com.google.android.gms.internal.firebase-auth-api.zzjx: int zza()
com.google.protobuf.Utf8$Processor: boolean isValidUtf8(java.nio.ByteBuffer,int,int)
com.google.firebase.firestore.proto.Target: void access$200(com.google.firebase.firestore.proto.Target,int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalCacheDirectories()
com.google.android.gms.maps.model.BitmapDescriptor: BitmapDescriptor(com.google.android.gms.dynamic.IObjectWrapper)
com.lyokone.location.StreamHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.common.api.Status: boolean isSuccess()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.LruGarbageCollector$Results collectGarbage(com.google.firebase.firestore.local.LruGarbageCollector)
com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)
okio.SegmentedByteString: boolean rangeEquals(int,byte[],int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger: void ping()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: boolean skipField(int)
com.google.android.gms.internal.firebase-auth-api.zzaaz: float zzb()
com.google.android.gms.internal.firebase-auth-api.zzfw: zzfw(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzhi,byte[])
io.grpc.internal.DnsNameResolver: void start(io.grpc.NameResolver$Listener2)
com.google.firebase.firestore.remote.RemoteStore: void start()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onOpen(android.database.sqlite.SQLiteDatabase)
io.grpc.internal.CallTracer$1: CallTracer$1()
io.grpc.NameResolver$Args: io.grpc.NameResolver$Args$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzmw zzh(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.protobuf.ByteString$SystemByteArrayCopier: ByteString$SystemByteArrayCopier()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed)
com.google.android.gms.internal.firebase-auth-api.zzqr: zzqr()
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzxh: void zze(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwt)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzx: com.google.android.gms.internal.firebase-auth-api.zzq zza(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.internal.firebase-auth-api.zzbw: boolean zzf()
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: java.util.Map getAll(java.lang.Iterable)
com.google.protobuf.FieldSet: boolean isImmutable()
com.google.android.gms.tasks.zzw: boolean zzc()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext encode(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
com.google.android.gms.common.api.internal.LifecycleActivity: boolean zzc()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady: void runInternal()
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzji zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
io.grpc.internal.ExponentialBackoffPolicy: long uniformRandom(double,double)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getDatabaseURL()
com.google.android.gms.tasks.RuntimeExecutionException: RuntimeExecutionException(java.lang.Throwable)
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document getDocument()
io.grpc.LoadBalancerRegistry: void addProvider(io.grpc.LoadBalancerProvider)
com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzdr: zzdr(byte[],int)
com.google.android.gms.common.zzg: byte[] zzb()
io.grpc.internal.DnsNameResolver: java.lang.String access$500(io.grpc.internal.DnsNameResolver)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: Messages$StorageDirectory(java.lang.String,int,int)
com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)
com.google.firebase.firestore.core.FieldFilter: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzom: byte[] zza(byte[],byte[])
com.google.firebase.firestore.local.LocalStore: void setLastStreamToken(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzcn: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzpf: java.lang.Object initialValue()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
com.google.android.gms.maps.internal.zzby: boolean isMapToolbarEnabled()
io.grpc.internal.InternalSubchannel: java.util.List access$902(io.grpc.internal.InternalSubchannel,java.util.List)
okio.RealBufferedSink: okio.BufferedSink writeInt(int)
com.google.android.gms.common.internal.BaseGmsClient: void setAttributionTag(java.lang.String)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
com.google.firebase.internal.DataCollectionConfigStorage: boolean isEnabled()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzju: void zzf(com.google.android.gms.internal.firebase-auth-api.zzju,int)
com.google.android.gms.internal.firebase-auth-api.zzch: zzch()
com.google.android.gms.internal.firebase-auth-api.zzsc: zzsc(com.google.android.gms.common.api.Status,com.google.firebase.auth.zze,java.lang.String,java.lang.String)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
com.google.firebase.auth.internal.zzaa: java.lang.Object[] newArray(int)
com.google.android.gms.internal.safetynet.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzaem: zzaem(sun.misc.Unsafe)
com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorV()
com.google.protobuf.UnknownFieldSetLiteSchema: void addFixed32(com.google.protobuf.UnknownFieldSetLite,int,int)
io.flutter.plugins.googlemaps.PolygonController: void remove()
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder: StructuredQuery$CompositeFilter$Builder()
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap getBitmap()
com.google.firestore.v1.StructuredQuery$Projection$Builder: StructuredQuery$Projection$Builder()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
com.google.android.gms.internal.location.zzak: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.Timestamp: int compareTo(com.google.firebase.Timestamp)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: FirebaseApp$GlobalBackgroundStateListener()
com.google.firebase.firestore.core.Target: android.util.Pair getDescendingBound(com.google.firebase.firestore.model.FieldIndex$Segment,com.google.firebase.firestore.core.Bound)
io.grpc.internal.DnsNameResolver: java.util.List parseTxtResults(java.util.List)
com.google.android.gms.maps.GoogleMap: void snapshot(com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback,android.graphics.Bitmap)
com.google.firebase.auth.GithubAuthCredential: GithubAuthCredential(java.lang.String)
com.google.android.gms.internal.maps.zzz: com.google.android.gms.internal.maps.zzaa zzb(android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzjh: zzjh()
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
com.google.firebase.auth.zzh: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzqq: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
io.grpc.Deadline: io.grpc.Deadline after(long,java.util.concurrent.TimeUnit)
io.flutter.plugins.googlemaps.MarkersController: java.lang.String getMarkerId(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzK(java.util.List,boolean)
com.lyokone.location.StreamHandlerImpl: void stopListening()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.lang.String getCode()
com.google.android.gms.location.LocationSettingsStates: boolean isBlePresent()
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzz(com.google.android.gms.internal.firebase-auth-api.zzaci)
com.google.android.gms.internal.firebase-auth-api.zzjb: zzjb()
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.google.android.gms.maps.zzq: void zzc(com.google.android.gms.dynamic.IObjectWrapper)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.google.firebase.auth.internal.zzbd: com.google.android.gms.tasks.Task zzb()
com.google.firestore.v1.DocumentTransform$FieldTransform: void access$200(com.google.firestore.v1.DocumentTransform$FieldTransform,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzts: void zza(java.lang.String)
com.google.android.gms.common.api.AvailabilityException: AvailabilityException(androidx.collection.ArrayMap)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi: void postMessage(java.lang.Long,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi$Reply)
com.google.firebase.auth.internal.RecaptchaActivity: android.net.Uri$Builder zzb(android.content.Intent,java.lang.String,java.lang.String)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setMethod(java.lang.String)
io.flutter.plugins.googlemaps.TileProviderController$Worker: com.google.android.gms.maps.model.Tile getTile()
com.google.android.gms.maps.model.TileOverlay: void setTransparency(float)
com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)
kotlinx.coroutines.channels.AbstractChannel$Itr: void setResult(java.lang.Object)
io.grpc.internal.KeepAliveManager: long access$800(io.grpc.internal.KeepAliveManager)
io.grpc.internal.ManagedChannelImpl: boolean access$5202(io.grpc.internal.ManagedChannelImpl,boolean)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: CodedInputStream$IterableDirectByteBufferDecoder(java.lang.Iterable,int,boolean)
okio.Buffer: long size()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: OkHttpChannelBuilder$OkHttpTransportFactory(java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,io.grpc.okhttp.internal.ConnectionSpec,int,boolean,long,long,int,boolean,int,io.grpc.internal.TransportTracer$Factory,boolean)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String quotedAV()
com.google.android.gms.internal.firebase-auth-api.zzew: com.google.android.gms.internal.firebase-auth-api.zzew zzb(com.google.android.gms.internal.firebase-auth-api.zzme)
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.fragment.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
com.google.android.gms.internal.firebase-auth-api.zzxw: zzxw()
com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.android.gms.common.internal.zzf: boolean zzd()
io.grpc.internal.StatsTraceContext: io.grpc.internal.StatsTraceContext newClientContext(io.grpc.ClientStreamTracer[],io.grpc.Attributes,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzbh zzb()
com.google.firestore.v1.StructuredQuery$Builder: StructuredQuery$Builder(com.google.firestore.v1.StructuredQuery$1)
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
io.grpc.internal.RetriableStream$1CommitTask: RetriableStream$1CommitTask(io.grpc.internal.RetriableStream,java.util.Collection,io.grpc.internal.RetriableStream$Substream,java.util.concurrent.Future,java.util.concurrent.Future)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeString(android.os.Parcel,int,java.lang.String,boolean)
io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,boolean,io.grpc.Metadata$TrustedAsciiMarshaller)
com.google.firebase.firestore.core.FirestoreClient: FirestoreClient(android.content.Context,com.google.firebase.firestore.core.DatabaseInfo,com.google.firebase.firestore.FirebaseFirestoreSettings,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.GrpcMetadataProvider)
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void configureNetworkMonitoring()
com.google.android.gms.internal.firebase-auth-api.zzaep: sun.misc.Unsafe zzg()
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestore newInstance(android.content.Context,com.google.firebase.FirebaseApp,com.google.firebase.inject.Deferred,com.google.firebase.inject.Deferred,java.lang.String,com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry,com.google.firebase.firestore.remote.GrpcMetadataProvider)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void handleNameResolutionError(io.grpc.Status)
com.google.android.gms.common.api.internal.zap: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzxb: void zza(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwe,com.google.android.gms.internal.firebase-auth-api.zzwy,java.lang.reflect.Type,com.google.android.gms.internal.firebase-auth-api.zzwi)
com.google.android.gms.dynamite.zzr: com.google.android.gms.dynamic.IObjectWrapper zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)
com.google.protobuf.BinaryReader$SafeHeapReader: double readDouble()
com.google.firebase.firestore.index.AutoValue_IndexEntry: byte[] getDirectionalValue()
com.google.android.gms.common.internal.zzj: zzj()
com.google.firestore.v1.StructuredQuery$FieldReference: StructuredQuery$FieldReference()
com.google.firebase.installations.local.IidStore: java.lang.String readIid()
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void readBytes(byte[],int,int)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder setAppNamespace(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyy: java.util.List zzc()
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
com.google.firebase.installations.remote.AutoValue_TokenResult: long getTokenExpirationTimestamp()
com.google.firebase.auth.FirebaseAuthWebException: FirebaseAuthWebException(java.lang.String,java.lang.String)
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Attributes access$1500(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.maps.model.TileOverlay: float getTransparency()
io.grpc.okhttp.internal.OptionalMethod: java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[])
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
kotlinx.coroutines.JobImpl: boolean handlesException()
androidx.fragment.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzn: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.android.gms.tasks.zzd: zzd(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzw)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.InternalChannelz$Security access$1802(io.grpc.okhttp.OkHttpClientTransport,io.grpc.InternalChannelz$Security)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder: NetworkConnectionInfo$Builder()
io.flutter.plugins.androidintent.IntentSender: android.content.Intent buildIntent(java.lang.String,java.lang.Integer,java.lang.String,android.net.Uri,android.os.Bundle,java.lang.String,android.content.ComponentName,java.lang.String)
com.google.protobuf.InvalidProtocolBufferException: InvalidProtocolBufferException(java.io.IOException)
com.google.protobuf.CodedOutputStream: CodedOutputStream()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: void run()
com.google.protobuf.ArrayDecoders: int decodePackedVarint32List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.internal.InUseStateAggregator: boolean isInUse()
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.RetryPolicy retryPolicy(java.util.Map,int)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
com.google.android.gms.common.ConnectionResult: android.app.PendingIntent getResolution()
com.google.android.gms.maps.internal.zzg: void resetMinMaxZoomPreference()
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$2: CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$2(io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport,io.grpc.MethodDescriptor,io.grpc.CallOptions)
io.grpc.internal.ApplicationThreadDeframer$3: void close()
com.google.firebase.firestore.local.SQLiteIndexManager: void updateEntries(com.google.firebase.firestore.model.Document,java.util.SortedSet,java.util.SortedSet)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzkq: zzkq(com.google.android.gms.internal.firebase-auth-api.zzkp)
com.google.common.collect.RegularImmutableMap$EntrySet: int access$000(com.google.common.collect.RegularImmutableMap$EntrySet)
com.google.protobuf.ProtoSyntax: ProtoSyntax(java.lang.String,int)
io.grpc.internal.AbstractSubchannel: AbstractSubchannel()
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zzf(byte[],byte[],int)
com.google.android.gms.location.zzae: void writeToParcel(android.os.Parcel,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.google.android.gms.internal.maps.zzab: void zzu(java.util.List)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.core.UserData$Source: UserData$Source(java.lang.String,int)
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: TimeWindow(long,long)
com.google.protobuf.SchemaUtil: int computeSizeInt32ListNoTag(java.util.List)
com.google.firestore.v1.Precondition$Builder: Precondition$Builder(com.google.firestore.v1.Precondition$1)
com.google.firebase.auth.internal.zzag: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzzh: zzzh()
com.google.firestore.v1.ListenRequest: java.util.Map getMutableLabelsMap()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int getFieldId(int)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64()
com.google.android.gms.maps.UiSettings: boolean isMyLocationButtonEnabled()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode rotateLeft()
com.google.android.gms.internal.firebase-auth-api.zzai: void clear()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void onPostResume()
com.google.firebase.firestore.core.ActivityScope$CallbackList: ActivityScope$CallbackList()
com.google.firebase.firestore.core.DocumentViewChangeSet: java.util.List getChanges()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions zIndex(float)
com.google.android.gms.internal.firebase-auth-api.zzaae: byte[] zzr()
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.FirebaseFirestoreException access$100(com.google.firebase.firestore.remote.FirestoreChannel,io.grpc.Status)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics,com.google.firebase.encoders.ObjectEncoderContext)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
com.google.android.datatransport.runtime.AutoValue_SendRequest: AutoValue_SendRequest(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Event,com.google.android.datatransport.Transformer,com.google.android.datatransport.Encoding,com.google.android.datatransport.runtime.AutoValue_SendRequest$1)
com.google.firebase.auth.internal.zzp: int describeContents()
androidx.window.R: R()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: io.flutter.plugin.common.EventChannel$EventSink access$000(io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code fromValue(int)
com.google.protobuf.ByteString: int toInt(byte)
com.google.firebase.firestore.util.ExponentialBackoff: void cancel()
io.flutter.plugins.googlemaps.GoogleMapController$1: GoogleMapController$1(io.flutter.plugins.googlemaps.GoogleMapController)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
io.grpc.internal.ServiceConfigUtil: io.grpc.NameResolver$ConfigOrError selectLbPolicyFromList(java.util.List,io.grpc.LoadBalancerRegistry)
com.google.android.gms.common.internal.zat: void writeToParcel(android.os.Parcel,int)
com.google.firebase.internal.DataCollectionConfigStorage: DataCollectionConfigStorage(android.content.Context,java.lang.String,com.google.firebase.events.Publisher)
com.google.android.gms.common.internal.TelemetryLoggingOptions: TelemetryLoggingOptions(java.lang.String,com.google.android.gms.common.internal.zaad)
com.google.protobuf.ArrayDecoders: int decodeString(byte[],int,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.auth.FirebaseAuth: java.lang.String zzz(com.google.firebase.auth.FirebaseAuth)
com.google.firebase.auth.EmailAuthCredential: java.lang.String zze()
io.flutter.plugins.googlemaps.CircleBuilder: void setCenter(com.google.android.gms.maps.model.LatLng)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabx zza(com.google.android.gms.internal.firebase-auth-api.zzabx)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: boolean checkInputConnectionProxy(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzig: zzig()
io.grpc.internal.CompositeReadableBuffer: int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation,int,java.lang.Object,int)
com.google.android.gms.common.api.internal.zabq: void zaI()
io.grpc.okhttp.internal.framed.Huffman$Node: io.grpc.okhttp.internal.framed.Huffman$Node[] access$000(io.grpc.okhttp.internal.framed.Huffman$Node)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
io.grpc.ManagedChannelRegistry: void addProvider(io.grpc.ManagedChannelProvider)
kotlin.collections.EmptyIterator: java.lang.Object next()
com.google.firebase.firestore.auth.User: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
com.google.android.gms.common.ConnectionResult: boolean equals(java.lang.Object)
com.tekartik.sqflite.SqflitePlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
com.google.protobuf.Utf8$DecodeUtil: boolean access$600(byte)
com.google.android.gms.internal.maps.zzv: int zzg()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status status()
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] access$100(com.google.firebase.database.collection.ArraySortedMap)
com.google.firebase.firestore.FieldValue$DeleteFieldValue: FieldValue$DeleteFieldValue()
com.google.firebase.firestore.core.Target: java.util.List getOrderBy()
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzn()
com.google.firebase.firestore.bundle.BundleMetadata: boolean equals(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.google.android.gms.cloudmessaging.zzf: boolean handleMessage(android.os.Message)
com.google.android.gms.internal.firebase-auth-api.zzqt: zzqt()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder setClock(com.google.android.datatransport.runtime.time.Clock)
com.google.firebase.installations.AutoValue_InstallationTokenResult: long getTokenCreationTimestamp()
com.google.firestore.v1.Value: com.google.protobuf.Timestamp getTimestampValue()
com.google.android.gms.common.internal.BaseGmsClient: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
com.google.firebase.firestore.remote.AbstractStream: void tearDown()
com.google.firebase.auth.FederatedAuthProvider: FederatedAuthProvider()
com.google.android.gms.internal.firebase-auth-api.zzaba: void zzc(byte)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setBackgroundColor(java.lang.Long,java.lang.Long)
com.google.android.gms.safetynet.zzi: java.lang.Object[] newArray(int)
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
com.google.android.gms.common.api.internal.zzc: void run()
com.google.android.gms.common.api.internal.zabq: java.util.Map zah()
com.google.firestore.v1.TransactionOptions$ReadWrite: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.WriteStream: boolean isStarted()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
com.google.firebase.firestore.Query: void validateOrderByFieldMatchesInequality(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.FieldPath)
com.google.firebase.firestore.bundle.BundleDocument: com.google.firebase.firestore.model.MutableDocument getDocument()
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withSubchannel(io.grpc.LoadBalancer$Subchannel)
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
com.google.android.gms.internal.firebase-auth-api.zzaar: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: SQLiteEventStore$Metadata(java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.google.android.gms.internal.firebase-auth-api.zzhn: java.lang.String zzc()
com.google.common.collect.ImmutableMap: java.util.Collection values()
io.flutter.plugins.urllauncher.UrlLauncher: UrlLauncher(android.content.Context,android.app.Activity)
io.flutter.Log: void e(java.lang.String,java.lang.String)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
kotlin.collections.IntIterator: java.lang.Object next()
com.google.android.gms.dynamic.DeferredLifecycleHelper: java.util.LinkedList zab(com.google.android.gms.dynamic.DeferredLifecycleHelper)
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
com.google.firebase.FirebaseApp: void access$400(com.google.firebase.FirebaseApp)
com.google.android.gms.maps.model.zzf: java.lang.Object[] newArray(int)
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String getFieldPath()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void removeJavaScriptChannel(java.lang.Long,java.lang.Long)
com.google.protobuf.UnknownFieldSetLite: int getSerializedSizeAsMessageSet()
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
com.google.firebase.messaging.FirebaseMessaging: boolean isAutoInitEnabled()
com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest build()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions zIndex(float)
io.grpc.okhttp.internal.framed.Http2$Writer: void writeContinuationFrames(int,long)
com.google.firebase.messaging.NotificationParams: java.lang.Object[] getLocalizationArgsForKey(java.lang.String)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parsePartialFrom(com.google.protobuf.GeneratedMessageLite,com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)
com.google.firebase.firestore.core.Transaction: com.google.android.gms.tasks.Task commit()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void enqueueMessageProcessing(android.content.Context,android.content.Intent)
io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: ManagedChannelImpl$IdleModeStateAggregator(io.grpc.internal.ManagedChannelImpl)
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite internalGetFields()
com.google.android.gms.internal.firebase-auth-api.zzaeo: void zzo(java.lang.Object,long,long)
com.google.protobuf.UnsafeUtil: void copyMemory(long,byte[],long,long)
okio.Buffer: okio.Segment writableSegment(int)
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzhx zza(com.google.android.gms.internal.firebase-auth-api.zzid,java.lang.String,java.lang.String)
com.google.android.gms.stats.WakeLock: void zza(com.google.android.gms.stats.WakeLock)
com.google.android.gms.internal.firebase-auth-api.zzsy: void zzb(java.lang.Object)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.protobuf.BinaryReader$SafeHeapReader: BinaryReader$SafeHeapReader(java.nio.ByteBuffer,boolean)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.firebase.auth.ActionCodeUrl: ActionCodeUrl(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacm: void zzb(java.lang.Object,long)
io.grpc.internal.TimeProvider$1: TimeProvider$1()
com.tekartik.sqflite.operation.SqlErrorInfo: java.util.Map getMap(com.tekartik.sqflite.operation.Operation)
com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.runtime.SendRequest$Builder builder()
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: AutoValue_SchedulerConfig_ConfigValue$Builder()
io.grpc.internal.AtomicLongCounter: AtomicLongCounter()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readInt32()
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zza(android.os.Bundle)
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.runtime.TransportContext getTransportContext()
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()
com.google.android.gms.internal.firebase-auth-api.zzmp: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmp,int)
com.google.firebase.firestore.remote.WatchStream: boolean isOpen()
com.google.firebase.FirebaseApp: void addBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener)
com.google.firebase.firestore.Filter$CompositeFilter: java.util.List getFilters()
com.google.android.gms.maps.UiSettings: void setMapToolbarEnabled(boolean)
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec build()
com.google.firebase.auth.internal.zzax: void zzh(android.app.Activity,android.content.BroadcastReceiver)
com.google.protobuf.SchemaUtil: int computeSizeMessage(int,java.lang.Object,com.google.protobuf.Schema)
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzbi zzc(com.google.android.gms.internal.firebase-auth-api.zzbf)
com.google.firebase.firestore.local.SQLiteIndexManager: void updateIndexEntries(com.google.firebase.database.collection.ImmutableSortedMap)
com.google.android.gms.internal.firebase-auth-api.zzoq: void zzf(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task getNamedQuery(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaer: boolean zzb(byte[],int,int)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: PersistedEvent()
com.squareup.okhttp.HttpUrl$Builder: com.squareup.okhttp.HttpUrl build()
com.google.firebase.firestore.model.mutation.PatchMutation: PatchMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.firestore.model.mutation.Precondition,java.util.List)
com.google.protobuf.BooleanArrayList: java.lang.Object get(int)
com.google.android.gms.tasks.zzi: zzi(com.google.android.gms.tasks.zzj,com.google.android.gms.tasks.Task)
com.google.protobuf.ByteString$1: ByteString$1(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzaao: void zze(byte[],int,int,int)
io.grpc.CallOptions: io.grpc.CallOptions withoutWaitForReady()
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
androidx.fragment.app.Fragment: android.view.View requireView()
com.google.firebase.components.EventBus: void unsubscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeDouble(android.os.Parcel,int,double)
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder setWhere(com.google.firestore.v1.StructuredQuery$Filter)
io.grpc.internal.ForwardingConnectionClientTransport: void ping(io.grpc.internal.ClientTransport$PingCallback,java.util.concurrent.Executor)
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.Filter parseFilter(com.google.firebase.firestore.Filter)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
com.google.firebase.messaging.FirebaseMessagingService: void onSendError(java.lang.String,java.lang.Exception)
com.google.firebase.messaging.TopicsSubscriber: boolean performTopicOperation(com.google.firebase.messaging.TopicOperation)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
com.google.common.io.BaseEncoding$StandardBaseEncoding: BaseEncoding$StandardBaseEncoding(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)
com.google.android.gms.internal.firebase-auth-api.zzmw: void zzf(com.google.android.gms.internal.firebase-auth-api.zzmw,int)
com.google.android.gms.maps.model.CustomCap: CustomCap(com.google.android.gms.maps.model.BitmapDescriptor,float)
io.grpc.internal.JsonUtil: java.util.List getListOfObjects(java.util.Map,java.lang.String)
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: FirebaseClientGrpcMetadataProvider(com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.FirebaseOptions)
com.google.android.gms.internal.firebase-auth-api.zzaer: zzaer()
com.google.protobuf.CodedOutputStreamWriter: void writeUInt64(int,long)
com.google.android.gms.internal.firebase-auth-api.zzdv: byte[] zzb(byte[],byte[])
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzQ(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,com.google.android.gms.internal.firebase-auth-api.zzado)
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl$JavaScriptChannelCreator: JavaScriptChannelHostApiImpl$JavaScriptChannelCreator()
com.google.protobuf.SmallSortedMap$EntryIterator: SmallSortedMap$EntryIterator(com.google.protobuf.SmallSortedMap)
com.google.android.gms.internal.firebase-auth-api.zzaaj: java.lang.String zzf(int)
com.google.firestore.v1.Target$QueryTarget: Target$QueryTarget()
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.String getClassName()
com.google.firebase.installations.remote.TokenResult$Builder: TokenResult$Builder()
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: MoreObjects$ToStringHelper$ValueHolder(com.google.common.base.MoreObjects$1)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1300(io.grpc.internal.InternalSubchannel)
io.grpc.internal.ManagedChannelImpl: boolean access$3900(io.grpc.internal.ManagedChannelImpl)
com.google.protobuf.ExtensionSchemaLite: void serializeExtension(com.google.protobuf.Writer,java.util.Map$Entry)
com.google.protobuf.MapFieldLite: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedOutputStreamWriter: void writeSFixed64List(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzaep: float zzb(java.lang.Object,long)
io.grpc.internal.NoopClientStream: void flush()
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: FieldIndex$Segment$Kind(java.lang.String,int)
com.google.android.gms.cloudmessaging.zzs: java.util.concurrent.ScheduledExecutorService zze(com.google.android.gms.cloudmessaging.zzs)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerCreator: io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerImpl createDownloadListener(io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: void applyGetterAnnotations(java.lang.reflect.Method)
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
com.google.android.gms.common.internal.BaseGmsClient: BaseGmsClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailabilityLight,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,char)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator$1: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator findValueByNumber(int)
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.Collection getFieldIndexes(java.lang.String)
com.google.android.gms.internal.maps.zzv: void zzr(boolean)
com.google.android.gms.internal.firebase-auth-api.zzyx: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzps: java.lang.String zza()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.gms.tasks.zze: zze(com.google.android.gms.tasks.zzf,com.google.android.gms.tasks.Task)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.EmptyList: EmptyList()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.grpc.ManagedChannelRegistry: io.grpc.ManagedChannelRegistry getDefaultRegistry()
com.google.android.gms.internal.auth-api-phone.zzd: zzd()
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
com.lyokone.location.FlutterLocationService$LocalBinder: com.lyokone.location.FlutterLocationService getService()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.android.gms.internal.firebase-auth-api.zzai: java.lang.Object[] toArray(java.lang.Object[])
io.grpc.internal.ReadableBuffers$BufferInputStream: int read()
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.google.firebase.auth.internal.zzaq: void onSuccess(java.lang.Object)
com.google.android.gms.maps.model.MarkerOptions: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.LazyStringArrayList: java.lang.Object set(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzva: java.lang.String zza()
com.google.protobuf.Utf8$UnpairedSurrogateException: Utf8$UnpairedSurrogateException(int,int)
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal build()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzla zze()
com.google.android.gms.common.api.internal.zabv: android.os.Looper getLooper()
com.google.android.gms.internal.auth-api-phone.zza: android.os.IBinder asBinder()
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withNoGeneratedFid()
com.google.android.gms.internal.firebase-auth-api.zzaeb: int hashCode()
com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,com.google.android.gms.tasks.TaskCompletionSource)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.google.protobuf.Int32Value: void setValue(int)
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType valueOf(java.lang.String)
com.google.android.gms.cloudmessaging.Rpc: java.lang.String zzf()
com.baseflow.geolocator.location.LocationOptions: long getDistanceFilter()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel access$400(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
io.grpc.internal.PickFirstLoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
io.grpc.internal.ManagedChannelImpl: void updateSubchannelPicker(io.grpc.LoadBalancer$SubchannelPicker)
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzf(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String)
io.grpc.internal.KeepAliveManager: java.lang.Runnable access$700(io.grpc.internal.KeepAliveManager)
com.google.firebase.firestore.local.IndexBackfiller: int backfill()
com.google.android.gms.internal.firebase-auth-api.zzzt: zzzt(java.lang.String,java.lang.String)
io.grpc.internal.ApplicationThreadDeframerListener$2: ApplicationThreadDeframerListener$2(io.grpc.internal.ApplicationThreadDeframerListener,boolean)
com.google.android.gms.internal.firebase-auth-api.zztp: zztp(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: ManagedChannelImpl$LbHelperImpl(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.gms.internal.stats.zzh: com.google.android.gms.internal.stats.zze zza()
io.grpc.internal.PickFirstLoadBalancer$Picker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
io.flutter.plugins.googlemaps.MarkersController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.android.gms.internal.firebase-auth-api.zzaeh: int zza(java.lang.Object)
io.grpc.okhttp.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.google.firebase.auth.internal.zzam: void zzb()
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4300(io.grpc.internal.ManagedChannelImpl)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1()
com.google.android.gms.maps.model.Gap: Gap(float)
com.google.android.gms.internal.firebase-auth-api.zzua: zzua(java.lang.String,java.lang.String)
com.google.firebase.firestore.util.CustomClassMapper: java.lang.IllegalArgumentException serializeError(com.google.firebase.firestore.util.CustomClassMapper$ErrorPath,java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.MessageLite$Builder internalMergeFrom(com.google.protobuf.MessageLite$Builder,com.google.protobuf.MessageLite)
com.google.firebase.components.OptionalProvider: OptionalProvider(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Provider)
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken zzd()
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzu(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzpe: javax.crypto.Cipher zzb()
com.google.android.gms.internal.firebase-auth-api.zzht: java.lang.Class zzb()
com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)
io.flutter.plugins.webviewflutter.InputAwareWebView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.firebase.messaging.EnhancedIntentService: void finishTask(android.content.Intent)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()
com.google.android.gms.internal.firebase-auth-api.zzvc: void zzb()
io.grpc.okhttp.AsyncSink$1: void doRun()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdz: java.util.Map zzc()
okio.SegmentPool: SegmentPool()
com.google.firebase.firestore.core.QueryListener: void raiseInitialEvent(com.google.firebase.firestore.core.ViewSnapshot)
com.google.protobuf.IntArrayList: java.lang.Integer remove(int)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions strokeWidth(float)
io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor: int getPriority(io.grpc.LoadBalancerProvider)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter lessThanOrEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.grpc.internal.ManagedChannelImpl$RealChannel: ManagedChannelImpl$RealChannel(io.grpc.internal.ManagedChannelImpl,java.lang.String,io.grpc.internal.ManagedChannelImpl$1)
com.google.firebase.firestore.local.LocalStore: void start()
kotlin.Result$Companion: Result$Companion()
com.google.firebase.components.Dependency: boolean isRequired()
io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String authority()
com.google.protobuf.SmallSortedMap: void clear()
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask getDefaultInstance()
okio.Segment: Segment()
com.google.android.gms.common.api.internal.zabv: zabv(com.google.android.gms.common.api.GoogleApi)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void urlLoading(java.lang.Long,java.lang.Long,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$1: FlutterFirebaseMessagingPlugin$1(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin,java.lang.String)
com.google.firebase.firestore.util.Util: java.lang.Exception convertStatusException(java.lang.Exception)
com.google.android.gms.dynamite.zzo: zzo(int,int)
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
com.google.firebase.firestore.bundle.NamedQuery: com.google.firebase.firestore.bundle.BundledQuery getBundledQuery()
com.google.firebase.auth.internal.GenericIdpActivity: void zzi(com.google.android.gms.common.api.Status)
com.google.android.gms.dynamic.zac: int zaa()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel shutdownNow()
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.google.protobuf.LongArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: void success(java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.lang.String readString()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzln: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
com.google.android.gms.common.internal.zzr: long zzd(com.google.android.gms.common.internal.zzr)
io.grpc.okhttp.internal.framed.Hpack$Reader: void readIndexedHeader(int)
com.google.android.gms.internal.firebase-auth-api.zzabr: zzabr()
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeRawMessageSetExtension(int,com.google.protobuf.ByteString)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzap zzh()
io.flutter.plugins.firebase.firestore.utils.ExceptionConverter: java.util.Map createDetails(java.lang.Exception)
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
com.google.android.gms.maps.model.Circle: void setFillColor(int)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
io.grpc.okhttp.OkHttpProtocolNegotiator: java.lang.String[] access$100(java.util.List)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int getLoadBatchSize()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String toString()
com.google.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: ManifestSchemaFactory$CompositeMessageInfoFactory(com.google.protobuf.MessageInfoFactory[])
com.google.android.gms.internal.firebase-auth-api.zzrg: java.lang.String zza()
io.grpc.internal.InternalSubchannel: io.grpc.Status access$1600(io.grpc.internal.InternalSubchannel)
com.google.firebase.firestore.remote.WatchChange: WatchChange(com.google.firebase.firestore.remote.WatchChange$1)
com.google.android.gms.internal.firebase-auth-api.zzacj: zzacj(java.util.ArrayList)
com.google.android.gms.common.api.internal.zaae: void onStop()
com.google.firestore.v1.TargetChange$TargetChangeType$1: com.google.firestore.v1.TargetChange$TargetChangeType findValueByNumber(int)
io.grpc.Status: boolean equals(java.lang.Object)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task sendPasswordResetEmail(java.lang.String)
io.grpc.util.RoundRobinLoadBalancer: io.grpc.EquivalentAddressGroup stripAttrs(io.grpc.EquivalentAddressGroup)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.android.gms.maps.MapsInitializer: MapsInitializer()
com.google.protobuf.NioByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] values()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.protobuf.CodedInputStream$StreamDecoder: int readFixed32()
com.google.firebase.firestore.local.SQLitePersistence: void start()
io.grpc.internal.DelayedClientCall: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
com.google.firebase.firestore.core.FirestoreClient: void stopListening(com.google.firebase.firestore.core.QueryListener)
io.grpc.okhttp.OutboundFlowController$WriteStatus: void incrementNumWrites()
com.google.android.gms.internal.firebase-auth-api.zzym: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument$Builder newBuilder()
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings$Builder setUrl(java.lang.String)
com.google.protobuf.UnknownFieldSetLite: int hashCode(int[],int)
com.google.firebase.database.collection.ImmutableSortedSet: int indexOf(java.lang.Object)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions addHole(java.lang.Iterable)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzK(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.UserProfileChangeRequest,com.google.firebase.auth.internal.zzbk)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void raiseForegroundNotification()
io.flutter.plugins.firebase.auth.IdTokenChannelStreamHandler: void onCancel(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.gms.internal.firebase-auth-api.zzcb: void zzn(com.google.android.gms.internal.firebase-auth-api.zzgb,boolean)
com.google.android.gms.cloudmessaging.zzm: void zzf()
com.google.android.gms.internal.firebase-auth-api.zzvc: zzvc(com.google.firebase.auth.EmailAuthCredential)
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: OkHttpChannelBuilder$NegotiationType(java.lang.String,int)
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: java.util.List mutableListAt(java.lang.Object,long,int)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task transaction(com.google.firebase.firestore.TransactionOptions,com.google.firebase.firestore.util.Function)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions firebaseOptionsToMap(com.google.firebase.FirebaseOptions)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: void putBoolean(java.lang.Object,long,boolean)
com.baseflow.geolocator.location.GeolocationManager: void isLocationServiceEnabled(android.content.Context,com.baseflow.geolocator.location.LocationServiceListener)
com.google.common.collect.Maps: boolean equalsImpl(java.util.Map,java.lang.Object)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
com.google.firebase.encoders.proto.ProtobufEncoder: byte[] encode(java.lang.Object)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock get()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzB(com.google.firebase.FirebaseApp,com.google.firebase.auth.EmailAuthCredential,com.google.firebase.auth.internal.zzg)
com.google.firebase.firestore.model.mutation.FieldMask: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzaeh: java.lang.Object zzf()
com.google.android.gms.internal.firebase-auth-api.zzos: zzos(com.google.android.gms.internal.firebase-auth-api.zzpa)
com.google.firebase.firestore.local.SQLiteTargetCache: void removeTarget(int)
com.google.android.gms.common.api.internal.zabq: void zao()
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder setRealClientPackageName(java.lang.String)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzaau zzg()
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.ResourcePath getCollectionPath()
io.grpc.okhttp.OkHttpClientTransport: java.lang.String toString()
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] values()
io.grpc.internal.InternalSubchannel: void shutdownNow(io.grpc.Status)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean requiresGooglePlayServices()
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromBytes(byte[],android.os.Parcelable$Creator)
com.google.protobuf.RopeByteString: boolean isBalanced()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void recomputeBufferSizeAfterLimit()
com.google.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarintFastPath()
com.google.firestore.v1.Cursor: void access$400(com.google.firestore.v1.Cursor,java.lang.Iterable)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()
com.google.firebase.firestore.model.Values: boolean objectEquals(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
io.grpc.LoadBalancer$CreateSubchannelArgs: LoadBalancer$CreateSubchannelArgs(java.util.List,io.grpc.Attributes,java.lang.Object[][],io.grpc.LoadBalancer$1)
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: int read(byte[],int,int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setStorageBucket(java.lang.String)
com.google.protobuf.CodedInputStreamReader: int readInt32()
com.lyokone.location.FlutterLocationService: void setActivity(android.app.Activity)
kotlinx.coroutines.channels.Send: Send()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.android.gms.internal.firebase-auth-api.zzfh: byte[] zza(byte[],com.google.android.gms.internal.firebase-auth-api.zzez)
com.google.common.collect.RegularImmutableMap$EntrySet: RegularImmutableMap$EntrySet(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int)
com.google.protobuf.UnknownFieldSetLiteSchema: void setToMessage(java.lang.Object,java.lang.Object)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] values()
com.google.protobuf.DoubleArrayList: boolean contains(java.lang.Object)
io.grpc.okhttp.internal.Platform$Android: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.gms.internal.firebase-auth-api.zzqk: void writeToParcel(android.os.Parcel,int)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: void onAvailable(android.net.Network)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzt(int,long)
com.google.android.gms.internal.firebase-auth-api.zzdx: java.lang.Boolean zza()
androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)
com.google.common.base.MoreObjects$ToStringHelper: MoreObjects$ToStringHelper(java.lang.String,com.google.common.base.MoreObjects$1)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task getLastLocation()
com.google.protobuf.ArrayDecoders: int decodeVarint64(long,byte[],int,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: android.os.Bundle getMetadata(android.content.Context)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase[] values()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getApiKey()
com.google.android.gms.internal.location.zzbd: boolean equals(java.lang.Object)
io.grpc.internal.JsonParser: java.util.Map parseJsonObject(com.google.gson.stream.JsonReader)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void getNextByteBuffer()
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder setLogSource(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.googlemaps.MarkersController: void addMarker(java.lang.String,com.google.android.gms.maps.model.MarkerOptions,boolean)
io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.String toAsciiString(java.lang.Long)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.Integer getColor(android.content.Context,java.lang.String,android.os.Bundle)
io.grpc.EquivalentAddressGroup: EquivalentAddressGroup(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzp(com.google.android.gms.internal.firebase-auth-api.zzqu,com.google.android.gms.internal.firebase-auth-api.zzvr)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.Object zzr(com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.protobuf.MessageLiteToString: java.lang.String camelCaseToSnakeCase(java.lang.String)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter greaterThanOrEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzne: com.google.android.gms.internal.firebase-auth-api.zzne zza(com.google.android.gms.internal.firebase-auth-api.zzni)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzF(com.google.android.gms.internal.firebase-auth-api.zzzk,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zza(byte[],byte[])
com.google.firebase.auth.FirebaseAuth: void useAppLanguage()
com.google.android.gms.internal.firebase-auth-api.zzfc: java.util.Map zzc()
com.google.android.gms.common.internal.zaq: zaq(com.google.android.gms.common.api.Response)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
io.grpc.okhttp.internal.framed.Http2$Writer: void settings(io.grpc.okhttp.internal.framed.Settings)
com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
com.google.android.gms.maps.zzah: void zza(com.google.android.gms.maps.OnMapReadyCallback)
com.google.firebase.firestore.remote.RemoteStore: void handleWriteStreamMutationResults(com.google.firebase.firestore.model.SnapshotVersion,java.util.List)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect onGetEpicenter(android.transition.Transition)
io.grpc.internal.DelayedClientTransport$4: DelayedClientTransport$4(io.grpc.internal.DelayedClientTransport,io.grpc.Status)
io.grpc.internal.ForwardingClientStreamListener: ForwardingClientStreamListener()
com.google.android.gms.maps.model.Cap: Cap(int,com.google.android.gms.maps.model.BitmapDescriptor,java.lang.Float)
io.grpc.internal.MessageDeframer$SingleMessageProducer: java.io.InputStream next()
com.google.android.gms.internal.firebase-auth-api.zzbw: com.google.android.gms.internal.firebase-auth-api.zzbq zza()
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()
io.grpc.okhttp.Utils: io.grpc.Metadata convertHeaders(java.util.List)
com.google.firebase.firestore.local.MemoryPersistence: boolean isStarted()
com.google.android.gms.location.FusedLocationProviderClient: FusedLocationProviderClient(android.app.Activity)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.gms.common.Feature: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.BundleCache getBundleCache()
com.google.firestore.v1.Cursor$Builder: Cursor$Builder(com.google.firestore.v1.Cursor$1)
io.flutter.plugins.googlemaps.MarkerController: java.lang.String getGoogleMapsMarkerId()
com.google.android.gms.internal.firebase-auth-api.zzvf: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firebase.auth.PhoneAuthCredential: java.lang.String getSmsCode()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzb(int,boolean)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
com.google.android.gms.internal.firebase-auth-api.zzli: void zzf(com.google.android.gms.internal.firebase-auth-api.zzli,com.google.android.gms.internal.firebase-auth-api.zznc)
com.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzwb: zzwb(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwi)
com.google.android.gms.maps.model.Marker: void setSnippet(java.lang.String)
com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map access$100(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.android.gms.common.internal.zze: void onServiceDisconnected(android.content.ComponentName)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.collection.ArraySet: java.util.Iterator iterator()
com.google.android.gms.cloudmessaging.zzm: boolean zzg(com.google.android.gms.cloudmessaging.zzp)
com.google.android.gms.location.zzag: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzig zzb()
com.google.android.gms.internal.firebase-auth-api.zzgv: int hashCode()
com.google.android.gms.maps.model.LatLng: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
com.google.firebase.firestore.core.OrderBy: com.google.firebase.firestore.model.FieldPath getField()
com.google.protobuf.FieldSet: com.google.protobuf.FieldSet newFieldSet()
io.grpc.internal.ManagedChannelImpl$NameResolverListener: void scheduleExponentialBackOffInSyncContext()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
io.grpc.LoadBalancer$SubchannelPicker: LoadBalancer$SubchannelPicker()
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: boolean access$000(com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator)
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzin zze()
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: LocalBroadcastManager$ReceiverRecord(android.content.IntentFilter,android.content.BroadcastReceiver)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzx(com.google.android.gms.internal.firebase-auth-api.zzzd,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.maps.zzv: void zzm()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zze()
io.grpc.internal.InternalSubchannel: java.util.Collection access$1700(io.grpc.internal.InternalSubchannel)
com.google.android.gms.internal.firebase-auth-api.zzyy: com.google.android.gms.internal.firebase-auth-api.zzyy zza(org.json.JSONArray)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: RBTreeSortedMap$Builder$Base1_2(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setRequestHeaders(java.util.Map)
com.google.firebase.firestore.QuerySnapshot: java.util.List getDocumentChanges()
com.google.firebase.firestore.index.IntMath: int divide(int,int,java.math.RoundingMode)
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.zze zzj()
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp getReadTime()
com.google.android.gms.common.api.internal.zad: void zaf(com.google.android.gms.common.api.internal.zabq)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: SQLiteOverlayMigrationManager(com.google.firebase.firestore.local.SQLitePersistence)
com.google.protobuf.ProtobufArrayList: java.lang.Object[] createArray(int)
io.grpc.okhttp.internal.framed.Http2$Reader: void readHeaders(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.MessageLite buildPartial()
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation)
com.google.firebase.auth.internal.zzaj: java.util.List getSignInMethods()
androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlq zze(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
okio.Buffer: okio.BufferedSink write(byte[])
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setTtl(int)
com.google.firebase.FirebaseNetworkException: FirebaseNetworkException(java.lang.String)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite checkMessageInitialized(com.google.protobuf.GeneratedMessageLite)
com.google.android.gms.internal.firebase-auth-api.zzzs: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String,java.lang.Throwable)
okio.Okio$1: void close()
com.google.android.gms.internal.firebase-auth-api.zzmo: zzmo(com.google.android.gms.internal.firebase-auth-api.zzmn)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
io.grpc.MethodDescriptor$MethodType: MethodDescriptor$MethodType(java.lang.String,int)
io.grpc.internal.InternalSubchannel: void shutdown(io.grpc.Status)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder forTarget(java.lang.String)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
com.google.android.gms.internal.firebase-auth-api.zzgj: zzgj(com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzhh,byte[])
com.google.firestore.v1.Write: boolean hasTransform()
com.google.firebase.firestore.GeoPoint: double getLongitude()
io.grpc.util.RoundRobinLoadBalancer$1: RoundRobinLoadBalancer$1(io.grpc.util.RoundRobinLoadBalancer,io.grpc.LoadBalancer$Subchannel)
io.grpc.internal.GzipInflatingBuffer: void addGzippedBytes(io.grpc.internal.ReadableBuffer)
com.google.common.base.Joiner: com.google.common.base.Joiner on(char)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator encodeCompositeFilterOperator(com.google.firebase.firestore.core.CompositeFilter$Operator)
io.grpc.internal.ServiceConfigUtil: java.util.List getLoadBalancingConfigsFromServiceConfig(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzuu: zzuu()
io.grpc.okhttp.OkHttpReadableBuffer: void readBytes(java.nio.ByteBuffer)
com.google.protobuf.LazyStringArrayList: boolean removeAll(java.util.Collection)
com.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()
com.google.firebase.auth.internal.zzt: java.lang.String zzb()
com.google.firebase.firestore.LoadBundleTask$ManagedListener: LoadBundleTask$ManagedListener(java.util.concurrent.Executor,com.google.firebase.firestore.OnProgressListener)
androidx.window.core.Bounds: int getBottom()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.util.ArrayList createTypedList(android.os.Parcel,int,android.os.Parcelable$Creator)
com.google.android.gms.common.api.internal.zzb: void onDestroy()
io.grpc.internal.FailingClientTransport: io.grpc.InternalLogId getLogId()
io.grpc.internal.ApplicationThreadDeframerListener$2: void run()
com.google.android.gms.internal.firebase-auth-api.zzpz: zzpz()
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
io.grpc.internal.AbstractStream$TransportState: void notifyIfReady()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task subscribeToTopic(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zztk: void zzb(java.lang.Object)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.firebase.auth.FirebaseAuth: void zzF(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.String getTitle(java.lang.Long)
com.google.common.collect.ComparatorOrdering: int hashCode()
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: AutoValue_InstallationResponse$Builder()
com.google.firestore.v1.Target: void access$2200(com.google.firestore.v1.Target,com.google.firestore.v1.Target$DocumentsTarget)
com.google.protobuf.IntArrayList: com.google.protobuf.IntArrayList emptyList()
com.google.firestore.v1.StructuredQuery$FieldFilter: void access$3500(com.google.firestore.v1.StructuredQuery$FieldFilter,com.google.firestore.v1.StructuredQuery$FieldFilter$Operator)
com.google.firebase.firestore.MetadataChanges: MetadataChanges(java.lang.String,int)
com.google.android.gms.common.Feature: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zze(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzQ(java.lang.Object,int)
com.google.protobuf.SmallSortedMap$EntrySet: SmallSortedMap$EntrySet(com.google.protobuf.SmallSortedMap)
com.google.android.gms.dynamite.zze: zze()
kotlin.KotlinVersion: int compareTo(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: java.lang.Object get()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.firestore.local.TargetData getTargetData(com.google.firebase.firestore.core.Target)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void reload(java.lang.Long)
com.google.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)
com.google.firebase.firestore.core.SyncEngine: void handleOnlineStateChange(com.google.firebase.firestore.core.OnlineState)
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzmo zzc(int)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: EventStoreModule_SchemaVersionFactory()
io.grpc.LoadBalancer$Subchannel: io.grpc.EquivalentAddressGroup getAddresses()
com.google.firebase.firestore.SnapshotMetadata: boolean isFromCache()
io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: AutoValue_CreationContext(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.String)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.gms.internal.firebase-auth-api.zzst: void zza(java.lang.String)
com.google.firebase.firestore.remote.FirestoreChannel: FirestoreChannel(com.google.firebase.firestore.util.AsyncQueue,android.content.Context,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.core.DatabaseInfo,com.google.firebase.firestore.remote.GrpcMetadataProvider)
com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()
io.grpc.internal.ChannelTracer: boolean isTraceEnabled()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task disableNetwork(java.util.Map)
com.google.android.gms.maps.internal.zzg: void setMapType(int)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzi(java.lang.Object,long,boolean)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
io.grpc.android.AndroidChannelBuilder: io.grpc.android.AndroidChannelBuilder usingBuilder(io.grpc.ManagedChannelBuilder)
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
com.google.firebase.firestore.util.AsyncQueue: AsyncQueue()
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)
com.google.protobuf.SchemaUtil: void writeSFixed32List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.android.gms.common.api.internal.zaae: void zab(com.google.android.gms.common.ConnectionResult,int)
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object get(int)
com.google.protobuf.CodedInputStreamReader: void readMap(java.util.Map,com.google.protobuf.MapEntryLite$Metadata,com.google.protobuf.ExtensionRegistryLite)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$CompositeFilter getCompositeFilter()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.grpc.LoadBalancerProvider: java.lang.String toString()
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
io.flutter.plugins.googlemaps.GoogleMapController: void onMapClick(com.google.android.gms.maps.model.LatLng)
io.grpc.internal.DelayedClientTransport: io.grpc.SynchronizationContext access$900(io.grpc.internal.DelayedClientTransport)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.MessageDeframer$SingleMessageProducer: MessageDeframer$SingleMessageProducer(java.io.InputStream)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType forNumber(int)
com.google.android.gms.maps.model.CameraPosition: java.lang.String toString()
kotlinx.coroutines.internal.ArrayQueue: ArrayQueue()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: AutoBatchedLogRequestEncoder$LogEventEncoder()
com.google.firebase.encoders.FieldDescriptor: FieldDescriptor(java.lang.String,java.util.Map)
com.google.protobuf.RawMessageInfo: java.lang.Object[] getObjects()
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.ViewChange applyOnlineStateChange(com.google.firebase.firestore.core.OnlineState)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.MutableDocument decodeMaybeDocument(com.google.firebase.firestore.proto.MaybeDocument)
com.google.android.gms.internal.firebase-auth-api.zztx: com.google.android.gms.internal.firebase-auth-api.zzwz zza(com.google.android.gms.internal.firebase-auth-api.zztx)
com.google.android.gms.common.internal.zzn: java.lang.String toString()
com.google.firebase.firestore.local.SQLiteMutationQueue: void performConsistencyCheck()
androidx.fragment.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.android.gms.common.internal.TelemetryLogging: com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readHeader(android.os.Parcel)
com.google.protobuf.IntArrayList: boolean addAll(java.util.Collection)
io.grpc.internal.AbstractClientStream$TransportState: void inboundDataReceived(io.grpc.internal.ReadableBuffer)
com.google.firebase.firestore.core.ViewChange: java.util.List getLimboChanges()
com.tekartik.sqflite.operation.BatchOperation: java.lang.Object getArgument(java.lang.String)
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString access$500(com.google.protobuf.RopeByteString)
io.grpc.internal.ForwardingManagedChannel: void enterIdle()
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: DoubleCheck(javax.inject.Provider)
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()
com.google.android.gms.common.zzi: boolean equals(java.lang.Object)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
com.google.firebase.auth.FirebaseAuth: void removeAuthStateListener(com.google.firebase.auth.FirebaseAuth$AuthStateListener)
com.google.android.datatransport.runtime.TransportRuntime_Factory: java.lang.Object get()
com.google.protobuf.ByteString$BoundedByteString: void copyToInternal(byte[],int,int,int)
io.grpc.android.AndroidChannelBuilder: java.lang.Class findOkHttp()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState valueOf(java.lang.String)
com.google.protobuf.CodedInputStream$StreamDecoder: int readEnum()
com.google.protobuf.CodedOutputStream: void writeSInt32NoTag(int)
io.grpc.internal.RetriableStream: void commitAndRun(io.grpc.internal.RetriableStream$Substream)
io.grpc.InternalChannelz: void remove(java.util.Map,io.grpc.InternalInstrumented)
com.google.firebase.firestore.proto.Target: void access$900(com.google.firebase.firestore.proto.Target,long)
com.google.firestore.v1.WriteResult: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvm: java.lang.String zza()
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
com.squareup.okhttp.HttpUrl: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object getPollResult()
io.grpc.internal.ForwardingClientStream: void setMaxInboundMessageSize(int)
com.google.firestore.v1.Value: void setStringValue(java.lang.String)
com.google.firebase.firestore.local.MemoryPersistence: void runTransaction(java.lang.String,java.lang.Runnable)
com.google.firebase.firestore.remote.WatchChangeAggregator: com.google.firebase.firestore.remote.TargetState ensureTargetState(int)
com.google.protobuf.Internal: int hashLong(long)
io.grpc.internal.InternalSubchannel$TransportListener: InternalSubchannel$TransportListener(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,java.net.SocketAddress)
com.tekartik.sqflite.SqflitePlugin$BgResult: void success(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.Encoding: Encoding(java.lang.String)
com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: InvalidProtocolBufferException$InvalidWireTypeException(java.lang.String)
com.google.firestore.v1.StructuredQuery$Filter$Builder: com.google.firestore.v1.StructuredQuery$Filter$Builder setFieldFilter(com.google.firestore.v1.StructuredQuery$FieldFilter$Builder)
com.google.type.LatLng$Builder: LatLng$Builder()
com.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
kotlin.collections.EmptyMap: java.util.Set getEntries()
com.google.firebase.firestore.remote.OnlineStateTracker: void handleWatchStreamFailure(io.grpc.Status)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void dispose()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.math.BigInteger zzc(java.math.BigInteger,boolean,java.security.spec.EllipticCurve)
com.google.android.gms.maps.model.Circle: void setCenter(com.google.android.gms.maps.model.LatLng)
com.google.firebase.firestore.util.Util: int compareByteStrings(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmj: zzmj(com.google.android.gms.internal.firebase-auth-api.zzmi)
com.google.android.gms.safetynet.SafeBrowsingData: android.os.ParcelFileDescriptor getFileDescriptor()
com.google.protobuf.GeneratedMessageInfoFactory: com.google.protobuf.GeneratedMessageInfoFactory getInstance()
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzC(int,long)
com.google.firestore.v1.BatchGetDocumentsRequest: void access$200(com.google.firestore.v1.BatchGetDocumentsRequest,java.lang.String)
io.flutter.plugins.googlemaps.MarkerController: void setInfoWindowAnchor(float,float)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: AutoConfiguredLoadBalancerFactory(io.grpc.LoadBalancerRegistry,java.lang.String)
com.google.firebase.firestore.model.MutableDocument: boolean isFoundDocument()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readSInt64()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
io.grpc.util.RoundRobinLoadBalancer: void shutdownSubchannel(io.grpc.LoadBalancer$Subchannel)
com.google.android.gms.common.api.internal.zact: void zab(com.google.android.gms.signin.internal.zak)
com.google.android.gms.maps.internal.zzl: void onSaveInstanceState(android.os.Bundle)
com.google.protobuf.UnmodifiableLazyStringList: java.lang.Object get(int)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzj(java.lang.Object,long,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
io.grpc.okhttp.OkHttpFrameLogger: void logRstStream(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,io.grpc.okhttp.internal.framed.ErrorCode)
com.google.firebase.firestore.model.FieldIndex$Segment: int compareTo(java.lang.Object)
androidx.fragment.app.Fragment: void onDestroy()
com.google.protobuf.Internal: int hashCode(byte[],int,int)
com.google.firestore.v1.ListenRequest: void setRemoveTarget(int)
com.google.android.gms.maps.model.CircleOptions: java.util.List getStrokePattern()
com.google.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeArrayOperations()
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zzis zza(com.google.android.gms.internal.firebase-auth-api.zziz)
com.google.firebase.firestore.local.EncodedPath: com.google.firebase.firestore.model.ResourcePath decodeResourcePath(java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform: void setRemoveAllFromArray(com.google.firestore.v1.ArrayValue)
com.google.android.gms.internal.firebase-auth-api.zziw: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.util.List getLogEvents()
io.flutter.plugins.urllauncher.UrlLauncher: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus launch(java.lang.String,android.os.Bundle,boolean,boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzuc: zzuc(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.model.ResourcePath: com.google.firebase.firestore.model.ResourcePath fromSegments(java.util.List)
com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzik: int zza()
androidx.fragment.app.DialogFragment: void onDestroyView()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readTag()
com.google.android.gms.tasks.zzf: void zzd(com.google.android.gms.tasks.Task)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: void run()
com.google.firebase.firestore.local.MemoryMutationQueue: void start()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
com.google.android.datatransport.cct.CCTDestination: java.lang.String getEndPoint()
com.google.android.gms.internal.firebase-auth-api.zznz: com.google.android.gms.internal.firebase-auth-api.zznz zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.bundle.BundleSerializer: BundleSerializer(com.google.firebase.firestore.remote.RemoteSerializer)
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String)
io.grpc.internal.MessageFramer: int writeToOutputStream(java.io.InputStream,java.io.OutputStream)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder usePlaintext()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.google.android.gms.maps.MapView: void onCreate(android.os.Bundle)
com.google.android.gms.maps.model.zzf: zzf()
com.google.android.gms.internal.firebase-auth-api.zzaaj: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zztt: void zza(java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: int access$2412(io.grpc.okhttp.OkHttpClientTransport,int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setIosClientId(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzqk: java.lang.String zza()
io.grpc.internal.GzipInflatingBuffer: boolean isStalled()
com.google.firebase.auth.zzc: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.MemoryTargetCache: void updateTargetData(com.google.firebase.firestore.local.TargetData)
io.grpc.SecurityLevel: io.grpc.SecurityLevel valueOf(java.lang.String)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
com.google.firebase.firestore.Query: com.google.android.gms.tasks.Task getViaSnapshotListener(com.google.firebase.firestore.Source)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: boolean isEnabled()
okio.Buffer: int read(byte[],int,int)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] values()
com.google.android.gms.internal.firebase-auth-api.zzxn: com.google.android.gms.common.logging.Logger zza()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: SQLitePersistence$OpenHelper(android.content.Context,com.google.firebase.firestore.local.LocalSerializer,java.lang.String,int)
com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: InstanceFactory(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzva: void zzb()
com.google.firebase.firestore.remote.AbstractStream: void inhibitBackoff()
com.google.firebase.Timestamp$1: java.lang.Object[] newArray(int)
com.google.android.gms.maps.UiSettings: void setZoomControlsEnabled(boolean)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.android.gms.common.api.internal.zap: void zaa(com.google.android.gms.common.ConnectionResult,int)
com.google.firebase.auth.internal.zzbd: void zzf(android.content.SharedPreferences)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: boolean equals(java.lang.Object)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.internal.IProjectionDelegate getProjection()
androidx.collection.ArrayMap: void putAll(java.util.Map)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task documentSet(java.util.Map)
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdownNow(io.grpc.Status)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
com.google.android.gms.maps.GoogleMapOptions: java.lang.Integer getBackgroundColor()
io.grpc.internal.ClientCallImpl$DeadlineTimer: void run()
androidx.versionedparcelable.VersionedParcel: boolean isStream()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Document encodeDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.ObjectValue)
com.google.firebase.firestore.model.Values: boolean isMaxValue(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zzb(byte[],byte[])
com.google.firebase.auth.internal.zzw: void forceRecaptchaFlowForTesting(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void dispose(java.lang.Long)
com.google.firebase.firestore.util.AsyncQueue: com.google.firebase.firestore.util.AsyncQueue$DelayedTask createAndScheduleDelayedTask(com.google.firebase.firestore.util.AsyncQueue$TimerId,long,java.lang.Runnable)
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.model.ResourcePath getPath()
com.google.protobuf.CodedInputStream$StreamDecoder: long readInt64()
com.google.firebase.auth.internal.zzp: java.lang.String getUsername()
io.grpc.internal.InternalSubchannel: java.util.concurrent.ScheduledExecutorService access$1400(io.grpc.internal.InternalSubchannel)
com.google.android.gms.maps.internal.zzg: void setOnCameraIdleListener(com.google.android.gms.maps.internal.zzp)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
com.google.protobuf.FieldSet: void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzlh: zzlh(com.google.android.gms.internal.firebase-auth-api.zzlg)
com.google.android.gms.common.api.internal.zabx: zabx(com.google.android.gms.common.api.internal.zabw)
com.google.firebase.firestore.remote.TargetState: void addDocumentChange(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.core.DocumentViewChange$Type)
com.google.firebase.firestore.model.BasePath: com.google.firebase.firestore.model.BasePath popFirst(int)
androidx.fragment.app.Fragment: boolean isPostponed()
com.google.android.gms.location.zzah: java.lang.Object[] newArray(int)
com.google.android.gms.location.zzag: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder setEndAt(com.google.firestore.v1.Cursor$Builder)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3802(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzadc zzm()
com.google.firebase.messaging.FirebaseMessaging: com.google.android.datatransport.TransportFactory getTransportFactory()
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object getMaxKey()
com.google.android.gms.internal.firebase-auth-api.zzsa: java.lang.String zzc()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
com.google.android.gms.dynamic.zaa: void onDelegateCreated(com.google.android.gms.dynamic.LifecycleDelegate)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
com.google.android.gms.internal.firebase-auth-api.zzaem: void zzd(java.lang.Object,long,byte)
com.google.android.gms.common.api.internal.BackgroundDetector: void onLowMemory()
com.google.android.gms.internal.firebase-auth-api.zzacw: com.google.android.gms.internal.firebase-auth-api.zzacw zza()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setAndroidClientId(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmv: zzmv(com.google.android.gms.internal.firebase-auth-api.zzmt)
com.google.protobuf.RopeByteString$PieceIterator: com.google.protobuf.ByteString$LeafByteString next()
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
com.google.android.gms.internal.firebase-auth-api.zzabh: void zzg(int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.grpc.okhttp.internal.ConnectionSpec: boolean equals(java.lang.Object)
com.google.common.collect.RegularImmutableMap$EntrySet: int size()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder()
com.google.protobuf.FieldSet: boolean isEmpty()
com.google.android.gms.common.api.internal.zaf: zaf(com.google.android.gms.common.api.internal.zaci,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.dynamite.zzj: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.android.gms.location.zzaa: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void removeMutationReference(com.google.firebase.firestore.model.DocumentKey)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.google.protobuf.CodedInputStream$StreamDecoder: void popLimit(int)
com.google.protobuf.ProtobufArrayList: java.lang.Object set(int,java.lang.Object)
com.google.firestore.v1.Value: double getDoubleValue()
kotlin.ranges.IntRange: IntRange(int,int)
com.google.protobuf.CodedInputStream$ArrayDecoder: long readFixed64()
com.lyokone.location.MethodCallHandlerImpl: void onChangeSettings(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean access$500(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.remote.RemoteStore$1: RemoteStore$1(com.google.firebase.firestore.remote.RemoteStore)
com.google.android.gms.internal.firebase-auth-api.zzme: zzme()
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzma: zzma()
com.google.android.gms.common.api.internal.zact: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
com.google.firebase.auth.internal.zzbc: zzbc()
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
com.google.rpc.Status: Status()
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream,long)
com.google.firebase.messaging.RemoteMessageCreator: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.android.gms.internal.firebase-auth-api.zzxr: java.lang.String zzd(java.lang.String)
com.google.protobuf.SmallSortedMap: boolean containsKey(java.lang.Object)
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder setAppendMissingElements(com.google.firestore.v1.ArrayValue$Builder)
androidx.collection.ArraySet: ArraySet()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
com.tekartik.sqflite.SqflitePlugin: com.tekartik.sqflite.SqlCommand getSqlCommand(io.flutter.plugin.common.MethodCall)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zze(com.google.android.gms.internal.firebase-auth-api.zzpy,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode fromHttp2(int)
com.google.android.gms.internal.firebase-auth-api.zzrv: zzrv()
io.grpc.internal.DelayedStream: void request(int)
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzj()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: boolean isAvailable(io.grpc.NameResolverProvider)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setData(java.util.Map)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: com.google.android.gms.tasks.Task access$500(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor,java.util.concurrent.Callable)
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: RestrictedComponentContainer$RestrictedPublisher(java.util.Set,com.google.firebase.events.Publisher)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzC(com.google.firebase.FirebaseApp,com.google.firebase.auth.PhoneAuthCredential,java.lang.String,com.google.firebase.auth.internal.zzg)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzp(int,java.util.List,boolean)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase forNumber(int)
com.google.firebase.installations.local.PersistedInstallation: PersistedInstallation(com.google.firebase.FirebaseApp)
androidx.webkit.internal.WebResourceErrorImpl: WebResourceErrorImpl(java.lang.reflect.InvocationHandler)
com.google.android.gms.tasks.zzw: void zzb(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: com.google.firebase.messaging.RemoteMessage getRemoteMessageForArguments(java.util.Map)
com.google.protobuf.MessageSchema: int parseProto2Message(java.lang.Object,byte[],int,int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzck: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.android.gms.internal.maps.zzk: com.google.android.gms.internal.maps.zzl zzb(android.os.IBinder)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
com.google.android.gms.internal.firebase-auth-api.zzvo: void zzb()
com.google.protobuf.SchemaUtil: java.lang.Object filterUnknownEnumList(int,java.util.List,com.google.protobuf.Internal$EnumLiteMap,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
io.grpc.internal.AtomicBackoff$State: AtomicBackoff$State(io.grpc.internal.AtomicBackoff,long,io.grpc.internal.AtomicBackoff$1)
com.google.android.gms.internal.firebase-auth-api.zzaaj: boolean equals(java.lang.Object)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.String propertyName(java.lang.reflect.Field)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void updateContext(android.content.Context)
com.google.android.gms.internal.cloudmessaging.zza: android.app.PendingIntent zza(android.content.Context,int,android.content.Intent,int)
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroupBySchemaWithCheck(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.internal.firebase-auth-api.zzal: java.util.Iterator iterator()
com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder builder()
com.google.protobuf.CodedOutputStreamWriter: void writeFixed64(int,long)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index parseFrom(byte[])
com.google.android.gms.internal.firebase-auth-api.zzxi: zzxi(com.google.android.gms.internal.firebase-auth-api.zzxn,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzade: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.StringBuilder,int)
io.grpc.internal.DelayedClientCall$DelayedListener: void drainPendingCallbacks()
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress valueOf(java.lang.String)
com.google.type.LatLng: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firestore.v1.Write: Write()
com.google.protobuf.BooleanArrayList: int indexOf(java.lang.Object)
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: java.util.Set access$300(com.google.firebase.firestore.local.LocalStore$DocumentChangeResult)
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
io.grpc.internal.DelayedClientTransport: boolean hasPendingStreams()
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedSet insert(java.lang.Object)
io.grpc.internal.ChannelLoggerImpl: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.ClientCall delegate()
io.grpc.InternalChannelz: void removeClientSocket(io.grpc.InternalInstrumented)
io.grpc.okhttp.OkHttpClientTransport$4$1: void close()
com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8(byte[],int,int)
io.grpc.LoadBalancer$Helper: io.grpc.SynchronizationContext getSynchronizationContext()
com.google.android.gms.internal.firebase-auth-api.zzjt: com.google.android.gms.internal.firebase-auth-api.zzjt zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
okio.Buffer: okio.ByteString readByteString()
com.google.firestore.v1.MapValue$Builder: boolean containsFields(java.lang.String)
kotlinx.coroutines.EventLoopImplBase: void resetAll()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.grpc.internal.ForwardingConnectionClientTransport: void shutdownNow(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzel: java.lang.Class zzb()
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder addOrderBy(com.google.firestore.v1.StructuredQuery$Order)
androidx.fragment.app.Fragment: void onDetach()
com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawVarintSlowPath()
com.google.android.gms.internal.firebase-auth-api.zzmk: void zzf(com.google.android.gms.internal.firebase-auth-api.zzmk,java.lang.String)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
com.google.android.gms.common.internal.zzg: zzg(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder()
io.grpc.internal.Http2Ping$1: void run()
com.google.common.base.CharMatcher$NamedFastMatcher: CharMatcher$NamedFastMatcher(java.lang.String)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: byte[] getExtras()
com.google.firebase.auth.internal.zzt: zzt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.remote.RemoteStore createRemoteStore(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)
io.grpc.ForwardingClientCall: void sendMessage(java.lang.Object)
com.google.android.gms.common.api.internal.ApiKey: ApiKey(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] values()
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.firestore.bundle.BundleSerializer: java.util.List decodeWhere(org.json.JSONObject)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: FlutterFirebaseFirestoreTransactionResult()
io.grpc.internal.DelayedClientTransport: io.grpc.internal.ManagedClientTransport$Listener access$100(io.grpc.internal.DelayedClientTransport)
okio.Timeout: void throwIfReached()
com.google.protobuf.UnsafeUtil: byte getByte(long)
com.google.firebase.firestore.core.SyncEngine$LimboResolution: com.google.firebase.firestore.model.DocumentKey access$100(com.google.firebase.firestore.core.SyncEngine$LimboResolution)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task reauthenticateUserWithCredential(java.util.Map)
com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientPackageName()
com.google.android.datatransport.runtime.backends.CreationContext: com.google.android.datatransport.runtime.backends.CreationContext create(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.String)
com.google.protobuf.LazyField$LazyEntry: LazyField$LazyEntry(java.util.Map$Entry,com.google.protobuf.LazyField$1)
com.google.firebase.messaging.SharedPreferencesQueue: void initQueue()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics,com.google.firebase.encoders.ObjectEncoderContext)
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
com.google.android.gms.location.zzj: boolean equals(java.lang.Object)
com.google.android.gms.internal.auth-api-phone.zzz: void zza(com.google.android.gms.common.api.Status)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationEnd(android.view.animation.Animation)
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap emptyMap(java.util.Comparator)
com.google.firebase.firestore.model.ObjectValue: boolean equals(java.lang.Object)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.google.android.gms.common.api.internal.GoogleApiManager: boolean handleMessage(android.os.Message)
com.google.android.gms.common.internal.zzai: java.lang.Object[] newArray(int)
com.google.protobuf.GeneratedMessageLite: boolean isInitialized(com.google.protobuf.GeneratedMessageLite,boolean)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.Internal$ProtobufList mutableCopy(com.google.protobuf.Internal$ProtobufList)
com.google.firestore.v1.WriteRequest$Builder: com.google.firestore.v1.WriteRequest$Builder setStreamToken(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzabh: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setLooper(android.os.Looper)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query orderBy(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.Query$Direction)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.auth.internal.zzbb: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
com.google.firebase.firestore.core.TransactionRunner: com.google.android.gms.tasks.Task run()
io.grpc.internal.AbstractClientStream$GetFramer: void flush()
io.grpc.StreamTracer: void streamClosed(io.grpc.Status)
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: java.util.Map getOverlays(java.util.SortedSet)
com.google.android.gms.internal.firebase-auth-api.zzyl: zzyl(java.util.List)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
io.grpc.okhttp.OkHttpFrameLogger: void logSettingsAck(io.grpc.okhttp.OkHttpFrameLogger$Direction)
com.google.android.gms.internal.firebase-auth-api.zzaeg: com.google.android.gms.internal.firebase-auth-api.zzaeg zzc()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.common.collect.ImmutableMap$Builder: ImmutableMap$Builder(int)
com.google.android.gms.internal.firebase-auth-api.zzzu: long zzb()
io.grpc.internal.GzipInflatingBuffer: boolean processHeaderExtraLen()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
com.google.protobuf.BooleanArrayList: java.lang.Boolean set(int,java.lang.Boolean)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object getMaxKey()
com.google.firebase.messaging.threads.PoolableExecutors$DefaultExecutorFactory: PoolableExecutors$DefaultExecutorFactory(com.google.firebase.messaging.threads.PoolableExecutors$1)
com.google.protobuf.ManifestSchemaFactory$1: com.google.protobuf.MessageInfo messageInfoFor(java.lang.Class)
androidx.localbroadcastmanager.content.LocalBroadcastManager: LocalBroadcastManager(android.content.Context)
com.google.protobuf.FloatArrayList: boolean addAll(java.util.Collection)
com.google.android.gms.maps.model.Marker: Marker(com.google.android.gms.internal.maps.zzx)
io.flutter.plugins.googlemaps.MarkerBuilder: void setFlat(boolean)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)
com.google.android.gms.internal.firebase-auth-api.zzsq: void zza(java.lang.String)
com.google.protobuf.LazyField$LazyEntry: java.lang.Object getKey()
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean readBool()
com.google.firestore.v1.Value: com.google.firestore.v1.ArrayValue getArrayValue()
com.google.protobuf.LongArrayList: java.lang.Object set(int,java.lang.Object)
com.google.protobuf.MapFieldLite: void clear()
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
com.google.firebase.auth.internal.zzi: java.lang.String zzd()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivity()
com.google.firebase.firestore.proto.NoDocument$Builder: com.google.firebase.firestore.proto.NoDocument$Builder setReadTime(com.google.protobuf.Timestamp)
io.grpc.NameResolver$1: NameResolver$1(io.grpc.NameResolver,io.grpc.NameResolver$Listener)
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange getDefaultInstance()
com.google.android.gms.maps.model.zzm: zzm()
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.mutation.Mutation calculateOverlayMutation(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.google.android.gms.internal.firebase-auth-api.zzpo: int hashCode()
com.google.firebase.firestore.local.SQLiteIndexManager: SQLiteIndexManager(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer,com.google.firebase.firestore.auth.User)
com.google.protobuf.ByteString: com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgb: java.lang.Object zzl(com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.Class)
io.flutter.plugins.googlemaps.GoogleMapController: boolean access$002(io.flutter.plugins.googlemaps.GoogleMapController,boolean)
com.google.android.gms.internal.firebase-auth-api.zzfd: com.google.android.gms.internal.firebase-auth-api.zzadc zzg(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.FieldSet: boolean isValidType(com.google.protobuf.WireFormat$FieldType,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.grpc.internal.ManagedChannelImplBuilder: java.util.List getEffectiveInterceptors()
com.google.android.gms.common.internal.zzr: zzr(android.content.Context,android.os.Looper)
com.google.firebase.firestore.remote.WriteStream: void writeMutations(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzla: void zzm(com.google.android.gms.internal.firebase-auth-api.zzla,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.UserDataWriter: java.lang.Object convertReference(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzmh: int zza()
com.lyokone.location.FlutterLocationService: android.os.IBinder onBind(android.content.Intent)
io.grpc.StatusException: StatusException(io.grpc.Status,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzaaf: void clear()
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp getCommitTime()
com.google.android.gms.internal.firebase-auth-api.zzqz: java.lang.Object[] newArray(int)
com.google.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()
com.google.protobuf.IntArrayList: int setInt(int,int)
io.grpc.okhttp.internal.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions draggable(boolean)
io.grpc.internal.Http2ClientStreamTransportState: io.grpc.Status validateInitialMetadata(io.grpc.Metadata)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Void)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.model.SnapshotVersion getLastRemoteSnapshotVersion()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getMax()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
com.google.firebase.firestore.core.SyncEngine: void failOutstandingPendingWritesAwaitingTasks()
com.google.android.gms.common.api.Status: int getStatusCode()
com.google.android.gms.internal.firebase-auth-api.zzaaj: void zzg(int)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzb(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzo()
com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)
com.google.android.gms.internal.firebase-auth-api.zzis: zzis(com.google.android.gms.internal.firebase-auth-api.zzir)
com.google.android.gms.internal.firebase-auth-api.zziw: int zza()
com.google.firebase.messaging.NotificationParams: int[] getLightSettings()
io.grpc.internal.SerializeReentrantCallsDirectExecutor: void execute(java.lang.Runnable)
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.InternalSubchannel)
com.google.firebase.FirebaseOptions: java.lang.String toString()
com.google.firebase.messaging.RemoteMessage: int getMessagePriority(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmu: java.util.List zze()
com.google.firebase.firestore.bundle.BundleMetadata: int getTotalDocuments()
com.google.firebase.firestore.core.UserData$ParseContext: void addToFieldMask(com.google.firebase.firestore.model.FieldPath)
com.google.protobuf.Int32Value: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.google.android.gms.common.internal.zzu: java.lang.String zzb()
com.lyokone.location.BackgroundNotification: android.app.PendingIntent buildBringToFrontIntent()
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
io.grpc.internal.InternalSubchannel: void cancelReconnectTask()
com.lyokone.location.FlutterLocationService: void onDestroy()
com.google.firestore.v1.ListenRequest: void access$500(com.google.firestore.v1.ListenRequest,com.google.firestore.v1.Target)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.FragmentManagerImpl$1: void handleOnBackPressed()
io.flutter.plugins.packageinfo.PackageInfoPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzC(com.google.android.gms.internal.firebase-auth-api.zzru,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmk zzb()
com.google.protobuf.FloatArrayList: java.lang.Float remove(int)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
androidx.window.embedding.SplitRule: int hashCode()
com.google.firebase.firestore.core.SyncEngine: void setCallback(com.google.firebase.firestore.core.SyncEngine$SyncEngineCallback)
io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator access$500(io.grpc.internal.MessageFramer)
io.grpc.internal.FailingClientStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
io.grpc.internal.DelayedStream$DelayedStreamListener: void onReady()
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String,com.google.android.gms.dynamite.zzp)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.RemoteCall zaa(com.google.android.gms.common.api.internal.TaskApiCall$Builder)
com.google.android.gms.common.api.Status: Status(int,int,java.lang.String,android.app.PendingIntent)
com.google.android.gms.internal.firebase-auth-api.zzbd: com.google.android.gms.internal.firebase-auth-api.zzax zzc(java.lang.String)
com.google.firestore.v1.DocumentTransform$Builder: DocumentTransform$Builder()
io.grpc.okhttp.internal.Platform$3: java.lang.Object run()
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzh(com.google.android.gms.internal.firebase-auth-api.zzadc)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.common.internal.zaf: void zaa()
com.google.android.gms.internal.firebase-auth-api.zzni: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zaa()
com.google.firebase.auth.zzc: zzc()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.firebase.auth.internal.zzap: zzap(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzqv: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.grpc.internal.CompositeReadableBuffer: void advanceBuffer()
com.google.android.gms.internal.firebase-auth-api.zztm: zztm(com.google.android.gms.internal.firebase-auth-api.zztn,com.google.android.gms.internal.firebase-auth-api.zzwy)
io.grpc.CallCredentials: CallCredentials()
kotlin.KotlinVersion: boolean equals(java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadl: java.lang.Object get(int)
com.google.android.gms.internal.firebase-auth-api.zzdf: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.tekartik.sqflite.Database: void close()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
io.grpc.internal.MessageFramer$BufferChainOutputStream: void write(byte[],int,int)
com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[],int,int)
com.google.android.gms.maps.model.Marker: void setDraggable(boolean)
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwt zzg(com.google.firebase.auth.FirebaseUser)
io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegate()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: void start(long)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzz(com.google.android.gms.internal.firebase-auth-api.zzro,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.grpc.okhttp.OkHttpClientTransport: int access$2500(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzct: java.lang.String zzc()
com.google.firebase.messaging.FirebaseMessaging: void enqueueTaskWithDelaySeconds(java.lang.Runnable,long)
com.google.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruGarbageCollector$Results collect(android.util.SparseArray)
io.flutter.plugins.webviewflutter.InputAwareWebView: void setInputConnectionTarget(android.view.View)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$1: void onComplete()
com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)
io.grpc.internal.Http2ClientStreamTransportState$1: Http2ClientStreamTransportState$1()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore getInstance()
com.google.protobuf.MessageSetSchema: boolean isInitialized(java.lang.Object)
io.grpc.okhttp.internal.framed.Http2$Reader: void readSettings(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
io.grpc.internal.MessageDeframer: void setFullStreamDecompressor(io.grpc.internal.GzipInflatingBuffer)
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.FirestoreChannel initializeChannel(com.google.firebase.firestore.core.DatabaseInfo,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider,android.content.Context,com.google.firebase.firestore.remote.GrpcMetadataProvider)
com.google.protobuf.FieldType$Collection: boolean isList()
com.google.firebase.firestore.remote.FirestoreChannel$4: void onClose(io.grpc.Status,io.grpc.Metadata)
io.grpc.Metadata$LazyValue: java.lang.Object toObject(io.grpc.Metadata$Key)
com.google.protobuf.UninitializedMessageException: UninitializedMessageException(com.google.protobuf.MessageLite)
com.google.firebase.firestore.proto.Target: void clearLastLimboFreeSnapshotVersion()
com.google.android.gms.internal.firebase-auth-api.zzuh: zzuh(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzjr: int zza()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
io.grpc.InternalChannelz$ChannelTrace$Event: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLiteBundleCache: com.google.firebase.firestore.bundle.BundleMetadata getBundleMetadata(java.lang.String)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getComposerId(android.os.Bundle)
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzkz zzb(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
io.grpc.okhttp.OkHttpClientStream: io.grpc.MethodDescriptor$MethodType getType()
com.google.common.collect.ImmutableMap: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzuv: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzadl: java.lang.Object set(int,java.lang.Object)
io.flutter.plugins.googlemaps.MarkersController: void changeMarkers(java.util.List)
com.google.android.gms.maps.internal.zzg: void setOnCameraMoveStartedListener(com.google.android.gms.maps.internal.zzv)
com.google.firebase.auth.internal.zzax: void zzc(com.google.firebase.auth.internal.zzax,android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseUser,android.content.Context)
kotlinx.coroutines.channels.ConflatedChannel: kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzno: java.lang.String zze()
com.google.android.gms.internal.firebase-auth-api.zzsx: void zza(java.lang.String)
com.google.firebase.firestore.model.FieldPath: boolean isValidIdentifier(java.lang.String)
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zac(com.google.android.gms.dynamic.DeferredLifecycleHelper,com.google.android.gms.dynamic.LifecycleDelegate)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Target$DocumentsTarget encodeDocumentsTarget(com.google.firebase.firestore.core.Target)
com.google.android.gms.internal.firebase-auth-api.zznn: zznn(com.google.android.gms.internal.firebase-auth-api.zznm)
com.google.android.gms.internal.firebase-auth-api.zzhm: zzhm(com.google.android.gms.internal.firebase-auth-api.zzhn,java.lang.Class)
io.grpc.internal.AbstractStream$TransportState: void onSendingBytes(int)
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl: void deleteAllData(java.lang.Long)
com.google.gson.stream.JsonReader: java.lang.String nextName()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzaby: java.lang.String zzg(int)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.firebase.firestore.local.DocumentReference: com.google.firebase.firestore.model.DocumentKey getKey()
kotlinx.coroutines.channels.Receive: java.lang.Object getOfferResult()
com.google.firebase.firestore.remote.RemoteStore: boolean canUseNetwork()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmg zza(com.google.android.gms.internal.firebase-auth-api.zzmb)
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.firestore.model.SnapshotVersion getLastRemoteSnapshotVersion()
com.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate getDelegate()
com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.protobuf.CodedOutputStreamWriter: void writeSInt32(int,int)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerImpl: void release()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTitleLocalizationKey()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
com.google.firebase.firestore.bundle.BundledQuery: com.google.firebase.firestore.core.Target getTarget()
io.flutter.plugins.googlemaps.PolygonBuilder: void setStrokeColor(int)
com.google.firebase.firestore.core.SyncEngine: boolean errorIsInteresting(io.grpc.Status)
io.grpc.internal.ForwardingNameResolver: ForwardingNameResolver(io.grpc.NameResolver)
com.google.protobuf.MapEntryLite: int computeMessageSize(int,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentController: boolean execPendingActions()
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
com.google.common.base.Preconditions: void checkArgument(boolean)
io.grpc.NameResolver$1: void onResult(io.grpc.NameResolver$ResolutionResult)
io.grpc.internal.InternalSubchannel$CallTracingTransport$1: io.grpc.internal.ClientStream delegate()
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(android.os.RemoteException)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzv(com.google.firebase.FirebaseApp,java.lang.String,com.google.firebase.auth.ActionCodeSettings,java.lang.String)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
com.google.firestore.v1.TargetChange: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.location.zzaj: java.lang.String toString()
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
io.grpc.okhttp.OkHttpReadableBuffer: void fakeEofExceptionMethod()
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.firebase.messaging.ProxyNotificationPreferences: boolean isProxyNotificationInitialized(android.content.Context)
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: DefaultHeartBeatController(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor,com.google.firebase.inject.Provider,android.content.Context)
com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex: java.util.List getEntries(java.lang.String)
io.grpc.ConnectivityStateInfo: ConnectivityStateInfo(io.grpc.ConnectivityState,io.grpc.Status)
com.google.android.datatransport.runtime.backends.CreationContextFactory: CreationContextFactory(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)
io.flutter.plugins.firebase.firestore.streamhandler.LoadBundleStreamHandler: LoadBundleStreamHandler()
io.grpc.Context$CancellableContext: void access$400(io.grpc.Context$CancellableContext,io.grpc.Context$CancellationListener,io.grpc.Context)
com.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()
com.google.firebase.Timestamp: void validateRange(long,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzse: java.lang.String zzb()
io.grpc.Context$CancellableContext: void access$300(io.grpc.Context$CancellableContext,io.grpc.Context$ExecutableListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzabl: zzabl()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: void success(java.lang.Object)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: int read()
androidx.fragment.app.FragmentManagerImpl: java.util.List getFragments()
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setMediaPlaybackRequiresUserGesture(java.lang.Long,java.lang.Boolean)
com.google.firestore.v1.Value: void access$2800(com.google.firestore.v1.Value,com.google.firestore.v1.MapValue)
com.google.android.gms.cloudmessaging.zzv: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firebase.firestore.proto.WriteBatch$Builder: WriteBatch$Builder(com.google.firebase.firestore.proto.WriteBatch$1)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.Timestamp decodeTimestamp(java.lang.Object)
com.google.protobuf.FieldSet: int getMessageSetSerializedSize()
io.grpc.okhttp.internal.Protocol: Protocol(java.lang.String,int,java.lang.String)
io.flutter.plugins.googlemaps.PolygonBuilder: boolean consumeTapEvents()
com.google.android.gms.maps.model.Cap: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.BooleanArrayList: boolean add(java.lang.Boolean)
com.google.android.gms.internal.maps.zzv: void zzt(float,float)
com.squareup.okhttp.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)
com.google.firebase.auth.internal.zzau: void onSuccess(java.lang.Object)
androidx.webkit.SafeBrowsingResponseCompat: SafeBrowsingResponseCompat()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: ListenResponse$ResponseTypeCase(java.lang.String,int,int)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest$Builder setEvents(java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zzre: zzre(com.google.android.gms.internal.firebase-auth-api.zzzq)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions tileProvider(com.google.android.gms.maps.model.TileProvider)
com.google.android.gms.common.zze: zze(byte[])
com.google.protobuf.ProtobufArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1(java.lang.reflect.Constructor)
com.google.firebase.firestore.remote.TargetState: boolean hasChanges()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
androidx.webkit.internal.WebViewFeatureInternal: WebViewFeatureInternal(java.lang.String,int,java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.google.android.gms.common.zzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzvb: java.lang.String zza()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void initialize()
com.google.android.gms.maps.model.Polygon: void setClickable(boolean)
com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class)
com.google.android.datatransport.runtime.dagger.internal.Preconditions: void checkBuilderRequirement(java.lang.Object,java.lang.Class)
com.google.firebase.auth.internal.zzbl: void zzc(android.content.Intent,com.google.android.gms.common.api.Status)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task createUserWithEmailAndPassword(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.util.Map toMap()
com.google.android.gms.common.internal.BaseGmsClient: boolean isConnecting()
com.google.firebase.firestore.model.mutation.MutationBatch: int hashCode()
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder setStartMs(long)
com.google.android.gms.dynamite.zzd: java.lang.Object initialValue()
com.google.firebase.firestore.TransactionOptions: boolean equals(java.lang.Object)
com.tekartik.sqflite.operation.ExecuteOperation: java.lang.Object getArgument(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
io.grpc.DecompressorRegistry: DecompressorRegistry(io.grpc.Decompressor,boolean,io.grpc.DecompressorRegistry)
com.google.firebase.firestore.core.QueryView: com.google.firebase.firestore.core.View getView()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean add(java.lang.Object)
com.google.firebase.firestore.util.Util: int compareBooleans(boolean,boolean)
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)
com.google.android.gms.internal.common.zza: android.os.IBinder asBinder()
com.google.android.gms.internal.location.zza: android.os.IBinder asBinder()
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: void onDisplayAdded(int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.google.protobuf.ExtensionSchemas: com.google.protobuf.ExtensionSchema full()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.mutation.Precondition decodePrecondition(com.google.firestore.v1.Precondition)
io.flutter.plugins.androidintent.IntentSender: void setActivity(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzN()
com.google.firebase.firestore.model.MutableDocument: boolean isValidDocument()
com.google.firebase.auth.GoogleAuthCredential: com.google.firebase.auth.AuthCredential zza()
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjw zzb()
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.FirebaseApp: boolean equals(java.lang.Object)
okio.RealBufferedSource: void skip(long)
com.google.firebase.firestore.core.SyncEngine: void handleRejectedListen(int,io.grpc.Status)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
io.grpc.internal.RetriableStream$1HalfCloseEntry: RetriableStream$1HalfCloseEntry(io.grpc.internal.RetriableStream)
com.google.protobuf.IntArrayList: void add(int,java.lang.Integer)
com.google.firebase.database.collection.ImmutableSortedSet: int size()
com.google.android.gms.internal.firebase-auth-api.zzms: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.window.embedding.ActivityRule: int hashCode()
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.Query collectionGroup(java.lang.String)
com.google.protobuf.ExtensionRegistryFactory: com.google.protobuf.ExtensionRegistryLite createEmpty()
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
com.google.android.gms.common.internal.LibraryVersion: java.lang.String getVersion(java.lang.String)
io.flutter.plugins.googlemaps.MarkersController: void hideMarkerInfoWindow(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument convertToNoDocument(com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.Encoding toEncoding(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacw: boolean zze()
com.google.android.gms.internal.firebase-auth-api.zzvs: void zze(com.google.android.gms.internal.firebase-auth-api.zzsc)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.IBinder readIBinder(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzabx: int zzs()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode fixUp()
com.google.firebase.auth.internal.zzbe: zzbe()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereArrayContainsAny(com.google.firebase.firestore.FieldPath,java.util.List)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: FlutterFirebaseFirestorePlugin()
com.google.android.gms.internal.location.zzae: java.lang.Object[] newArray(int)
com.google.firestore.v1.Precondition: boolean getExists()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setRotateGesturesEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zznz: zznz()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean retainAll(java.util.Collection)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
androidx.window.embedding.ActivityStack: int hashCode()
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
io.grpc.internal.AbstractClientStream$TransportState: void setListener(io.grpc.internal.ClientStreamListener)
com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzy: void zzd(java.lang.String)
io.grpc.internal.RetriableStream$Sublistener: void onReady()
com.google.android.gms.tasks.zzn: com.google.android.gms.tasks.OnSuccessListener zza(com.google.android.gms.tasks.zzn)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: void encode(com.google.firebase.messaging.reporting.MessagingClientEvent,com.google.firebase.encoders.ObjectEncoderContext)
io.grpc.Status: io.grpc.StatusException asException()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabt zzt()
com.google.android.gms.internal.firebase-auth-api.zzabp: zzabp()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.messaging.TopicOperation: boolean equals(java.lang.Object)
com.google.firestore.v1.StructuredQuery: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder setCurrentCacheSizeBytes(long)
com.google.android.gms.maps.model.zza: zza()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: WebViewClientHostApiImpl$WebViewClientImpl(io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl,boolean)
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: int getTag(com.google.firebase.encoders.FieldDescriptor)
kotlinx.coroutines.NodeList: java.lang.String toString()
io.grpc.internal.AbstractClientStream$GetFramer: io.grpc.internal.Framer setCompressor(io.grpc.Compressor)
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
com.google.protobuf.CodedInputStream$StreamDecoder: int readSInt32()
com.google.firebase.firestore.core.TargetIdGenerator: com.google.firebase.firestore.core.TargetIdGenerator forSyncEngine()
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: JobIntentService$CompatWorkEnqueuer(android.content.Context,android.content.ComponentName)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzj(java.lang.Object,int,java.lang.Object)
com.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)
com.google.android.gms.tasks.zzt: void execute(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzcj: zzcj(com.google.android.gms.internal.firebase-auth-api.zzck,java.lang.Class)
com.google.firebase.firestore.local.ReferenceSet: void addReferences(com.google.firebase.database.collection.ImmutableSortedSet,int)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.internal.location.zzaj zza(com.google.android.gms.tasks.TaskCompletionSource)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions visible(boolean)
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite internalGetMutableFields()
com.google.protobuf.UnsafeUtil: byte access$200(java.lang.Object,long)
com.google.firebase.auth.internal.zzak: void onFailure(java.lang.Exception)
com.google.android.gms.maps.internal.zzca: com.google.android.gms.maps.internal.zzf zza(android.content.Context,com.google.android.gms.maps.MapsInitializer$Renderer)
com.google.firebase.firestore.local.LocalDocumentsView: java.util.Map computeViews(java.util.Map,java.util.Map,java.util.Set)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.google.firestore.v1.DocumentChange$Builder: DocumentChange$Builder()
androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse getFrameworksImpl()
io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl: DownloadListenerFlutterApiImpl(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.webviewflutter.InstanceManager)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzaao: byte zza(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi: void dispose(java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi$Reply)
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
com.google.firebase.firestore.local.LruGarbageCollector: long getByteSize()
com.google.protobuf.GeneratedMessageLite: int getMemoizedSerializedSize()
com.google.firebase.firestore.core.Bound: java.lang.String toString()
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzD(java.lang.Object,long,byte)
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
com.google.firestore.v1.ArrayValue: ArrayValue()
com.google.android.gms.internal.firebase-auth-api.zzzx: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: com.google.firebase.messaging.RemoteMessage getFirebaseMessage(java.lang.String)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
com.google.android.gms.internal.safetynet.zzx: zzx(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzka: zzka()
io.grpc.okhttp.OkHttpClientStream: void setOutboundFlowState(java.lang.Object)
com.google.android.gms.signin.internal.zaj: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.google.android.gms.common.internal.GetServiceRequest: GetServiceRequest(int,java.lang.String)
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
io.flutter.plugins.firebase.firestore.streamhandler.QuerySnapshotsStreamHandler: void onCancel(java.lang.Object)
com.google.protobuf.FloatArrayList: void add(int,java.lang.Float)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemovePrev()
io.grpc.Metadata$Key: java.lang.String name()
io.grpc.ClientInterceptors$InterceptorChannel: ClientInterceptors$InterceptorChannel(io.grpc.Channel,io.grpc.ClientInterceptor)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.android.gms.internal.firebase-auth-api.zzaes: int zza(int,byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzfq: boolean zzc(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznz: com.google.android.gms.internal.firebase-auth-api.zznz zzb()
com.google.firebase.auth.internal.zzah: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.OverlayMigrationManager getOverlayMigrationManager()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBEmptyNode getInstance()
com.google.android.gms.internal.firebase-auth-api.zzst: zzst(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.auth.internal.zzs: java.lang.Object[] newArray(int)
com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine parse(java.lang.String)
com.google.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
io.grpc.internal.RetriableStream$Throttle: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean)
com.google.android.gms.common.api.internal.zabq: void zaH(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
com.google.android.gms.internal.firebase-auth-api.zzru: void writeToParcel(android.os.Parcel,int)
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec$Builder supportsTlsExtensions(boolean)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task confirmPasswordReset(java.lang.String,java.lang.String)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder: com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder setField(com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.protobuf.ManifestSchemaFactory: ManifestSchemaFactory()
io.grpc.internal.CompositeReadableBuffer$4: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
com.google.android.gms.internal.firebase-auth-api.zzaaz: com.google.android.gms.internal.firebase-auth-api.zzaaz zzq(com.google.android.gms.internal.firebase-auth-api.zzaay)
com.google.android.gms.common.GooglePlayServicesNotAvailableException: GooglePlayServicesNotAvailableException(int)
com.google.protobuf.AbstractProtobufList: boolean add(java.lang.Object)
io.grpc.Context: Context()
com.google.firebase.FirebaseApp$UserUnlockReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzao: zzao()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzacj: int size()
com.google.firebase.auth.zzj: void run()
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.plugins.firebase.messaging.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent,boolean)
com.google.firebase.firestore.Filter: Filter()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.google.firebase.auth.internal.zzay: com.google.firebase.auth.GetTokenResult zza(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
com.google.android.gms.internal.firebase-auth-api.zzch: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzbw)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: void serviceProcessingFinished()
com.google.firebase.auth.internal.zzbi: void zzd(int)
com.google.firebase.firestore.model.AutoValue_FieldIndex: java.util.List getSegments()
com.google.firebase.firestore.core.CompositeFilter: com.google.firebase.firestore.core.CompositeFilter$Operator getOperator()
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
com.google.protobuf.RopeByteString$Balancer: void insert(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzmj zzc(int)
com.google.android.gms.internal.firebase-auth-api.zzaei: boolean hasPrevious()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.google.android.gms.internal.location.zzbl: zzbl(com.google.android.gms.internal.location.zzbk,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationSettingsRequest,java.lang.String)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
com.google.android.gms.internal.maps.zzj: void zzp(boolean)
io.grpc.okhttp.OkHttpWritableBuffer: int writableBytes()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder bearing(float)
io.grpc.ManagedChannelBuilder: io.grpc.ManagedChannelBuilder usePlaintext()
com.google.common.collect.RegularImmutableSet: java.lang.Object[] internalArray()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzN(java.lang.Object,int,int)
com.google.firebase.firestore.model.mutation.PatchMutation: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientStream[] getActiveStreams()
com.google.firebase.firestore.proto.Target: void setTargetId(int)
com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
com.google.protobuf.RopeByteString: boolean isValidUtf8()
io.grpc.okhttp.internal.ConnectionSpec: ConnectionSpec(io.grpc.okhttp.internal.ConnectionSpec$Builder)
io.grpc.internal.ManagedChannelImpl$RealChannel: void shutdown()
com.google.protobuf.DoubleArrayList: void add(int,java.lang.Double)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.google.firebase.firestore.core.DocumentViewChange: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaae: com.google.android.gms.internal.firebase-auth-api.zzaau zzo()
androidx.fragment.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)
com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()
io.flutter.plugins.urllauncher.WebViewActivity$1: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)
com.google.android.gms.internal.firebase-auth-api.zzcz: zzcz()
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder setStorageMetrics(com.google.android.datatransport.runtime.firebase.transport.StorageMetrics)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.grpc.internal.LogExceptionRunnable: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzyq: zzyq(java.lang.String,java.lang.String,java.lang.Long,java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
com.google.firebase.auth.zze: com.google.android.gms.internal.firebase-auth-api.zzzq zzd(com.google.firebase.auth.zze,java.lang.String)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setDownloadListener(java.lang.Long,java.lang.Long)
com.google.protobuf.ByteString$LeafByteString: int getTreeDepth()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: GeneratedAndroidWebView$WebResourceErrorData()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzfl: zzfl(com.google.android.gms.internal.firebase-auth-api.zzat)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task linkWithCredential(com.google.firebase.auth.AuthCredential)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzff: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzk(java.lang.Object)
io.grpc.Metadata: boolean bytesEqual(byte[],byte[])
okio.ByteString: okio.ByteString of(byte[])
com.google.protobuf.MapFieldLite: boolean equals(java.util.Map,java.util.Map)
androidx.browser.customtabs.CustomTabsIntent$Builder: CustomTabsIntent$Builder()
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)
io.grpc.ConnectivityStateInfo: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmu: zzmu(com.google.android.gms.internal.firebase-auth-api.zzmt)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue)
com.google.firebase.auth.PlayGamesAuthCredential: java.lang.String getProvider()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task firebaseAppToMap(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.firebase-auth-api.zzyj: android.net.Uri zzc()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.google.firestore.v1.Write: void access$800(com.google.firestore.v1.Write,java.lang.String)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
com.google.firebase.components.ComponentDiscoveryService: android.os.IBinder onBind(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzxt: com.google.android.gms.internal.firebase-auth-api.zzxt zzb(java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setTrackingId(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacm: zzacm(com.google.android.gms.internal.firebase-auth-api.zzacl)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomTo(float)
com.google.android.gms.common.internal.GmsClientSupervisor: void zzb(java.lang.String,java.lang.String,int,android.content.ServiceConnection,java.lang.String,boolean)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzag addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions)
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Iterator iteratorFrom(java.lang.Object)
com.google.firebase.firestore.local.MemoryPersistence: void start()
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: int hashCode()
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
com.google.protobuf.UnsafeUtil: int getInt(java.lang.Object,long)
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch lookupMutationBatch(int)
io.grpc.internal.DelayedClientCall$5: void run()
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void readBytes(java.io.OutputStream,int)
com.google.android.gms.internal.firebase-auth-api.zzmz: zzmz()
com.lyokone.location.NotificationOptions: java.lang.String getSubtitle()
com.google.firebase.firestore.remote.WatchChangeAggregator: boolean targetContainsDocument(int,com.google.firebase.firestore.model.DocumentKey)
com.google.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)
io.grpc.internal.DelayedClientCall$2: DelayedClientCall$2(io.grpc.internal.DelayedClientCall,io.grpc.Status)
com.google.firebase.auth.internal.GenericIdpActivity: void onResume()
com.google.protobuf.AbstractProtobufList: boolean retainAll(java.util.Collection)
com.google.firebase.firestore.local.IndexManager$IndexType: IndexManager$IndexType(java.lang.String,int)
com.google.firebase.auth.internal.zzba: com.google.firebase.auth.MultiFactorInfo zza(com.google.android.gms.internal.firebase-auth-api.zzyu)
com.google.android.gms.internal.firebase-auth-api.zzaba: void zze(long)
com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.UnmodifiableIterator iterator()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
com.google.android.gms.internal.firebase-auth-api.zzbe: zzbe(java.lang.String)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder: void encode(com.google.firebase.messaging.reporting.MessagingClientEventExtension,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)
com.google.android.gms.maps.model.Circle: int hashCode()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task clearPersistence(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzads: boolean hasNext()
io.grpc.okhttp.internal.Platform: byte[] concatLengthPrefixed(java.util.List)
com.squareup.okhttp.HttpUrl$Builder: java.lang.String domainToAscii(java.lang.String)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: void onMeasure(int,int)
com.google.firebase.auth.FirebaseAuth: void addIdTokenListener(com.google.firebase.auth.internal.IdTokenListener)
com.google.android.gms.internal.firebase-auth-api.zzmx: int zza()
com.google.android.gms.cloudmessaging.zzc: java.lang.Class loadClass(java.lang.String,boolean)
com.lyokone.location.FlutterLocation: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: io.grpc.internal.HedgingPolicy hedgingPolicy(java.util.Map,int)
com.google.firebase.auth.internal.zzai: com.google.android.gms.common.api.Status zzb(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzsa: zzsa(java.lang.String,java.lang.String,com.google.firebase.auth.ActionCodeSettings)
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
com.google.android.gms.internal.firebase-auth-api.zzni: zzni()
com.google.firestore.v1.ExistenceFilter: ExistenceFilter()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereGreaterThanOrEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.firestore.v1.StructuredQuery$CompositeFilter: void access$2600(com.google.firestore.v1.StructuredQuery$CompositeFilter,java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zzzi: java.lang.String zza()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeList(android.os.Parcel,int,java.util.List,boolean)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzw zzv(com.google.firebase.auth.FirebaseAuth)
com.google.firebase.auth.FirebaseAuth: void signOut()
com.google.firebase.events.Event: java.lang.Class getType()
androidx.fragment.app.Fragment: void onLowMemory()
com.google.android.gms.internal.firebase-auth-api.zzaby: void zzf(int)
androidx.collection.SimpleArrayMap: int hashCode()
com.google.android.gms.internal.stats.zzi: zzi(java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: void readInt64List(java.util.List)
io.grpc.internal.InternalSubchannel$Index: boolean isValid()
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzk()
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzu(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value getUpperBound(com.google.firestore.v1.Value$ValueTypeCase)
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.core.UserData$ParseContext childContext(java.lang.String)
com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzoi: boolean zzb(byte[],byte[])
com.lyokone.location.NotificationOptions: java.lang.String toString()
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zze(android.os.Bundle)
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: boolean isEquivalentTo(io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker)
com.google.protobuf.MessageSchema: boolean isInitialized(java.lang.Object,int,com.google.protobuf.Schema)
com.google.firebase.installations.remote.InstallationResponse$Builder: InstallationResponse$Builder()
io.grpc.LoadBalancer$PickResult: boolean equals(java.lang.Object)
io.grpc.internal.ServiceConfigUtil: java.util.Set getListOfStatusCodesAsSet(java.util.Map,java.lang.String)
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.FirebaseOptions$1)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationCallback,android.os.Looper)
com.google.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.common.internal.MethodInvocation: void writeToParcel(android.os.Parcel,int)
com.google.common.base.Stopwatch: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object inTransaction(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)
io.grpc.LoadBalancer$PickResult: io.grpc.Status getStatus()
com.google.android.gms.common.api.internal.zacg: zacg(com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient,android.os.IBinder)
com.google.firestore.v1.Write: com.google.firestore.v1.Document getUpdate()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: java.util.Map getExceptionDetails(java.lang.Exception)
com.google.android.gms.tasks.zzw: java.lang.Object getResult(java.lang.Class)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
okio.Buffer: okio.Buffer writeInt(int)
com.google.firebase.auth.internal.zzaa: zzaa()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
com.google.android.gms.tasks.zzh: com.google.android.gms.tasks.OnCanceledListener zza(com.google.android.gms.tasks.zzh)
com.google.android.gms.common.util.ArrayUtils: boolean contains(int[],int)
io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor: int getPriority(java.lang.Object)
com.google.android.gms.safetynet.zzj: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.grpc.internal.ForwardingClientStream: void request(int)
com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)
com.google.firebase.installations.AutoValue_InstallationTokenResult: long getTokenExpirationTimestamp()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: io.flutter.plugins.webviewflutter.Releasable get()
com.google.android.gms.internal.firebase-auth-api.zziq: zziq()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
com.google.android.gms.maps.internal.zzby: boolean isZoomGesturesEnabled()
okio.ByteString: java.lang.String base64()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.JobSupport: boolean start()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.google.firebase.auth.internal.zzu: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zztf: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzdo: byte[] zzd(byte[],java.nio.ByteBuffer)
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp getLocalWriteTime()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.firebase.auth.ActionCodeSettings getActionCodeSettings(java.util.Map)
com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet)
io.grpc.okhttp.OkHttpClientTransport$5: OkHttpClientTransport$5(io.grpc.okhttp.OkHttpClientTransport)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: void success(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions)
com.google.android.gms.internal.firebase-auth-api.zzyq: long zzc()
com.google.android.gms.location.zzy: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$State access$302(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$State)
com.google.android.datatransport.runtime.AutoValue_SendRequest: AutoValue_SendRequest(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Event,com.google.android.datatransport.Transformer,com.google.android.datatransport.Encoding)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()
com.google.android.gms.internal.firebase-auth-api.zzbl: com.google.android.gms.internal.firebase-auth-api.zzbk zza(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent: long getProjectNumber()
io.grpc.okhttp.OkHttpClientTransport: java.lang.Runnable access$2900(io.grpc.okhttp.OkHttpClientTransport)
com.google.protobuf.MapFieldLite: java.lang.Object remove(java.lang.Object)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase valueOf(java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: int readInt32()
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabx zzv(java.lang.Class)
com.google.android.gms.common.internal.zzv: zzv(android.os.IBinder)
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.OutboundFlowController$OutboundFlowState state(io.grpc.okhttp.OkHttpClientStream)
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.CallOptions getCallOptions()
com.google.firebase.installations.time.SystemClock: SystemClock()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: java.lang.Iterable getEvents()
com.google.protobuf.AbstractMessageLite$Builder: AbstractMessageLite$Builder()
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: FirebaseAppCheckTokenProvider(com.google.firebase.inject.Deferred)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzL(java.lang.Object,int,com.google.android.gms.internal.firebase-auth-api.zzadn)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeSeparatorDescending()
com.google.android.gms.maps.internal.zzby: boolean isZoomControlsEnabled()
com.google.firebase.auth.internal.zzag: java.lang.String zzd()
io.grpc.InternalLogId: java.lang.String getClassName(java.lang.Class)
com.google.android.gms.common.internal.GmsClient: java.util.concurrent.Executor getBindServiceExecutor()
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator valueOf(java.lang.String)
io.grpc.InternalConfigSelector$Result: InternalConfigSelector$Result(io.grpc.Status,java.lang.Object,io.grpc.ClientInterceptor)
com.google.protobuf.AbstractMessageLite: void setMemoizedSerializedSize(int)
com.google.protobuf.GeneratedMessageLite: java.lang.String toString()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.google.cloud.datastore.core.number.NumberComparisonHelper: int compareLongs(long,long)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: FlutterRenderer$SurfaceTextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.internal.firebase-auth-api.zzal: void add(int,java.lang.Object)
com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)
com.google.firebase.firestore.local.LruGarbageCollector: long access$200()
io.grpc.internal.TransportTracer: void reportMessageReceived()
io.grpc.internal.HedgingPolicy: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzacr: int size()
com.tekartik.sqflite.SqflitePlugin$8: void run()
com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzh(boolean)
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$4700(io.grpc.internal.ManagedChannelImpl)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parseFrom(com.google.protobuf.GeneratedMessageLite,com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.String negotiate(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzzq: zzzq(com.google.firebase.auth.internal.zzi,java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: int getTag()
com.google.firebase.firestore.Query: com.google.firebase.firestore.ListenerRegistration addSnapshotListener(java.util.concurrent.Executor,com.google.firebase.firestore.MetadataChanges,com.google.firebase.firestore.EventListener)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void recordSuccess(java.lang.Iterable)
com.google.firestore.v1.TargetChange$TargetChangeType: int getNumber()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newCameraPosition(com.google.android.gms.maps.model.CameraPosition)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
com.tekartik.sqflite.SqflitePlugin$8: SqflitePlugin$8(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,java.lang.String,com.tekartik.sqflite.SqflitePlugin$BgResult)
com.google.android.gms.common.internal.BaseGmsClient: boolean zzm(com.google.android.gms.common.internal.BaseGmsClient)
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzqz: zzqz()
com.google.firebase.auth.PhoneAuthCredential: com.google.firebase.auth.PhoneAuthCredential zzc(java.lang.String,java.lang.String)
kotlinx.coroutines.internal.ArrayQueue: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzmb: com.google.android.gms.internal.firebase-auth-api.zzma zza()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zzsj: void zzb(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzj(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
com.google.firebase.messaging.ByteStreams: byte[] toByteArrayInternal(java.io.InputStream,java.util.Queue,int)
com.google.android.gms.common.api.internal.zzb: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)
io.flutter.plugins.googlemaps.PolygonsController: java.lang.String getPolygonId(java.lang.Object)
okio.AsyncTimeout$2: long read(okio.Buffer,long)
com.google.protobuf.CodedInputStreamReader: int readEnum()
com.google.android.gms.internal.firebase-auth-api.zzwt: void zzl(com.google.android.gms.common.api.Status)
com.google.protobuf.BooleanArrayList: java.lang.Boolean get(int)
com.lyokone.location.FlutterLocationService: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzabc: zzabc(java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] values()
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.maps.model.MarkerOptions: MarkerOptions(com.google.android.gms.maps.model.LatLng,java.lang.String,java.lang.String,android.os.IBinder,float,float,boolean,boolean,boolean,float,float,float,float,float)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.android.gms.internal.firebase-auth-api.zzabx: boolean equals(java.lang.Object)
com.google.firebase.firestore.model.SnapshotVersion: int compareTo(java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void checkLastTagWas(int)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: ManagedChannelImpl$ConfigSelectingClientCall(io.grpc.InternalConfigSelector,io.grpc.Channel,java.util.concurrent.Executor,io.grpc.MethodDescriptor,io.grpc.CallOptions)
io.grpc.SynchronizationContext: void executeLater(java.lang.Runnable)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: boolean hasPendingData()
com.google.protobuf.CodedInputStream$ArrayDecoder: void checkLastTagWas(int)
com.google.firebase.firestore.model.mutation.Mutation: Mutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzrn: zzrn()
com.google.android.gms.internal.firebase-auth-api.zzabb: zzabb(byte[],int,int)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
io.grpc.Deadline: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.google.android.gms.internal.firebase-auth-api.zzabs: com.google.android.gms.internal.firebase-auth-api.zzabs zza()
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()
com.google.protobuf.ByteString$LiteralByteString: java.lang.String toStringInternal(java.nio.charset.Charset)
io.grpc.CallOptions: java.lang.String getAuthority()
io.flutter.plugins.googlemaps.PolylineController: void setPoints(java.util.List)
io.grpc.util.RoundRobinLoadBalancer: io.grpc.util.RoundRobinLoadBalancer$Ref getSubchannelStateInfoRef(io.grpc.LoadBalancer$Subchannel)
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
io.flutter.plugins.webviewflutter.FlutterAssetManager: java.lang.String[] list(java.lang.String)
com.google.android.gms.safetynet.SafeBrowsingData: void writeToParcel(android.os.Parcel,int)
io.grpc.internal.ApplicationThreadDeframer: void setMaxInboundMessageSize(int)
io.flutter.plugins.googlemaps.CirclesController: void removeCircles(java.util.List)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: void setWebViewClient(android.webkit.WebViewClient)
io.flutter.plugins.googlemaps.GoogleMapController: void setTrackCameraPosition(boolean)
okio.Okio: okio.Sink sink(java.net.Socket)
com.google.firestore.v1.StructuredQuery$FieldReference$Builder: StructuredQuery$FieldReference$Builder(com.google.firestore.v1.StructuredQuery$1)
io.grpc.internal.ManagedChannelImpl$NameResolverListener: ManagedChannelImpl$NameResolverListener(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$LbHelperImpl,io.grpc.NameResolver)
com.google.android.gms.internal.firebase-auth-api.zzzl: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.grpc.internal.JsonUtil: java.util.List checkObjectList(java.util.List)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.google.android.gms.internal.firebase-auth-api.zzhu: com.google.android.gms.internal.firebase-auth-api.zzhw zza()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
com.google.android.gms.internal.safetynet.zzk$zza: zzk$zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zza)
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4702(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
com.google.android.gms.common.api.internal.LifecycleActivity: androidx.fragment.app.FragmentActivity zzb()
com.google.android.gms.internal.firebase-auth-api.zzabx: java.lang.Object zzD(com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.String,java.lang.Object[])
com.google.firebase.firestore.core.SyncEngine$LimboResolution: boolean access$002(com.google.firebase.firestore.core.SyncEngine$LimboResolution,boolean)
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.WriteBatch delete(com.google.firebase.firestore.DocumentReference)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
io.flutter.plugins.googlemaps.GoogleMapBuilder: io.flutter.plugins.googlemaps.GoogleMapController build(int,android.content.Context,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider)
com.google.firebase.messaging.TopicsSyncTask: boolean access$000(com.google.firebase.messaging.TopicsSyncTask)
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: java.lang.String toString()
io.grpc.okhttp.internal.Platform$TlsExtensionType: Platform$TlsExtensionType(java.lang.String,int)
com.google.android.gms.internal.safetynet.zzc: boolean zza(android.os.Parcel)
io.flutter.plugins.googlemaps.Convert: float toFloat(java.lang.Object)
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void removeTarget(com.google.firebase.firestore.local.TargetData)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Object invoke(java.lang.Object)
com.google.protobuf.LazyStringArrayList: boolean retainAll(java.util.Collection)
io.grpc.internal.DelayedStream$DelayedStreamListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.android.gms.internal.firebase-auth-api.zzql: java.lang.Object[] newArray(int)
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)
com.google.android.gms.internal.firebase-auth-api.zzzj: long zzb()
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzt(int,long)
com.google.firestore.v1.BatchGetDocumentsResponse$Builder: BatchGetDocumentsResponse$Builder(com.google.firestore.v1.BatchGetDocumentsResponse$1)
com.google.firebase.firestore.LoadBundleTaskProgress: int getDocumentsLoaded()
io.grpc.internal.DelayedStream: void start(io.grpc.internal.ClientStreamListener)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzg(java.lang.String)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageTime(android.os.Bundle)
kotlin.collections.EmptySet: int size()
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromIntentExtra(android.content.Intent,java.lang.String,android.os.Parcelable$Creator)
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: void remove()
com.google.firebase.firestore.core.CompositeFilter: boolean isConjunction()
io.grpc.internal.ManagedChannelImpl$RealChannel$2: ManagedChannelImpl$RealChannel$2(io.grpc.internal.ManagedChannelImpl$RealChannel)
com.squareup.okhttp.Request: Request(com.squareup.okhttp.Request$Builder)
androidx.core.os.LocaleListCompatWrapper: int hashCode()
okio.Buffer: void require(long)
com.google.protobuf.UnsafeUtil: boolean getBoolean(java.lang.Object,long)
io.grpc.HttpConnectProxiedSocketAddress$Builder: io.grpc.HttpConnectProxiedSocketAddress$Builder setTargetAddress(java.net.InetSocketAddress)
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.firebase.auth.PhoneAuthProvider: com.google.firebase.auth.PhoneAuthCredential getCredential(java.lang.String,java.lang.String)
com.google.protobuf.ByteString$1: byte nextByte()
com.google.android.gms.internal.firebase-auth-api.zzaar: byte zza(int)
com.google.firebase.encoders.proto.AtProtobuf: com.google.firebase.encoders.proto.AtProtobuf tag(int)
com.google.android.gms.signin.internal.zak: zak(int,com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.internal.zav)
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.android.gms.internal.firebase-auth-api.zzx: java.lang.String zzb(java.lang.String)
com.google.firebase.firestore.local.MemoryIndexManager: com.google.firebase.firestore.model.FieldIndex$IndexOffset getMinOffset(java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: boolean onCreate()
com.google.firestore.v1.Write: com.google.firestore.v1.Write$OperationCase getOperationCase()
com.google.android.gms.internal.firebase-auth-api.zzrq: boolean zzh()
com.google.android.gms.internal.firebase-auth-api.zzadg: void zzg(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: int removeOrphanedDocuments(long)
com.google.android.gms.common.Feature: java.lang.String getName()
com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()
androidx.window.core.Bounds: int getLeft()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)
com.google.firebase.firestore.bundle.BundleLoader: java.util.Map getQueryDocumentMapping()
com.google.protobuf.Timestamp: void access$100(com.google.protobuf.Timestamp,long)
com.google.android.gms.internal.firebase-auth-api.zzkz: zzkz()
com.google.firestore.admin.v1.Index$IndexField$Order: int getNumber()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
com.google.android.gms.maps.UiSettings: boolean isTiltGesturesEnabled()
com.google.firebase.installations.local.PersistedInstallationEntry: boolean shouldAttemptMigration()
io.grpc.internal.DelayedClientCall: DelayedClientCall(java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,io.grpc.Deadline)
com.google.protobuf.MessageSchema: void readGroupList(java.lang.Object,long,com.google.protobuf.Reader,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.lyokone.location.NotificationOptions: java.lang.Integer getColor()
io.flutter.plugins.googlemaps.GoogleMapController: void onPolylineClick(com.google.android.gms.maps.model.Polyline)
com.google.android.gms.internal.firebase-auth-api.zzfm: zzfm()
okio.ByteString: int size()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView createInputAwareWebView(android.content.Context,android.view.View)
com.google.firebase.installations.FirebaseInstallations: void insertOrUpdatePrefs(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder: com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder setOp(com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator)
io.grpc.internal.ClientCallImpl$1ClosedByContext: void runInContext()
io.grpc.internal.Rescheduler: long access$600(io.grpc.internal.Rescheduler)
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
com.google.android.gms.common.api.internal.UnregisterListenerMethod: UnregisterListenerMethod(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
com.google.common.io.BaseEncoding$Base64Encoding: void encodeTo(java.lang.Appendable,byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzea: zzea()
com.google.android.gms.common.GoogleApiAvailabilityLight: java.lang.String getErrorString(int)
com.google.android.gms.internal.firebase-auth-api.zzaeg: int zzb()
com.google.firebase.firestore.local.SQLiteMutationQueue: void setLastStreamToken(com.google.protobuf.ByteString)
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener getLocationRequestPermissionsResultListener()
com.google.android.gms.internal.firebase-auth-api.zzmu: com.google.android.gms.internal.firebase-auth-api.zzmu zzb(com.google.android.gms.internal.firebase-auth-api.zzmw)
io.grpc.Deadline: io.grpc.Deadline minimum(io.grpc.Deadline)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: void shutdown(io.grpc.Status)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.google.android.gms.common.api.GoogleApiActivity: void zab()
com.google.android.gms.cloudmessaging.zzs: zzs(android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.grpc.internal.ServiceConfigUtil: java.lang.String getMethodFromName(java.util.Map)
com.google.android.gms.maps.zzb: zzb(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerDragListener)
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabx zzl()
com.google.firebase.firestore.core.UserData$ParsedUpdateData: UserData$ParsedUpdateData(com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.FieldMask,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzadf: java.lang.Object zzG(java.lang.Object,int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzaef)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query filter(com.google.firebase.firestore.core.Filter)
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: SchedulingModule_WorkSchedulerFactory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzadk: com.google.android.gms.internal.firebase-auth-api.zzadk zza()
com.google.android.gms.internal.firebase-auth-api.zzacf: zzacf(java.io.IOException)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
io.grpc.internal.ManagedChannelImpl$1ShutdownNow: ManagedChannelImpl$1ShutdownNow(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzgl: com.google.android.gms.internal.firebase-auth-api.zzgl zzc(com.google.android.gms.internal.firebase-auth-api.zzhh,com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzE(java.lang.Object,long,byte)
com.google.protobuf.FloatArrayList: void ensureIndexInRange(int)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.firebase.FirebaseApp: void notifyOnAppDeleted()
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: OutboundFlowController$OutboundFlowState(io.grpc.okhttp.OutboundFlowController,int,int)
com.google.android.gms.internal.firebase-auth-api.zzacw: int hashCode()
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.ViewChange applyChanges(com.google.firebase.firestore.core.View$DocumentChanges,com.google.firebase.firestore.remote.TargetChange)
com.google.android.gms.internal.firebase-auth-api.zzzp: java.lang.Object[] newArray(int)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument mutableCopy()
io.grpc.LoadBalancer$ResolvedAddresses: int hashCode()
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)
com.google.firebase.messaging.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzma zza(int)
com.google.common.base.Splitter: com.google.common.base.Splitter on(char)
com.google.protobuf.MessageSchema: boolean oneofBooleanAt(java.lang.Object,long)
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.tekartik.sqflite.SqflitePlugin$BgResult: void error(java.lang.String,java.lang.String,java.lang.Object)
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: io.grpc.okhttp.internal.Platform$TlsExtensionType getTlsExtensionType()
okio.Segment: okio.Segment split(int)
com.google.protobuf.BooleanArrayList: int hashCode()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zzd(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firestore.v1.StructuredQuery$CollectionSelector: void access$100(com.google.firestore.v1.StructuredQuery$CollectionSelector,java.lang.String)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void shutdown()
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] values()
io.grpc.SynchronizationContext$ScheduledHandle: void cancel()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
com.google.android.gms.common.internal.zac: java.lang.String zab(android.content.Context)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
com.google.firebase.firestore.remote.RemoteStore: void enableNetwork()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.atomic.AtomicBoolean access$1500(io.grpc.internal.ManagedChannelImpl)
com.google.protobuf.FieldSet: void verifyType(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: int getPriority(io.grpc.NameResolverProvider)
com.google.protobuf.MessageSchema: java.lang.reflect.Field reflectField(java.lang.Class,java.lang.String)
io.flutter.plugins.googlemaps.PolylinesController: PolylinesController(io.flutter.plugin.common.MethodChannel,float)
io.grpc.internal.ClientCallImpl: void sendMessageInternal(java.lang.Object)
io.grpc.internal.StatsTraceContext: void inboundMessage(int)
io.grpc.internal.ServiceConfigUtil$LbConfig: ServiceConfigUtil$LbConfig(java.lang.String,java.util.Map)
com.google.protobuf.RopeByteString: com.google.protobuf.CodedInputStream newCodedInput()
com.google.firebase.firestore.core.UserData$ParseAccumulator: java.util.List getFieldTransforms()
com.google.android.gms.internal.location.zzau: zzau(com.google.android.gms.internal.location.zzat,com.google.android.gms.location.LocationResult)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzs(com.google.android.gms.internal.firebase-auth-api.zzzw,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
com.google.firebase.components.LazySet: void updateSet()
com.tekartik.sqflite.SqlCommand: java.util.List getStringQuerySqlArguments(java.util.List)
io.flutter.plugins.webviewflutter.DisplayListenerProxy: void onPreWebViewInitialization(android.hardware.display.DisplayManager)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRead(com.google.android.gms.common.api.internal.TaskApiCall)
kotlin.jvm.internal.ClassReference: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzs(int,java.util.List,boolean)
com.google.android.gms.dynamic.zaf: int zaa()
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.FieldFilter parseFieldFilter(com.google.firebase.firestore.Filter$UnaryFilter)
com.google.android.gms.internal.firebase-auth-api.zzpo: boolean equals(java.lang.Object)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: int hashCode()
com.google.firebase.firestore.proto.WriteBatch: void ensureBaseWritesIsMutable()
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(java.lang.String)
com.google.android.datatransport.runtime.AutoValue_TransportContext: com.google.android.datatransport.Priority getPriority()
com.google.firebase.database.collection.ImmutableSortedSet: int hashCode()
io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)
androidx.core.os.LocaleListCompat: java.lang.String toString()
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withClearedAuthToken()
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)
com.google.android.gms.internal.base.zaq: zaq(android.os.Looper)
com.google.protobuf.MessageSchema: int positionForFieldNumber(int,int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzu(com.google.android.gms.internal.firebase-auth-api.zzre,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.common.internal.ClientSettings: java.util.Set getAllRequestedScopes()
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzh(java.lang.String)
com.google.firebase.firestore.local.ReferenceSet: void removeReferences(com.google.firebase.database.collection.ImmutableSortedSet,int)
io.grpc.okhttp.internal.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
com.google.android.datatransport.runtime.TransportImpl: void schedule(com.google.android.datatransport.Event,com.google.android.datatransport.TransportScheduleCallback)
com.google.firebase.messaging.SyncTask: com.google.firebase.messaging.FirebaseMessaging access$000(com.google.firebase.messaging.SyncTask)
androidx.collection.SparseArrayCompat: void gc()
com.google.android.datatransport.runtime.AutoValue_TransportContext: int hashCode()
com.google.android.gms.internal.location.zzas: void removeAllListeners()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi: io.flutter.plugin.common.MessageCodec getCodec()
com.google.firebase.firestore.core.QueryListener: boolean onViewSnapshot(com.google.firebase.firestore.core.ViewSnapshot)
io.grpc.internal.JsonParser: java.lang.Void parseJsonNull(com.google.gson.stream.JsonReader)
androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()
kotlinx.coroutines.scheduling.WorkQueue: long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
androidx.fragment.app.Fragment: void performDestroy()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getUri()
com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.String previous()
com.google.protobuf.FieldSet: void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)
com.google.android.gms.maps.model.CustomCap: java.lang.String toString()
com.google.android.gms.dynamic.zaf: void zab(com.google.android.gms.dynamic.LifecycleDelegate)
androidx.window.embedding.SplitController: SplitController()
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzje zzc(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi: void onProgressChanged(java.lang.Long,java.lang.Long,java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi$Reply)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode insert(java.lang.Object,java.lang.Object,java.util.Comparator)
com.google.android.gms.internal.firebase-auth-api.zzvi: java.lang.String zza()
com.google.android.gms.internal.auth-api-phone.zzv: int getMinApkVersion()
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void skipRawBytes(int)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.ObjectEncoder access$300(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.firebase.firestore.index.IndexEntry: com.google.firebase.firestore.index.IndexEntry create(int,com.google.firebase.firestore.model.DocumentKey,byte[],byte[])
io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: ManagedChannelImpl$1PrepareToLoseNetworkRunnable(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzld: zzld()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzbq: byte[] zzd()
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
com.google.protobuf.UnknownFieldSetLite: com.google.protobuf.UnknownFieldSetLite getDefaultInstance()
com.google.android.gms.internal.firebase-auth-api.zzfr: byte[] zzc()
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference getField()
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value refValue(com.google.firebase.firestore.model.DatabaseId,com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.internal.firebase-auth-api.zzvn: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzabr: zzabr(float[],int)
okio.Buffer: long indexOf(byte,long,long)
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
com.google.firebase.firestore.remote.OnlineStateTracker: void logClientOfflineWarningIfNecessary(java.lang.String)
com.tekartik.sqflite.SqflitePlugin: void handleException(java.lang.Exception,com.tekartik.sqflite.operation.Operation,com.tekartik.sqflite.Database)
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzco: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.model.FieldPath getInternalPath()
com.google.android.gms.internal.firebase-auth-api.zzcj: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityStopped(android.app.Activity)
io.grpc.internal.ApplicationThreadDeframer$5: ApplicationThreadDeframer$5(io.grpc.internal.ApplicationThreadDeframer)
com.google.firestore.v1.WriteResponse$Builder: WriteResponse$Builder(com.google.firestore.v1.WriteResponse$1)
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value getValue()
io.grpc.internal.InternalSubchannel$Index: void reset()
com.google.android.gms.common.GooglePlayServicesManifestException: GooglePlayServicesManifestException(int,java.lang.String)
com.google.common.collect.SingletonImmutableSet: int hashCode()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
com.google.android.datatransport.cct.CctTransportBackend: int getPackageVersionCode(android.content.Context)
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.remote.Datastore getDatastore()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void onPageFinished(android.webkit.WebViewClient,android.webkit.WebView,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.protobuf.GeneratedMessageLite: int getSerializedSize()
com.google.gson.stream.JsonReader: boolean nextBoolean()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: void shutdownNow()
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: void clearAllocatedBytes()
com.google.firebase.firestore.remote.FirestoreCallCredentials: FirestoreCallCredentials(com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4802(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
com.google.firebase.firestore.local.MemoryMutationQueue: boolean isEmpty()
io.grpc.internal.InternalSubchannel: void gotoState(io.grpc.ConnectivityStateInfo)
io.grpc.internal.DelayedClientCall$DelayedListener$2: void run()
com.google.android.gms.common.zzi: int hashCode()
com.baseflow.geolocator.location.FusedLocationClient: int generateActivityRequestCode()
io.grpc.Status$StatusMessageMarshaller: java.lang.String parseAsciiString(byte[])
com.google.android.gms.internal.firebase-auth-api.zzacr: java.lang.Object set(int,java.lang.Object)
androidx.collection.ArraySet: void ensureCapacity(int)
com.google.firebase.firestore.local.SQLitePersistence: long getPageCount()
com.google.android.gms.internal.firebase-auth-api.zzxs: zzxs(java.lang.String)
androidx.collection.ArraySet: void clear()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloatObject(android.os.Parcel,int,java.lang.Float,boolean)
com.google.android.gms.maps.model.PolygonOptions: void writeToParcel(android.os.Parcel,int)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper omitNullValues()
com.google.common.collect.ImmutableCollection: boolean removeAll(java.util.Collection)
io.grpc.internal.ChannelTracer: int access$008(io.grpc.internal.ChannelTracer)
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzjl zze()
com.google.android.gms.maps.internal.zzg: void setBuildingsEnabled(boolean)
com.google.firebase.firestore.model.SnapshotVersion: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzgb: java.lang.Class zzj()
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getTemporaryPath()
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
com.google.android.gms.internal.firebase-auth-api.zzin: int zza()
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
io.grpc.internal.MessageFramer: int writeKnownLengthUncompressed(java.io.InputStream,int)
com.google.firestore.v1.Document: com.google.firestore.v1.Document access$000()
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzaau zze()
com.google.firebase.firestore.proto.NoDocument$Builder: com.google.firebase.firestore.proto.NoDocument$Builder setName(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzact: zzact(com.google.android.gms.internal.firebase-auth-api.zzada[])
com.google.android.gms.maps.model.PolygonOptions: boolean isVisible()
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.ListenerRegistration addSnapshotListener(java.util.concurrent.Executor,com.google.firebase.firestore.MetadataChanges,com.google.firebase.firestore.EventListener)
com.google.firebase.firestore.core.Bound: java.lang.String positionString()
com.google.firebase.firestore.FieldValue$DeleteFieldValue: java.lang.String getMethodName()
com.google.protobuf.BinaryReader$SafeHeapReader: void readMap(java.util.Map,com.google.protobuf.MapEntryLite$Metadata,com.google.protobuf.ExtensionRegistryLite)
com.google.firebase.firestore.model.mutation.MutationBatch: MutationBatch(int,com.google.firebase.Timestamp,java.util.List,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzvp: zzvp(com.google.android.gms.internal.firebase-auth-api.zzzd)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Precondition encodePrecondition(com.google.firebase.firestore.model.mutation.Precondition)
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory getFactory()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Void invoke(java.lang.Throwable)
com.google.firebase.auth.ActionCodeSettings: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.WriteRequest: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.GrpcUtil$4: GrpcUtil$4()
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
io.grpc.internal.ForwardingManagedChannel: io.grpc.ManagedChannel shutdown()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void updateGlobalHeartBeat(long)
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType getMessageType()
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.android.gms.common.internal.service.zai: zai(android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzbi zzf(com.google.android.gms.internal.firebase-auth-api.zzbh)
androidx.lifecycle.ViewModel: void onCleared()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: boolean hasNext()
com.google.firestore.v1.Document: com.google.firestore.v1.Document getDefaultInstance()
com.google.android.gms.internal.firebase-auth-api.zzqc: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: StructuredQuery$CompositeFilter$Operator(java.lang.String,int,int)
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: void stop()
io.grpc.internal.AtomicBackoff$State: long get()
com.google.android.gms.internal.firebase-auth-api.zzaby: int hashCode()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.stats.WakeLock: void release()
com.google.protobuf.LazyField$LazyEntry: java.lang.Object setValue(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzvj: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firestore.admin.v1.Index$IndexField$Order: Index$IndexField$Order(java.lang.String,int,int)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter access$700()
com.google.android.gms.internal.firebase-auth-api.zzup: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zza(int,int)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: void run()
com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicBooleanMapEntry(int,boolean,java.lang.Object,com.google.protobuf.MapEntryLite$Metadata)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue delete()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long,boolean)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.gms.signin.internal.zaa: zaa()
com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)
com.google.firebase.firestore.core.UserData$ParseAccumulator: void addToFieldTransforms(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.mutation.TransformOperation)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.grpc.okhttp.AsyncSink: void flush()
com.google.firebase.firestore.proto.WriteBatch: void access$100(com.google.firebase.firestore.proto.WriteBatch,int)
com.google.android.gms.common.internal.BaseGmsClient: void onConnectionSuspended(int)
com.google.firebase.components.Component: java.util.Set getProvidedInterfaces()
com.google.firebase.firestore.LoadBundleTask: void updateProgress(com.google.firebase.firestore.LoadBundleTaskProgress)
com.google.android.gms.internal.firebase-auth-api.zzabt: java.lang.Object clone()
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdv: zzdv(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
com.google.firebase.firestore.GeoPoint: int compareTo(com.google.firebase.firestore.GeoPoint)
com.google.android.gms.internal.firebase-auth-api.zzak: java.util.List subList(int,int)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: float getFloat(java.lang.Object,long)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
okio.RealBufferedSource: java.lang.String toString()
com.google.protobuf.Protobuf: com.google.protobuf.Protobuf getInstance()
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.Persistence getPersistence()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
io.flutter.plugins.firebase.firestore.streamhandler.SnapshotsInSyncStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firebase.firestore.core.View$DocumentChanges: boolean needsRefill()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: int getFieldNumber()
kotlinx.coroutines.internal.StackTraceRecoveryKt: int frameIndex(java.lang.StackTraceElement[],java.lang.String)
com.google.protobuf.ByteString$SystemByteArrayCopier: byte[] copyFrom(byte[],int,int)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.common.zzg: zzg(byte[])
com.google.android.gms.internal.firebase-auth-api.zzct: int zze()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzv(java.lang.Object,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.grpc.internal.InternalSubchannel: void access$2500(io.grpc.internal.InternalSubchannel,io.grpc.Status)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: void receiveTransactionResponse(java.util.Map)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
io.grpc.okhttp.internal.framed.Http2$FrameLogger: Http2$FrameLogger()
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.NameResolver$ConfigOrError access$300(io.grpc.internal.DnsNameResolver$InternalResolutionResult)
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: void arrangeTimeout(java.util.concurrent.ScheduledExecutorService)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi: void onDownloadStart(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi$Reply)
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.ConnectionResult zaa()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.location.LocationAvailability: void writeToParcel(android.os.Parcel,int)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.ManagedChannelBuilder keepAliveTime(long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zzxi: void run()
io.grpc.CompressorRegistry: io.grpc.CompressorRegistry getDefaultInstance()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: LogEventDropped$Reason(java.lang.String,int,int)
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: com.google.android.datatransport.runtime.time.Clock getWallClock()
com.google.android.gms.internal.firebase-auth-api.zzts: void zzb(java.lang.Object)
com.google.android.gms.internal.auth-api-phone.zzv: com.google.android.gms.common.Feature[] getApiFeatures()
io.grpc.CallOptions: io.grpc.CallOptions withStreamTracerFactory(io.grpc.ClientStreamTracer$Factory)
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList createAsList()
com.google.android.gms.internal.firebase-auth-api.zzku: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzy: com.google.android.gms.internal.firebase-auth-api.zzzy zzb(java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyo: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.grpc.Status$StatusCodeMarshaller: byte[] toAsciiString(java.lang.Object)
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: void writeDouble(double)
com.google.android.gms.internal.safetynet.zzc: void zza(android.os.Parcel,android.os.IInterface)
com.google.common.collect.Lists: int indexOfRandomAccess(java.util.List,java.lang.Object)
com.baseflow.geolocator.LocationServiceHandlerImpl: void stopListening()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
com.google.android.gms.internal.firebase-auth-api.zzoj: byte[] zzb(byte[],byte[])
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
com.google.android.gms.internal.firebase-auth-api.zzxt: boolean zzd()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter access$1900()
io.grpc.okhttp.OkHttpWritableBuffer: okio.Buffer buffer()
com.google.android.gms.internal.location.zzbe: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue access$000()
com.google.firebase.firestore.core.ViewSnapshot: boolean didSyncStateChange()
io.flutter.plugins.googlemaps.MarkerController: boolean isInfoWindowShown()
io.grpc.okhttp.internal.framed.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
io.grpc.internal.AbstractClientStream$TransportState: void inboundTrailersReceived(io.grpc.Metadata,io.grpc.Status)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.google.android.gms.internal.firebase-auth-api.zztx: void zze(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzzg,com.google.android.gms.internal.firebase-auth-api.zzwx)
com.google.firebase.firestore.local.MemoryBundleCache: com.google.firebase.firestore.bundle.BundleMetadata getBundleMetadata(java.lang.String)
com.google.protobuf.UnmodifiableLazyStringList$1: void set(java.lang.Object)
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzL()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.firebase.auth.AuthCredential getCredential(java.util.Map)
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String toString()
io.grpc.internal.RetriableStream: void pushbackHedging(java.lang.Integer)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task updatePhoneNumber(com.google.firebase.auth.PhoneAuthCredential)
kotlin.collections.EmptySet: java.util.Iterator iterator()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
com.google.firebase.auth.internal.zzk: java.lang.String zzb(java.lang.String)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getExternalStoragePath()
com.google.android.gms.internal.firebase-auth-api.zzpw: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onDetachedFromActivityForConfigChanges()
com.google.firebase.firestore.local.SQLiteIndexManager: byte[] encodeSingleElement(com.google.firestore.v1.Value)
kotlinx.coroutines.BeforeResumeCancelHandler: BeforeResumeCancelHandler()
com.google.firebase.firestore.local.SQLitePersistence$Query: int forEach(com.google.firebase.firestore.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzacu: zzacu()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbw zzd()
com.google.protobuf.CodedInputStream$StreamDecoder: java.lang.String readStringRequireUtf8()
com.google.android.gms.internal.firebase-auth-api.zzdz: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzgq: zzgq(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzgp[])
com.google.android.gms.internal.firebase-auth-api.zzfk: zzfk(byte[],byte[])
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
io.grpc.okhttp.OkHttpClientTransport: java.net.Socket access$1100(io.grpc.okhttp.OkHttpClientTransport,java.net.InetSocketAddress,java.net.InetSocketAddress,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledFuture access$402(io.grpc.internal.Rescheduler,java.util.concurrent.ScheduledFuture)
com.google.android.gms.internal.firebase-auth-api.zzei: zzei()
io.grpc.okhttp.OkHttpProtocolNegotiator: java.lang.String negotiate(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions title(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
com.google.android.gms.maps.internal.zzbs: com.google.android.gms.dynamic.IObjectWrapper toScreenLocation(com.google.android.gms.maps.model.LatLng)
io.grpc.internal.DelayedClientCall$DelayedListener: void onMessage(java.lang.Object)
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor$Builder newBuilder()
com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[])
com.google.firebase.firestore.core.UserData$ParsedSetData: UserData$ParsedSetData(com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.FieldMask,java.util.List)
com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)
com.google.android.datatransport.runtime.backends.BackendResponse: BackendResponse()
com.google.android.gms.maps.model.zzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.core.Transaction: void delete(com.google.firebase.firestore.model.DocumentKey)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setMccMnc(java.lang.String)
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State valueOf(java.lang.String)
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] getMethodInvocationMethodKeyAllowlist()
androidx.webkit.internal.WebViewProviderFactoryAdapter: java.lang.String[] getWebViewFeatures()
com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()
io.grpc.internal.InUseStateAggregator: boolean anyObjectInUse(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzkd: com.google.android.gms.internal.firebase-auth-api.zzkd zzc()
io.flutter.plugins.googlemaps.GoogleMapController: void setScrollGesturesEnabled(boolean)
io.grpc.internal.ClientCallImpl: io.grpc.Context access$200(io.grpc.internal.ClientCallImpl)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.firestore.v1.Target: com.google.firestore.v1.Target$Builder newBuilder()
io.grpc.internal.AtomicBackoff: java.util.concurrent.atomic.AtomicLong access$100(io.grpc.internal.AtomicBackoff)
androidx.webkit.internal.WebkitToCompatConverter: android.webkit.WebResourceError convertWebResourceError(java.lang.reflect.InvocationHandler)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: AutoConfiguredLoadBalancerFactory$NoopLoadBalancer()
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String getDisplayName()
com.google.firebase.internal.InternalTokenResult: int hashCode()
com.google.android.gms.common.internal.service.zao: com.google.android.gms.tasks.Task log(com.google.android.gms.common.internal.TelemetryData)
com.google.android.datatransport.runtime.AutoValue_TransportContext: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzcs: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.FirebaseApp: boolean isDefaultApp()
com.google.android.gms.internal.firebase-auth-api.zzmb: void zzg(com.google.android.gms.internal.firebase-auth-api.zzmb,int)
com.google.android.gms.internal.firebase-auth-api.zzpy: zzpy(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.googlemaps.CirclesController: void addCircle(java.lang.Object)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor defaultMarker(float)
com.google.protobuf.AbstractProtobufList: AbstractProtobufList()
com.google.android.gms.dynamic.IObjectWrapper$Stub: com.google.android.gms.dynamic.IObjectWrapper asInterface(android.os.IBinder)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStreamReader: void readUInt64List(java.util.List)
com.google.firestore.v1.Target: void access$2500(com.google.firestore.v1.Target,com.google.protobuf.ByteString)
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.Feature zaB(com.google.android.gms.common.Feature[])
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator iteratorFrom(java.lang.Object)
io.grpc.internal.ServiceConfigUtil: java.util.Map getRetryPolicyFromMethodConfig(java.util.Map)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.IndexBackfiller getIndexBackfiller()
com.google.android.gms.internal.firebase-auth-api.zzadg: void zzn(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabg)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
com.google.android.gms.internal.firebase-auth-api.zzqj: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount(java.lang.Class,int)
io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzzf: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(java.lang.Iterable)
io.grpc.Deadline: java.lang.String toString()
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDragStart(java.lang.String,com.google.android.gms.maps.model.LatLng)
com.google.android.gms.internal.firebase-auth-api.zzfv: com.google.android.gms.internal.firebase-auth-api.zzpo zza()
com.squareup.okhttp.HttpUrl$Builder: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zzaek: java.util.ListIterator listIterator(int)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: UrlLauncher$LaunchStatus(java.lang.String,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.google.firebase.firestore.local.DocumentReference: DocumentReference(com.google.firebase.firestore.model.DocumentKey,int)
com.google.protobuf.AbstractParser: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite)
com.google.protobuf.SchemaUtil: java.lang.Class getGeneratedMessageClass()
com.google.common.math.IntMath: boolean isPowerOfTwo(int)
io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer setCompressor(io.grpc.Compressor)
com.google.firestore.v1.Target$Builder: com.google.firestore.v1.Target$Builder setDocuments(com.google.firestore.v1.Target$DocumentsTarget)
com.google.firebase.firestore.core.NotInFilter: boolean matches(com.google.firebase.firestore.model.Document)
com.google.android.gms.common.GoogleApiAvailability: GoogleApiAvailability()
com.google.firebase.firestore.local.IndexBackfiller: int writeEntriesForCollectionGroup(java.lang.String,int)
io.grpc.internal.DelayedClientCall$1: void run()
com.google.firebase.firestore.model.MutableDocument: MutableDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.MutableDocument$DocumentType,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.MutableDocument$DocumentState)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzb(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzxy,com.google.android.gms.internal.firebase-auth-api.zzvs)
okio.SegmentedByteString: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmh zzf(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)
io.grpc.internal.JsonUtil: java.util.List getList(java.util.Map,java.lang.String)
com.google.android.gms.common.api.internal.zabq: zabq(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.GoogleApi)
com.google.android.gms.cloudmessaging.zza: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzxr: void zzf(com.google.firebase.FirebaseApp,java.lang.String,int)
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: int hashCode()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getClickAction()
androidx.webkit.internal.SafeBrowsingResponseImpl: SafeBrowsingResponseImpl(android.webkit.SafeBrowsingResponse)
com.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zza(com.google.android.gms.tasks.zzl)
com.google.android.gms.maps.MapView: void onDestroy()
com.google.firebase.firestore.model.TargetIndexMatcher: boolean matchesOrderBy(com.google.firebase.firestore.core.OrderBy,com.google.firebase.firestore.model.FieldIndex$Segment)
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String getFieldPath()
androidx.collection.ArrayMap: ArrayMap()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void onReceivedRequestError(android.webkit.WebViewClient,android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.grpc.ClientStreamTracer$StreamInfo$Builder: ClientStreamTracer$StreamInfo$Builder()
com.google.android.gms.internal.firebase-auth-api.zzfs: void zzc(com.google.android.gms.internal.firebase-auth-api.zzmx)
io.grpc.internal.NoopClientStream: void cancel(io.grpc.Status)
com.google.protobuf.NioByteString: int partialIsValidUtf8(int,int,int)
com.google.protobuf.FloatArrayList: float setFloat(int,float)
com.google.common.collect.RegularImmutableMap: RegularImmutableMap(java.lang.Object,java.lang.Object[],int)
com.google.protobuf.FloatArrayList: java.lang.Float set(int,java.lang.Float)
com.google.protobuf.FloatArrayList: int indexOf(java.lang.Object)
com.google.firebase.auth.internal.zzx: void zzq(boolean)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.ListenerRegistration addSnapshotsInSyncListener(java.util.concurrent.Executor,java.lang.Runnable)
io.grpc.okhttp.OkHttpSettingsUtil: int get(io.grpc.okhttp.internal.framed.Settings,int)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.core.SyncEngine getSyncEngine()
com.google.android.gms.internal.firebase-auth-api.zzfg: void zza(com.google.android.gms.internal.firebase-auth-api.zzmb)
io.grpc.internal.Http2ClientStreamTransportState$1: byte[] toAsciiString(java.lang.Object)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: java.util.List getComponents()
io.flutter.plugins.googlemaps.PolygonController: void setPoints(java.util.List)
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setZoomGesturesEnabled(boolean)
com.google.android.gms.common.internal.zal: void zac()
com.google.firebase.firestore.model.Values: boolean contains(com.google.firestore.v1.ArrayValueOrBuilder,com.google.firestore.v1.Value)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firestore.v1.Value decodeValue(org.json.JSONObject)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] values()
com.google.android.gms.internal.firebase-auth-api.zzzo: zzzo(int,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzli: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zznk zzb()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzB(int,java.util.List,boolean)
com.google.firebase.firestore.proto.MaybeDocument: boolean getHasCommittedMutations()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
com.google.firestore.v1.Value: void access$1100(com.google.firestore.v1.Value,com.google.protobuf.Timestamp)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()
com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()
com.google.android.gms.internal.location.zzbg: java.lang.Object createFromParcel(android.os.Parcel)
com.baseflow.geolocator.location.FusedLocationClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Circle addCircle(com.google.android.gms.maps.model.CircleOptions)
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.Unconfined: java.lang.String toString()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.grpc.Deadline: boolean isBefore(io.grpc.Deadline)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: AtProtobuf$ProtobufImpl(int,com.google.firebase.encoders.proto.Protobuf$IntEncoding)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: boolean readBool()
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.remote.AndroidConnectivityMonitor createConnectivityMonitor(com.google.firebase.firestore.core.ComponentProvider$Configuration)
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
com.google.firebase.firestore.index.OrderedCodeWriter: OrderedCodeWriter()
com.google.protobuf.ArrayDecoders: int skipField(int,byte[],int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.protobuf.BooleanArrayList: int size()
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setDescription(java.lang.String)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getRefreshToken()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: androidx.lifecycle.Lifecycle access$100(io.flutter.plugins.googlemaps.GoogleMapsPlugin)
io.grpc.Contexts: io.grpc.Status statusFromCancelled(io.grpc.Context)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
com.google.protobuf.BinaryReader$SafeHeapReader: void readEnumList(java.util.List)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback: void onLost(android.net.Network)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.messaging.NotificationParams: java.lang.String getNotificationChannelId()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.database.collection.ImmutableSortedMap acknowledgeBatch(com.google.firebase.firestore.model.mutation.MutationBatchResult)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
com.google.firebase.firestore.local.SQLiteTargetCache: long getHighestListenSequenceNumber()
com.google.android.gms.common.api.internal.zzd: void onStart()
com.google.protobuf.UnknownFieldSetLiteSchema: void addVarint(com.google.protobuf.UnknownFieldSetLite,int,long)
io.flutter.plugins.googlemaps.PolylineBuilder: void setJointType(int)
com.google.firebase.auth.GetTokenResult: long zza(java.lang.String)
io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder newBuilder()
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String encodeKey(com.google.firebase.firestore.model.DocumentKey)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$StorageMetricsEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.StorageMetrics,com.google.firebase.encoders.ObjectEncoderContext)
com.baseflow.geolocator.errors.ErrorCodes: ErrorCodes(java.lang.String,int)
kotlin.jvm.internal.StringCompanionObject: StringCompanionObject()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,android.app.PendingIntent)
io.grpc.ManagedChannel: ManagedChannel()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode remove(java.lang.Object,java.util.Comparator)
com.google.android.gms.maps.model.zzt: com.google.android.gms.maps.model.Tile getTile(int,int,int)
com.google.protobuf.CodedInputStream$ArrayDecoder: byte readRawByte()
com.google.firebase.firestore.remote.WatchChange$DocumentChange: WatchChange$DocumentChange(java.util.List,java.util.List,com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.MutableDocument)
com.google.firebase.messaging.ImageDownload: byte[] blockingDownloadBytes()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void clearFocus()
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
com.google.firestore.v1.Value: java.lang.String getStringValue()
com.google.firestore.admin.v1.Index$Builder: Index$Builder(com.google.firestore.admin.v1.Index$1)
com.google.firestore.v1.MapValue: int getFieldsCount()
com.baseflow.geolocator.location.LocationClient: boolean checkLocationService(android.content.Context)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getAnalyticsLabel()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.android.gms.safetynet.zza: java.lang.String getJwsResult()
androidx.tracing.Trace: void endSection()
com.google.android.gms.internal.firebase-auth-api.zzrw: java.lang.String zzb()
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: com.google.firebase.firestore.model.mutation.Overlay decodeOverlay(byte[],int)
com.google.android.gms.common.util.DeviceProperties: boolean isWearable(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzur: zzur(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfp: byte[] zze(byte[],byte[])
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: BaseImplementation$ApiMethodImpl(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient)
io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ConnectionClientTransport delegate()
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void buffer(byte)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setHasGesture(java.lang.Boolean)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue serverTimestamp()
io.flutter.plugins.googlemaps.PolygonController: void setZIndex(float)
com.google.android.gms.dynamite.zzg: zzg()
com.google.android.gms.internal.maps.zzab: void zzt(int)
com.google.android.gms.internal.maps.zzy: void zzs(java.util.List)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int getTotalBytesRead()
com.google.android.gms.internal.firebase-auth-api.zzxr: boolean zzg(com.google.firebase.FirebaseApp)
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
com.google.firebase.auth.GithubAuthCredential: java.lang.String getSignInMethod()
com.google.firebase.database.collection.ImmutableSortedSet: boolean contains(java.lang.Object)
io.grpc.internal.ServiceConfigUtil$PolicySelection: boolean equals(java.lang.Object)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] buildHttp2CodeMap()
com.squareup.okhttp.Headers$Builder: java.util.List access$000(com.squareup.okhttp.Headers$Builder)
com.google.android.gms.common.api.internal.zabq: void zaE(com.google.android.gms.common.api.Status,java.lang.Exception,boolean)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApi$1: void success(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.firebase.firestore.local.LocalSerializer: com.google.firestore.v1.Document encodeDocument(com.google.firebase.firestore.model.Document)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason convertToReason(int)
com.google.android.gms.location.LocationResult: int hashCode()
com.google.android.gms.common.api.internal.zabk: zabk(android.os.Handler)
com.google.firebase.firestore.proto.Target: com.google.firestore.v1.Target$QueryTarget getQuery()
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzv(int,java.util.List,boolean)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: java.util.Map discover(android.content.Context)
io.grpc.okhttp.AsyncSink: okio.Buffer access$200(io.grpc.okhttp.AsyncSink)
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzf)
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: Platform$JdkAlpnPlatform(java.security.Provider,java.lang.reflect.Method,java.lang.reflect.Method,io.grpc.okhttp.internal.Platform$1)
com.google.protobuf.CodedOutputStream: void checkNoSpaceLeft()
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzc()
com.google.firestore.v1.Cursor: void ensureValuesIsMutable()
io.flutter.plugins.googlemaps.GoogleMapController$2: GoogleMapController$2(java.lang.Runnable)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder: AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder()
com.google.android.gms.internal.firebase-auth-api.zzla: zzla()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String availableFirebaseOptions(java.lang.String,java.lang.String,java.lang.String)
io.grpc.internal.ProxyDetectorImpl: java.net.InetSocketAddress overrideProxy(java.lang.String)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: boolean equals(java.lang.Object)
io.grpc.okhttp.OkHttpClientStream$TransportState: void runOnTransportThread(java.lang.Runnable)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.LoadBundleTask loadBundle(java.io.InputStream)
com.google.protobuf.IntArrayList: void addInt(int,int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
com.google.android.gms.internal.firebase-auth-api.zzmb: void zzh(com.google.android.gms.internal.firebase-auth-api.zzmb,int)
com.google.protobuf.ArrayDecoders: float decodeFloat(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzh(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: TopicsSyncTask$ConnectivityChangeReceiver(com.google.firebase.messaging.TopicsSyncTask,com.google.firebase.messaging.TopicsSyncTask)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.DocumentChange getDocumentChange()
com.google.android.gms.common.util.DeviceProperties: boolean isWearableWithoutPlayStore(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzsx: void zzb(java.lang.Object)
com.google.firestore.v1.Write: void ensureUpdateTransformsIsMutable()
com.google.android.gms.internal.location.zzav: void notifyListener(java.lang.Object)
com.google.android.gms.common.api.internal.zabn: zabn(com.google.android.gms.common.api.internal.zabq,int)
androidx.core.os.ExecutorCompat$HandlerExecutor: ExecutorCompat$HandlerExecutor(android.os.Handler)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.MessageLite getDefaultInstanceForType()
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.String getStartServiceAction()
com.google.firebase.firestore.model.FieldIndex$IndexOffset: com.google.firebase.firestore.model.FieldIndex$IndexOffset createSuccessor(com.google.firebase.firestore.model.SnapshotVersion,int)
com.google.android.gms.internal.firebase-auth-api.zzbb: java.lang.Class zzd()
com.google.common.base.Platform: boolean stringIsNullOrEmpty(java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
com.google.android.gms.internal.firebase-auth-api.zzfv: java.lang.Class zzb()
com.google.protobuf.Utf8: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: boolean mutationQueuesContainKey(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.auth.ActionCodeUrl: java.lang.String getCode()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void postUrl(java.lang.Long,java.lang.String,byte[])
androidx.fragment.app.FragmentManagerImpl: void detachFragment(androidx.fragment.app.Fragment)
io.grpc.internal.RetriableStream: void setCompressor(io.grpc.Compressor)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzkw: com.google.android.gms.internal.firebase-auth-api.zzkw zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: void saveOverlay(int,com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Mutation)
io.flutter.plugins.googlemaps.PolylinesController: void changePolyline(java.lang.Object)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: com.google.firebase.firestore.model.MutableDocument decodeMaybeDocument(byte[],int,int)
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse getDefaultInstance()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: void set(io.flutter.plugins.webviewflutter.Releasable)
io.flutter.plugins.googlemaps.MarkerController: void setDraggable(boolean)
com.google.protobuf.CodedInputStream$ArrayDecoder: void recomputeBufferSizeAfterLimit()
com.google.firebase.auth.zzah: java.lang.Object createFromParcel(android.os.Parcel)
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: java.util.List mutableListAt(java.lang.Object,long)
com.google.protobuf.AbstractMessageLite: com.google.protobuf.UninitializedMessageException newUninitializedMessageException()
com.google.common.collect.ImmutableList: java.lang.Object remove(int)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableCollection createValues()
com.google.android.gms.internal.maps.zzab: void zzA(float)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$2: FlutterFirebaseMessagingBackgroundExecutor$2(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor,java.util.Map)
io.grpc.internal.DelayedClientTransport: java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: boolean mutationQueuesContainKey(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] access$000(com.google.firebase.database.collection.ArraySortedMap)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
com.google.firebase.messaging.TopicOperation: TopicOperation(java.lang.String,java.lang.String)
com.google.firebase.firestore.core.FieldFilter: java.util.List getFlattenedFilters()
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
com.google.android.gms.common.api.internal.zag: void zaf(com.google.android.gms.common.api.internal.zabq)
com.google.android.gms.internal.firebase-auth-api.zzpm: byte[] zzb(byte[])
com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder: StructuredQuery$UnaryFilter$Builder()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder ignoreNullValues(boolean)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
com.google.protobuf.CodedInputStreamReader: void readStringList(java.util.List)
io.grpc.okhttp.OutboundFlowController: OutboundFlowController(io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.internal.framed.FrameWriter)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiNoLongerDisplayed()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task sendEmailVerification()
com.google.firestore.admin.v1.Index: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.messaging.Store: void deleteAll()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.grpc.NameResolver$Listener2: NameResolver$Listener2()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.firebase.firestore.LoadBundleTask: void setResult(com.google.firebase.firestore.LoadBundleTaskProgress)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getDocuments(java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zzju: void zzg(com.google.android.gms.internal.firebase-auth-api.zzju,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp getReadTime()
com.google.firebase.firestore.Query: com.google.android.gms.tasks.Task get(com.google.firebase.firestore.Source)
com.google.protobuf.SchemaUtil: int computeSizeBoolList(int,java.util.List,boolean)
com.google.firebase.firestore.UserDataWriter: java.util.Map convertObject(java.util.Map)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
com.google.android.gms.internal.firebase-auth-api.zzaej: void remove()
io.grpc.internal.DelayedClientCall$1DrainListenerRunnable: void runInContext()
com.google.firebase.firestore.core.SyncEngine: int listen(com.google.firebase.firestore.core.Query)
io.grpc.Status: io.grpc.Status fromCodeValueSlow(byte[])
io.grpc.internal.ConnectivityStateManager: void notifyWhenStateChanged(java.lang.Runnable,java.util.concurrent.Executor,io.grpc.ConnectivityState)
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zzg(byte[],byte[])
io.perfmark.Impl: void event(java.lang.String,io.perfmark.Tag)
com.google.protobuf.UnmodifiableLazyStringList$2: java.lang.String next()
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean)
androidx.fragment.app.FragmentManager: FragmentManager()
io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: InternalSubchannel$CallTracingTransport$1$1(io.grpc.internal.InternalSubchannel$CallTracingTransport$1,io.grpc.internal.ClientStreamListener)
com.google.protobuf.CodedOutputStream: int computeDoubleSize(int,double)
com.google.firebase.firestore.core.Query: java.util.Comparator comparator()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeFixed64NoTag(long)
com.google.firebase.auth.FacebookAuthCredential: java.lang.String getProvider()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.database.collection.ArraySortedMap: boolean containsKey(java.lang.Object)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: ClientCallImpl$ClientStreamListenerImpl$1StreamClosed(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl,io.perfmark.Link,io.grpc.Status,io.grpc.Metadata)
okio.AsyncTimeout$2: void close()
io.grpc.internal.InternalSubchannel: void access$700(io.grpc.internal.InternalSubchannel)
com.google.firebase.auth.internal.zzaz: java.util.List zza(org.json.JSONArray)
com.google.protobuf.FieldSet: FieldSet()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zztm: void zzb(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjc: zzjc()
com.google.protobuf.CodedInputStreamReader: void readSInt32List(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzd()
com.google.android.gms.internal.firebase-auth-api.zzyr: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzcm: void zze(com.google.android.gms.internal.firebase-auth-api.zziz)
io.grpc.util.RoundRobinLoadBalancer: java.util.Set setsDifference(java.util.Set,java.util.Set)
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.protobuf.ByteString getLastStreamToken()
com.google.android.gms.common.internal.zzo: int zza()
androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)
com.google.android.gms.maps.internal.zzg: zzg(android.os.IBinder)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.local.SQLitePersistence: void access$200(android.database.sqlite.SQLiteProgram,java.lang.Object[])
com.google.firebase.firestore.util.CustomClassMapper: java.lang.Object serialize(java.lang.Object)
com.google.protobuf.CodedInputStream$ArrayDecoder: long readUInt64()
androidx.fragment.app.FragmentManagerImpl: void dispatchResume()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void data(boolean,int,okio.Buffer,int)
com.google.android.datatransport.runtime.EncodedPayload: java.lang.String toString()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.ResourcePath decodeQueryPath(java.lang.String)
com.google.protobuf.Utf8$UnsafeProcessor: int partialIsValidUtf8(int,byte[],int,int)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setSourceExtension(byte[])
okio.RealBufferedSource: boolean request(long)
kotlin.ranges.IntRange: int hashCode()
io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl: void dispose(android.webkit.DownloadListener,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi$Reply)
com.google.firebase.firestore.model.BasePath: boolean isPrefixOf(com.google.firebase.firestore.model.BasePath)
io.grpc.okhttp.OkHttpClientTransport: int access$2400(io.grpc.okhttp.OkHttpClientTransport)
com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)
com.google.firebase.firestore.core.View: java.util.List updateLimboDocuments()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: boolean isAvailable(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzcm: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: void handleNotInUse()
androidx.core.app.NotificationCompatBuilder: android.app.Notification build()
io.grpc.internal.NoopClientStream: void request(int)
com.google.android.gms.common.api.GoogleApi: java.lang.String getContextAttributionTag()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
com.google.android.gms.internal.firebase-auth-api.zztq: zztq(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.components.Dependency: java.lang.Class getInterface()
com.google.android.gms.internal.firebase-auth-api.zzadz: boolean add(java.lang.Object)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.local.TargetData decodeTargetData(com.google.firebase.firestore.proto.Target)
androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()
com.google.protobuf.FieldType: int id()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: void onConfigurationChanged(android.content.res.Configuration)
com.google.protobuf.MapFieldLite: void mergeFrom(com.google.protobuf.MapFieldLite)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.Future submit(java.lang.Runnable)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zad()
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzi()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void initializeMethodChannel(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.gms.common.internal.zzu: int zza()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
io.grpc.LoadBalancerProvider: LoadBalancerProvider()
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
com.google.firebase.firestore.model.SnapshotVersion: int compareTo(com.google.firebase.firestore.model.SnapshotVersion)
com.google.firebase.messaging.threads.ThreadPriority: ThreadPriority(java.lang.String,int)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void readList(android.os.Parcel,int,java.util.List,java.lang.ClassLoader)
io.grpc.internal.DelayedStream$3: DelayedStream$3(io.grpc.internal.DelayedStream,io.grpc.Deadline)
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.animation.Animator)
com.google.firestore.v1.StructuredQuery: void access$9300(com.google.firestore.v1.StructuredQuery,com.google.firestore.v1.Cursor)
com.google.android.gms.common.api.internal.zzd: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.common.internal.zaab: java.lang.Object[] newArray(int)
io.grpc.Metadata$Key: java.lang.Object getMarshaller(java.lang.Class)
com.google.protobuf.Utf8$DecodeUtil: void access$1000(byte,byte,byte,byte,char[],int)
com.google.android.gms.internal.firebase-auth-api.zzcj: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.CodedInputStream$ArrayDecoder: CodedInputStream$ArrayDecoder(byte[],int,int,boolean,com.google.protobuf.CodedInputStream$1)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzK(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg)
androidx.collection.MapCollections$ArrayIterator: void remove()
io.grpc.internal.RetriableStream$1MaxOutboundMessageSizeEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onInitialized()
com.google.android.gms.internal.firebase-auth-api.zzdt: long zzc(byte[],int)
com.google.firebase.database.collection.LLRBRedValueNode: LLRBRedValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
io.grpc.internal.PickFirstLoadBalancerProvider: java.lang.String getPolicyName()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: boolean isStorageAtLimit()
com.squareup.okhttp.HttpUrl: java.util.List percentDecode(java.util.List,boolean)
io.grpc.internal.DnsNameResolver: java.util.Map maybeChooseServiceConfig(java.util.Map,java.util.Random,java.lang.String)
com.google.firebase.firestore.model.mutation.Precondition: com.google.firebase.firestore.model.mutation.Precondition updateTime(com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.gms.internal.firebase-auth-api.zzfy: com.google.android.gms.internal.firebase-auth-api.zzfy zzc(com.google.android.gms.internal.firebase-auth-api.zzhi,java.lang.Class,java.lang.Class)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.firebase.messaging.GmsRpc: java.lang.String getHashedFirebaseAppName()
com.tekartik.sqflite.SqflitePlugin: java.util.Map makeOpenResult(int,boolean,boolean)
com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setSource(java.lang.String)
com.google.protobuf.FloatArrayList: void removeRange(int,int)
com.google.protobuf.SchemaUtil: void writeBytesList(int,java.util.List,com.google.protobuf.Writer)
io.grpc.internal.OobChannel: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogEvents(java.util.List)
com.google.firebase.firestore.proto.WriteBatch: void setLocalWriteTime(com.google.protobuf.Timestamp)
com.google.firebase.firestore.Blob: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzi(java.lang.String)
com.google.android.gms.maps.internal.zzby: void setCompassEnabled(boolean)
com.google.firebase.auth.FirebaseAuthUserCollisionException: FirebaseAuthUserCollisionException(java.lang.String,java.lang.String)
kotlin.random.Random$Default: int nextBits(int)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getProduct()
com.google.firestore.v1.DocumentDelete: DocumentDelete()
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readRawLittleEndian32()
com.google.protobuf.MessageSchema: int oneofIntAt(java.lang.Object,long)
com.google.android.gms.dynamite.zzq: int zzg(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)
com.google.common.collect.ImmutableList$SubList: java.lang.Object[] internalArray()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzo(int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.protobuf.MessageSchema: long oneofLongAt(java.lang.Object,long)
com.google.firebase.firestore.model.FieldIndex$Segment: int compareTo(com.google.firebase.firestore.model.FieldIndex$Segment)
com.google.android.gms.dynamite.zzq: int zze()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.firebase.firestore.FirebaseFirestore getCachedFirebaseFirestoreInstanceForKey(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmg: zzmg()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setCompassEnabled(boolean)
com.google.firebase.firestore.remote.RemoteStore: void access$000(com.google.firebase.firestore.remote.RemoteStore)
io.grpc.okhttp.internal.framed.Http2: io.grpc.okhttp.internal.framed.FrameWriter newWriter(okio.BufferedSink,boolean)
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
com.google.android.gms.internal.firebase-auth-api.zzwz: zzwz()
com.google.android.gms.internal.firebase-auth-api.zzlq: zzlq()
com.google.android.gms.internal.firebase-auth-api.zzeg: int zzf()
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbf zza(com.google.android.gms.location.zzu,com.google.android.gms.internal.location.zzaj)
com.google.android.gms.cloudmessaging.Rpc: void zzg(android.content.Context,android.content.Intent)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
com.google.firebase.auth.internal.zzi: zzi(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readUInt32()
com.google.android.gms.internal.firebase-auth-api.zzbp: zzbp(java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzbo)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
com.google.android.gms.internal.location.zzk: android.os.IInterface createServiceInterface(android.os.IBinder)
com.google.firestore.v1.StructuredQuery$CompositeFilter: void access$2100(com.google.firestore.v1.StructuredQuery$CompositeFilter,com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator)
com.google.android.gms.maps.model.Marker: void setAnchor(float,float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: SchedulerConfig$ConfigValue()
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
com.google.protobuf.LongArrayList: void ensureIndexInRange(int)
com.google.firebase.firestore.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])
kotlin.collections.EmptyIterator: void remove()
io.grpc.internal.RetriableStream$Throttle: boolean isAboveThreshold()
io.grpc.internal.RetriableStream: long access$2800(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.model.Values: boolean arrayEquals(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getBodyLocalizationArgs()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl shutdown()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
com.google.protobuf.CodedInputStream$StreamDecoder: boolean tryRefillBuffer(int)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$Source access$100(com.google.firebase.firestore.core.UserData$ParseAccumulator)
com.google.android.gms.internal.firebase-auth-api.zzbs: zzbs(byte[],com.google.android.gms.internal.firebase-auth-api.zzbr)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions clickable(boolean)
com.google.android.gms.internal.firebase-auth-api.zzxh: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zza(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,com.google.android.gms.internal.firebase-auth-api.zzwt)
com.google.android.gms.safetynet.zzj: zzj()
kotlin.random.Random: Random()
com.google.android.gms.internal.firebase-auth-api.zzzk: com.google.android.gms.internal.firebase-auth-api.zzzk zzb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.grpc.okhttp.OutboundFlowController: void data(boolean,int,okio.Buffer,boolean)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onResume()
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.AutoValue_TransportContext: AutoValue_TransportContext(java.lang.String,byte[],com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.AutoValue_TransportContext$1)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.grpc.Metadata: java.util.logging.Logger access$1100()
com.google.android.gms.location.zzk: zzk()
com.google.firebase.components.ComponentRuntime: void processDependencies()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions snippet(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabx: void zzF(com.google.android.gms.internal.firebase-auth-api.zzabf)
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.LocationSettingsRequest build()
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
com.google.android.gms.common.internal.zzo: void zzg(java.lang.String)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List getAllAddresses()
com.google.firebase.firestore.remote.FirestoreChannel: com.google.android.gms.tasks.Task runRpc(io.grpc.MethodDescriptor,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdg: java.lang.String zzc()
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry)
com.google.android.gms.internal.firebase-auth-api.zzmh: zzmh()
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.FirebaseUser zzc(java.util.List)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo build()
com.google.android.gms.maps.internal.zzl: com.google.android.gms.dynamic.IObjectWrapper getView()
io.grpc.internal.DelayedClientCall$DelayedListener: void onClose(io.grpc.Status,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzwu: void run()
com.google.android.gms.internal.firebase-auth-api.zzai: boolean addAll(java.util.Collection)
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forException(java.lang.Exception)
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: FirebaseAuthCredentialsProvider(com.google.firebase.inject.Deferred)
com.google.android.gms.internal.firebase-auth-api.zzpu: java.lang.String zzb()
io.grpc.internal.RetriableStream: long access$2502(io.grpc.internal.RetriableStream,long)
kotlin.collections.EmptyIterator: void add(java.lang.Object)
io.grpc.okhttp.internal.framed.Hpack$Reader: int readByte()
com.google.firestore.v1.MapValue: java.util.Map access$100(com.google.firestore.v1.MapValue)
com.google.protobuf.MessageSchema: int type(int)
io.grpc.internal.ChannelTracer: void logOnly(io.grpc.InternalLogId,java.util.logging.Level,java.lang.String)
io.grpc.okhttp.ExceptionHandlingFrameWriter: int maxDataLength()
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzrd: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.os.LocaleListCompatWrapper: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: TaskApiCall$Builder(com.google.android.gms.common.api.internal.zacw)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String)
com.google.firebase.firestore.remote.RemoteStore$2: void onClose(io.grpc.Status)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
com.google.firebase.firestore.local.ReferenceSet: com.google.firebase.database.collection.ImmutableSortedSet removeReferencesForId(int)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
io.grpc.HttpConnectProxiedSocketAddress: HttpConnectProxiedSocketAddress(java.net.SocketAddress,java.net.InetSocketAddress,java.lang.String,java.lang.String,io.grpc.HttpConnectProxiedSocketAddress$1)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void stopListening()
io.grpc.internal.SerializingExecutor$AtomicHelper: SerializingExecutor$AtomicHelper()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: void onLowMemory()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
com.google.android.gms.location.zzak: zzak()
com.google.protobuf.Utf8$Processor: int partialIsValidUtf8(int,java.nio.ByteBuffer,int,int)
com.lyokone.location.FlutterLocationService: void enableBackgroundMode()
io.flutter.plugin.platform.PlatformViewsController: void access$1100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.grpc.internal.Http2Ping: void failed(java.lang.Throwable)
com.google.firebase.firestore.local.MemoryMutationQueue: int getHighestUnacknowledgedBatchId()
io.grpc.stub.AbstractAsyncStub: AbstractAsyncStub(io.grpc.Channel,io.grpc.CallOptions)
io.grpc.InternalConfigSelector: InternalConfigSelector()
com.google.firebase.installations.GetIdListener: GetIdListener(com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zze()
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
com.google.protobuf.ByteString$LiteralByteString: com.google.protobuf.CodedInputStream newCodedInput()
io.grpc.internal.DelayedStream$13: DelayedStream$13(io.grpc.internal.DelayedStream,boolean)
com.google.android.gms.internal.firebase-auth-api.zzgx: java.lang.String toString()
com.google.firebase.database.collection.LLRBRedValueNode: boolean isRed()
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq zzd()
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.List parseUserInfoList(java.util.List)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
io.grpc.internal.DelayedStream$1: DelayedStream$1(io.grpc.internal.DelayedStream,int)
com.google.protobuf.ListFieldSchema: ListFieldSchema(com.google.protobuf.ListFieldSchema$1)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
com.google.protobuf.ArrayDecoders: int decodePackedDoubleList(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.lyokone.location.BackgroundNotification: android.app.Notification build()
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase valueOf(java.lang.String)
io.grpc.internal.ManagedChannelImpl: io.grpc.ConnectivityState getState(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
com.google.protobuf.ArrayDecoders: int decodePackedFixed64List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.google.android.datatransport.cct.CctTransportBackend: CctTransportBackend(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)
com.google.android.gms.internal.firebase-auth-api.zzui: void zzb()
com.google.common.collect.RegularImmutableMap$EntrySet$1: int size()
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: JavaScriptChannelHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl$JavaScriptChannelCreator,io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl,android.os.Handler)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: ArrayTransformOperation(java.util.List)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zaG(com.google.android.gms.common.ConnectionResult,int)
com.lyokone.location.MethodCallHandlerImpl: void isBackgroundModeEnabled(io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
com.google.android.gms.common.internal.service.zai: void zae(com.google.android.gms.common.internal.TelemetryData)
io.flutter.plugins.googlemaps.GoogleMapController: int checkSelfPermission(java.lang.String)
androidx.fragment.app.FragmentController: void dispatchCreate()
com.google.protobuf.ByteString$LeafByteString: java.util.Iterator iterator()
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
androidx.versionedparcelable.ParcelImpl: int describeContents()
com.tekartik.sqflite.SqflitePlugin: boolean access$100(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
com.google.firebase.messaging.FirebaseMessagingService: void onDeletedMessages()
androidx.fragment.app.FragmentState: java.lang.String toString()
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.firestore.local.SQLitePersistence$Query: int first(com.google.firebase.firestore.util.Consumer)
com.google.android.gms.internal.auth-api-phone.zzd: void zza(android.os.Parcel,android.os.IInterface)
com.google.android.gms.internal.firebase-auth-api.zzaei: java.lang.Object next()
io.grpc.Deadline: void checkTicker(io.grpc.Deadline)
com.google.android.datatransport.cct.internal.LogRequest: LogRequest()
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
com.google.android.gms.signin.internal.zai: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.webviewflutter.InputAwareWebView$1: void run()
com.google.android.gms.internal.firebase-auth-api.zzdk: int[] zzd(byte[])
io.grpc.internal.GrpcUtil$3: java.util.concurrent.Executor create()
com.google.protobuf.MessageSchema: boolean isOneofCaseEqual(java.lang.Object,java.lang.Object,int)
com.baseflow.geolocator.permission.PermissionManager: int indexOf(java.lang.Object[],java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdi: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.common.api.Api: java.lang.String zad()
com.google.android.gms.internal.firebase-auth-api.zzrp: java.lang.Object[] newArray(int)
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger: void onPingTimeout()
com.google.firebase.messaging.MessagingAnalytics: boolean deliveryMetricsExportToBigQueryEnabled()
com.google.android.gms.internal.firebase-auth-api.zzadz: zzadz(com.google.android.gms.internal.firebase-auth-api.zzaeb,com.google.android.gms.internal.firebase-auth-api.zzady)
io.grpc.Attributes: int hashCode()
androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)
androidx.fragment.app.FragmentManagerImpl$5: FragmentManagerImpl$5(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isRegistered()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)
io.flutter.plugins.googlemaps.PolylineController: void setVisible(boolean)
io.grpc.internal.DelayedClientCall$DelayedListener$1: void run()
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzC(java.lang.String)
com.google.firebase.firestore.core.Transaction: Transaction(com.google.firebase.firestore.remote.Datastore)
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzhy zzb()
com.google.firebase.firestore.local.OverlayedDocument: com.google.firebase.firestore.model.Document getDocument()
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference access$5800()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
com.google.android.gms.internal.firebase-auth-api.zzlt: int zzf()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getRight()
com.google.android.gms.internal.firebase-auth-api.zzmb: int zzf()
androidx.core.os.LocaleListCompatWrapper: java.util.Locale get(int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
io.grpc.okhttp.internal.framed.Huffman: void buildTree()
com.google.android.gms.internal.firebase-auth-api.zzx: zzx()
com.google.firebase.auth.internal.GenericIdpActivity: android.net.Uri$Builder zzg(android.net.Uri$Builder,android.content.Intent,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.gms.maps.GoogleMap: void setOnInfoWindowClickListener(com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener)
androidx.localbroadcastmanager.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)
com.google.firebase.firestore.model.mutation.FieldMask: java.util.Set getMask()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(int)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean isSetterOverride(java.lang.reflect.Method,java.lang.reflect.Method)
com.google.protobuf.SmallSortedMap$EntrySet: boolean add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzcw: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzaaj: boolean addAll(java.util.Collection)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
com.google.firebase.firestore.model.ResourcePath: com.google.firebase.firestore.model.ResourcePath createPathWithSegments(java.util.List)
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,android.os.Parcelable)
com.google.android.gms.internal.firebase-auth-api.zzdm: zzdm(byte[],boolean)
com.google.android.gms.maps.model.Dot: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapController: void onPause(androidx.lifecycle.LifecycleOwner)
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.FirebaseFirestore getFirestore()
com.google.android.gms.internal.firebase-auth-api.zzzx: long zzb()
com.google.android.gms.internal.firebase-auth-api.zzrd: zzrd()
io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.Attributes getAttributes()
com.google.firebase.auth.GetTokenResult: java.lang.String getSignInSecondFactor()
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomIn()
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verifyAsIpAddress(java.lang.String)
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: com.google.firebase.firestore.util.CustomClassMapper$ErrorPath child(java.lang.String)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawBytes(int)
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.ListenerRegistration addSnapshotListener(com.google.firebase.firestore.MetadataChanges,com.google.firebase.firestore.EventListener)
com.google.protobuf.UnknownFieldSetLite: int hashCode(java.lang.Object[],int)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: BackendResponse$Status(java.lang.String,int)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean isConnected()
com.google.android.gms.internal.firebase-auth-api.zzad: java.lang.Object zza()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.fragment.app.FragmentManagerImpl: void removeRetainedFragment(androidx.fragment.app.Fragment)
io.grpc.Context: io.grpc.Context current()
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
com.google.android.gms.maps.model.TileOverlay: void setVisible(boolean)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
com.google.firestore.v1.ListenRequest$Builder: com.google.firestore.v1.ListenRequest$Builder setRemoveTarget(int)
com.google.firebase.firestore.util.AsyncQueue: com.google.android.gms.tasks.Task enqueueAndInitiateShutdown(java.lang.Runnable)
com.google.protobuf.FieldType: FieldType(java.lang.String,int,int,com.google.protobuf.FieldType$Collection,com.google.protobuf.JavaType)
com.google.android.gms.dynamite.zzc: zzc(java.lang.String,java.lang.ClassLoader)
com.google.protobuf.CodedOutputStreamWriter: void writeInt32List(int,java.util.List,boolean)
com.google.android.gms.maps.model.PolylineOptions: void writeToParcel(android.os.Parcel,int)
com.google.firebase.components.CycleDetector$ComponentNode: boolean isLeaf()
com.google.protobuf.LazyField: com.google.protobuf.MessageLite getValue()
com.google.android.datatransport.runtime.time.WallTimeClock: WallTimeClock()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.google.protobuf.CodedOutputStream$OutOfSpaceException: CodedOutputStream$OutOfSpaceException(java.lang.String,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzaah: zzaah(com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.core.ComponentProvider: void initialize(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.internal.firebase-auth-api.zzrd: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzy(com.google.android.gms.internal.firebase-auth-api.zzrm,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setFastestInterval(long)
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Object getValue()
io.flutter.plugins.googlemaps.CircleController: void setStrokeColor(int)
io.flutter.plugins.googlemaps.GoogleMapController: void setLiteModeEnabled(boolean)
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value$Builder newBuilder()
com.google.firebase.firestore.core.FieldFilter: java.lang.String toString()
com.google.android.gms.cloudmessaging.zzu: zzu(com.google.android.gms.cloudmessaging.Rpc,android.os.Bundle)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)
com.google.android.gms.internal.firebase-auth-api.zzzr: java.lang.Object[] newArray(int)
com.google.firestore.v1.DocumentMask: DocumentMask()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzD(int,java.util.List,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.google.android.gms.common.internal.BaseGmsClient: void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: void success(java.lang.Object)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse getDefaultInstance()
com.google.firebase.firestore.core.KeyFieldNotInFilter: boolean matches(com.google.firebase.firestore.model.Document)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.firebase-auth-api.zzacu: boolean zzb(com.google.android.gms.internal.firebase-auth-api.zzacz)
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy getAccuracy()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: java.util.Set immutableSetOf(java.lang.Object[])
io.flutter.plugins.androidintent.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzud: zzud()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int getTotalBytesRead()
com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)
com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)
io.grpc.internal.ForwardingClientStream: ForwardingClientStream()
io.grpc.internal.DelayedStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getNotificationPriority()
com.google.firebase.firestore.index.IndexByteEncoder: com.google.firebase.firestore.index.OrderedCodeWriter access$000(com.google.firebase.firestore.index.IndexByteEncoder)
io.grpc.internal.ApplicationThreadDeframer$1: ApplicationThreadDeframer$1(io.grpc.internal.ApplicationThreadDeframer,int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setPoints(java.util.List)
com.google.firebase.installations.remote.AutoValue_TokenResult: java.lang.String getToken()
com.google.gson.stream.JsonReader$1: JsonReader$1()
com.google.protobuf.SmallSortedMap: int getNumOverflowEntries()
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: ManagedChannelImpl$UncommittedRetriableStreamsRegistry(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
com.google.protobuf.CodedOutputStreamWriter: void writeBytesList(int,java.util.List)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()
com.google.firestore.v1.ExistenceFilter: int getCount()
com.google.android.gms.internal.maps.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringRequireUtf8()
com.google.android.gms.common.internal.zav: com.google.android.gms.common.internal.IAccountAccessor zab()
io.grpc.internal.ManagedChannelImpl$RealChannel: void updateConfigSelector(io.grpc.InternalConfigSelector)
com.google.android.gms.common.api.Status: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: UnsafeUtil$JvmMemoryAccessor(sun.misc.Unsafe)
com.google.android.gms.common.internal.zzt: android.content.Intent zzc(java.lang.String)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.google.firebase.firestore.model.MutableDocument: boolean equals(java.lang.Object)
io.grpc.okhttp.OkHttpProtocolNegotiator: java.lang.String[] protocolIds(java.util.List)
io.grpc.internal.Rescheduler$ChannelFutureRunnable: Rescheduler$ChannelFutureRunnable(io.grpc.internal.Rescheduler,io.grpc.internal.Rescheduler$1)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: void putByte(java.lang.Object,long,byte)
com.google.firebase.firestore.WriteBatch: com.google.android.gms.tasks.Task commit()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
androidx.fragment.app.Fragment: void initState()
com.google.firestore.v1.DocumentRemove: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
okio.Buffer: java.lang.String readUtf8LineStrict(long)
com.google.android.gms.maps.model.ButtCap: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
com.google.android.gms.internal.firebase-auth-api.zzdo: zzdo(byte[],int)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: DaggerTransportRuntimeComponent(android.content.Context,com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)
com.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
io.grpc.internal.SharedResourceHolder$2: SharedResourceHolder$2(io.grpc.internal.SharedResourceHolder,io.grpc.internal.SharedResourceHolder$Instance,io.grpc.internal.SharedResourceHolder$Resource,java.lang.Object)
com.google.firebase.firestore.core.DatabaseInfo: java.lang.String getPersistenceKey()
com.google.protobuf.UnmodifiableLazyStringList$2: UnmodifiableLazyStringList$2(com.google.protobuf.UnmodifiableLazyStringList)
com.google.firebase.firestore.core.SyncEngine: void notifyUser(int,io.grpc.Status)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.Integer getSdkVersion()
com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions zaa()
com.google.android.gms.dynamite.DynamiteModule: int zza(android.content.Context,java.lang.String,boolean)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
com.google.firebase.firestore.local.SQLiteSchema: java.util.List getTableColumns(java.lang.String)
com.google.android.gms.dynamite.zzr: zzr(android.os.IBinder)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: AutoConfiguredLoadBalancerFactory$FailingPicker(io.grpc.Status)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.proto.UnknownDocument encodeUnknownDocument(com.google.firebase.firestore.model.Document)
io.grpc.okhttp.AsyncSink$WriteRunnable: AsyncSink$WriteRunnable(io.grpc.okhttp.AsyncSink,io.grpc.okhttp.AsyncSink$1)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parsePartialFrom(com.google.protobuf.GeneratedMessageLite,byte[],int,int,com.google.protobuf.ExtensionRegistryLite)
com.google.protobuf.LazyFieldLite: com.google.protobuf.ByteString toByteString()
com.google.firebase.firestore.core.CompositeFilter$Operator: java.lang.String toString()
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: NotificationManagerCompat$ServiceConnectedEvent(android.content.ComponentName,android.os.IBinder)
com.google.firestore.v1.Target: void access$1900(com.google.firestore.v1.Target,com.google.firestore.v1.Target$QueryTarget)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.ListenerRegistration addSnapshotsInSyncListener(java.lang.Runnable)
com.google.protobuf.RopeByteString$PieceIterator: void remove()
androidx.window.R$id: R$id()
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task fetchSignInMethodsForEmail(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzsc: com.google.android.gms.common.api.Status zza()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.protobuf.CodedOutputStreamWriter: void writeString(int,java.lang.String)
com.google.protobuf.CodedInputStreamReader: java.lang.Object readMessage(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzf()
com.google.firebase.firestore.core.FirestoreClient: com.google.firebase.firestore.core.QueryListener listen(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.core.EventManager$ListenOptions,com.google.firebase.firestore.EventListener)
com.google.android.gms.internal.firebase-auth-api.zzue: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firebase.firestore.remote.OnlineStateTracker: OnlineStateTracker(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.OnlineStateTracker$OnlineStateCallback)
com.google.android.gms.common.api.Response: void setResult(com.google.android.gms.common.api.Result)
io.grpc.internal.ManagedChannelImpl: java.util.Set access$700(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzacr: void removeRange(int,int)
androidx.fragment.app.FragmentManagerImpl$3$1: FragmentManagerImpl$3$1(androidx.fragment.app.FragmentManagerImpl$3)
com.google.protobuf.MessageSchema: boolean isEnforceUtf8(int)
com.google.android.gms.maps.internal.zzw: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzc()
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: JndiResourceResolverFactory$JndiRecordFetcher()
com.google.android.gms.internal.firebase-auth-api.zzaek: java.util.List zzh()
io.grpc.internal.ServiceConfigUtil: java.util.Map getHedgingPolicyFromMethodConfig(java.util.Map)
io.grpc.internal.SerializingExecutor: SerializingExecutor(java.util.concurrent.Executor)
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.model.SnapshotVersion getLastRemoteSnapshotVersion()
com.google.protobuf.IntArrayList: void addInt(int)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: java.nio.ByteBuffer allocateBuffer(int)
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.firebase.firestore.bundle.BundleSerializer: java.util.List decodeOrderBy(org.json.JSONArray)
com.google.firebase.auth.zzl: void run()
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzlm zzb(com.google.android.gms.internal.firebase-auth-api.zzlt)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: void execute(java.lang.Runnable)
com.google.firebase.messaging.ProxyNotificationPreferences: android.content.SharedPreferences getPreference(android.content.Context)
com.google.protobuf.MessageSchema: int intAt(java.lang.Object,long)
com.google.firestore.v1.Target$DocumentsTarget: Target$DocumentsTarget()
com.google.protobuf.LazyStringArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
io.grpc.internal.CompositeReadableBuffer: int readableBytes()
com.google.protobuf.MapFieldLite: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzab(boolean)
com.google.firestore.v1.MapValue$Builder: com.google.firestore.v1.MapValue$Builder putAllFields(java.util.Map)
io.flutter.plugins.firebase.messaging.JobIntentService: void onDestroy()
io.grpc.internal.ManagedChannelOrphanWrapper: io.grpc.ManagedChannel shutdown()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult failed(java.lang.Exception)
com.google.android.gms.common.SupportErrorDialogFragment: com.google.android.gms.common.SupportErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)
com.google.firebase.firestore.core.FieldFilter: boolean isInequality()
com.google.protobuf.ByteString$AbstractByteIterator: ByteString$AbstractByteIterator()
io.grpc.internal.ManagedChannelImplBuilder: ManagedChannelImplBuilder(java.lang.String,io.grpc.internal.ManagedChannelImplBuilder$ClientTransportFactoryBuilder,io.grpc.internal.ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider)
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State substreamDrained(io.grpc.internal.RetriableStream$Substream)
com.google.firebase.firestore.local.SQLiteSchema: void createDataMigrationTable()
com.google.android.gms.internal.firebase-auth-api.zzun: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.common.api.internal.zzb: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.grpc.internal.OobChannel: io.grpc.internal.InternalSubchannel getInternalSubchannel()
io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses build()
com.google.android.gms.internal.firebase-auth-api.zzyu: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzft: zzft(com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzhj,byte[])
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getRight()
com.google.android.gms.common.internal.AccountAccessor: android.accounts.Account getAccountBinderSafe(com.google.android.gms.common.internal.IAccountAccessor)
com.squareup.okhttp.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)
com.google.protobuf.Internal: java.lang.Object mergeMessage(java.lang.Object,java.lang.Object)
com.google.protobuf.BinaryReader$SafeHeapReader: int readEnum()
com.google.firebase.firestore.core.ViewSnapshot: int hashCode()
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: Index$IndexField$ValueModeCase(java.lang.String,int,int)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode valueOf(java.lang.String)
com.google.firebase.auth.GetTokenResult: java.lang.String getSignInProvider()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzoh: byte[] zzb(byte[])
com.google.firebase.database.collection.ArraySortedMap$1: boolean hasNext()
com.google.firebase.auth.zzn: void zza(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.firebase.auth.FirebaseUser)
com.google.android.gms.internal.firebase-auth-api.zzbu: zzbu(java.lang.String,int,com.google.android.gms.internal.firebase-auth-api.zzbt)
com.google.firebase.firestore.core.CompositeFilter: java.lang.String toString()
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: AutoValue_Overlay(int,com.google.firebase.firestore.model.mutation.Mutation)
io.grpc.internal.AbstractManagedChannelImplBuilder: io.grpc.ManagedChannel build()
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)
com.google.firebase.database.collection.ImmutableSortedSet: java.util.Iterator iteratorFrom(java.lang.Object)
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
io.grpc.internal.ForwardingDeframerListener: void deframerClosed(boolean)
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zzb()
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
com.google.protobuf.NullValue: com.google.protobuf.NullValue valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzsz: zzsz(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: long getLong(long)
com.google.firebase.auth.FirebaseAuth: void zzH(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser,com.google.android.gms.internal.firebase-auth-api.zzyq,boolean,boolean)
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString access$400(com.google.protobuf.RopeByteString)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.google.protobuf.CodedInputStream$ArrayDecoder: int getTotalBytesRead()
com.google.firebase.firestore.local.LocalStore: void startIndexManager()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: byte getByte(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzmh: boolean zzl()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawLittleEndian64()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
io.grpc.okhttp.internal.framed.Http2$Writer: void ping(boolean,int,int)
com.google.protobuf.IntArrayList: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.OrderBy$Direction: OrderBy$Direction(java.lang.String,int,int)
com.tekartik.sqflite.operation.BaseOperation: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzj(int,java.util.List,boolean)
com.google.android.gms.maps.internal.zzby: void setZoomGesturesEnabled(boolean)
com.google.firebase.firestore.bundle.NamedQuery: boolean equals(java.lang.Object)
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,android.os.Bundle)
io.grpc.internal.MessageDeframer: void stopDelivery()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String getFormattedDate(long)
com.google.firebase.firestore.util.Util: com.google.android.gms.tasks.Continuation voidErrorTransformer()
io.grpc.CallOptions: boolean isWaitForReady()
com.google.firebase.FirebaseApp: void addLifecycleEventListener(com.google.firebase.FirebaseAppLifecycleListener)
androidx.collection.MapCollections$ValuesCollection: int size()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjr: void zze(com.google.android.gms.internal.firebase-auth-api.zzjr,int)
com.google.android.gms.common.api.internal.zabs: zabs(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.Feature,com.google.android.gms.common.api.internal.zabr)
com.google.android.gms.common.api.internal.zabq: void zav()
com.google.android.gms.common.api.Api$AbstractClientBuilder: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetLastKnownPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzuk: zzuk(com.google.firebase.auth.PhoneAuthCredential)
com.google.android.gms.common.internal.service.zam: zam(com.google.android.gms.common.internal.TelemetryData)
com.google.android.gms.internal.firebase-auth-api.zzabp: zzabp(boolean)
io.grpc.internal.DelayedStream$14: DelayedStream$14(io.grpc.internal.DelayedStream,io.grpc.DecompressorRegistry)
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
com.google.android.gms.common.api.internal.zacx: zacx()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.google.android.gms.maps.internal.zzg: boolean isBuildingsEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
com.google.firebase.components.OptionalProvider: void whenAvailable(com.google.firebase.inject.Deferred$DeferredHandler)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder builder()
com.google.android.gms.internal.firebase-auth-api.zzlt: com.google.android.gms.internal.firebase-auth-api.zzlt zzd()
com.google.protobuf.ByteString$LiteralByteString: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: void onNotInUse(io.grpc.internal.InternalSubchannel)
com.google.firebase.auth.internal.zzbm: void zze(com.google.firebase.auth.FirebaseAuth)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: AutoConfiguredLoadBalancerFactory$EmptyPicker()
com.google.firebase.firestore.remote.RemoteStore: void disableNetworkInternal()
com.google.firebase.firestore.bundle.BundleSerializer: void decodeFilter(java.util.List,org.json.JSONObject)
com.google.firebase.firestore.model.mutation.Mutation: java.util.Map localTransformResults(com.google.firebase.Timestamp,com.google.firebase.firestore.model.MutableDocument)
com.google.protobuf.RopeByteString$Balancer: RopeByteString$Balancer(com.google.protobuf.RopeByteString$1)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zzb: void onResume()
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.ClientMetrics,com.google.firebase.encoders.ObjectEncoderContext)
com.google.android.gms.internal.firebase-auth-api.zzjh: zzjh(com.google.android.gms.internal.firebase-auth-api.zzjg)
com.google.protobuf.UnsafeUtil: long getLong(long)
com.google.android.gms.maps.model.PolylineOptions: float getZIndex()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.Long getScrollY(java.lang.Long)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)
com.google.firestore.v1.StructuredQuery: void setWhere(com.google.firestore.v1.StructuredQuery$Filter)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task removeLocationUpdates(com.google.android.gms.location.LocationCallback)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
com.google.protobuf.SmallSortedMap$1: void makeImmutable()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.model.FieldPath getField()
com.google.protobuf.Utf8$UnsafeProcessor: boolean isAvailable()
com.google.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64SlowPath()
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
com.google.protobuf.MapFieldLite: int calculateHashCodeForMap(java.util.Map)
io.grpc.NameResolver$ConfigOrError: boolean equals(java.lang.Object)
com.google.protobuf.CodedOutputStreamWriter: void writeFloatList(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzcj: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzwd: java.lang.Object zza(java.lang.String,java.lang.reflect.Type)
io.flutter.plugins.googlemaps.MarkerController: void setConsumeTapEvents(boolean)
com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks: PhoneAuthProvider$OnVerificationStateChangedCallbacks()
com.google.firestore.v1.Write: void access$1800(com.google.firestore.v1.Write,com.google.firestore.v1.DocumentTransform$FieldTransform)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.cloudmessaging.zzg: void run()
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzmp zzd()
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue arrayUnion(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzao: void add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzrp: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzcb: void zzp(java.lang.String,java.util.Map,boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.firebase.firestore.model.mutation.SetMutation: java.lang.String toString()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.google.android.gms.internal.firebase-auth-api.zzpb: byte[] zzj(long[])
io.perfmark.PerfMark: io.perfmark.Tag createTag(java.lang.String)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] replaceInArray(java.lang.Object[],int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzbq: zzbq(java.lang.Object,byte[],int,int,int,com.google.android.gms.internal.firebase-auth-api.zzbn)
com.google.android.gms.internal.base.zaa: zaa(android.os.IBinder,java.lang.String)
com.tekartik.sqflite.SqflitePlugin: com.tekartik.sqflite.Database access$500(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.maps.internal.zzl: void onCreate(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zznb: void zzd(com.google.android.gms.internal.firebase-auth-api.zznb,java.lang.String)
io.grpc.internal.InternalSubchannel: io.grpc.InternalChannelz access$2600(io.grpc.internal.InternalSubchannel)
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.google.firebase.firestore.core.DocumentViewChange: com.google.firebase.firestore.model.Document getDocument()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.firestore.core.View: boolean shouldBeLimboDoc(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.local.SQLiteBundleCache: void saveBundleMetadata(com.google.firebase.firestore.bundle.BundleMetadata)
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzv(java.lang.Class)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.google.android.gms.internal.firebase-auth-api.zzaeg: void zzh(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaeh: java.lang.Object zzg(java.lang.Object)
io.grpc.internal.RetriableStream: void start(io.grpc.internal.ClientStreamListener)
com.google.android.gms.internal.firebase-auth-api.zzpo: zzpo(byte[],int,int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.nio.ByteBuffer slice(int,int)
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
com.google.android.gms.internal.firebase-auth-api.zzel: zzel()
io.grpc.internal.DelayedClientTransport: java.util.Collection access$700(io.grpc.internal.DelayedClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzck: zzck()
io.grpc.okhttp.OkHttpClientStream: java.lang.String access$1300(io.grpc.okhttp.OkHttpClientStream)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
com.google.android.gms.common.api.internal.zzd: void onStop()
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.googlemaps.MarkerController: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
io.grpc.ServiceProviders$1: int compare(java.lang.Object,java.lang.Object)
com.google.android.gms.auth.api.signin.zab: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzdt: long zzb(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzj(com.google.android.gms.internal.firebase-auth-api.zzzb)
com.google.firebase.auth.internal.zza: void onFailure(java.lang.Exception)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite)
io.grpc.internal.RetriableStream: void halfClose()
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.lang.String toString()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] values()
com.google.android.gms.internal.firebase-auth-api.zzqn: java.lang.Object[] newArray(int)
com.google.firebase.firestore.util.LogicUtils: boolean isSingleFieldFilter(com.google.firebase.firestore.core.Filter)
com.google.firebase.components.ComponentDiscovery: ComponentDiscovery(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)
com.google.android.gms.internal.firebase-auth-api.zzsd: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: AbstractStream$StreamObserver(com.google.firebase.firestore.remote.AbstractStream,com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.installations.AutoValue_InstallationTokenResult: AutoValue_InstallationTokenResult(java.lang.String,long,long,com.google.firebase.installations.AutoValue_InstallationTokenResult$1)
com.google.android.gms.internal.firebase-auth-api.zzag: java.lang.String zzb(java.lang.String,java.lang.Object[])
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.Internal$EnumLiteMap getEnumType()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: AutoBatchedLogRequestEncoder$LogRequestEncoder()
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
com.google.protobuf.CodedOutputStream: int computeFixed64Size(int,long)
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.model.FieldIndex getFieldIndex(com.google.firebase.firestore.core.Target)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzs(int)
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget$Builder newBuilder()
com.google.firebase.firestore.local.MemoryMutationQueue: java.util.List getAllMutationBatchesAffectingDocumentKeys(java.lang.Iterable)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.components.ComponentRuntime$Builder: ComponentRuntime$Builder(java.util.concurrent.Executor)
com.google.android.gms.common.zzj: byte[] zzf()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: int cleanUp()
com.google.android.gms.internal.firebase-auth-api.zzdz: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.auth.PlayGamesAuthCredential: void writeToParcel(android.os.Parcel,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.google.firebase.Timestamp$1: Timestamp$1()
com.google.firebase.firestore.core.FieldFilter$Operator: FieldFilter$Operator(java.lang.String,int,java.lang.String)
com.google.protobuf.Writer$FieldOrder: Writer$FieldOrder(java.lang.String,int)
com.google.protobuf.DoubleArrayList: java.lang.Object get(int)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.dynamic.ObjectWrapper: ObjectWrapper(java.lang.Object)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,int)
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch access$000()
com.google.protobuf.JavaType: java.lang.Class getBoxedType()
com.google.android.gms.tasks.zzad: void onCanceled()
io.flutter.plugins.googlemaps.Convert: android.graphics.Point toPoint(java.lang.Object,float)
com.google.android.gms.internal.firebase-auth-api.zzdz: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: boolean onStopJob(android.app.job.JobParameters)
io.grpc.internal.Http2Ping: void doExecute(java.util.concurrent.Executor,java.lang.Runnable)
com.google.protobuf.MessageSetSchema: void mergeFromHelper(com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32(int,int)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.webkit.internal.WebViewProviderFactoryAdapter: WebViewProviderFactoryAdapter(org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface)
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readFixed32()
io.flutter.plugins.webviewflutter.InputAwareWebView: void setContainerView(android.view.View)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()
com.google.android.gms.internal.firebase-auth-api.zzlt: void zzg(com.google.android.gms.internal.firebase-auth-api.zzlt,int)
io.grpc.okhttp.internal.framed.Http2$Writer: void rstStream(int,io.grpc.okhttp.internal.framed.ErrorCode)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
io.grpc.Status$StatusMessageMarshaller: byte[] toAsciiString(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzq(com.google.android.gms.common.api.Status,com.google.firebase.auth.AuthCredential,java.lang.String,java.lang.String)
com.google.android.gms.maps.model.SquareCap: java.lang.String toString()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.gms.internal.firebase-auth-api.zzy: void zzc(int,int,int)
com.google.android.gms.safetynet.zzg: java.lang.Object[] newArray(int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.reflect.Constructor)
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()
io.grpc.internal.ManagedChannelImpl: io.grpc.ChannelLogger access$3200(io.grpc.internal.ManagedChannelImpl)
kotlinx.coroutines.CoroutineName: int hashCode()
com.lyokone.location.LocationPlugin: void initialize(com.lyokone.location.FlutterLocationService)
io.grpc.internal.KeepAliveManager: java.lang.Runnable access$400(io.grpc.internal.KeepAliveManager)
com.google.protobuf.ArrayDecoders: int decodePackedSInt64List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Collection getTargetIds(com.google.firebase.firestore.remote.WatchChange$WatchTargetChange)
com.google.android.gms.common.internal.zzc: void zze()
com.google.protobuf.SmallSortedMap: void checkMutable()
com.google.android.gms.maps.model.Circle: void remove()
com.google.android.datatransport.AutoValue_Event: AutoValue_Event(java.lang.Integer,java.lang.Object,com.google.android.datatransport.Priority)
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.StatsTraceContext access$1200(io.grpc.okhttp.OkHttpClientStream)
com.google.android.gms.cloudmessaging.zzm: void zzc()
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$State access$300(io.grpc.internal.RetriableStream)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.common.base.CharMatcher: com.google.common.base.CharMatcher whitespace()
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(com.google.android.gms.common.api.Status)
androidx.webkit.internal.WebResourceErrorImpl: WebResourceErrorImpl(android.webkit.WebResourceError)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: ManagedChannelOrphanWrapper$ManagedChannelReference(io.grpc.internal.ManagedChannelOrphanWrapper,io.grpc.ManagedChannel,java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap)
com.google.protobuf.CodedInputStreamReader: void readMessageList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.grpc.internal.RetriableStream$1DeadlineEntry: RetriableStream$1DeadlineEntry(io.grpc.internal.RetriableStream,io.grpc.Deadline)
io.grpc.EquivalentAddressGroup: EquivalentAddressGroup(java.util.List,io.grpc.Attributes)
com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder set(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
com.google.common.base.CharMatcher$Is: java.lang.String toString()
com.google.firebase.firestore.remote.FirestoreChannel$2: FirestoreChannel$2(com.google.firebase.firestore.remote.FirestoreChannel,io.grpc.ClientCall[],com.google.android.gms.tasks.Task)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
io.flutter.plugins.webviewflutter.FlutterAssetManager$PluginBindingFlutterAssetManager: FlutterAssetManager$PluginBindingFlutterAssetManager(android.content.res.AssetManager,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
io.grpc.internal.StatsTraceContext: void outboundUncompressedSize(long)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzb(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
io.grpc.okhttp.internal.framed.Huffman: void encode(byte[],java.io.OutputStream)
com.google.protobuf.MessageSchema: int decodeMapEntryValue(byte[],int,int,com.google.protobuf.WireFormat$FieldType,java.lang.Class,com.google.protobuf.ArrayDecoders$Registers)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApi$1: GeneratedAndroidWebView$CookieManagerHostApi$1(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
kotlin.collections.EmptyIterator: EmptyIterator()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onDetachedFromActivity()
com.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()
io.grpc.okhttp.internal.framed.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
com.google.android.gms.common.api.Response: Response()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: byte getByte(java.lang.Object,long)
io.flutter.plugins.googlemaps.TileOverlayController: void setZIndex(float)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.google.common.collect.AbstractIndexedListIterator: java.lang.Object previous()
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.common.collect.RegularImmutableMap$EntrySet: boolean isPartialView()
com.google.android.gms.internal.firebase-auth-api.zzaby: boolean equals(java.lang.Object)
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
io.flutter.plugins.googlemaps.CircleController: void setFillColor(int)
io.grpc.ManagedChannelRegistry: java.util.List providers()
com.google.protobuf.MessageSchema: void mergeMessage(java.lang.Object,java.lang.Object,int)
com.google.android.gms.tasks.zzd: void zzd(com.google.android.gms.tasks.Task)
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createContentIntent(android.content.Context,com.google.firebase.messaging.NotificationParams,java.lang.String,android.content.pm.PackageManager)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl: void create(java.lang.Long,java.lang.Long)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void recordFailure(java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zztk: zztk(com.google.android.gms.internal.firebase-auth-api.zztl,com.google.android.gms.internal.firebase-auth-api.zzwy,com.google.android.gms.internal.firebase-auth-api.zzyq)
com.tekartik.sqflite.SqflitePlugin: java.lang.Object access$600()
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
com.google.protobuf.BinaryReader$SafeHeapReader: float readFloat()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: java.lang.String packageName(android.content.Context)
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.SortedSet computeIndexEntries(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.model.FieldIndex)
com.google.firebase.installations.AutoValue_InstallationTokenResult: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzr(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.PhoneAuthCredential,java.lang.String,com.google.firebase.auth.internal.zzbk)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzqp: java.lang.Object[] newArray(int)
io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setCallOptions(io.grpc.CallOptions)
com.google.firebase.firestore.local.MemoryBundleCache: MemoryBundleCache()
io.grpc.ManagedChannelProvider: ManagedChannelProvider()
com.google.firestore.v1.StructuredQuery: void addOrderBy(com.google.firestore.v1.StructuredQuery$Order)
com.google.android.datatransport.runtime.AutoValue_SendRequest: java.lang.String toString()
com.google.protobuf.RopeByteString: byte byteAt(int)
com.google.firebase.components.CycleDetector$ComponentNode: void addDependency(com.google.firebase.components.CycleDetector$ComponentNode)
io.grpc.Status: io.grpc.Status$Code getCode()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.tekartik.sqflite.operation.ExecuteOperation: ExecuteOperation(io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.SqlCommand,java.lang.Boolean)
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)
com.google.android.gms.maps.model.CameraPosition: com.google.android.gms.maps.model.CameraPosition$Builder builder()
com.google.firebase.firestore.model.FieldIndex$IndexOffset: FieldIndex$IndexOffset()
io.grpc.okhttp.internal.framed.Http2$Writer: void synStream(boolean,boolean,int,int,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzzo: void writeToParcel(android.os.Parcel,int)
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
com.google.firestore.v1.Target$DocumentsTarget: java.lang.String getDocuments(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
com.google.android.gms.signin.internal.zaf: void zag(com.google.android.gms.signin.internal.zai,com.google.android.gms.signin.internal.zae)
com.google.firebase.firestore.util.Logger$Level: Logger$Level(java.lang.String,int)
io.grpc.internal.DelayedClientCall$DelayedListener: io.grpc.ClientCall$Listener access$300(io.grpc.internal.DelayedClientCall$DelayedListener)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readFixed64()
io.grpc.internal.RetriableStream$Sublistener$2: RetriableStream$Sublistener$2(io.grpc.internal.RetriableStream$Sublistener,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
io.flutter.plugins.googlemaps.PolylineBuilder: void setPattern(java.util.List)
io.grpc.CallOptions: CallOptions()
com.google.android.gms.internal.firebase-auth-api.zzcb: com.google.android.gms.internal.firebase-auth-api.zzadc zzd(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.firebase.auth.internal.zzx: java.util.List zzg()
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value access$000()
com.google.firebase.auth.internal.zzy: zzy()
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: CreationContextFactory_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.grpc.Channel: Channel()
io.grpc.internal.AbstractStream$TransportState: void setMaxInboundMessageSize(int)
com.google.android.gms.common.internal.zzag: void zzc(android.content.Context)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase forNumber(int)
androidx.lifecycle.ViewModel: void clear()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.firebase.firestore.FirebaseFirestoreException: FirebaseFirestoreException(java.lang.String,com.google.firebase.firestore.FirebaseFirestoreException$Code)
com.google.firebase.firestore.QueryDocumentSnapshot: java.util.Map getData(com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
com.google.android.gms.common.internal.zzo: void onServiceDisconnected(android.content.ComponentName)
io.grpc.internal.DelayedStream$8: void run()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
com.google.firebase.messaging.TopicsSyncTask: TopicsSyncTask(com.google.firebase.messaging.TopicsSubscriber,android.content.Context,com.google.firebase.messaging.Metadata,long)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])
com.google.firestore.v1.StructuredQuery$Filter: StructuredQuery$Filter()
androidx.core.graphics.drawable.IconCompat: int getResId()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferPos(long)
androidx.fragment.app.Fragment: void performDestroyView()
com.google.protobuf.CodedInputStream: int decodeZigZag32(int)
com.google.firebase.auth.zzag: zzag()
com.google.protobuf.CodedInputStream: CodedInputStream()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readTag()
com.google.type.LatLng: void access$100(com.google.type.LatLng,double)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTrafficEnabled(boolean)
com.google.firebase.auth.UserProfileChangeRequest: java.lang.String getDisplayName()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.gms.internal.auth-api-phone.zzv: java.lang.String getStartServiceAction()
com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.gms.internal.firebase-auth-api.zzcm: zzcm(com.google.android.gms.internal.firebase-auth-api.zzcn,java.lang.Class)
com.google.firebase.auth.PhoneAuthOptions: boolean zzj()
io.grpc.okhttp.AsyncSink: boolean access$502(io.grpc.okhttp.AsyncSink,boolean)
com.google.android.gms.common.api.internal.zabq: void zam(com.google.android.gms.common.api.internal.zabq,com.google.android.gms.common.api.internal.zabs)
io.grpc.internal.MetadataApplierImpl: MetadataApplierImpl(io.grpc.internal.ClientTransport,io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.internal.MetadataApplierImpl$MetadataApplierListener,io.grpc.ClientStreamTracer[])
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
io.grpc.internal.ManagedChannelImpl: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaeg: void zzf()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.google.android.gms.internal.auth-api-phone.zzv: android.os.IInterface createServiceInterface(android.os.IBinder)
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: io.grpc.Status add(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.bundle.BundleSerializer: int decodeLimit(org.json.JSONObject)
com.google.protobuf.ProtobufArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
com.google.protobuf.FloatArrayList: com.google.protobuf.Internal$FloatList mutableCopyWithCapacity(int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCreator: WebViewClientHostApiImpl$WebViewClientCreator()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.Target: void setTargetId(int)
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzb(com.google.android.gms.internal.firebase-auth-api.zzgz)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context)
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Map$Entry next()
com.google.android.gms.internal.firebase-auth-api.zzadz: boolean remove(java.lang.Object)
com.google.android.gms.common.api.internal.zabq: void zaG()
com.google.android.gms.internal.firebase-auth-api.zzrq: boolean zzg()
com.google.firebase.firestore.core.OrderBy: com.google.firebase.firestore.core.OrderBy$Direction getDirection()
com.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.internal.firebase-auth-api.zzjr: com.google.android.gms.internal.firebase-auth-api.zzjq zzb()
kotlin.SynchronizedLazyImpl: boolean isInitialized()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getStartServicePackage()
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)
com.google.firestore.v1.StructuredQuery$Order: void setField(com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
com.google.firebase.firestore.remote.GrpcCallProvider: io.grpc.ManagedChannel initChannel(android.content.Context,com.google.firebase.firestore.core.DatabaseInfo)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: void putByte(java.lang.Object,long,byte)
io.grpc.NameResolver$ResolutionResult: boolean equals(java.lang.Object)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: WebViewHostApiImpl$ReleasableValue(io.flutter.plugins.webviewflutter.Releasable)
com.google.android.gms.internal.firebase-auth-api.zzhn: int zzf()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
com.google.android.datatransport.runtime.EncodedPayload: com.google.android.datatransport.Encoding getEncoding()
com.google.firebase.auth.internal.zzw: boolean zzd()
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
com.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: int hashCode()
io.grpc.internal.ManagedChannelImpl: void access$5300(io.grpc.internal.ManagedChannelImpl,io.grpc.LoadBalancer$SubchannelPicker)
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()
com.google.firebase.events.Event: Event(java.lang.Class,java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationSettingsRequest buildLocationSettingsRequest(com.google.android.gms.location.LocationRequest)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
io.grpc.internal.GzipInflatingBuffer: int getAndResetBytesConsumed()
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings$Builder setHandleCodeInApp(boolean)
com.google.android.gms.internal.firebase-auth-api.zzmb: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmb,int)
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: JobIntentService$JobServiceEngineImpl$WrapperWorkItem(io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)
androidx.loader.app.LoaderManager: LoaderManager()
okio.Buffer: okio.Buffer writeShort(int)
com.google.android.gms.internal.firebase-auth-api.zzcb: com.google.android.gms.internal.firebase-auth-api.zzax zzb(java.lang.String)
com.google.firebase.messaging.TopicsSubscriber: boolean isDebugLogEnabled()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: int getNumber()
com.google.android.gms.common.api.internal.zzb: com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString getResumeToken()
com.google.firestore.v1.BatchGetDocumentsRequest: BatchGetDocumentsRequest()
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
com.google.android.gms.internal.firebase-auth-api.zzro: boolean zzg()
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: JobIntentService$WorkEnqueuer(android.content.ComponentName)
com.google.android.datatransport.runtime.logging.Logging: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int remaining()
com.tekartik.sqflite.SqflitePlugin: void onGetDatabasesPathCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzj(java.lang.String,byte[],java.lang.Class)
com.google.protobuf.CodedInputStream$StreamDecoder: int readRawLittleEndian32()
com.google.firebase.firestore.core.UserData$ParseContext: UserData$ParseContext(com.google.firebase.firestore.core.UserData$ParseAccumulator,com.google.firebase.firestore.model.FieldPath,boolean)
com.google.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarint()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
io.grpc.InternalChannelz: void addRootChannel(io.grpc.InternalInstrumented)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: void setOptions(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions)
io.grpc.okhttp.OkHttpWritableBuffer: OkHttpWritableBuffer(okio.Buffer,int)
com.google.android.gms.maps.MapsInitializer$Renderer: MapsInitializer$Renderer(java.lang.String,int)
com.google.android.gms.common.zzi: zzi(byte[])
io.grpc.InternalMetadata: int headerCount(io.grpc.Metadata)
com.google.firebase.firestore.model.FieldIndex$IndexState: FieldIndex$IndexState()
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void disconnect()
io.flutter.plugins.googlemaps.CircleController: void remove()
com.google.firebase.firestore.TransactionOptions: int hashCode()
com.google.firebase.firestore.proto.WriteBatch: void addWrites(com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzbs: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector getInstance()
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzje zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzme: void zzg(com.google.android.gms.internal.firebase-auth-api.zzme,int)
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: java.lang.String toString()
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
com.google.firestore.v1.StructuredQuery: boolean hasLimit()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzr(com.google.android.gms.internal.firebase-auth-api.zzqy,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.util.List getUsedDates()
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.LoadBalancer$Subchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzfb: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor fromAsset(java.lang.String)
com.google.firebase.auth.internal.zzae: zzae(java.util.List,com.google.firebase.auth.internal.zzag,java.lang.String,com.google.firebase.auth.zze,com.google.firebase.auth.internal.zzx)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
okio.SegmentedByteString: okio.ByteString toAsciiLowercase()
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: WorkInitializer_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.maps.internal.zzbz: java.lang.ClassLoader zzd()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: java.lang.Integer getEventCode()
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: void setIndexManager(com.google.firebase.firestore.local.IndexManager)
com.google.protobuf.MapFieldSchemaLite: java.lang.Object newMapField(java.lang.Object)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
com.google.android.gms.common.internal.zzn: int hashCode()
com.baseflow.geolocator.location.FusedLocationClient: FusedLocationClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
com.google.android.gms.maps.GoogleMap: void setMinZoomPreference(float)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task registerAuthStateListener(java.util.Map)
com.google.firebase.messaging.FirebaseMessaging: void syncWithDelaySecondsInternal(long)
com.google.firebase.firestore.remote.FirestoreChannel: void shutdown()
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzje zzb()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.google.android.gms.maps.model.Marker: boolean isInfoWindowShown()
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(java.util.Collection)
com.google.protobuf.ByteString: boolean isEmpty()
io.flutter.plugins.firebase.firestore.streamhandler.SnapshotsInSyncStreamHandler: void onCancel(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
com.google.firebase.firestore.LoadBundleTask: com.google.firebase.firestore.LoadBundleTask addOnProgressListener(com.google.firebase.firestore.OnProgressListener)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.LogEventDropped,com.google.firebase.encoders.ObjectEncoderContext)
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.EventInternal convert(com.google.android.datatransport.runtime.SendRequest)
com.google.rpc.Status$Builder: Status$Builder()
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory$1: OkHttpChannelBuilder$OkHttpTransportFactory$1(io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory,io.grpc.internal.AtomicBackoff$State)
com.google.android.gms.internal.firebase-auth-api.zzyl: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.Int32Value$Builder: Int32Value$Builder()
com.google.firestore.v1.TargetChange: TargetChange()
io.grpc.HttpConnectProxiedSocketAddress: java.lang.String toString()
com.google.android.gms.dynamite.zzb: java.lang.ClassLoader zzb()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.grpc.internal.RetriableStream: void access$1100(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$Substream)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
com.google.firebase.firestore.UserDataReader: com.google.firebase.firestore.core.UserData$ParsedUpdateData parseUpdateData(java.util.Map)
com.google.firebase.firestore.remote.WriteStream: boolean isOpen()
com.google.android.gms.internal.firebase-auth-api.zzabu: zzabu()
com.google.android.gms.internal.firebase-auth-api.zzacg: java.lang.Class zza()
com.google.android.gms.internal.firebase-auth-api.zzaaj: zzaaj()
com.google.android.gms.internal.firebase-auth-api.zzabh: java.lang.Object remove(int)
com.google.firebase.firestore.model.FieldIndex$Segment: FieldIndex$Segment()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped build()
com.google.android.gms.internal.firebase-auth-api.zztl: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzP(int)
com.google.android.gms.common.internal.zzv: android.accounts.Account zzb()
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$4: java.lang.String getServiceAuthority()
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzlc zzc(int)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzm(java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zze()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
com.google.firebase.installations.remote.AutoValue_TokenResult: AutoValue_TokenResult(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode,com.google.firebase.installations.remote.AutoValue_TokenResult$1)
androidx.fragment.app.Fragment: Fragment()
io.grpc.Metadata: java.lang.Object value(int)
io.grpc.okhttp.OkHttpClientStream$TransportState: void transportHeadersReceived(java.util.List,boolean)
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder setAttributes(io.grpc.Attributes)
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.lang.Object getValue(java.lang.Object)
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.firestore.FieldValue$ServerTimestampFieldValue: FieldValue$ServerTimestampFieldValue()
com.google.android.gms.internal.firebase-auth-api.zzqx: zzqx()
com.google.firebase.messaging.CommonNotificationBuilder: int getConsolidatedDefaults(com.google.firebase.messaging.NotificationParams)
com.lyokone.location.FlutterLocation: void setActivity(android.app.Activity)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void showGooglePlayUnavailableMessage(android.widget.FrameLayout)
com.google.firebase.firestore.UserDataReader: UserDataReader(com.google.firebase.firestore.model.DatabaseId)
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzin zzd()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
io.grpc.internal.InternalSubchannel: void access$2300(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,boolean)
com.google.android.gms.internal.firebase-auth-api.zzacr: java.lang.Object get(int)
androidx.collection.MapCollections$KeySet: int size()
com.google.common.collect.RegularImmutableMap: boolean isPartialView()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzox: zzox()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzqu: com.google.firebase.auth.ActionCodeSettings zza()
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment: void onStop()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
io.grpc.ClientCall$Listener: void onMessage(java.lang.Object)
com.google.android.gms.common.api.internal.zact: void onConnected(android.os.Bundle)
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSavedDefaultGoogleSignInAccount()
com.google.protobuf.MapFieldSchemaLite: int getSerializedSize(int,java.lang.Object,java.lang.Object)
com.google.firestore.v1.StructuredQuery$FieldFilter: void setOp(com.google.firestore.v1.StructuredQuery$FieldFilter$Operator)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: ClientCallImpl$ClientStreamListenerImpl$1HeadersRead(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl,io.perfmark.Link,io.grpc.Metadata)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzbh: java.lang.Object zze(java.lang.Class)
com.google.firestore.v1.DocumentMask: int getFieldPathsCount()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void goBack(java.lang.Long)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
com.google.android.gms.internal.firebase-auth-api.zzaci: int hashCode()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: void shutdown()
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String encodeQueryPath(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.internal.firebase-auth-api.zzxn: void zze(com.google.android.gms.internal.firebase-auth-api.zzxn,java.lang.String)
com.google.protobuf.LazyFieldLite: int hashCode()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: StructuredQuery$FieldFilter$Operator(java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zzci: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setTrackingId(java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task unlinkUserProvider(java.util.Map)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition$ConditionTypeCase getConditionTypeCase()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: boolean equals(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Order: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.NameResolverRegistry: java.util.List getHardCodedClasses()
com.google.android.gms.maps.model.zzg: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzp(java.lang.String)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readRawVarint64()
io.grpc.NameResolver$Args: io.grpc.ProxyDetector getProxyDetector()
io.grpc.internal.RetriableStream$1CommitTask: void run()
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter applyDistribution(com.google.firebase.firestore.core.FieldFilter,com.google.firebase.firestore.core.FieldFilter)
com.google.android.gms.internal.firebase-auth-api.zzpn: zzpn(byte[])
com.lyokone.location.FlutterLocation: void buildLocationSettingsRequest()
com.google.firebase.firestore.DocumentSnapshot: boolean equals(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doRead(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzi(java.lang.Object,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.common.collect.Iterators$9: Iterators$9(java.lang.Object)
com.google.firebase.messaging.MessagingAnalytics: void logToFirelog(com.google.firebase.messaging.reporting.MessagingClientEvent$Event,android.content.Intent,com.google.android.datatransport.TransportFactory)
com.google.android.gms.internal.firebase-auth-api.zzsh: void zza(java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.tekartik.sqflite.SqflitePlugin$BgResult$1: void run()
com.google.protobuf.LazyStringArrayList: void add(int,java.lang.String)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: AutoValue_LogEvent(long,java.lang.Integer,long,byte[],java.lang.String,long,com.google.android.datatransport.cct.internal.NetworkConnectionInfo,com.google.android.datatransport.cct.internal.AutoValue_LogEvent$1)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
io.flutter.plugins.googlemaps.PolygonsController: boolean onPolygonTap(java.lang.String)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()
io.grpc.CallOptions: io.grpc.CallOptions withCallCredentials(io.grpc.CallCredentials)
com.google.protobuf.CodedOutputStream: int computeInt64Size(int,long)
com.google.firebase.firestore.local.LruGarbageCollector$Results: LruGarbageCollector$Results(boolean,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzro: boolean zzh()
io.grpc.Context: java.lang.Throwable cancellationCause()
com.google.firebase.auth.internal.zzap: void onFailure(java.lang.Exception)
com.google.firebase.firestore.local.MemoryBundleCache: com.google.firebase.firestore.bundle.NamedQuery getNamedQuery(java.lang.String)
io.grpc.internal.InternalSubchannel$Index: boolean isAtBeginning()
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)
com.google.firebase.firestore.LoadBundleTask: boolean isSuccessful()
io.grpc.internal.ManagedChannelImpl: io.grpc.ClientCall access$4800()
io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.Long parseAsciiString(java.lang.String)
com.google.android.gms.maps.zzah: void createDelegate(com.google.android.gms.dynamic.OnDelegateCreatedListener)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void removeFirebaseMessage(java.lang.String)
com.tekartik.sqflite.SqflitePlugin: java.util.Map cursorRowToMap(android.database.Cursor)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext withPriority(com.google.android.datatransport.Priority)
com.google.firebase.firestore.local.EncodedPath: java.util.List decode(java.lang.String)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer(io.grpc.internal.AutoConfiguredLoadBalancerFactory,io.grpc.LoadBalancer$Helper)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setNetworkConnectionInfo(com.google.android.datatransport.cct.internal.NetworkConnectionInfo)
com.google.android.gms.internal.firebase-auth-api.zzq: zzq()
com.google.android.gms.internal.firebase-auth-api.zzso: zzso(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.common.collect.Maps$EntryFunction$2: Maps$EntryFunction$2(java.lang.String,int)
com.google.android.gms.common.internal.zzd: void onPostInitComplete(int,android.os.IBinder,android.os.Bundle)
com.google.firebase.firestore.proto.NoDocument: void access$400(com.google.firebase.firestore.proto.NoDocument,com.google.protobuf.Timestamp)
com.google.android.gms.internal.firebase-auth-api.zzfe: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.util.RoundRobinLoadBalancer: void access$000(io.grpc.util.RoundRobinLoadBalancer,io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)
com.google.firebase.firestore.DocumentChange: boolean equals(java.lang.Object)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType valueOf(java.lang.String)
com.google.firebase.FirebaseApp$UserUnlockReceiver: FirebaseApp$UserUnlockReceiver(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzpt: zzpt()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument access$000()
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
com.google.firebase.firestore.model.Values: int compareReferences(java.lang.String,java.lang.String)
io.grpc.internal.AbstractClientStream: void setFullStreamDecompression(boolean)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
com.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: SchedulerConfig$Flag(java.lang.String,int)
io.grpc.internal.ApplicationThreadDeframer$2: ApplicationThreadDeframer$2(io.grpc.internal.ApplicationThreadDeframer,io.grpc.internal.ReadableBuffer)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
com.google.common.collect.Lists: int lastIndexOfImpl(java.util.List,java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: BatchOperation$BatchOperationResult(com.tekartik.sqflite.operation.BatchOperation)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzg(com.google.android.gms.internal.firebase-auth-api.zzqc,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory access$000()
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
io.grpc.util.RoundRobinLoadBalancer$Ref: RoundRobinLoadBalancer$Ref(java.lang.Object)
okio.Buffer$1: void close()
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory newInstance(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)
com.google.android.gms.common.data.DataHolder: android.os.Bundle getMetadata()
io.grpc.internal.DelayedStream$DelayedStreamListener$4: DelayedStream$DelayedStreamListener$4(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.protobuf.BooleanArrayList: boolean getBoolean(int)
androidx.lifecycle.ReportFragment: void onPause()
io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: ManagedChannelImpl$DelayedNameResolverRefresh(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.auth.zzag: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzsa: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.remote.WriteStream: void inhibitBackoff()
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzve: void zzb()
io.grpc.ClientInterceptors$InterceptorChannel: java.lang.String authority()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error forCode(long)
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.Object zzs(com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaB(com.google.android.gms.common.api.GoogleApi)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder()
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzba: zzba(com.google.android.gms.internal.firebase-auth-api.zzgb)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzl(java.lang.Object,int,long)
com.google.firebase.firestore.core.Bound: boolean equals(java.lang.Object)
com.google.common.collect.RegularImmutableSet: int internalArrayEnd()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabx zzx(com.google.android.gms.internal.firebase-auth-api.zzabx,byte[],com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)
com.google.android.gms.dynamite.zzi: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] addToArray(java.lang.Object[],int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzxf: zzxf(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.lang.String)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
com.google.android.gms.maps.model.TileOverlayOptions: float getTransparency()
com.google.android.gms.dynamite.zzc: java.lang.Class loadClass(java.lang.String,boolean)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzr(int,int)
io.grpc.okhttp.internal.Platform$2: java.lang.Object run()
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zzc(byte[])
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
com.google.android.gms.internal.firebase-auth-api.zzqd: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzka: void zzg(com.google.android.gms.internal.firebase-auth-api.zzka,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzne: zzne()
com.google.android.gms.internal.firebase-auth-api.zzcx: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()
com.google.cloud.datastore.core.number.NumberComparisonHelper: int firestoreCompareDoubles(double,double)
com.google.android.gms.maps.model.Marker: void remove()
com.google.android.gms.stats.WakeLock: void acquire(long)
io.flutter.plugins.googlemaps.GoogleMapController: void setMinMaxZoomPreference(java.lang.Float,java.lang.Float)
com.google.firebase.firestore.local.TargetData: com.google.protobuf.ByteString getResumeToken()
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] values()
io.grpc.internal.RetriableStream: void freezeHedging()
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: void writeBytes(com.google.protobuf.ByteString)
com.google.protobuf.FloatArrayList: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzsz: void zzb(java.lang.Object)
com.google.firebase.firestore.model.mutation.MutationResult: com.google.firebase.firestore.model.SnapshotVersion getVersion()
io.grpc.internal.SharedResourceHolder$1: SharedResourceHolder$1()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setIsForMainFrame(java.lang.Boolean)
io.grpc.okhttp.ExceptionHandlingFrameWriter: void synStream(boolean,boolean,int,int,java.util.List)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: int schemaVersion()
io.flutter.plugins.googlemaps.MarkerBuilder: boolean consumeTapEvents()
com.google.android.gms.internal.firebase-auth-api.zzni: com.google.android.gms.internal.firebase-auth-api.zzni zzb()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task sendSignInLinkToEmail(java.util.Map)
com.google.firestore.v1.Target: Target()
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
com.google.android.gms.internal.firebase-auth-api.zzsl: void zza(java.lang.String)
com.google.android.gms.common.GoogleSignatureVerifier: GoogleSignatureVerifier(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzjt: zzjt(com.google.android.gms.internal.firebase-auth-api.zzjs)
com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)
com.google.protobuf.ArrayDecoders: int decodeExtension(int,byte[],int,int,com.google.protobuf.GeneratedMessageLite$ExtendableMessage,com.google.protobuf.GeneratedMessageLite$GeneratedExtension,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.maps.internal.zzg: boolean isTrafficEnabled()
io.grpc.internal.ManagedChannelImpl: java.lang.String access$6200(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument getDefaultInstance()
io.grpc.internal.GrpcUtil$1: io.grpc.ProxiedSocketAddress proxyFor(java.net.SocketAddress)
io.grpc.internal.AbstractClientStream$TransportState: io.grpc.internal.StreamListener listener()
androidx.collection.MapCollections$EntrySet: int hashCode()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void executeDartCallbackInBackgroundIsolate(android.content.Intent,java.util.concurrent.CountDownLatch)
com.google.protobuf.CodedInputStream$ArrayDecoder: void popLimit(int)
androidx.browser.customtabs.CustomTabsIntent: CustomTabsIntent(android.content.Intent,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzaaj: int indexOf(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzhe: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.firestore.v1.Value: void access$300(com.google.firestore.v1.Value,com.google.protobuf.NullValue)
com.google.android.gms.internal.maps.zzab: java.lang.String zzl()
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.RBTreeSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
com.google.firestore.v1.StructuredQuery: int getOrderByCount()
com.google.firebase.auth.internal.zzx: java.lang.String getProviderId()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.android.gms.cloudmessaging.zzz: zzz()
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.firestore.v1.ArrayValue: void addValues(com.google.firestore.v1.Value)
com.google.firebase.firestore.util.AsyncQueue: boolean isShuttingDown()
com.google.firebase.database.collection.RBTreeSortedMap: boolean isEmpty()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.model.Document readDocument(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.internal.firebase-auth-api.zzaen: void zzd(java.lang.Object,long,byte)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: void run()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType getChangeType()
com.google.android.gms.internal.maps.zzab: void zzv(java.util.List)
com.google.android.gms.common.api.Status: int hashCode()
com.google.protobuf.FieldSet: int computeFieldSize(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object)
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec$Builder tlsVersions(java.lang.String[])
com.google.firestore.v1.StructuredQuery$Direction$1: StructuredQuery$Direction$1()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.android.gms.internal.firebase-auth-api.zznc: void zzd(com.google.android.gms.internal.firebase-auth-api.zznc,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
com.google.android.gms.internal.firebase-auth-api.zzvi: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventCode(java.lang.Integer)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task confirmPasswordReset(java.util.Map)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
com.google.firebase.messaging.SyncTask: android.content.Context getContext()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: ExceptionsConstuctorKt$tryCopyException$5$1()
com.google.android.gms.internal.firebase-auth-api.zzua: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zzc()
com.google.common.io.BaseEncoding$Alphabet: int decode(char)
io.grpc.internal.KeepAliveManager: void onTransportActive()
androidx.window.embedding.SplitRule: float getSplitRatio()
com.google.android.gms.internal.firebase-auth-api.zzmp: int zzh()
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
com.google.common.collect.ComparatorOrdering: boolean equals(java.lang.Object)
com.google.protobuf.CodedInputStreamReader: int readSFixed32()
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.CompositeReadableBuffer: void advanceBufferIfNecessary()
com.google.firebase.firestore.model.ObjectValue: java.util.Map getFieldsMap()
com.google.protobuf.MessageSchema: void mergeFrom(java.lang.Object,byte[],int,int,com.google.protobuf.ArrayDecoders$Registers)
androidx.window.embedding.SplitInfo: int hashCode()
com.google.protobuf.IntArrayList: void ensureIndexInRange(int)
com.google.protobuf.CodedInputStream$StreamDecoder: boolean readBool()
com.google.firebase.auth.internal.zzw: void setAutoRetrievedSmsCodeForPhoneNumber(java.lang.String,java.lang.String)
com.google.android.gms.common.internal.service.zam: void accept(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
com.google.android.gms.internal.common.zza: android.os.Parcel zza()
io.grpc.internal.RetriableStream: boolean access$100(io.grpc.internal.RetriableStream)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzbb: java.lang.Class zzc()
com.google.android.gms.internal.firebase-auth-api.zzaem: double zza(java.lang.Object,long)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
com.google.android.gms.common.api.internal.zzb: void onCreate(android.os.Bundle)
io.flutter.plugins.googlemaps.CircleController: void setConsumeTapEvents(boolean)
io.grpc.internal.DelayedStream$DelayedStreamListener$1: void run()
com.google.android.gms.common.zzb: zzb()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.Store getStore(android.content.Context)
com.google.firestore.v1.StructuredQuery$Order$Builder: StructuredQuery$Order$Builder()
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.firebase.auth.ActionCodeSettings zzb()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.protobuf.FloatArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
com.google.android.gms.internal.firebase-auth-api.zzcv: java.util.Map zzc()
com.squareup.okhttp.HttpUrl: int hashCode()
com.google.firestore.v1.Precondition: void setUpdateTime(com.google.protobuf.Timestamp)
io.grpc.okhttp.internal.framed.Http2: int readMedium(okio.BufferedSource)
io.grpc.StreamTracer: StreamTracer()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7400()
com.google.protobuf.ArrayDecoders: int decodeVarint64List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zznc: void zze(com.google.android.gms.internal.firebase-auth-api.zznc,com.google.android.gms.internal.firebase-auth-api.zznb)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.Status statusForCode(long)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
com.baseflow.geolocator.location.LocationOptions: long getTimeInterval()
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.Object[] fillBounds(int,int,java.util.List,java.lang.Object[],java.lang.Object[],java.lang.Object[])
com.google.firebase.firestore.remote.WriteStream: void writeHandshake()
io.grpc.protobuf.lite.ProtoInputStream: com.google.protobuf.Parser parser()
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
io.grpc.internal.ManagedChannelImpl$RealChannel$1: java.lang.String authority()
com.google.android.gms.common.internal.ClientSettings: java.lang.String zac()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzjn: zzjn(com.google.android.gms.internal.firebase-auth-api.zzjm)
com.google.protobuf.SchemaUtil: void writeDoubleList(int,java.util.List,com.google.protobuf.Writer,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.android.gms.signin.internal.zaj: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzpq: java.lang.String zzb()
com.google.common.collect.ByFunctionOrdering: java.lang.String toString()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void flush()
com.google.android.gms.tasks.zzad: void onFailure(java.lang.Exception)
com.google.firestore.v1.DocumentTransform$FieldTransform: void access$1700(com.google.firestore.v1.DocumentTransform$FieldTransform,com.google.firestore.v1.ArrayValue)
com.google.android.gms.internal.firebase-auth-api.zzacw: java.util.Set entrySet()
com.google.android.gms.internal.location.zzaz: android.location.Location getLastLocation()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zze(com.google.android.gms.internal.firebase-auth-api.zzado,int,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzacc,com.google.android.gms.internal.firebase-auth-api.zzaah)
androidx.lifecycle.ReportFragment: void onDestroy()
com.google.firebase.firestore.bundle.BundleDocument: int hashCode()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.grpc.internal.InternalSubchannel: java.lang.String printShortStatus(io.grpc.Status)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
com.google.common.io.BaseEncoding: byte[] decodeChecked(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
com.google.android.gms.internal.firebase-auth-api.zznk: zznk(com.google.android.gms.internal.firebase-auth-api.zznj)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
kotlin.collections.EmptyList: int size()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getMin()
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: java.util.concurrent.atomic.AtomicInteger access$000(io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport)
com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base64()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setDomStorageEnabled(java.lang.Long,java.lang.Boolean)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder: StructuredQuery$UnaryFilter$Builder(com.google.firestore.v1.StructuredQuery$1)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientCreator: WebChromeClientHostApiImpl$WebChromeClientCreator()
com.google.android.gms.common.internal.zzn: boolean equals(java.lang.Object)
io.grpc.internal.DelayedClientTransport: java.lang.Object access$500(io.grpc.internal.DelayedClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzid zzd()
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzk(java.lang.Object,long,byte)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: WebViewClientFlutterApiImpl(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.webviewflutter.InstanceManager)
com.tekartik.sqflite.SqflitePlugin: java.util.Map fixMap(java.util.Map)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.cloudmessaging.zzb: zzb()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
com.google.android.gms.internal.firebase-auth-api.zzyi: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzf(java.lang.String,byte[],byte[],int)
com.google.android.gms.common.api.internal.RegisterListenerMethod: RegisterListenerMethod(com.google.android.gms.common.api.internal.ListenerHolder)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.String[] createStringArray(android.os.Parcel,int)
com.google.android.gms.common.util.DeviceProperties: boolean zza(android.content.Context)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setUseWideViewPort(java.lang.Long,java.lang.Boolean)
com.google.android.gms.signin.internal.zaa: zaa(int,int,android.content.Intent)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.grpc.internal.DelayedClientCall$1DeadlineExceededRunnable: DelayedClientCall$1DeadlineExceededRunnable(io.grpc.internal.DelayedClientCall,java.lang.StringBuilder)
io.grpc.internal.ReadableBuffers: byte[] readArray(io.grpc.internal.ReadableBuffer)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.core.Query$LimitType decodeLimitType(org.json.JSONObject)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
io.grpc.Attributes$Key: Attributes$Key(java.lang.String)
io.grpc.internal.DelayedClientTransport: java.lang.Runnable access$800(io.grpc.internal.DelayedClientTransport)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] values()
com.google.firebase.firestore.QuerySnapshot: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzxh: void zzc()
com.google.protobuf.BinaryReader$SafeHeapReader: void readSFixed32List(java.util.List)
com.google.android.gms.internal.location.zzn: java.lang.Object[] newArray(int)
com.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)
io.flutter.plugins.googlemaps.PolygonsController: void changePolygon(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzkg: int zza()
com.google.android.gms.internal.firebase-auth-api.zztr: void zza(java.lang.String)
com.google.firebase.auth.internal.zzag: zzag(java.lang.String,java.lang.String,java.util.List)
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void endOfStream()
io.grpc.internal.TransportTracer$Factory: io.grpc.internal.TransportTracer create()
com.google.protobuf.IterableByteBufferInputStream: IterableByteBufferInputStream(java.lang.Iterable)
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.google.android.gms.maps.internal.zzg: void setMaxZoomPreference(float)
io.grpc.stub.AbstractStub: io.grpc.stub.AbstractStub withExecutor(java.util.concurrent.Executor)
com.google.android.gms.common.internal.zaa: zaa()
com.google.protobuf.ByteString: java.lang.String toStringUtf8()
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
androidx.window.core.Bounds: int getHeight()
com.google.android.gms.internal.firebase-auth-api.zzaba: void zzf(int)
com.google.android.gms.internal.firebase-auth-api.zzcy: zzcy(com.google.android.gms.internal.firebase-auth-api.zzcz,java.lang.Class)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: ApplicationThreadDeframer$InitializingMessageProducer(io.grpc.internal.ApplicationThreadDeframer,java.lang.Runnable)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long)
io.flutter.plugins.firebase.messaging.JobIntentService: io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int,boolean)
com.google.firestore.v1.BatchGetDocumentsRequest$Builder: com.google.firestore.v1.BatchGetDocumentsRequest$Builder setDatabase(java.lang.String)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: com.google.firebase.firestore.FirebaseFirestoreSettings$Builder setCacheSizeBytes(long)
com.google.firebase.firestore.core.Query: boolean isCollectionGroupQuery()
com.google.android.gms.internal.firebase-auth-api.zztq: void zzb(java.lang.Object)
com.google.firebase.messaging.FirebaseMessagingService: boolean alreadyReceivedMessage(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: EventStoreModule_PackageNameFactory(javax.inject.Provider)
com.google.firebase.firestore.model.FieldIndex$IndexOffset: com.google.firebase.firestore.model.FieldIndex$IndexOffset create(com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.DocumentKey,int)
io.grpc.internal.StatsTraceContext: void clientInboundHeaders()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setStringValue(java.lang.String)
com.lyokone.location.StreamHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: FlutterFirebaseMessagingBackgroundExecutor$1(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor,java.util.concurrent.CountDownLatch)
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzc(com.google.android.gms.internal.firebase-auth-api.zzgz)
com.google.android.gms.location.zzaf: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.QueryDocumentSnapshot convertDocument(com.google.firebase.firestore.model.Document)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzv(java.lang.String,com.google.firebase.auth.ActionCodeSettings,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzadi: com.google.android.gms.internal.firebase-auth-api.zzadh zzb()
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhz zzb(com.google.android.gms.internal.firebase-auth-api.zzhw)
com.google.protobuf.UnsafeUtil$MemoryAccessor: void putObject(java.lang.Object,long,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.firebase.auth.PlayGamesAuthCredential: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(com.google.firebase.auth.PlayGamesAuthCredential,java.lang.String)
com.baseflow.geolocator.location.LocationManagerClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: JsonDataEncoderBuilder()
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: MessageDeframer$SizeEnforcingInputStream(java.io.InputStream,int,io.grpc.internal.StatsTraceContext)
com.google.protobuf.SmallSortedMap: void ensureEntryArrayMutable()
com.google.firebase.firestore.Blob: com.google.firebase.firestore.Blob fromBytes(byte[])
io.flutter.plugin.editing.TextInputPlugin: boolean canShowTextInput()
androidx.collection.ArraySet: boolean add(java.lang.Object)
com.google.firebase.firestore.core.LimboDocumentChange: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzbh: java.lang.String toString()
com.google.firebase.auth.internal.zzbd: void zzd(android.content.Context)
com.google.firebase.firestore.remote.WatchStream: WatchStream(com.google.firebase.firestore.remote.FirestoreChannel,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.RemoteSerializer,com.google.firebase.firestore.remote.WatchStream$Callback)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void release()
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: NameResolverRegistry$NameResolverPriorityAccessor(io.grpc.NameResolverRegistry$1)
com.google.android.gms.internal.safetynet.zze: void zzb(com.google.android.gms.common.api.Status,boolean)
com.google.firebase.auth.UserProfileChangeRequest$Builder: com.google.firebase.auth.UserProfileChangeRequest build()
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzbh zzh(com.google.android.gms.internal.firebase-auth-api.zzfr,com.google.android.gms.internal.firebase-auth-api.zzap)
io.grpc.internal.DelayedClientCall$DelayedListener: void onReady()
com.google.android.gms.internal.maps.zzab: void zzo()
io.grpc.internal.ClientCallImpl: void access$300(io.grpc.internal.ClientCallImpl,io.grpc.ClientCall$Listener,io.grpc.Status,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzabx: zzabx()
io.grpc.internal.GrpcUtil$4: void close(java.lang.Object)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: void onCodeSent(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
io.grpc.internal.DelayedStream$DelayedStreamListener: DelayedStream$DelayedStreamListener(io.grpc.internal.ClientStreamListener)
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
com.google.protobuf.SmallSortedMap$EntrySet: void clear()
com.google.firestore.v1.StructuredQuery$CompositeFilter: void ensureFiltersIsMutable()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
com.google.firebase.messaging.threads.PoolableExecutors: com.google.firebase.messaging.threads.ExecutorFactory factory()
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue increment(long)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task sendMessage(java.util.Map)
com.google.protobuf.CodedInputStreamReader: void readUInt32List(java.util.List)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.safetynet.zzb: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.zzm: void zzd(android.content.Context)
com.google.protobuf.SmallSortedMap: java.util.Set entrySet()
io.grpc.internal.ProxyDetectorImpl$2: ProxyDetectorImpl$2()
com.google.firebase.firestore.remote.RemoteStore: void handleWriteStreamHandshakeComplete()
com.google.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.Bound boundFromFields(java.lang.String,java.lang.Object[],boolean)
com.google.android.gms.internal.firebase-auth-api.zzaev: zzaev(java.lang.String,int,com.google.android.gms.internal.firebase-auth-api.zzaew,int)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setBooleanValue(boolean)
com.google.protobuf.InvalidProtocolBufferException: void setThrownFromInputStream()
com.google.android.gms.internal.auth-api-phone.zzb: zzb(android.os.IBinder,java.lang.String)
com.google.protobuf.Internal: int hashCode(byte[])
kotlinx.coroutines.CoroutineId: long getId()
com.google.android.gms.common.internal.zza: zza(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzvi: zzvi(java.lang.String)
io.flutter.embedding.android.KeyboardManager: KeyboardManager(android.view.View,io.flutter.plugin.editing.TextInputPlugin,io.flutter.embedding.android.KeyboardManager$Responder[])
com.google.firebase.messaging.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)
com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.String next()
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
io.grpc.okhttp.AsyncSink$3: AsyncSink$3(io.grpc.okhttp.AsyncSink)
com.google.firebase.database.collection.LLRBEmptyNode: LLRBEmptyNode()
com.google.android.gms.common.internal.GmsLogger: void w(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: com.google.firebase.firestore.Query readFirestoreQuery(java.nio.ByteBuffer)
io.grpc.internal.ManagedChannelImpl: io.grpc.CompressorRegistry access$3700(io.grpc.internal.ManagedChannelImpl)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.google.firebase.auth.internal.zzas: void onSuccess(java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.lang.String readStringRequireUtf8()
com.google.android.gms.internal.firebase-auth-api.zzzd: boolean zzg()
com.google.common.io.BaseEncoding$Base64Encoding: int decodeTo(byte[],java.lang.CharSequence)
io.flutter.plugins.googlemaps.MarkersController: void onInfoWindowTap(java.lang.String)
com.google.firebase.firestore.local.SQLiteTargetCache: void setLastRemoteSnapshotVersion(com.google.firebase.firestore.model.SnapshotVersion)
com.google.protobuf.UnmodifiableLazyStringList$1: int nextIndex()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions fromMap(java.util.Map)
io.grpc.internal.DelayedClientTransport$PendingStream: DelayedClientTransport$PendingStream(io.grpc.internal.DelayedClientTransport,io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[])
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target$TargetTypeCase getTargetTypeCase()
com.google.android.gms.dynamite.zzq: com.google.android.gms.dynamic.IObjectWrapper zzi(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument$Builder newBuilder()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.grpc.ThreadLocalContextStorage: io.grpc.Context doAttach(io.grpc.Context)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator$1: StructuredQuery$FieldFilter$Operator$1()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setHardware(java.lang.String)
com.google.protobuf.WireFormat$FieldType$3: WireFormat$FieldType$3(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.android.gms.internal.firebase-auth-api.zzps: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.maps.model.CircleOptions: void writeToParcel(android.os.Parcel,int)
com.squareup.okhttp.HttpUrl: int decodeHexDigit(char)
com.google.android.gms.maps.zzu: zzu(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener)
androidx.fragment.app.FragmentManagerImpl: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
com.google.common.collect.RegularImmutableSet: int size()
com.google.android.gms.common.internal.BaseGmsClient: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: AutoConfiguredLoadBalancerFactory$PolicyException(java.lang.String)
com.google.protobuf.FieldSet: com.google.protobuf.FieldSet emptySet()
androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
com.google.android.gms.internal.firebase-auth-api.zzze: zzze()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarintFastPath()
com.google.firebase.firestore.model.ResourcePath: java.lang.String canonicalString()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientTransport access$2500(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider,io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.android.gms.internal.firebase-auth-api.zzacj: java.util.List zzh()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getBodyLocalizationKey()
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
io.grpc.internal.DelayedClientCall$DelayedListener$3: void run()
androidx.core.os.LocaleListCompat: int hashCode()
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalChannelz access$5900(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zza(java.lang.Object)
com.google.firebase.firestore.core.Target: int hashCode()
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status,boolean)
io.grpc.NameResolver$Args$Builder: NameResolver$Args$Builder()
com.google.android.gms.common.api.internal.GoogleApiManager: void zaK()
io.grpc.StatusRuntimeException: java.lang.Throwable fillInStackTrace()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setJavaScriptCanOpenWindowsAutomatically(java.lang.Long,java.lang.Boolean)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
io.grpc.internal.DelayedStream$DelayedStreamListener$3: void run()
com.google.firebase.auth.GoogleAuthCredential: java.lang.String getProvider()
io.grpc.internal.AtomicBackoff$State: AtomicBackoff$State(io.grpc.internal.AtomicBackoff,long)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzaeg zzd(java.lang.Object)
com.google.firebase.firestore.core.QueryView: com.google.firebase.firestore.core.Query getQuery()
com.google.firebase.firestore.model.ObjectValue: void setAll(java.util.Map)
com.google.firestore.v1.Value: com.google.type.LatLng getGeoPointValue()
com.google.firebase.firestore.local.SQLitePersistence: long getByteSize()
io.flutter.plugins.googlemaps.GoogleMapController: boolean hasLocationPermission()
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
io.grpc.internal.ForwardingConnectionClientTransport: void shutdown(io.grpc.Status)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.GoogleApiAvailability zag(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.firebase.installations.Utils: boolean isValidApiKeyFormat(java.lang.String)
com.google.android.gms.location.LocationSettingsStates: LocationSettingsStates(boolean,boolean,boolean,boolean,boolean,boolean)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: GeneratedAndroidWebView$WebResourceErrorData(io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$1)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: int getNumber()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.firebase.firestore.remote.RemoteStore$2: void onOpen()
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseQueryValue(java.lang.Object,boolean)
com.google.firebase.firestore.local.QueryResult: com.google.firebase.database.collection.ImmutableSortedMap getDocuments()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.mutation.FieldMask decodeDocumentMask(com.google.firestore.v1.DocumentMask)
com.google.android.gms.internal.firebase-auth-api.zzbz: com.google.android.gms.internal.firebase-auth-api.zzmk zzf(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy$Provider access$6300(io.grpc.internal.ManagedChannelImpl)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzR(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter applyDistribution(com.google.firebase.firestore.core.FieldFilter,com.google.firebase.firestore.core.CompositeFilter)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.firebase.messaging.FirebaseMessaging: android.content.Context getApplicationContext()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzr(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzaaw: boolean zzp()
com.google.android.gms.maps.internal.zzbg: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzcn: com.google.android.gms.internal.firebase-auth-api.zzga zza()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task terminate()
com.google.firebase.firestore.local.IndexBackfiller: int writeIndexEntries()
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: void release()
io.grpc.CallOptions$Key: io.grpc.CallOptions$Key create(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabh: java.lang.String zzf(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.google.firebase.auth.zzv: java.lang.Object create(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.firebase-auth-api.zzsk: void zzb(java.lang.Object)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
com.google.protobuf.MessageSchema: void mergeFromHelper(com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)
com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8Direct(int,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
com.google.firestore.v1.Value: void setMapValue(com.google.firestore.v1.MapValue)
com.google.android.gms.internal.firebase-auth-api.zzji: int zza()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.flutter.plugins.googlemaps.GoogleMapController$1: void onMapLoaded()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: SQLiteEventStore(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager,com.google.android.datatransport.runtime.dagger.Lazy)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: void onCancelled(java.lang.Void)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.protobuf.LongArrayList: LongArrayList()
com.google.common.collect.ImmutableList: void add(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzkq: zzkq()
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
com.google.android.gms.internal.firebase-auth-api.zzaeu: java.lang.String zzd(byte[],int,int)
androidx.webkit.internal.WebResourceErrorImpl: int getErrorCode()
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
com.google.protobuf.CodedOutputStream: int computeSFixed32Size(int,int)
com.google.firebase.firestore.remote.TargetState: com.google.firebase.firestore.remote.TargetChange toTargetChange()
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: java.lang.String getBackendName()
io.grpc.okhttp.OkHttpFrameLogger: void logPing(io.grpc.okhttp.OkHttpFrameLogger$Direction,long)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
com.google.android.gms.internal.firebase-auth-api.zzzz: zzzz()
com.google.firebase.components.Dependency: boolean isDeferred()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
com.google.android.gms.maps.model.PolygonOptions: float getZIndex()
com.google.android.gms.internal.firebase-auth-api.zzaem: void zze(java.lang.Object,long,double)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode insert(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzb(com.google.android.gms.internal.firebase-auth-api.zzps,com.google.android.gms.internal.firebase-auth-api.zzvr)
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: SQLiteEventStore$Metadata(java.lang.String,java.lang.String,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$1)
com.google.protobuf.GeneratedMessageLite: void writeTo(com.google.protobuf.CodedOutputStream)
com.google.firebase.firestore.core.ViewSnapshot: java.util.List getChanges()
io.grpc.internal.ClientCallImpl: java.util.concurrent.ScheduledFuture startDeadlineTimer(io.grpc.Deadline)
com.google.android.gms.internal.firebase-auth-api.zzzo: java.util.List zzb()
com.tekartik.sqflite.Database: java.lang.String getThreadLogTag()
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: void setPluginConstants(java.util.Map)
com.google.firestore.v1.ListenResponse$Builder: ListenResponse$Builder()
com.google.firebase.firestore.core.View: View(com.google.firebase.firestore.core.Query,com.google.firebase.database.collection.ImmutableSortedSet)
com.google.firebase.firestore.remote.RemoteStore: void disableNetwork()
com.google.android.gms.internal.firebase-auth-api.zzaam: zzaam()
com.google.android.gms.common.SupportErrorDialogFragment: void onCancel(android.content.DialogInterface)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.google.android.gms.dynamite.zzq: zzq(android.os.IBinder)
com.tekartik.sqflite.operation.MethodCallOperation$Result: void success(java.lang.Object)
com.google.firebase.auth.internal.RecaptchaActivity: android.content.Context zza()
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
com.google.firebase.auth.FirebaseAuthUserCollisionException: com.google.firebase.auth.AuthCredential getUpdatedCredential()
com.google.firebase.auth.internal.GenericIdpActivity: java.net.HttpURLConnection zzd(java.net.URL)
com.google.firebase.firestore.local.LocalStore: void notifyLocalViewChanges(java.util.List)
com.google.firebase.firestore.model.mutation.Precondition: java.lang.String toString()
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: PickFirstLoadBalancer$RequestConnectionPicker(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel)
com.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicOperation getNextTopicOperation()
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaau zzo(byte[],int,int)
io.grpc.internal.DelayedClientCall: void sendMessage(java.lang.Object)
androidx.collection.MapCollections$ValuesCollection: void clear()
com.google.firebase.messaging.WakeLockHolder: void setAsWakefulIntent(android.content.Intent,boolean)
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void addJavascriptInterface(java.lang.Object,java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.tekartik.sqflite.SqflitePlugin: void access$900(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient access$200(com.baseflow.geolocator.location.FusedLocationClient)
io.grpc.internal.RetryPolicy: RetryPolicy(int,long,long,double,java.lang.Long,java.util.Set)
io.grpc.internal.NoopClientStream: boolean isReady()
io.grpc.HttpConnectProxiedSocketAddress$Builder: io.grpc.HttpConnectProxiedSocketAddress$Builder setPassword(java.lang.String)
okio.Buffer: okio.Buffer write(byte[])
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
com.google.android.gms.internal.firebase-auth-api.zzmj: zzmj()
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String encodeLabel(com.google.firebase.firestore.local.QueryPurpose)
io.grpc.internal.GrpcUtil$3: java.lang.String toString()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.LatLng getPosition()
androidx.activity.ComponentActivity$1: void run()
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
com.google.firestore.v1.FirestoreGrpc: FirestoreGrpc()
io.grpc.internal.RetriableStream: java.lang.Runnable access$2900(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$Substream)
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzlh zza()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzF(com.google.android.gms.internal.firebase-auth-api.zzaef,java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.CCTDestination: byte[] getExtras()
com.google.firebase.components.DependencyCycleException: DependencyCycleException(java.util.List)
com.google.firebase.database.collection.ImmutableSortedSet: java.util.Iterator iterator()
com.google.android.gms.internal.firebase-auth-api.zzdj: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.grpc.internal.CallTracer: void reportCallStarted()
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.firestore.model.mutation.MutationBatch getBatch()
com.google.firestore.v1.DocumentMask: void addFieldPaths(java.lang.String)
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl: WebStorageHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.WebStorageHostApiImpl$WebStorageCreator)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin$Companion: FlutterToastPlugin$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.mutation.Precondition getPrecondition()
io.grpc.Metadata: Metadata(byte[][])
io.grpc.internal.AbstractStream$TransportState$1RequestRunnable: AbstractStream$TransportState$1RequestRunnable(io.grpc.internal.AbstractStream$TransportState,io.perfmark.Link,int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzA(com.google.android.gms.internal.firebase-auth-api.zzrq,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.ResourcePath encodedDatabaseId(com.google.firebase.firestore.model.DatabaseId)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: AndroidConnectivityMonitor(android.content.Context)
com.google.android.gms.common.api.internal.zag: void zad(com.google.android.gms.common.api.Status)
com.google.protobuf.Internal: boolean isValidUtf8(byte[])
com.google.android.gms.safetynet.SafeBrowsingData: SafeBrowsingData(java.lang.String,com.google.android.gms.common.data.DataHolder,android.os.ParcelFileDescriptor,long,byte[])
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
io.grpc.internal.DelayedClientCall$1DrainListenerRunnable: DelayedClientCall$1DrainListenerRunnable(io.grpc.internal.DelayedClientCall,io.grpc.internal.DelayedClientCall$DelayedListener)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder: StructuredQuery$CompositeFilter$Builder(com.google.firestore.v1.StructuredQuery$1)
com.google.android.gms.internal.firebase-auth-api.zzabr: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.Api$Client zaa(com.google.android.gms.common.api.internal.zabu)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzn(java.util.List)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onDetachedFromActivity()
com.google.firebase.firestore.local.SQLiteSchema: void createBundleCache()
com.google.firestore.v1.WriteResult$Builder: WriteResult$Builder(com.google.firestore.v1.WriteResult$1)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
com.google.protobuf.FieldSet: void mergeFrom(com.google.protobuf.FieldSet)
com.google.protobuf.MessageSchema: boolean equals(java.lang.Object,java.lang.Object,int)
com.google.common.base.Platform: java.lang.String formatCompact4Digits(double)
com.google.android.gms.internal.stats.zzb: zzb(boolean,com.google.android.gms.internal.stats.zzd)
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.api.internal.zabx zac(android.content.Context,com.google.android.gms.common.api.internal.zabw)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object[])
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: DocumentTransform$FieldTransform$ServerValue(java.lang.String,int,int)
com.google.firebase.firestore.LoadBundleTask$ManagedListener: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzo(com.google.firebase.auth.PhoneAuthCredential)
io.grpc.internal.AbstractClientStream$TransportState: AbstractClientStream$TransportState(int,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexEntityRef(java.lang.String,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
com.google.android.gms.internal.firebase-auth-api.zzaar: int zzc()
com.baseflow.geolocator.MethodCallHandlerImpl: void onIsLocationServiceEnabled(io.flutter.plugin.common.MethodChannel$Result)
io.grpc.internal.JsonUtil: java.util.List checkStringList(java.util.List)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void scrollBy(java.lang.Long,java.lang.Long,java.lang.Long)
com.google.firebase.auth.zzt: void zza(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.firebase.auth.FirebaseUser)
com.google.android.gms.maps.GoogleMap: void setOnMapLongClickListener(com.google.android.gms.maps.GoogleMap$OnMapLongClickListener)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.grpc.EquivalentAddressGroup: EquivalentAddressGroup(java.net.SocketAddress)
androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
io.grpc.internal.ApplicationThreadDeframer$CloseableInitializingMessageProducer: ApplicationThreadDeframer$CloseableInitializingMessageProducer(io.grpc.internal.ApplicationThreadDeframer,java.lang.Runnable,java.io.Closeable)
com.google.firebase.components.Dependency: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzy(int,int)
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: int compareTo(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzin: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.Transaction set(com.google.firebase.firestore.DocumentReference,java.lang.Object)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
com.google.firestore.v1.Precondition$Builder: com.google.firestore.v1.Precondition$Builder setUpdateTime(com.google.protobuf.Timestamp)
com.google.android.gms.internal.firebase-auth-api.zzmb: com.google.android.gms.internal.firebase-auth-api.zzmb zzc()
com.google.android.gms.internal.firebase-auth-api.zzip: zzip()
io.grpc.internal.SerializingExecutor: int access$302(io.grpc.internal.SerializingExecutor,int)
com.google.firebase.firestore.bundle.NamedQuery: java.lang.String getName()
com.lyokone.location.LocationPlugin: void onDetachedFromActivity()
com.google.protobuf.BinaryReader$SafeHeapReader: void readSFixed64List(java.util.List)
io.grpc.internal.JndiResourceResolverFactory: io.grpc.internal.DnsNameResolver$ResourceResolver newResourceResolver()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency requiredProvider(java.lang.Class)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider: OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider(io.grpc.okhttp.OkHttpChannelBuilder,io.grpc.okhttp.OkHttpChannelBuilder$1)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: long getCurrentSequenceNumber()
com.google.android.gms.internal.firebase-auth-api.zzbb: zzbb(com.google.android.gms.internal.firebase-auth-api.zzgq,com.google.android.gms.internal.firebase-auth-api.zzgb)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks: void onCodeAutoRetrievalTimeOut(java.lang.String)
kotlinx.coroutines.channels.AbstractChannel: void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] values()
com.google.firebase.firestore.remote.FirestoreChannel$1: void onHeaders(io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzcw: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzop: zzop(java.security.interfaces.ECPublicKey)
com.google.android.gms.common.internal.zad: zad(android.content.Intent,android.app.Activity,int)
com.google.firebase.firestore.local.LocalDocumentsView: LocalDocumentsView(com.google.firebase.firestore.local.RemoteDocumentCache,com.google.firebase.firestore.local.MutationQueue,com.google.firebase.firestore.local.DocumentOverlayCache,com.google.firebase.firestore.local.IndexManager)
com.google.firebase.firestore.remote.Datastore: com.google.android.gms.tasks.Task lookup(java.util.List)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.firebase.database.collection.ArraySortedMap: int findKey(java.lang.Object)
io.grpc.internal.MessageDeframer: boolean readRequiredBytes()
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
com.google.android.gms.common.api.internal.GoogleApiManager: long zad(com.google.android.gms.common.api.internal.GoogleApiManager)
io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.Object parseAsciiString(java.lang.String)
com.google.firebase.auth.internal.GenericIdpActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onCreate(android.database.sqlite.SQLiteDatabase)
com.google.gson.stream.JsonReader: int peekKeyword()
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setIntegerValue(long)
com.google.common.io.BaseEncoding: java.lang.String encode(byte[])
com.google.android.gms.internal.cloudmessaging.zzf: zzf(android.os.Looper)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastQ()
com.google.android.gms.internal.firebase-auth-api.zzaeh: boolean zzq(com.google.android.gms.internal.firebase-auth-api.zzadn)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: android.os.Bundle extractBundle(java.util.Map)
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
com.google.firebase.messaging.WithinAppServiceBinder: void send(com.google.firebase.messaging.WithinAppServiceConnection$BindRequest)
com.google.android.gms.internal.firebase-auth-api.zzcw: void zzg(boolean)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByteArray(android.os.Parcel,int,byte[],boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2112(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)
com.google.firebase.firestore.local.SQLiteTargetCache$TargetDataHolder: SQLiteTargetCache$TargetDataHolder()
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.database.collection.ImmutableSortedSet emptyKeySet()
com.google.android.gms.maps.model.zzb: java.lang.Object[] newArray(int)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: void run()
com.google.firebase.components.LazySet: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzbi zze()
com.google.android.gms.internal.firebase-auth-api.zzaeh: java.lang.Object zze(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
com.google.android.gms.internal.firebase-auth-api.zzzy: com.google.android.gms.internal.firebase-auth-api.zzzy zzc(java.lang.String,java.lang.String,boolean)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzhl: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$Event getEvent()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityStarted(android.app.Activity)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
io.grpc.internal.SerializeReentrantCallsDirectExecutor: void completeQueuedTasks()
com.google.android.gms.maps.model.Marker: void showInfoWindow()
com.google.firebase.installations.FirebaseInstallations$1: FirebaseInstallations$1()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State substreamClosed(io.grpc.internal.RetriableStream$Substream)
com.baseflow.geolocator.permission.PermissionManager: PermissionManager()
com.google.android.gms.internal.firebase-auth-api.zzxu: java.lang.String zza()
com.google.android.gms.maps.model.Polyline: void setClickable(boolean)
com.google.android.gms.internal.firebase-auth-api.zzrz: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: java.util.Set getAllUserIds()
com.google.android.gms.internal.maps.zzae: void zzh()
io.grpc.internal.GzipInflatingBuffer: boolean initializeInflater()
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.local.IndexBackfiller createIndexBackfiller(com.google.firebase.firestore.core.ComponentProvider$Configuration)
io.flutter.plugins.webviewflutter.InstanceManager: java.lang.Object getInstance(long)
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order$Builder newBuilder()
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void callCancelled()
io.grpc.internal.FailingClientStream: FailingClientStream(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.ClientStreamTracer[])
com.google.firestore.v1.StructuredQuery$Filter: void setCompositeFilter(com.google.firestore.v1.StructuredQuery$CompositeFilter)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getTopic(android.os.Bundle)
io.grpc.internal.ChannelTracer: ChannelTracer(io.grpc.InternalLogId,int,long,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzht: byte[] zze()
com.google.android.gms.internal.firebase-auth-api.zzacm: java.util.List zza(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzx(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzep: void zza(com.google.android.gms.internal.firebase-auth-api.zzku)
com.google.android.gms.maps.MapsInitializer: int initialize(android.content.Context)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: boolean getBoolean(java.lang.Object,long)
com.google.firebase.firestore.remote.WatchChangeAggregator: com.google.firebase.firestore.remote.RemoteEvent createRemoteEvent(com.google.firebase.firestore.model.SnapshotVersion)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
com.google.protobuf.ManifestSchemaFactory$CompositeMessageInfoFactory: com.google.protobuf.MessageInfo messageInfoFor(java.lang.Class)
io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAddresses(java.util.List)
com.google.firestore.admin.v1.Index$IndexField: Index$IndexField()
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String getLastDisconnectMessage()
com.google.firebase.firestore.core.DatabaseInfo: java.lang.String getHost()
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.firebase.auth.OAuthProvider$Builder: OAuthProvider$Builder(java.lang.String,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.zzab)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialCircles(java.lang.Object)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzg()
kotlin.ranges.IntProgression: int getStep()
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.FieldPath fromDotSeparatedPath(java.lang.String)
com.google.protobuf.Utf8$Processor: Utf8$Processor()
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
com.google.android.gms.common.internal.zav: com.google.android.gms.common.ConnectionResult zaa()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzte: void zza(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
com.google.android.datatransport.runtime.TransportRuntimeComponent: TransportRuntimeComponent()
com.google.protobuf.CodedOutputStreamWriter: void writeUInt64List(int,java.util.List,boolean)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzod: javax.crypto.Cipher zza()
com.google.protobuf.UnsafeUtil: boolean getBooleanLittleEndian(java.lang.Object,long)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType getNetworkType()
com.google.android.gms.internal.firebase-auth-api.zzcl: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.local.MemoryIndexManager: com.google.firebase.firestore.local.IndexManager$IndexType getIndexType(com.google.firebase.firestore.core.Target)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean shouldIncludeSetter(java.lang.reflect.Method)
com.google.firebase.firestore.model.DocumentSet: DocumentSet(com.google.firebase.database.collection.ImmutableSortedMap,com.google.firebase.database.collection.ImmutableSortedSet)
com.google.firestore.v1.ArrayValue: void removeValues(int)
io.grpc.internal.AbstractStream$TransportState: void onStreamDeallocated()
io.grpc.internal.ManagedChannelImpl$NameResolverListener: void onResult(io.grpc.NameResolver$ResolutionResult)
com.google.firebase.auth.zze: void writeToParcel(android.os.Parcel,int)
com.google.firebase.auth.internal.zzt: java.lang.String getEmail()
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.database.collection.ImmutableSortedSet getRemoteKeysForTarget(int)
com.google.android.gms.common.internal.zzq: boolean handleMessage(android.os.Message)
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
io.flutter.plugins.googlemaps.PolygonController: PolygonController(com.google.android.gms.maps.model.Polygon,boolean,float)
com.google.firebase.auth.MultiFactorResolver: MultiFactorResolver()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long getPluginCallbackHandle()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.plugins.googlemaps.GoogleMapController: void onPolygonClick(com.google.android.gms.maps.model.Polygon)
com.google.android.gms.tasks.zzp: void onCanceled()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApiKey(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zze()
com.google.firebase.firestore.local.LocalDocumentsResult: int getBatchId()
io.grpc.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()
com.google.android.gms.internal.firebase-auth-api.zzaau: int zzm()
com.google.protobuf.MessageSchema: int getSerializedSize(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void hideFragment(androidx.fragment.app.Fragment)
io.flutter.view.AccessibilityBridge$1: void onTap(int)
com.google.firebase.messaging.TopicOperation: java.lang.String normalizeTopicOrThrow(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
com.google.android.gms.tasks.Task: Task()
com.google.android.gms.internal.location.zzay: void notifyListener(java.lang.Object)
com.google.firebase.firestore.proto.WriteBatch: void ensureWritesIsMutable()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
com.google.android.gms.tasks.zzv: com.google.android.gms.tasks.zzv zza(android.app.Activity)
com.google.common.util.concurrent.DirectExecutor: java.lang.String toString()
androidx.webkit.WebViewClientCompat: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.firebase.firestore.remote.TargetState: void recordTargetResponse()
com.google.android.gms.internal.base.zac: zac()
io.grpc.internal.RetriableStream$Sublistener$1: RetriableStream$Sublistener$1(io.grpc.internal.RetriableStream$Sublistener,io.grpc.Metadata)
com.google.android.gms.common.api.internal.zaae: void zac()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.protobuf.Timestamp encodeVersion(com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzn(int,java.util.List,boolean)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.gms.internal.firebase-auth-api.zzaz: com.google.android.gms.internal.firebase-auth-api.zzay zzf()
com.google.protobuf.CodedInputStream$ArrayDecoder: CodedInputStream$ArrayDecoder(byte[],int,int,boolean)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: java.util.concurrent.ScheduledFuture access$100(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor,java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.protobuf.LazyFieldLite: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.AutoValue_SendRequest: int hashCode()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext doEncode(com.google.firebase.encoders.ObjectEncoder,com.google.firebase.encoders.FieldDescriptor,java.lang.Object,boolean)
io.grpc.ClientInterceptors$2: void cancel(java.lang.String,java.lang.Throwable)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key()
io.grpc.internal.ManagedChannelImpl: void access$8000(io.grpc.internal.ManagedChannelImpl,boolean)
io.grpc.internal.MessageFramer: void close()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzjz zzb()
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.android.gms.common.internal.zac: java.lang.String zae(android.content.Context,int)
com.google.android.gms.internal.firebase-auth-api.zzaei: void add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzws: void zza(java.lang.Object,com.google.android.gms.common.api.Status)
io.grpc.internal.MessageFramer: io.grpc.internal.Framer setCompressor(io.grpc.Compressor)
io.grpc.Metadata: java.util.Set keys()
com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.lyokone.location.NotificationOptions: NotificationOptions()
io.grpc.internal.ClientCallImpl: void logIfContextNarrowedTimeout(io.grpc.Deadline,io.grpc.Deadline,io.grpc.Deadline)
io.grpc.ForwardingChannelBuilder: java.lang.String toString()
com.google.android.gms.location.zzac: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getNextCallTime(com.google.android.datatransport.runtime.TransportContext)
com.google.protobuf.Utf8: int incompleteStateFor(int)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$ResponseCode getResponseCode()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventUptimeMs(long)
com.google.android.gms.maps.model.VisibleRegion: int hashCode()
com.google.protobuf.MessageSchema: void mergeFrom(java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)
kotlinx.coroutines.DebugKt: boolean getDEBUG()
com.google.android.gms.internal.firebase-auth-api.zzaf: com.google.android.gms.internal.firebase-auth-api.zzaf zzb(char)
com.google.firebase.encoders.proto.ProtobufEncoder: void encode(java.lang.Object,java.io.OutputStream)
com.google.android.gms.internal.firebase-auth-api.zzqy: zzqy(com.google.android.gms.internal.firebase-auth-api.zzzd)
com.google.android.gms.maps.model.Marker: void setAlpha(float)
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics build()
com.google.firebase.firestore.remote.AbstractStream: void start()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.android.gms.internal.auth-api-phone.zzx: void accept(java.lang.Object,java.lang.Object)
com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.zzw zzb(com.google.android.gms.tasks.zzf)
com.google.firebase.encoders.proto.LengthCountingOutputStream: LengthCountingOutputStream()
com.google.protobuf.UnsafeUtil: void putFloat(java.lang.Object,long,float)
com.google.protobuf.RopeByteString: void writeTo(com.google.protobuf.ByteOutput)
com.google.android.gms.stats.zzb: zzb()
androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()
com.google.android.gms.internal.safetynet.zzc: zzc()
io.grpc.internal.GrpcUtil: io.grpc.Status httpStatusToGrpcStatus(int)
kotlin.internal.PlatformImplementationsKt: int getJavaVersion()
com.google.android.gms.internal.firebase-auth-api.zzabr: java.lang.String zzf(int)
com.google.android.gms.tasks.DuplicateTaskCompletionException: java.lang.IllegalStateException of(com.google.android.gms.tasks.Task)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiDisplayed()
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: java.lang.String toString()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.google.firestore.v1.StructuredQuery$FieldFilter: void access$3100(com.google.firestore.v1.StructuredQuery$FieldFilter,com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.android.gms.internal.firebase-auth-api.zzuy: java.lang.String zza()
io.grpc.internal.ClientCallImpl: io.grpc.MethodDescriptor access$900(io.grpc.internal.ClientCallImpl)
com.lyokone.location.FlutterLocation: void sendError(java.lang.String,java.lang.String,java.lang.Object)
io.grpc.internal.PickFirstLoadBalancerProvider: PickFirstLoadBalancerProvider()
io.grpc.internal.ManagedChannelImpl$NameResolverListener: void handleErrorInSyncContext(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzbf: com.google.android.gms.internal.firebase-auth-api.zzmp zza()
com.google.android.gms.common.internal.GmsClient: java.util.Set getScopesForConnectionlessNonSignIn()
io.grpc.internal.AbstractStream$TransportState: void access$200(io.grpc.internal.AbstractStream$TransportState,int)
com.google.android.gms.internal.firebase-auth-api.zzzq: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzaag: java.lang.Class zza()
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseQueryValue(java.lang.Object)
com.google.firebase.firestore.remote.WatchChangeAggregator: int getCurrentDocumentCountForTarget(int)
io.flutter.plugins.googlemaps.GoogleMapController: void onInfoWindowClick(com.google.android.gms.maps.model.Marker)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
com.google.protobuf.BinaryReader$SafeHeapReader: long readInt64()
com.google.firebase.firestore.bundle.BundleSerializer: void verifyNoOffset(org.json.JSONObject)
io.grpc.internal.DnsNameResolver: DnsNameResolver(java.lang.String,java.lang.String,io.grpc.NameResolver$Args,io.grpc.internal.SharedResourceHolder$Resource,com.google.common.base.Stopwatch,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.firestore.v1.StructuredQuery$Projection: StructuredQuery$Projection()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void deleteAllHeartBeats()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readRawVarint64SlowPath()
com.google.android.gms.maps.model.TileOverlay: boolean equals(java.lang.Object)
io.grpc.SynchronizationContext: void execute(java.lang.Runnable)
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzlt zzf()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
com.google.android.gms.internal.firebase-auth-api.zznl: zznl()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
com.google.firebase.firestore.core.Query: boolean equals(java.lang.Object)
io.grpc.internal.ApplicationThreadDeframer: void closeWhenComplete()
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
com.google.firebase.firestore.Blob: int hashCode()
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringList getUnmodifiableView()
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
com.google.android.gms.common.internal.zzr: void zza(com.google.android.gms.common.internal.zzn,android.content.ServiceConnection,java.lang.String)
io.grpc.ServiceProviders: java.lang.Iterable getCandidatesViaServiceLoader(java.lang.Class,java.lang.ClassLoader)
com.google.protobuf.IterableByteBufferInputStream: boolean getNextByteBuffer()
com.google.firebase.installations.local.IidStore: IidStore(com.google.firebase.FirebaseApp)
io.grpc.okhttp.internal.framed.Http2$Writer: void data(boolean,int,okio.Buffer,int)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setCollapseKey(java.lang.String)
io.flutter.plugins.webviewflutter.FlutterAssetManagerHostApiImpl: java.lang.String getAssetFilePathByName(java.lang.String)
com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.zzq)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
com.google.firebase.auth.FirebaseAuth: void removeIdTokenListener(com.google.firebase.auth.internal.IdTokenListener)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions position(com.google.android.gms.maps.model.LatLng)
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
com.google.protobuf.SmallSortedMap: SmallSortedMap(int,com.google.protobuf.SmallSortedMap$1)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zac(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznz: com.google.android.gms.internal.firebase-auth-api.zznz zza()
com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)
com.google.android.gms.location.LocationServices$zza: LocationServices$zza(com.google.android.gms.common.api.GoogleApiClient)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.internal.location.zzaj zza(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzl(int,int)
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: int getLength()
com.google.android.gms.internal.common.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.grpc.okhttp.OkHttpFrameLogger: void logHeaders(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,java.util.List,boolean)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query endAt(com.google.firebase.firestore.core.Bound)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: void access$100(io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder: AutoProtoEncoderDoNotUseEncoder()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.lyokone.location.NotificationOptions: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void delete(java.lang.String,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getIcon()
androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()
com.google.firebase.messaging.ByteStreams$LimitedInputStream: ByteStreams$LimitedInputStream(java.io.InputStream,long)
com.google.android.gms.internal.firebase-auth-api.zzaby: zzaby()
com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createUnstarted()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: android.app.job.JobInfo$Builder configureJob(android.app.job.JobInfo$Builder,com.google.android.datatransport.Priority,long,int)
io.grpc.Metadata$TrustedAsciiKey: Metadata$TrustedAsciiKey(java.lang.String,boolean,io.grpc.Metadata$TrustedAsciiMarshaller,io.grpc.Metadata$1)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
com.google.android.gms.internal.firebase-auth-api.zzaeb: int zzb()
com.google.android.gms.internal.firebase-auth-api.zzih: void zzi(com.google.android.gms.internal.firebase-auth-api.zzih,com.google.android.gms.internal.firebase-auth-api.zzin)
com.google.android.gms.internal.firebase-auth-api.zzaq: com.google.android.gms.internal.firebase-auth-api.zzbj zza(java.io.OutputStream)
com.google.android.gms.internal.firebase-auth-api.zzaem: void zzf(java.lang.Object,long,float)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzw(com.google.android.gms.internal.firebase-auth-api.zzxe,com.google.android.gms.internal.firebase-auth-api.zzwb,com.google.android.gms.internal.firebase-auth-api.zzwc)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions infoWindowAnchor(float,float)
com.google.firebase.firestore.core.TransactionRunner: void runWithBackoff()
com.google.android.gms.internal.firebase-auth-api.zzi: boolean zza(char)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()
io.grpc.internal.ChannelLoggerImpl: io.grpc.InternalChannelz$ChannelTrace$Event$Severity toTracerSeverity(io.grpc.ChannelLogger$ChannelLogLevel)
com.google.android.gms.internal.base.zal: android.app.PendingIntent zaa(android.content.Context,int,android.content.Intent,int)
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzmw zzd(int)
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: java.lang.String toString()
com.google.firestore.v1.ListenRequest$Builder: com.google.firestore.v1.ListenRequest$Builder putAllLabels(java.util.Map)
com.google.common.collect.RegularImmutableMap: java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int)
io.grpc.internal.DelayedClientTransport: int getPendingStreamsCount()
com.google.firebase.firestore.model.DatabaseId: java.lang.String getProjectId()
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.WatchStream createWatchStream(com.google.firebase.firestore.remote.WatchStream$Callback)
io.grpc.internal.DelayedStream$DelayedStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzaz: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: void stopListening()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
com.google.android.gms.internal.firebase-auth-api.zzsc: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.api.internal.zap: void onActivityResult(int,int,android.content.Intent)
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.Value getValues(int)
com.google.protobuf.CodedInputStreamReader: java.lang.String readStringRequireUtf8()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogSource(java.lang.Integer)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.firebase.firestore.model.ObjectValue: com.google.firestore.v1.Value buildProto()
io.grpc.Metadata$Key: java.lang.String toString()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zzb(android.content.Context,android.content.Intent)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
com.google.android.gms.internal.firebase-auth-api.zzhl: zzhl(java.lang.Class)
com.google.firebase.database.collection.ImmutableSortedMap: boolean equals(java.lang.Object)
com.google.android.datatransport.cct.CCTDestination: java.lang.String getName()
okio.Buffer: okio.BufferedSink writeInt(int)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.android.gms.internal.firebase-auth-api.zzaen: void zzc(java.lang.Object,long,boolean)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.ResourcePath decodeResourceName(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
com.google.android.gms.internal.firebase-auth-api.zzfy: zzfy(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzfx)
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.DocumentReference getReference()
com.google.firebase.firestore.index.FirestoreIndexValueWriter: FirestoreIndexValueWriter()
io.grpc.Status$Code: Status$Code(java.lang.String,int,int)
com.google.firebase.firestore.core.LimboDocumentChange: com.google.firebase.firestore.core.LimboDocumentChange$Type getType()
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEventMillis(long)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: AndroidChannelBuilder$AndroidChannel$2(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: JsonDataEncoderBuilder$TimestampEncoder()
com.google.android.gms.internal.firebase-auth-api.zzvd: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.dynamic.zag: zag(com.google.android.gms.dynamic.DeferredLifecycleHelper)
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzfz zzi(int,int,int,com.google.android.gms.internal.firebase-auth-api.zzbf,byte[],int)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.internal.framed.FrameReader access$400(io.grpc.okhttp.OkHttpClientTransport)
io.grpc.internal.InternalSubchannel: java.lang.String access$2400(io.grpc.internal.InternalSubchannel,io.grpc.Status)
com.google.android.gms.common.internal.zzk: java.lang.Object[] newArray(int)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
io.flutter.plugins.firebase.messaging.ContextHolder: android.content.Context getApplicationContext()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.internal.ClientTransportFactory buildTransportFactory()
io.grpc.NameResolverRegistry: java.util.Map providers()
io.grpc.ThreadLocalContextStorage: io.grpc.Context current()
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: boolean isRepeated()
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Bound getEndAt()
com.google.protobuf.Any$Builder: Any$Builder()
androidx.collection.SparseArrayCompat: java.lang.Object clone()
io.grpc.internal.DelayedStream$14: void run()
kotlin.Result$Failure: int hashCode()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void onFlutterViewDetached()
io.grpc.internal.ManagedChannelImpl$1: ManagedChannelImpl$1()
com.google.common.collect.RegularImmutableMap$EntrySet$1: java.util.Map$Entry get(int)
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: void saveOverlays(int,java.util.Map)
com.google.firebase.components.Dependency: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setCameraTargetBounds(com.google.android.gms.maps.model.LatLngBounds)
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
com.google.protobuf.UnknownFieldSetLite: void checkMutable()
io.grpc.internal.RetriableStream$StartEntry: RetriableStream$StartEntry(io.grpc.internal.RetriableStream)
com.google.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)
androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.location.zzav: zzav(com.google.android.gms.internal.location.zzat,com.google.android.gms.location.LocationAvailability)
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings$Builder setIOSBundleId(java.lang.String)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzs(java.lang.Object,long)
com.google.protobuf.CodedOutputStream: int computePreferredBufferSize(int)
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
com.google.android.gms.internal.firebase-auth-api.zze: java.util.concurrent.ExecutorService zza(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.firebase.FirebaseOptions$Builder: FirebaseOptions$Builder()
com.google.protobuf.NullValue: NullValue(java.lang.String,int,int)
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.core.UserData$ParseContext childContext(int)
com.google.android.gms.internal.location.zzay: zzay(com.google.android.gms.internal.location.zzax,android.location.Location)
com.google.android.gms.internal.firebase-auth-api.zztz: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zznb: com.google.android.gms.internal.firebase-auth-api.zzna zzb()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.google.firebase.firestore.core.AsyncEventListener: void mute()
com.google.android.gms.internal.firebase-auth-api.zzno: boolean zzf()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApiCodec: GeneratedAndroidWebView$WebChromeClientFlutterApiCodec()
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzdj: com.google.android.gms.internal.firebase-auth-api.zzga zza()
io.grpc.internal.TimeProvider$1: long currentTimeNanos()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void completeResumeReceive(java.lang.Object)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setWebContentsDebuggingEnabled(java.lang.Boolean)
com.google.protobuf.NioByteString: byte internalByteAt(int)
io.grpc.internal.DelayedStream$1: void run()
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.SafeBrowsingData)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: GeneratedMessageLite$MethodToInvoke(java.lang.String,int)
io.flutter.plugin.platform.PlatformPlugin: void access$1000(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
com.google.protobuf.IntArrayList: boolean add(java.lang.Integer)
io.flutter.plugin.editing.TextInputPlugin$1: void show()
okio.Buffer: java.lang.String readUtf8Line(long)
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
com.google.firebase.firestore.util.Util: int compareLongs(long,long)
com.google.firebase.firestore.remote.AbstractStream: void handleServerClose(io.grpc.Status)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void dispose()
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
com.google.android.gms.dynamite.zze: int zza(android.content.Context,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzt(java.util.List)
com.google.firebase.firestore.remote.AbstractStream: com.google.firebase.firestore.util.AsyncQueue access$000(com.google.firebase.firestore.remote.AbstractStream)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: void encode(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzaet: zzaet(int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzy(int,long)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
com.google.android.gms.common.util.Base64Utils: java.lang.String encode(byte[])
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp getUpdateTime()
com.google.android.gms.common.util.DefaultClock: com.google.android.gms.common.util.Clock getInstance()
com.google.firebase.firestore.core.ComponentProvider$Configuration: android.content.Context getContext()
com.google.firebase.auth.zzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.common.collect.RegularImmutableList: java.lang.Object get(int)
com.google.protobuf.GeneratedMessageLite: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
com.google.firebase.messaging.MessagingAnalytics: long getProjectNumber(android.os.Bundle)
io.grpc.internal.ForwardingNameResolver: void refresh()
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
com.google.android.gms.common.api.internal.zae: void zag(com.google.android.gms.common.api.internal.zaad,boolean)
com.google.android.gms.internal.firebase-auth-api.zzaeu: int zzb(java.lang.CharSequence,byte[],int,int)
io.grpc.Status$StatusCodeMarshaller: byte[] toAsciiString(io.grpc.Status)
io.flutter.embedding.android.FlutterSplashView$3: void run()
com.google.firestore.v1.ArrayValue: void ensureValuesIsMutable()
com.google.android.gms.internal.firebase-auth-api.zzhu: zzhu()
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: NotificationManagerCompat$SideChannelManager$ListenerRecord(android.content.ComponentName)
okio.SegmentedByteString: byte[] toByteArray()
com.google.protobuf.CodedInputStreamReader: java.lang.Object readMessageBySchemaWithCheck(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.protobuf.MessageSchema: void storeFieldData(com.google.protobuf.FieldInfo,int[],int,java.lang.Object[])
com.google.android.gms.maps.internal.zzg: void setMyLocationEnabled(boolean)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyh: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.firestore.util.Assert: java.lang.Object hardAssertNonNull(java.lang.Object,java.lang.String,java.lang.Object[])
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()
com.google.android.gms.internal.firebase-auth-api.zzrw: zzrw(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManagerImpl$5: void onAnimationEnd(android.animation.Animator)
com.google.firebase.auth.internal.zzbl: boolean zzd(android.content.Intent)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
io.grpc.internal.NoopClientStream: void optimizeForDirectExecutor()
io.grpc.internal.GzipInflatingBuffer: boolean processHeaderCrc()
okio.Buffer: int readInt()
com.google.protobuf.CodedInputStreamReader: void readInt64List(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzaeu: boolean zzf(byte[],int,int)
okio.RealBufferedSink: okio.BufferedSink writeByte(int)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] values()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
com.google.protobuf.UnsafeUtil: int arrayIndexScale(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzoc: java.lang.Object initialValue()
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange access$000()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApiCodec: GeneratedAndroidWebView$DownloadListenerFlutterApiCodec()
io.flutter.Log: void w(java.lang.String,java.lang.String)
com.google.firebase.auth.internal.zza: zza(com.google.firebase.auth.internal.zzf,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.internal.zzbm,android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.auth.FirebaseAuthSettings: FirebaseAuthSettings()
io.grpc.internal.CallCredentialsApplyingTransportFactory: void close()
io.grpc.internal.RetriableStream$3: RetriableStream$3(io.grpc.internal.RetriableStream)
androidx.collection.SparseArrayCompat: void clear()
io.grpc.okhttp.internal.Platform$1: Platform$1()
com.google.android.gms.internal.firebase-auth-api.zztf: void zzb(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase forNumber(int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map getExceptionDetails(java.lang.Exception)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Builder newBuilder(io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller)
io.grpc.okhttp.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])
com.google.android.gms.tasks.zzn: java.lang.Object zzb(com.google.android.gms.tasks.zzn)
com.google.firebase.messaging.TopicsSyncTask: boolean hasAccessNetworkStatePermission(android.content.Context)
com.google.android.gms.common.api.internal.zabq: boolean zaA()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.firebase.firestore.core.ActivityScope$StopListenerFragment: void onStop()
com.google.android.gms.internal.firebase-auth-api.zzrk: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.Convert: java.util.List toPattern(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
io.grpc.okhttp.internal.framed.Hpack$Reader: java.util.List getAndResetHeaderList()
com.google.android.gms.maps.model.LatLng: java.lang.String toString()
com.google.protobuf.SchemaUtil: int computeSizeFixed32List(int,java.util.List,boolean)
com.google.android.gms.tasks.zzad: void onSuccess(java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: int hashCode()
com.google.common.collect.ImmutableMap: java.util.Set entrySet()
androidx.core.app.NotificationCompat$BigTextStyle: void addCompatExtras(android.os.Bundle)
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.firebase.auth.zze zzd()
io.grpc.SynchronizationContext: void drain()
com.google.firebase.firestore.model.Values: void canonifyGeoPoint(java.lang.StringBuilder,com.google.type.LatLng)
com.google.firebase.firestore.util.BackgroundQueue: BackgroundQueue()
io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.String toString()
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvf: void zzb()
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$FutureCanceller access$802(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$FutureCanceller)
io.grpc.okhttp.OkHttpTlsUpgrader: javax.net.ssl.SSLSocket upgrade(javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,java.net.Socket,java.lang.String,int,io.grpc.okhttp.internal.ConnectionSpec)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
io.grpc.okhttp.internal.framed.Http2$Writer: void connectionPreface()
com.google.firebase.messaging.FcmBroadcastProcessor: com.google.android.gms.tasks.Task process(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzfj: byte[] zzb()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setSourceExtensionJsonProto3(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzj(java.lang.String)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)
io.flutter.plugins.firebase.firestore.streamhandler.DocumentSnapshotsStreamHandler: void onCancel(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzce: com.google.android.gms.internal.firebase-auth-api.zzmp zzb(int)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$UnaryFilter getUnaryFilter()
com.google.firestore.v1.Value$Builder: Value$Builder(com.google.firestore.v1.Value$1)
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
com.google.android.gms.common.internal.zzac: android.os.IBinder asBinder()
com.google.firebase.firestore.remote.RemoteStore: void listen(com.google.firebase.firestore.local.TargetData)
com.google.firebase.auth.ActionCodeSettings: int zza()
com.google.firebase.firestore.Blob: com.google.protobuf.ByteString toByteString()
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String nextAT()
com.google.firestore.v1.BatchGetDocumentsRequest$Builder: BatchGetDocumentsRequest$Builder()
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
io.grpc.internal.ManagedChannelImpl: java.lang.Object access$4400(io.grpc.internal.ManagedChannelImpl)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setTileProvider(com.google.android.gms.maps.model.TileProvider)
com.google.protobuf.UnknownFieldSetLiteSchema: void addVarint(java.lang.Object,int,long)
com.google.android.gms.internal.firebase-auth-api.zziz: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.grpc.NameResolver$Args: java.util.concurrent.Executor getOffloadExecutor()
com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)
com.google.firebase.firestore.proto.MaybeDocument: com.google.firestore.v1.Document getDocument()
io.grpc.internal.ClientCallImpl: void prepareHeaders(io.grpc.Metadata,io.grpc.DecompressorRegistry,io.grpc.Compressor,boolean)
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzmk zzc()
com.google.firebase.auth.internal.zze: java.lang.String zza()
com.google.protobuf.Timestamp: long getSeconds()
com.google.android.gms.common.internal.service.zap: zap(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.internal.TelemetryLoggingOptions,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder newBuilder()
io.grpc.internal.MessageFramer$BufferChainOutputStream: void write(int)
com.google.android.gms.internal.firebase-auth-api.zzaep: java.lang.Object zze(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzal: java.lang.Object set(int,java.lang.Object)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion forJavaName(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzcm: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzye: com.google.android.gms.internal.firebase-auth-api.zzye[] values()
com.tekartik.sqflite.operation.BaseOperation: BaseOperation()
com.google.android.gms.common.internal.GmsClientSupervisor: int getDefaultBindFlags()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getQueueDebugStateString()
com.google.android.gms.tasks.zzm: zzm(com.google.android.gms.tasks.zzn,com.google.android.gms.tasks.Task)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzP(com.google.android.gms.internal.firebase-auth-api.zzyn,com.google.android.gms.internal.firebase-auth-api.zzvs)
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
com.google.android.gms.maps.model.zzc: java.lang.Object[] newArray(int)
io.grpc.internal.RetriableStream: void flush()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl$WebSettingsCreator: WebSettingsHostApiImpl$WebSettingsCreator()
com.google.android.gms.internal.firebase-auth-api.zzgx: int hashCode()
io.flutter.plugins.googlemaps.GoogleMapController: void access$100(java.lang.Runnable)
com.google.firebase.firestore.remote.TargetState: void removeDocumentChange(com.google.firebase.firestore.model.DocumentKey)
com.google.protobuf.ArrayDecoders: int decodeFixed32List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzbs: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
com.google.android.gms.internal.firebase-auth-api.zzlp: com.google.android.gms.internal.firebase-auth-api.zzlp zza(int)
com.google.android.gms.common.internal.zzag: int zza(android.content.Context)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query startAfter(java.lang.Object[])
io.grpc.internal.ServiceConfigUtil: java.lang.Integer getMaxAttemptsFromHedgingPolicy(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzah: boolean hasPrevious()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.protobuf.RopeByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.lang.String getTransportName()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void completeResumeSend()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzbg: com.google.android.gms.internal.firebase-auth-api.zzbf zza(java.lang.String)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()
com.google.firebase.firestore.local.LocalSerializer: LocalSerializer(com.google.firebase.firestore.remote.RemoteSerializer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue getDefaultInstance()
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
io.grpc.ConnectivityState: ConnectivityState(java.lang.String,int)
io.grpc.Attributes$Builder: java.util.Map data(int)
com.google.protobuf.IntArrayList: int size()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: int available()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: MethodCallHandlerImpl(io.flutter.plugins.urllauncher.UrlLauncher)
com.google.protobuf.Utf8$SafeProcessor: java.lang.String decodeUtf8(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzmx zze()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions fillColor(int)
io.grpc.internal.DnsNameResolver$Resolve: void run()
io.grpc.internal.ForwardingClientStream: boolean isReady()
androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
io.grpc.Metadata: java.lang.Object valueAsT(int,io.grpc.Metadata$Key)
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: LruGarbageCollector$RollingSequenceNumberBuffer(int)
io.grpc.internal.PickFirstLoadBalancer: void shutdown()
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzh(java.lang.Object,int,int)
com.google.android.gms.common.api.internal.zam: zam(com.google.android.gms.common.ConnectionResult,int)
okio.Buffer: void clear()
com.google.android.gms.internal.firebase-auth-api.zzgt: zzgt()
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State freezeHedging()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
com.google.android.gms.signin.zaa: zaa()
com.google.android.gms.common.internal.zzu: boolean zzd()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageTypeForScion(android.os.Bundle)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.proto.WriteBatch encodeMutationBatch(com.google.firebase.firestore.model.mutation.MutationBatch)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
com.google.android.gms.common.internal.zzr: android.content.Context zze(com.google.android.gms.common.internal.zzr)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.MutationQueue getMutationQueue(com.google.firebase.firestore.auth.User,com.google.firebase.firestore.local.IndexManager)
io.grpc.Metadata$Key: java.lang.String validateName(java.lang.String,boolean)
com.google.firebase.firestore.local.OverlayedDocument: com.google.firebase.firestore.model.mutation.FieldMask getMutatedFields()
io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker: RoundRobinLoadBalancer$RoundRobinPicker()
com.google.firebase.firestore.FirebaseFirestoreSettings: FirebaseFirestoreSettings(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder,com.google.firebase.firestore.FirebaseFirestoreSettings$1)
com.google.android.gms.internal.common.zzi: zzi(android.os.Looper,android.os.Handler$Callback)
io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzH(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,java.lang.String,com.google.firebase.auth.internal.zzbk)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzm(int)
com.google.firebase.auth.internal.zzw: java.lang.String zza()
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
com.tekartik.sqflite.SqflitePlugin: boolean execute(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings$Builder setDynamicLinkDomain(java.lang.String)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
com.google.android.gms.internal.firebase-auth-api.zzaei: int previousIndex()
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer valueOf(java.lang.String)
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
com.google.android.gms.common.api.zza: zza()
com.google.android.gms.maps.zzab: zzab()
com.google.protobuf.FieldSet: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzpx: java.lang.Object createFromParcel(android.os.Parcel)
com.google.common.collect.UnmodifiableListIterator: void add(java.lang.Object)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void initInstance(io.flutter.plugin.common.BinaryMessenger)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException noUser()
androidx.window.embedding.SplitInfo: float getSplitRatio()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void release()
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: AutoValue_SendRequest$Builder()
com.google.android.gms.common.api.internal.RegisterListenerMethod: boolean zab()
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl$JavaScriptChannelCreator: io.flutter.plugins.webviewflutter.JavaScriptChannel createJavaScriptChannel(io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl,java.lang.String,android.os.Handler)
io.grpc.ManagedChannelRegistry: io.grpc.ManagedChannelProvider provider()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory access$000()
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabx zzk()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.remote.WatchChange decodeWatchChange(com.google.firestore.v1.ListenResponse)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
io.grpc.internal.GrpcUtil$6: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.google.cloud.datastore.core.number.NumberComparisonHelper: int firestoreCompareDoubleWithLong(double,long)
com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Object)
com.google.android.gms.internal.auth-api-phone.zzz: zzz(com.google.android.gms.internal.auth-api-phone.zzu,com.google.android.gms.tasks.TaskCompletionSource)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$1Shutdown: ManagedChannelImpl$1Shutdown(io.grpc.internal.ManagedChannelImpl)
androidx.browser.customtabs.CustomTabColorSchemeParams: CustomTabColorSchemeParams(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: ManagedChannelImpl$LbHelperImpl(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.messaging.NotificationParams: boolean getBoolean(java.lang.String)
com.google.android.gms.cloudmessaging.zzd: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereLessThanOrEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int allocatedBytes()
com.google.protobuf.BinaryReader$SafeHeapReader: void readFixed32List(java.util.List)
com.google.protobuf.FieldSet: FieldSet(boolean)
kotlin.KotlinVersion: int versionOf(int,int,int)
io.grpc.Deadline: int hashCode()
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView: java.util.Map wrapError(java.lang.Throwable)
com.google.android.gms.maps.GoogleMap: boolean setIndoorEnabled(boolean)
com.google.android.gms.maps.model.MarkerOptions: boolean isVisible()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.window.core.Bounds: boolean isEmpty()
io.grpc.Context: io.grpc.Context attach()
com.google.android.gms.common.internal.BaseGmsClient: boolean isConnected()
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: DocumentTransform$FieldTransform$Builder()
io.grpc.okhttp.internal.OptionalMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzfd: int zzf()
io.grpc.okhttp.internal.framed.ErrorCode: ErrorCode(java.lang.String,int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzo()
com.google.android.gms.internal.maps.zzg: zzg(android.os.IBinder)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: com.google.android.datatransport.runtime.EventInternal createMetricsEvent(com.google.android.datatransport.runtime.backends.TransportBackend)
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzd(java.lang.String)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApi$1: GeneratedAndroidWebView$WebViewHostApi$1(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zzc()
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder builder()
com.google.protobuf.CodedOutputStreamWriter: void writeMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)
kotlinx.coroutines.CommonPool: void close()
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.String zzj(java.lang.Object)
okio.ByteString: ByteString(byte[])
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzD(int)
com.google.firebase.messaging.SharedPreferencesQueue: boolean remove(java.lang.Object)
io.grpc.internal.ReadableBuffers$BufferInputStream: void reset()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.ObjectValue extractTransformBaseValue(com.google.firebase.firestore.model.Document)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.google.android.gms.location.zzab: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzaek: void zzi(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.grpc.internal.KeepAliveManager: io.grpc.internal.KeepAliveManager$KeepAlivePinger access$100(io.grpc.internal.KeepAliveManager)
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: BaseGmsClient$LegacyClientCallbackAdapter(com.google.android.gms.common.internal.BaseGmsClient)
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: java.util.List getTargetIds()
io.grpc.internal.AbstractClientStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.firebase.firestore.core.OnlineState: OnlineState(java.lang.String,int)
io.flutter.embedding.android.FlutterActivity: void onResume()
io.grpc.internal.CompositeReadableBuffer$1: CompositeReadableBuffer$1()
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
com.google.firestore.v1.TargetChange: java.util.List getTargetIdsList()
com.tekartik.sqflite.SqflitePlugin: java.lang.String toString(java.lang.Object)
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions build()
com.google.firebase.firestore.remote.RemoteSerializer: RemoteSerializer(com.google.firebase.firestore.model.DatabaseId)
com.google.firebase.auth.EmailAuthCredential: com.google.firebase.auth.EmailAuthCredential zzb(com.google.firebase.auth.FirebaseUser)
com.google.firebase.firestore.local.MemoryMutationQueue: java.util.List lookupMutationBatches(com.google.firebase.database.collection.ImmutableSortedSet)
com.google.firestore.v1.Cursor: void setBefore(boolean)
androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMapToolbarEnabled(boolean)
com.google.protobuf.CodedOutputStream: int computeStringSize(int,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzql: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.proto.Target$Builder: Target$Builder()
com.google.protobuf.SchemaUtil: int computeSizeFixed32ListNoTag(java.util.List)
com.google.firebase.firestore.index.OrderedCodeWriter: int unsignedNumLength(long)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: java.lang.Object get()
com.google.gson.stream.JsonReader: java.lang.String locationString()
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
com.google.firebase.installations.FirebaseInstallations: void triggerOnException(java.lang.Exception)
com.tekartik.sqflite.SqflitePlugin$5: SqflitePlugin$5(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.SqflitePlugin$BgResult,com.tekartik.sqflite.Database)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzc(com.google.android.gms.internal.firebase-auth-api.zzpu,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.internal.firebase-auth-api.zzef: zzef(com.google.android.gms.internal.firebase-auth-api.zzeg,java.lang.Class)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
io.grpc.internal.ManagedChannelImpl$5: void halfClose()
com.google.android.gms.maps.zzag: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.common.internal.BaseGmsClient: android.content.Context getContext()
com.google.android.gms.maps.internal.zzbt: zzbt()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.List zzf(com.google.android.gms.internal.firebase-auth-api.zzaeb)
com.google.android.gms.internal.firebase-auth-api.zzacx: int zza(int,java.lang.Object,java.lang.Object)
io.grpc.internal.LongCounterFactory: io.grpc.internal.LongCounter create()
com.google.android.gms.cloudmessaging.zzm: void zzd()
io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])
com.google.firebase.firestore.core.FirestoreClient: void initialize(android.content.Context,com.google.firebase.firestore.auth.User,com.google.firebase.firestore.FirebaseFirestoreSettings)
com.google.android.gms.safetynet.zzc: java.lang.Object[] newArray(int)
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
com.google.firebase.firestore.local.TargetData: boolean equals(java.lang.Object)
io.grpc.internal.ConnectivityStateManager: void gotoState(io.grpc.ConnectivityState)
io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException access$500(java.lang.String,java.lang.Object[])
com.google.protobuf.CodedOutputStreamWriter: void writeMessage(int,java.lang.Object,com.google.protobuf.Schema)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setArrayValue(com.google.firestore.v1.ArrayValue$Builder)
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
com.google.firebase.messaging.Metadata: void populateAppVersionInfo()
com.google.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)
io.flutter.plugins.webviewflutter.InputAwareWebView: void dispose()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzna: com.google.android.gms.internal.firebase-auth-api.zzna zzb(java.lang.String)
com.google.firebase.firestore.local.SQLiteIndexManager: void memoizeIndex(com.google.firebase.firestore.model.FieldIndex)
com.google.firebase.firestore.proto.MaybeDocument: void access$800(com.google.firebase.firestore.proto.MaybeDocument,com.google.firebase.firestore.proto.UnknownDocument)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: void onCancelled(java.lang.Object)
com.google.firebase.auth.internal.zzbm: boolean zzi(android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseAuth)
com.google.protobuf.BooleanArrayList: void addBoolean(int,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.plugins.googlemaps.MarkerController: void setPosition(com.google.android.gms.maps.model.LatLng)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.mutation.MutationBatch decodeMutationBatch(com.google.firebase.firestore.proto.WriteBatch)
com.google.protobuf.ArrayDecoders: int decodeSInt64List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.maps.zzj: void zzw(boolean)
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase valueOf(java.lang.String)
com.google.common.collect.ImmutableMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
okio.RealBufferedSource: void require(long)
kotlin.ranges.IntRange: boolean isEmpty()
com.google.protobuf.FieldSet: java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite)
com.lyokone.location.NotificationOptions: java.lang.String getIconName()
com.google.android.gms.internal.firebase-auth-api.zzaaq: zzaaq()
com.google.common.collect.ImmutableMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver: void onReceive(android.content.Context,android.content.Intent)
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
io.grpc.internal.Http2ClientStreamTransportState: Http2ClientStreamTransportState(int,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
okio.RealBufferedSource: byte readByte()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setAuthDomain(java.lang.String)
com.google.protobuf.CodedInputStreamReader: boolean skipField()
com.google.android.gms.internal.firebase-auth-api.zzy: int zza(int,int,java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
io.grpc.okhttp.OkHttpClientTransport: javax.net.ssl.SSLSocketFactory access$1200(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzoj: byte[] zza(byte[],byte[])
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
io.grpc.okhttp.internal.framed.Settings: boolean isSet(int)
io.grpc.internal.JsonParser: java.lang.Object parse(java.lang.String)
com.google.protobuf.UnmodifiableLazyStringList: java.util.ListIterator listIterator(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
io.grpc.internal.AbstractClientStream$TransportState: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.android.gms.common.api.internal.zza: zza(com.google.android.gms.common.api.internal.zzb,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)
com.google.protobuf.UnmodifiableLazyStringList: java.lang.Object getRaw(int)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: FragmentManagerImpl$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziq zzc()
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zza()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
io.grpc.util.RoundRobinLoadBalancer: void updateBalancingState()
com.google.android.gms.internal.firebase-auth-api.zzcb: com.google.android.gms.internal.firebase-auth-api.zzax zza(java.lang.String)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereGreaterThan(com.google.firebase.firestore.FieldPath,java.lang.Object)
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider empty()
androidx.fragment.app.FragmentManagerImpl$1: FragmentManagerImpl$1(androidx.fragment.app.FragmentManagerImpl,boolean)
io.grpc.internal.ReflectionLongAdderCounter: ReflectionLongAdderCounter()
com.google.android.datatransport.cct.internal.LogRequest: com.google.android.datatransport.cct.internal.LogRequest$Builder builder()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getTitleLocalizationArgs()
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.Transaction delete(com.google.firebase.firestore.DocumentReference)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean access$100(com.google.firebase.firestore.FirebaseFirestoreSettings)
com.google.type.LatLng: com.google.type.LatLng$Builder newBuilder()
com.google.firestore.v1.DocumentTransform$FieldTransform: void access$2000(com.google.firestore.v1.DocumentTransform$FieldTransform,com.google.firestore.v1.ArrayValue)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
com.google.firebase.auth.FirebaseAuth: void addIdTokenListener(com.google.firebase.auth.FirebaseAuth$IdTokenListener)
io.grpc.protobuf.lite.ProtoLiteUtils: io.grpc.MethodDescriptor$Marshaller marshaller(com.google.protobuf.MessageLite)
com.google.firebase.firestore.model.MutableDocument: boolean hasLocalMutations()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzh(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
com.google.firebase.auth.internal.GenericIdpActivity: void onCreate(android.os.Bundle)
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: java.lang.String toString()
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
com.google.android.gms.internal.firebase-auth-api.zznl: void zzf(com.google.android.gms.internal.firebase-auth-api.zznl,int)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: AutoValue_PersistedEvent(long,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)
com.google.android.gms.internal.firebase-auth-api.zzpb: long[] zzk(byte[])
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.google.firebase.auth.zzy: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.android.datatransport.cct.CctTransportBackend$HttpResponse: CctTransportBackend$HttpResponse(int,java.net.URL,long)
com.google.protobuf.IntArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: JobIntentService$CommandProcessor(io.flutter.plugins.firebase.messaging.JobIntentService)
com.google.android.gms.internal.firebase-auth-api.zzacw: java.lang.Object remove(java.lang.Object)
io.grpc.Context$DirectExecutor: void execute(java.lang.Runnable)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.common.internal.BaseGmsClient: java.util.concurrent.Executor getBindServiceExecutor()
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()
com.google.firebase.firestore.util.Util: void diffCollections(java.util.SortedSet,java.util.SortedSet,com.google.firebase.firestore.util.Consumer,com.google.firebase.firestore.util.Consumer)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)
io.grpc.okhttp.OkHttpFrameLogger: java.lang.String toString(io.grpc.okhttp.internal.framed.Settings)
com.google.android.gms.dynamic.zae: void onClick(android.view.View)
com.google.android.gms.location.zzac: zzac()
com.google.android.gms.common.api.internal.zabq: boolean zaM(com.google.android.gms.common.ConnectionResult)
com.baseflow.geolocator.permission.PermissionManager: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.internal.firebase-auth-api.zzhe: void zzh(int)
com.baseflow.geolocator.location.LocationAccuracyManager: LocationAccuracyManager()
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.FirestoreChannel access$100(com.google.firebase.firestore.remote.Datastore)
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter applyDistribution(com.google.firebase.firestore.core.CompositeFilter,com.google.firebase.firestore.core.CompositeFilter)
com.google.android.gms.internal.firebase-auth-api.zzur: java.lang.String zza()
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbp zza(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzmw)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: FirebaseFirestoreSettings$Builder()
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.ArrayValue getAppendMissingElements()
com.google.android.gms.internal.firebase-auth-api.zzaci: com.google.android.gms.internal.firebase-auth-api.zzaau zzb()
com.google.android.gms.internal.location.zzk: zzk(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)
com.google.android.gms.safetynet.zzj: void zza(com.google.android.gms.safetynet.SafeBrowsingData,android.os.Parcel,int)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task delete()
com.google.android.gms.maps.model.zzf: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzvj: zzvj(java.lang.String)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
okio.ByteString: int compareTo(okio.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzcw: zzcw()
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.firebase.auth.internal.zzbb: java.util.List zza()
com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])
com.google.android.gms.internal.firebase-auth-api.zzjc: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeDocumentSnapshot(java.io.ByteArrayOutputStream,com.google.firebase.firestore.DocumentSnapshot)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void notImplemented()
com.google.android.gms.internal.firebase-auth-api.zzyr: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.auth.zzn: void zzb(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzzb: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeUnaryFilter(java.util.List,org.json.JSONObject)
com.google.android.gms.internal.base.zac: android.os.Parcelable zaa(android.os.Parcel,android.os.Parcelable$Creator)
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
com.google.protobuf.CodedOutputStreamWriter: void writeSFixed64(int,long)
com.google.firestore.v1.MapValue$Builder: MapValue$Builder(com.google.firestore.v1.MapValue$1)
com.google.firebase.firestore.model.mutation.FieldMask: java.lang.String toString()
com.google.android.gms.location.zzk: java.lang.Object[] newArray(int)
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$MethodType getType()
okio.Timeout: Timeout()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.firebase.FirebaseOptions: java.lang.String getStorageBucket()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
com.google.protobuf.CodedInputStream$StreamDecoder: int readInt32()
com.google.protobuf.CodedInputStreamReader: java.lang.Object readGroup(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
kotlin.collections.EmptyMap: java.util.Set entrySet()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyy zzl()
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.String serializedName(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvc: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityDestroyed(android.app.Activity)
io.grpc.internal.ManagedChannelServiceConfig: int hashCode()
com.google.android.gms.internal.location.zzbm: android.os.Looper zza(android.os.Looper)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.google.firebase.auth.zzp: void onComplete(com.google.android.gms.tasks.Task)
com.google.firestore.v1.ListenRequest$Builder: com.google.firestore.v1.ListenRequest$Builder setAddTarget(com.google.firestore.v1.Target)
com.google.common.base.VerifyException: VerifyException(java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.core.Transaction: void ensureCommitNotCalled()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.googlemaps.TileOverlayController: void setFadeIn(boolean)
com.google.android.gms.internal.firebase-auth-api.zzee: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)
com.google.android.gms.common.internal.zzo: void zzd(android.content.ServiceConnection,android.content.ServiceConnection,java.lang.String)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int pushLimit(int)
com.google.common.collect.RegularImmutableSet: int internalArrayStart()
okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey getApiKey()
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()
com.google.firestore.v1.BatchGetDocumentsRequest: void setDatabase(java.lang.String)
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.database.collection.ImmutableSortedMap applyBundledDocuments(com.google.firebase.database.collection.ImmutableSortedMap,java.lang.String)
io.flutter.plugins.googlemaps.MarkerBuilder: void setRotation(float)
com.google.firebase.firestore.remote.FirestoreCallCredentials: void applyRequestMetadata(io.grpc.CallCredentials$RequestInfo,java.util.concurrent.Executor,io.grpc.CallCredentials$MetadataApplier)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeBytesDescending(com.google.protobuf.ByteString)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task waitForPendingWrites()
com.google.android.gms.dynamite.zzk: zzk()
com.google.android.gms.internal.firebase-auth-api.zzzs: com.google.firebase.auth.zze zzc()
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])
io.grpc.internal.CompositeReadableBuffer$5: int read(io.grpc.internal.ReadableBuffer,int,java.io.OutputStream,int)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)
com.google.android.gms.internal.firebase-auth-api.zzl: zzl(java.lang.String)
com.google.android.gms.tasks.zzj: com.google.android.gms.tasks.OnCompleteListener zza(com.google.android.gms.tasks.zzj)
com.google.firebase.database.collection.ImmutableSortedMap: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzrw: java.lang.String zza()
io.grpc.okhttp.internal.ConnectionSpec$Builder: boolean access$300(io.grpc.okhttp.internal.ConnectionSpec$Builder)
io.grpc.internal.RetriableStream$FutureCanceller: boolean isCancelled()
io.grpc.stub.AbstractStub: io.grpc.stub.AbstractStub withCallCredentials(io.grpc.CallCredentials)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
com.google.android.gms.internal.firebase-auth-api.zzib: zzib(com.google.android.gms.internal.firebase-auth-api.zzbe,int,com.google.android.gms.internal.firebase-auth-api.zzbn,com.google.android.gms.internal.firebase-auth-api.zzia)
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
com.google.android.gms.maps.internal.zzl: void onStart()
androidx.collection.MapCollections$EntrySet: int size()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()
com.google.android.gms.internal.firebase-auth-api.zzqs: zzqs(java.lang.String)
com.google.firebase.auth.internal.zzaf: zzaf()
com.google.android.gms.internal.location.zzat: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
com.google.common.math.MathPreconditions: int checkPositive(java.lang.String,int)
com.google.firebase.firestore.local.SQLiteSchema: void addPathLength()
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
io.grpc.internal.RetriableStream$FutureCanceller: void setFuture(java.util.concurrent.Future)
io.grpc.StatusException: StatusException(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzds: zzds(byte[])
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzkw: com.google.android.gms.internal.firebase-auth-api.zzkw zzc(int)
io.flutter.plugins.googlemaps.PolylineBuilder: void setGeodesic(boolean)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseActionCodeResult(com.google.firebase.auth.ActionCodeResult)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Object get()
com.google.firestore.v1.Value: void access$1900(com.google.firestore.v1.Value,java.lang.String)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature[] values()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzi(java.util.List)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection)
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AbstractClientBuilder zaa()
com.google.firebase.firestore.local.SQLitePersistence$1: void onCommit()
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzaau zzd()
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode valueOf(java.lang.String)
com.squareup.okhttp.HttpUrl: int port()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzf(com.google.android.gms.internal.firebase-auth-api.zzqa,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.android.gms.common.api.internal.BackgroundDetector: void zza(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: void putBoolean(java.lang.Object,long,boolean)
io.flutter.embedding.android.FlutterView$3: void accept(androidx.window.layout.WindowLayoutInfo)
com.google.common.io.BaseEncoding$Alphabet: char[] access$000(com.google.common.io.BaseEncoding$Alphabet)
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzwp: zzwp(com.google.android.gms.internal.firebase-auth-api.zzwq,com.google.android.gms.internal.firebase-auth-api.zzwr)
io.grpc.MethodDescriptor: java.io.InputStream streamRequest(java.lang.Object)
com.google.android.datatransport.cct.internal.AndroidClientInfo: AndroidClientInfo()
com.google.protobuf.SchemaUtil: java.lang.Object filterUnknownEnumList(int,java.util.List,com.google.protobuf.Internal$EnumVerifier,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
io.grpc.internal.AbstractStream: void writeMessage(java.io.InputStream)
com.google.android.gms.internal.firebase-auth-api.zzel: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzbw)
com.google.android.gms.common.Feature: Feature(java.lang.String,long)
io.grpc.internal.InternalSubchannel$2: void run()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.android.gms.internal.firebase-auth-api.zzck: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
okio.Segment: okio.Segment pop()
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.DocumentOverlayCache getDocumentOverlayCache(com.google.firebase.firestore.auth.User)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()
com.google.firebase.firestore.GeoPoint: int compareTo(java.lang.Object)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$3: void error(java.lang.Throwable)
com.tekartik.sqflite.SqlCommand: java.lang.String toString()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
com.google.firestore.v1.DocumentChange$Builder: DocumentChange$Builder(com.google.firestore.v1.DocumentChange$1)
com.google.protobuf.SchemaUtil: int computeSizeUInt64List(int,java.util.List,boolean)
com.google.firestore.v1.StructuredQuery$FieldFilter: void setValue(com.google.firestore.v1.Value)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.lang.Object next()
com.google.android.gms.internal.firebase-auth-api.zzdg: int zzf()
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialPolylines(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction valueOf(java.lang.String)
com.google.firebase.FirebaseApiNotAvailableException: FirebaseApiNotAvailableException(java.lang.String)
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzabx: int zzn()
com.google.firestore.v1.ArrayValue: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: void verifySize()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
io.grpc.okhttp.OkHttpClientStream: int access$1100(io.grpc.okhttp.OkHttpClientStream)
com.google.firebase.firestore.util.AsyncQueue: void removeDelayedTask(com.google.firebase.firestore.util.AsyncQueue$DelayedTask)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] values()
com.google.android.gms.internal.firebase-auth-api.zznf: void zzg(com.google.android.gms.internal.firebase-auth-api.zznf,com.google.android.gms.internal.firebase-auth-api.zzni)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: java.lang.Boolean readEnabled()
io.grpc.internal.ForwardingConnectionClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
com.google.firebase.firestore.core.Bound: int hashCode()
com.google.android.gms.dynamite.zzq: com.google.android.gms.dynamic.IObjectWrapper zzk(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean,long)
com.google.firebase.auth.EmailAuthCredential: EmailAuthCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: MessagingClientEvent$Builder()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
kotlinx.coroutines.Job$Key: Job$Key()
com.google.android.gms.tasks.Tasks: void zzb(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.zzae)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState[] values()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void zza(android.content.Intent,android.content.Context,boolean,android.content.BroadcastReceiver$PendingResult)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getManufacturer()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
com.google.firebase.firestore.model.AutoValue_FieldIndex: int hashCode()
com.google.protobuf.LazyStringArrayList: LazyStringArrayList(int)
io.grpc.internal.RetriableStream$1DecompressorRegistryEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.protobuf.SmallSortedMap$DescendingEntrySet: SmallSortedMap$DescendingEntrySet(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)
io.grpc.okhttp.OkHttpClientStream: okio.Buffer access$500()
com.google.type.LatLng$Builder: com.google.type.LatLng$Builder setLongitude(double)
com.google.firebase.installations.FirebaseInstallationsException$Status: FirebaseInstallationsException$Status(java.lang.String,int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
com.google.protobuf.MessageSchema: com.google.protobuf.Schema getMessageFieldSchema(int)
io.grpc.internal.ManagedChannelImpl$RealChannel$3: void cancel(java.lang.String,java.lang.Throwable)
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.firebase.auth.UserProfileChangeRequest$Builder: com.google.firebase.auth.UserProfileChangeRequest$Builder setPhotoUri(android.net.Uri)
com.google.common.collect.ImmutableList: int indexOf(java.lang.Object)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.firestore.v1.CommitRequest: void ensureWritesIsMutable()
com.google.android.gms.internal.firebase-auth-api.zzuy: zzuy(java.lang.String)
androidx.fragment.app.Fragment: int hashCode()
com.google.protobuf.CodedInputStreamReader: long readSInt64()
com.google.android.gms.common.internal.zzf: void zzb(com.google.android.gms.common.ConnectionResult)
com.google.android.gms.maps.model.BitmapDescriptorFactory: void zza(com.google.android.gms.internal.maps.zzi)
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: io.grpc.ClientCall$Listener access$600(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl)
com.google.firebase.messaging.Metadata: boolean isGmscorePresent()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
kotlinx.coroutines.Unconfined: Unconfined()
com.google.firebase.installations.remote.RequestLimiter: void resetBackoffStrategy()
com.google.protobuf.LongArrayList: java.lang.Object remove(int)
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.internal.Storage getInstance(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzkx: void zzi(com.google.android.gms.internal.firebase-auth-api.zzkx,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.maps.model.Cap: boolean equals(java.lang.Object)
io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 access$400(io.grpc.internal.GzipInflatingBuffer)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexValueAux(com.google.firestore.v1.Value,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
com.google.firebase.auth.FirebaseAuth: FirebaseAuth(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzm()
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] removeFromArray(java.lang.Object[],int)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientTransportFactory access$2300(io.grpc.internal.ManagedChannelImpl)
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder setUpdateMask(com.google.firestore.v1.DocumentMask)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query atPath(com.google.firebase.firestore.model.ResourcePath)
com.google.android.datatransport.runtime.synchronization.SynchronizationException: SynchronizationException(java.lang.String,java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.google.firebase.firestore.remote.WatchStream: boolean isStarted()
io.grpc.okhttp.OkHttpProtocolNegotiator: io.grpc.okhttp.OkHttpProtocolNegotiator get()
io.flutter.plugins.webviewflutter.CookieManagerHostApiImpl: void setCookie(java.lang.String,java.lang.String)
com.google.android.datatransport.cct.internal.LogEvent$Builder: LogEvent$Builder()
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.AbstractClientStream$TransportState transportState()
com.google.firebase.firestore.remote.FirestoreChannel$4: void onMessage(java.lang.Object)
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzno zzb()
com.google.common.io.ByteStreams: byte[] toByteArrayInternal(java.io.InputStream,java.util.Queue,int)
com.google.android.gms.internal.firebase-auth-api.zzh: zzh()
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzkg: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.grpc.internal.ReadableBuffers$BufferInputStream: long skip(long)
com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.maps.model.LatLng: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelOrphanWrapper: ManagedChannelOrphanWrapper(io.grpc.ManagedChannel)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
com.google.firebase.firestore.local.SQLiteSchema: void ensureSequenceNumbers()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task sendPasswordResetEmail(java.lang.String,com.google.firebase.auth.ActionCodeSettings)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions visible(boolean)
com.lyokone.location.FlutterLocationService: boolean onUnbind(android.content.Intent)
com.google.android.gms.common.api.internal.ApiKey: java.lang.String zab()
io.grpc.okhttp.internal.framed.Huffman: int encodedLength(byte[])
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zzd(javax.crypto.Cipher,int,byte[],int,int)
io.grpc.internal.JsonUtil: java.lang.Boolean getBoolean(java.util.Map,java.lang.String)
com.google.firebase.messaging.RemoteMessage: long getSentTime()
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomTo(float)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.tekartik.sqflite.SqlCommand: java.lang.Object toValue(java.lang.Object)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmk: int zzh()
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest access$000()
com.google.protobuf.CodedOutputStream: int computeSInt64Size(int,long)
kotlin.collections.EmptyIterator: boolean hasPrevious()
com.google.common.base.Splitter: Splitter(com.google.common.base.Splitter$Strategy)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.grpc.MethodDescriptor: java.lang.String getServiceName()
com.google.protobuf.CodedInputStream$StreamDecoder: int pushLimit(int)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
com.google.firestore.v1.ExistenceFilter: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: byte[] parseAsciiString(byte[])
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type valueOf(java.lang.String)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.gms.common.api.internal.zacr: zacr(com.google.android.gms.common.api.internal.zact,com.google.android.gms.signin.internal.zak)
com.google.common.collect.RegularImmutableList: RegularImmutableList(java.lang.Object[],int)
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
io.grpc.SynchronizationContext$ManagedRunnable: void run()
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State committed(io.grpc.internal.RetriableStream$Substream)
com.squareup.okhttp.HttpUrl$Builder: com.squareup.okhttp.HttpUrl$Builder host(java.lang.String)
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApi$1: void success(java.lang.Boolean)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int)
com.lyokone.location.LocationPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzlm zzc(int)
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Continuation zza(com.google.android.gms.tasks.zzd)
io.grpc.internal.InternalSubchannel$Index: java.net.SocketAddress getCurrentAddress()
com.google.android.gms.internal.firebase-auth-api.zziw: void zzk(com.google.android.gms.internal.firebase-auth-api.zziw,com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel(kotlin.jvm.functions.Function1)
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsClient getSettingsClient(android.app.Activity)
com.google.common.io.BaseEncoding$Alphabet: boolean matches(char)
com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse transientError()
com.google.firebase.firestore.Transaction: Transaction(com.google.firebase.firestore.core.Transaction,com.google.firebase.firestore.FirebaseFirestore)
io.grpc.internal.RetriableStream: java.util.concurrent.Executor access$1500(io.grpc.internal.RetriableStream)
io.grpc.internal.DelayedStream: void setFullStreamDecompression(boolean)
com.google.android.gms.common.internal.BaseGmsClient: void disconnect(java.lang.String)
com.google.android.gms.maps.model.Tile: Tile(int,int,byte[])
io.grpc.internal.DelayedStream$5: void run()
com.google.firebase.firestore.remote.RemoteStore: void addToWritePipeline(com.google.firebase.firestore.model.mutation.MutationBatch)
com.google.firebase.firestore.remote.FirestoreChannel: void setClientLanguage(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabh: void zze(double)
com.google.android.gms.internal.firebase-auth-api.zzko: void zze(com.google.android.gms.internal.firebase-auth-api.zzko,com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: SQLitePersistence$OpenHelper(android.content.Context,com.google.firebase.firestore.local.LocalSerializer,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzwt: void zzi(com.google.android.gms.internal.firebase-auth-api.zzwt,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyj: boolean zzs()
com.google.android.gms.internal.firebase-auth-api.zzwu: zzwu(com.google.android.gms.internal.firebase-auth-api.zzww,com.google.android.gms.internal.firebase-auth-api.zzwv,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString getStreamToken()
com.google.android.gms.common.internal.BaseGmsClient: int getGCoreServiceId()
com.google.firebase.firestore.remote.RemoteEvent: java.lang.String toString()
com.google.firebase.firestore.model.Values: void canonifyReference(java.lang.StringBuilder,com.google.firestore.v1.Value)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()
com.google.android.gms.internal.firebase-auth-api.zzff: java.lang.String zzc()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] values()
com.google.android.gms.internal.firebase-auth-api.zzag: java.lang.String zza(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics loadClientMetrics()
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
com.google.android.gms.internal.firebase-auth-api.zzab: int zzd(int)
io.flutter.plugins.packageinfo.PackageInfoPlugin: PackageInfoPlugin()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: FlutterFirebaseCorePlugin()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity,io.flutter.plugins.urllauncher.WebViewActivity$1)
com.google.protobuf.LongArrayList: void add(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzbi: int zza(com.google.android.gms.internal.firebase-auth-api.zzmp,boolean)
io.grpc.internal.RetriableStream$1FlushEntry: RetriableStream$1FlushEntry(io.grpc.internal.RetriableStream)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task updateProfile(com.google.firebase.auth.UserProfileChangeRequest)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder configureWith(com.google.firebase.encoders.config.Configurator)
com.google.firebase.firestore.model.SnapshotVersion: SnapshotVersion(com.google.firebase.Timestamp)
io.flutter.plugins.googlemaps.GoogleMapController: void init()
com.google.android.datatransport.cct.internal.ClientInfo: com.google.android.datatransport.cct.internal.ClientInfo$Builder builder()
com.tekartik.sqflite.operation.MethodCallOperation: MethodCallOperation(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzacf: zzacf(java.lang.String)
io.grpc.okhttp.internal.framed.Http2$Reader: void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler,int)
com.google.android.gms.internal.firebase-auth-api.zzoq: byte[] zzg(java.security.interfaces.ECPrivateKey,java.security.interfaces.ECPublicKey)
com.google.android.gms.common.api.internal.zabq: void zas(com.google.android.gms.common.ConnectionResult)
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSubchannelRef(io.grpc.InternalWithLogId)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException invalidCredential()
com.google.protobuf.Utf8$DecodeUtil: boolean isOneByte(byte)
com.google.android.gms.common.internal.zah: void onConnected(android.os.Bundle)
io.grpc.internal.ClientCallImpl: void removeContextListenerAndCancelDeadlineFuture()
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzls: com.google.android.gms.internal.firebase-auth-api.zzls zzb(int)
io.grpc.internal.SharedResourceHolder: java.lang.Object release(io.grpc.internal.SharedResourceHolder$Resource,java.lang.Object)
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.AbstractClientStream$Sink abstractClientStreamSink()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getAppId()
com.google.android.gms.dynamite.zzb: java.lang.Thread zzc()
com.google.android.gms.internal.firebase-auth-api.zzcz: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.common.api.internal.zabq: void zaj(com.google.android.gms.common.api.internal.zabq)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.google.firebase.auth.zze: java.lang.String getSignInMethod()
com.google.android.gms.internal.firebase-auth-api.zzaay: com.google.android.gms.internal.firebase-auth-api.zzaay zzu(byte[],int,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzxr: void zze(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzxq)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo$Builder setAndroidClientInfo(com.google.android.datatransport.cct.internal.AndroidClientInfo)
com.google.android.gms.internal.firebase-auth-api.zzeg: zzeg()
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzS(java.lang.Object,int,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.protobuf.CodedOutputStreamWriter: void writeSInt32List(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzfp: void zzc()
com.google.android.gms.internal.firebase-auth-api.zzcu: zzcu(java.lang.Class)
io.flutter.plugins.googlemaps.PolylinesController: void removePolylines(java.util.List)
com.tekartik.sqflite.operation.ExecuteOperation: com.tekartik.sqflite.SqlCommand getSqlCommand()
com.google.firebase.firestore.model.mutation.Mutation: java.util.Map serverTransformResults(com.google.firebase.firestore.model.MutableDocument,java.util.List)
com.google.android.gms.internal.maps.zzy: java.lang.String zzk()
okio.Okio$1: Okio$1(okio.Timeout,java.io.OutputStream)
com.google.protobuf.DoubleArrayList: void removeRange(int,int)
com.squareup.okhttp.HttpUrl$Builder: java.lang.String toString()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument setHasLocalMutations()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: com.google.android.datatransport.cct.internal.NetworkConnectionInfo getNetworkConnectionInfo()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
kotlin.Pair: java.lang.Object component1()
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzl(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzse: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.remote.WatchChangeAggregator: void removeTarget(int)
com.google.firestore.v1.StructuredQuery$CompositeFilter: StructuredQuery$CompositeFilter()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent$1: HeartBeatConsumerComponent$1()
io.grpc.okhttp.internal.framed.Http2$Reader: void readRstStream(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
io.grpc.Status$StatusCodeMarshaller: Status$StatusCodeMarshaller(io.grpc.Status$1)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
io.grpc.internal.ManagedChannelImpl$1: io.grpc.InternalConfigSelector$Result selectConfig(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.android.gms.signin.internal.zaj: zaj()
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzaau zzf()
com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl httpUrl()
com.google.android.gms.internal.firebase-auth-api.zzdq: zzdq(byte[])
com.google.android.gms.internal.firebase-auth-api.zzhh: zzhh()
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzL(java.util.List)
com.google.firebase.firestore.local.LruGarbageCollector$Results: com.google.firebase.firestore.local.LruGarbageCollector$Results DidNotRun()
com.google.android.gms.internal.firebase-auth-api.zzye: zzye(java.lang.String,int,java.lang.String)
com.google.android.gms.dynamic.zaf: zaf(com.google.android.gms.dynamic.DeferredLifecycleHelper)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeLoadBundleTaskProgress(java.io.ByteArrayOutputStream,com.google.firebase.firestore.LoadBundleTaskProgress)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
com.google.firebase.firestore.remote.Datastore: void shutdown()
com.google.android.gms.common.api.internal.zabu: void zaf(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.protobuf.CodedInputStream$ArrayDecoder: java.lang.String readString()
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$Throttle access$700(io.grpc.internal.RetriableStream)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
io.flutter.plugins.googlemaps.GoogleMapController: void onResume(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.common.api.internal.zabv: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.firebase.components.MissingDependencyException: MissingDependencyException(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzze: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.okhttp.internal.ConnectionSpec: java.util.List tlsVersions()
com.google.protobuf.SchemaUtil: void writeSInt64List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.protobuf.LazyFieldLite: int getSerializedSize()
com.google.android.gms.internal.firebase-auth-api.zzms: com.google.android.gms.internal.firebase-auth-api.zzms zza()
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void access$200(com.google.firebase.firestore.remote.AndroidConnectivityMonitor,boolean)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
io.grpc.Status: java.lang.String getDescription()
com.google.android.gms.internal.firebase-auth-api.zzlh: zzlh()
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch addMutationBatch(com.google.firebase.Timestamp,java.util.List,java.util.List)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
com.google.android.gms.internal.maps.zzv: java.lang.String zzj()
com.google.firebase.firestore.core.ActivityScope$StopListenerFragment: ActivityScope$StopListenerFragment()
io.grpc.internal.DelayedStream: void internalStart(io.grpc.internal.ClientStreamListener)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions addAll(java.lang.Iterable)
com.google.firebase.firestore.remote.RemoteEvent: RemoteEvent(com.google.firebase.firestore.model.SnapshotVersion,java.util.Map,java.util.Set,java.util.Map,java.util.Set)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: FlutterFirebaseMessagingBackgroundExecutor()
com.google.android.gms.internal.firebase-auth-api.zzbh: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmx)
com.google.android.gms.internal.firebase-auth-api.zzaej: boolean hasNext()
com.google.android.gms.internal.firebase-auth-api.zzzo: zzzo(java.util.List)
com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object)
com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseAdditionalUserInfo(com.google.firebase.auth.AdditionalUserInfo)
com.google.android.gms.internal.firebase-auth-api.zzel: java.lang.Class zza()
com.google.protobuf.ByteString$LiteralByteString: com.google.protobuf.ByteString substring(int,int)
com.google.firebase.firestore.local.LocalStore$AllocateQueryHolder: LocalStore$AllocateQueryHolder(com.google.firebase.firestore.local.LocalStore$1)
okio.Buffer: void readFully(byte[])
com.google.android.gms.common.internal.zai: zai(com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzqr: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzq(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void initializeCore(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: void applyFieldAnnotations(java.lang.reflect.Field)
com.google.android.gms.internal.safetynet.zzb: zzb(java.lang.String)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.gms.common.api.internal.zabu: void zad(com.google.android.gms.common.api.internal.zabu)
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.NameResolver$ResolutionResult$Builder setAttributes(io.grpc.Attributes)
com.google.android.gms.cloudmessaging.zzaa: zzaa(com.google.android.gms.cloudmessaging.Rpc,android.os.Looper)
io.grpc.internal.InsightBuilder: io.grpc.internal.InsightBuilder appendKeyValue(java.lang.String,java.lang.Object)
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.database.collection.ImmutableSortedSet getRemoteKeysForTarget(int)
com.google.firebase.auth.internal.zzbi: com.google.firebase.auth.internal.zzam zza(com.google.firebase.auth.internal.zzbi)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
com.lyokone.location.FlutterLocation: boolean onRequestPermissionsResultHandler(int,java.lang.String[],int[])
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext doEncode(com.google.firebase.encoders.ObjectEncoder,java.lang.Object,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.Timestamp$1: com.google.firebase.Timestamp[] newArray(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void setUserCallbackHandle(long)
com.google.protobuf.MessageSchema: void mergeOneofMessage(java.lang.Object,java.lang.Object,int)
com.google.firebase.firestore.LoadBundleTaskProgress: int hashCode()
com.google.firestore.v1.Target$DocumentsTarget: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvd: zzvd(com.google.firebase.auth.PhoneAuthCredential,java.lang.String)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
com.google.firebase.firestore.model.mutation.Precondition: boolean isValidFor(com.google.firebase.firestore.model.MutableDocument)
io.flutter.plugins.googlemaps.GoogleMapController: void onMapReady(com.google.android.gms.maps.GoogleMap)
io.grpc.internal.DelayedClientCall$DelayedListener$1: DelayedClientCall$DelayedListener$1(io.grpc.internal.DelayedClientCall$DelayedListener,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzrx: zzrx()
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void shutdown()
com.google.protobuf.Utf8$SafeProcessor: java.lang.String decodeUtf8Direct(java.nio.ByteBuffer,int,int)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
io.grpc.internal.DelayedClientTransport$3: DelayedClientTransport$3(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: void clear()
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzb()
com.google.android.gms.internal.firebase-auth-api.zzch: java.lang.Class zzb()
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: com.google.protobuf.ByteString result()
com.google.android.gms.internal.firebase-auth-api.zzaeb: boolean containsKey(java.lang.Object)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)
androidx.lifecycle.ReportFragment: void onResume()
com.google.android.gms.internal.firebase-auth-api.zzsz: void zza(java.lang.String)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7002(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$ResolutionState)
com.google.android.gms.common.internal.Preconditions: void checkNotMainThread()
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
com.google.firebase.auth.FirebaseAuthException: java.lang.String getErrorCode()
io.grpc.okhttp.OkHttpReadableBuffer: void readBytes(byte[],int,int)
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
com.google.protobuf.ExtensionSchemaLite: void parseMessageSetItem(com.google.protobuf.ByteString,java.lang.Object,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.FieldSet)
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: ListFieldSchema$ListFieldSchemaFull()
com.google.android.gms.common.internal.RootTelemetryConfiguration: int getVersion()
com.google.android.gms.internal.firebase-auth-api.zzacm: java.util.List zzf(java.lang.Object,long,int)
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
com.google.firebase.messaging.FcmBroadcastProcessor: com.google.firebase.messaging.WithinAppServiceConnection getServiceConnection(android.content.Context,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzct: zzct()
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.util.Map getAutoMetadata()
io.grpc.internal.ClientStreamListener$RpcProgress: ClientStreamListener$RpcProgress(java.lang.String,int)
com.google.firebase.firestore.util.Assert: java.lang.String format(java.lang.String,java.lang.Object[])
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: int access$200(com.google.firebase.firestore.core.EventManager$QueryListenersInfo)
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zznb zzb(int)
com.google.android.gms.internal.firebase-auth-api.zzrc: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruGarbageCollector$Params access$000(com.google.firebase.firestore.local.LruGarbageCollector)
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzpz: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.GoogleMap: void snapshot(com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback)
com.google.android.gms.internal.firebase-auth-api.zzyj: boolean zzt()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)
com.google.protobuf.Timestamp: void access$300(com.google.protobuf.Timestamp,int)
com.google.common.collect.SingletonImmutableSet: com.google.common.collect.ImmutableList createAsList()
com.lyokone.location.NotificationOptions: NotificationOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,boolean)
com.google.firebase.firestore.model.DocumentSet: java.util.Iterator iterator()
com.google.firebase.firestore.remote.OnlineStateTracker: void handleWatchStreamStart()
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: void serviceStartReceived()
com.google.android.gms.common.internal.GmsClientSupervisor: android.os.HandlerThread getOrStartHandlerThread()
com.google.android.gms.internal.firebase-auth-api.zzxv: zzxv(java.lang.String,boolean,java.lang.String,boolean,com.google.android.gms.internal.firebase-auth-api.zzzo,java.util.List)
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] getWebViewFeatures()
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.proto.NoDocument encodeNoDocument(com.google.firebase.firestore.model.Document)
com.google.android.gms.maps.model.TileOverlay: void remove()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getEmail()
com.google.protobuf.RawMessageInfo: java.lang.String getStringInfo()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.gms.internal.firebase-auth-api.zzyy: zzyy(java.util.List)
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget getDefaultInstance()
com.google.android.gms.internal.firebase-auth-api.zzfl: byte[] zza(byte[],byte[])
com.google.firebase.auth.TwitterAuthProvider: com.google.firebase.auth.AuthCredential getCredential(java.lang.String,java.lang.String)
com.google.firebase.auth.FirebaseAuth: java.util.List zzA(com.google.firebase.auth.FirebaseAuth)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setRequestHeaders(java.util.Map)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.Http2Ping access$2802(io.grpc.okhttp.OkHttpClientTransport,io.grpc.internal.Http2Ping)
com.google.android.gms.location.zzaj: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl: void onProgressChanged(android.webkit.WebChromeClient,android.webkit.WebView,java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi$Reply)
com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context,int)
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzd()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Target toTarget()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: GoogleMapLocationPickerPlugin()
com.google.android.datatransport.runtime.time.UptimeClock: UptimeClock()
com.google.android.gms.common.data.DataHolder: int getStatusCode()
com.google.firebase.firestore.local.LocalDocumentsView: java.util.Map getOverlayedDocuments(java.util.Map)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()
com.google.android.gms.cloudmessaging.zzn: void zza(android.os.Message)
io.grpc.okhttp.ExceptionHandlingFrameWriter: ExceptionHandlingFrameWriter(io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler,io.grpc.okhttp.internal.framed.FrameWriter,io.grpc.okhttp.OkHttpFrameLogger)
androidx.window.embedding.SplitRule: int getMinWidth()
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
com.google.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback(io.grpc.internal.ManagedChannelImpl$SubchannelImpl,io.grpc.LoadBalancer$SubchannelStateListener)
com.google.common.io.ByteStreams$1: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.grpc.internal.AtomicLongCounter: void add(long)
com.google.protobuf.SmallSortedMap$EmptySet$1: void remove()
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue valueOf(java.lang.String)
com.google.protobuf.ByteString$LiteralByteString: byte internalByteAt(int)
com.google.firestore.v1.StructuredQuery: void access$9000(com.google.firestore.v1.StructuredQuery,com.google.firestore.v1.Cursor)
io.grpc.internal.DelayedStream$12: DelayedStream$12(io.grpc.internal.DelayedStream,io.grpc.Compressor)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.google.android.gms.internal.firebase-auth-api.zzaaw: boolean zzr(int)
com.google.firebase.firestore.local.SQLiteSchema: void createOverlays()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument convertToFoundDocument(com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.ObjectValue)
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task clearPersistence()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void addCallback(com.google.firebase.firestore.util.Consumer)
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel(kotlin.jvm.functions.Function1)
com.google.android.gms.internal.location.zzbe: zzbe()
com.google.android.gms.internal.firebase-auth-api.zzzq: com.google.android.gms.internal.firebase-auth-api.zzzq zzc(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzku zzc()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromActivityForConfigChanges()
com.google.protobuf.ByteString: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.android.gms.internal.firebase-auth-api.zzyq: void zzi(java.lang.String)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzP(int,boolean)
com.google.android.gms.maps.model.ButtCap: ButtCap()
com.google.firebase.firestore.util.Util: int compareByteArrays(byte[],byte[])
com.google.firebase.firestore.local.LocalSerializer: com.google.firestore.bundle.BundledQuery encodeBundledQuery(com.google.firebase.firestore.bundle.BundledQuery)
com.google.android.gms.common.api.Api$BaseClientBuilder: Api$BaseClientBuilder()
com.google.firebase.firestore.core.Query: boolean matchesBounds(com.google.firebase.firestore.model.Document)
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: ProtobufValueEncoderContext(com.google.firebase.encoders.proto.ProtobufDataEncoderContext)
com.google.firebase.messaging.NotificationParams: android.net.Uri getLink()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.grpc.okhttp.internal.Platform: io.grpc.okhttp.internal.Platform get()
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.firebase.messaging.SendException: SendException(java.lang.String)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.android.gms.common.internal.zzk: zzk()
com.google.android.gms.internal.firebase-auth-api.zzlt: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.maps.zzj: boolean zzy(com.google.android.gms.internal.maps.zzl)
io.grpc.okhttp.internal.Platform: boolean isAtLeastAndroid5()
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
com.google.android.datatransport.AutoValue_Event: int hashCode()
com.google.android.gms.tasks.zzaf: void onFailure(java.lang.Exception)
com.google.android.gms.common.util.DefaultClock: DefaultClock()
androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.firebase.auth.internal.zzt: java.lang.String getPhoneNumber()
com.google.firebase.firestore.local.SQLiteIndexManager: boolean isInFilter(com.google.firebase.firestore.core.Target,com.google.firebase.firestore.model.FieldPath)
io.grpc.okhttp.internal.ConnectionSpec: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzq(java.lang.Object)
com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzd()
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzg(com.google.android.gms.common.api.Status,com.google.firebase.auth.PhoneAuthCredential)
com.google.protobuf.Int32Value: void access$100(com.google.protobuf.Int32Value,int)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: long access$1200(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void setInMemoryPins(com.google.firebase.firestore.local.ReferenceSet)
io.grpc.okhttp.OkHttpClientTransport: void onError(io.grpc.okhttp.internal.framed.ErrorCode,java.lang.String)
com.google.firebase.firestore.index.AutoValue_IndexEntry: com.google.firebase.firestore.model.DocumentKey getDocumentKey()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomOut()
com.google.protobuf.ByteString$AbstractByteIterator: void remove()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzi(com.google.firebase.auth.ActionCodeSettings,java.lang.String)
com.google.firebase.messaging.MessagingAnalytics: void logNotificationForeground(android.content.Intent)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: com.google.android.datatransport.runtime.TransportContext getTransportContext()
com.google.firestore.v1.StructuredQuery$CollectionSelector: void setCollectionId(java.lang.String)
io.grpc.okhttp.internal.ConnectionSpec: ConnectionSpec(io.grpc.okhttp.internal.ConnectionSpec$Builder,io.grpc.okhttp.internal.ConnectionSpec$1)
com.google.android.gms.maps.zzn: void zzb(com.google.android.gms.internal.maps.zzl)
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
com.google.android.gms.internal.firebase-auth-api.zztt: zztt(com.google.android.gms.internal.firebase-auth-api.zztx,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.browser.customtabs.CustomTabsIntent$Builder: void setSessionParameters(android.os.IBinder,android.app.PendingIntent)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
com.google.protobuf.ByteString: byte[] toByteArray()
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: com.google.firebase.firestore.model.FieldPath getFieldPath()
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzpo zzb()
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zzaae: int zzn()
com.google.android.gms.internal.firebase-auth-api.zzxz: long zzb()
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.remote.WriteStream access$300(com.google.firebase.firestore.remote.RemoteStore)
com.google.android.gms.location.SettingsClient: com.google.android.gms.tasks.Task checkLocationSettings(com.google.android.gms.location.LocationSettingsRequest)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.google.android.gms.internal.firebase-auth-api.zzaeb: void zza()
com.google.android.gms.internal.firebase-auth-api.zzvc: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzzp: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.RetriableStream$1HalfCloseEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: StructuredQuery$FieldFilter$Builder()
com.google.android.gms.maps.model.MarkerOptions: float getRotation()
com.google.android.gms.cloudmessaging.zzh: zzh(com.google.android.gms.cloudmessaging.zzm)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.google.protobuf.SchemaUtil: void writeUInt32List(int,java.util.List,com.google.protobuf.Writer,boolean)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zzadf: java.lang.Object zzH(int)
com.google.protobuf.SmallSortedMap$EmptySet$1: java.lang.Object next()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: android.app.Activity getActivity()
io.grpc.internal.ForwardingNameResolver: void start(io.grpc.NameResolver$Listener2)
com.google.firebase.auth.FacebookAuthCredential: java.lang.String getSignInMethod()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: void success(java.lang.Void)
io.grpc.Status$Code: io.grpc.Status$Code[] values()
com.google.android.gms.internal.common.zzd: android.app.PendingIntent zza(android.content.Context,int,android.content.Intent,int)
com.google.protobuf.MapFieldLite: java.util.Set entrySet()
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task get(com.google.firebase.firestore.Source)
com.lyokone.location.FlutterLocation: boolean shouldShowRequestPermissionRationale()
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.firebase.messaging.NotificationParams: java.lang.String normalizePrefix(java.lang.String)
com.google.android.gms.common.api.GoogleApiClient: android.os.Looper getLooper()
com.google.android.gms.internal.firebase-auth-api.zzms: zzms()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setEventCleanUpAge(long)
com.google.android.gms.internal.firebase-auth-api.zzlj: zzlj()
io.grpc.ForwardingClientCall: java.lang.String toString()
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
com.google.firestore.v1.Write$Builder: Write$Builder()
com.google.android.gms.internal.firebase-auth-api.zzss: void zza(java.lang.String)
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] values()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void recordNextCallTime(com.google.android.datatransport.runtime.TransportContext,long)
com.google.android.gms.common.zzb: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.TransportTracer: void reportStreamClosed(boolean)
androidx.window.embedding.SplitRule: SplitRule()
com.squareup.okhttp.Protocol: Protocol(java.lang.String,int,java.lang.String)
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: long getScheduleDelay(com.google.android.datatransport.Priority,long,int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: boolean cannotBeInline(java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient$1: FusedLocationClient$1(com.baseflow.geolocator.location.FusedLocationClient,android.content.Context)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: EventManager$QueryListenersInfo()
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
com.google.firebase.firestore.model.Values: boolean isInteger(com.google.firestore.v1.Value)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator forNumber(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.google.protobuf.SchemaUtil: int computeSizeSInt32ListNoTag(java.util.List)
com.google.type.LatLng: void setLatitude(double)
com.google.firestore.v1.StructuredQuery$Direction$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzfr: zzfr(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzkw: zzkw()
com.google.firebase.auth.ActionCodeSettings: void zzf(java.lang.String)
io.grpc.okhttp.internal.framed.Header: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzla: void zzk(com.google.android.gms.internal.firebase-auth-api.zzla,com.google.android.gms.internal.firebase-auth-api.zzku)
com.baseflow.geolocator.location.LocationManagerClient: float accuracyToFloat(com.baseflow.geolocator.location.LocationAccuracy)
com.google.android.gms.internal.firebase-auth-api.zzaay: zzaay(com.google.android.gms.internal.firebase-auth-api.zzaax)
com.google.android.gms.internal.firebase-auth-api.zzck: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzacw: void zzg()
com.google.android.gms.maps.model.Polyline: void setPoints(java.util.List)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
io.grpc.NameResolver$ResolutionResult: io.grpc.Attributes getAttributes()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
com.google.android.gms.internal.firebase-auth-api.zzjt: com.google.android.gms.internal.firebase-auth-api.zzjt zzb(int)
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: DisplayListenerProxy$1(io.flutter.plugins.webviewflutter.DisplayListenerProxy,java.util.ArrayList,android.hardware.display.DisplayManager)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int,boolean)
io.flutter.plugin.platform.PlatformViewsController: void detach()
com.google.firestore.v1.Value: void setIntegerValue(long)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
com.google.android.gms.internal.firebase-auth-api.zzpr: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.auth.zzaj: java.lang.Object createFromParcel(android.os.Parcel)
com.google.protobuf.Internal: java.lang.String toStringUtf8(byte[])
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzwd: zzwd()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setEvent(com.google.firebase.messaging.reporting.MessagingClientEvent$Event)
com.google.android.gms.internal.firebase-auth-api.zzh: java.lang.Object zzb()
io.grpc.internal.ManagedChannelImpl: void maybeShutdownNowSubchannels()
com.google.android.gms.internal.firebase-auth-api.zzabx: void zzE(java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzabx)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.util.Set getScopesForConnectionlessNonSignIn()
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.google.protobuf.BinaryReader$SafeHeapReader: int readUInt32()
androidx.fragment.app.Fragment: void setNextTransition(int,int)
com.google.protobuf.CodedInputStream: CodedInputStream(com.google.protobuf.CodedInputStream$1)
com.google.firebase.firestore.remote.RemoteStore: void access$600(com.google.firebase.firestore.remote.RemoteStore,io.grpc.Status)
io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setIsTransparentRetry(boolean)
com.google.android.gms.internal.firebase-auth-api.zzkr: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.FirestoreChannel$4: FirestoreChannel$4(com.google.firebase.firestore.remote.FirestoreChannel,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.messaging.Store: void checkForRestore(android.content.Context,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Class zze(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzacd: boolean zzi(byte[])
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions strokeColor(int)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: void close()
com.google.protobuf.AbstractProtobufList: boolean isModifiable()
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzim zzb()
com.google.android.gms.internal.firebase-auth-api.zztu: zztu(com.google.android.gms.internal.firebase-auth-api.zztx,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.grpc.internal.ReadableBuffers$BufferInputStream: int available()
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void unregister()
io.grpc.okhttp.internal.framed.Http2$Reader: java.util.List readHeaderBlock(int,short,byte,int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.remote.WriteStream: com.google.protobuf.ByteString getLastStreamToken()
com.google.protobuf.SchemaUtil: int computeSizeUInt64ListNoTag(java.util.List)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.google.android.gms.internal.firebase-auth-api.zzzl: java.lang.String zzb()
com.google.android.gms.internal.firebase-auth-api.zzvh: void zzb()
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.protobuf.MapFieldLite: com.google.protobuf.MapFieldLite emptyMapField()
com.google.firebase.firestore.local.IndexBackfiller: IndexBackfiller(com.google.firebase.firestore.local.Persistence,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.local.LocalStore)
com.google.firebase.firestore.local.SQLiteIndexManager: byte[] encodeDirectionalElements(com.google.firebase.firestore.model.FieldIndex,com.google.firebase.firestore.model.Document)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
com.google.android.datatransport.cct.internal.LogResponse: com.google.android.datatransport.cct.internal.LogResponse create(long)
io.grpc.okhttp.OkHttpChannelBuilder$1: OkHttpChannelBuilder$1()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzI(com.google.android.gms.internal.firebase-auth-api.zzacx,java.lang.Object,java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzjf: void zzh(com.google.android.gms.internal.firebase-auth-api.zzjf,com.google.android.gms.internal.firebase-auth-api.zzjl)
com.google.firestore.v1.Document: com.google.firestore.v1.Document$Builder newBuilder()
kotlinx.coroutines.DispatchedTask: void run()
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.FieldPath documentId()
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccountOrDefault()
com.google.android.gms.internal.firebase-auth-api.zzaeo: zzaeo(sun.misc.Unsafe)
com.google.android.gms.internal.firebase-auth-api.zzjo: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.WriteBatch batch()
com.google.android.gms.internal.firebase-auth-api.zzadz: boolean contains(java.lang.Object)
io.grpc.okhttp.internal.framed.Http2: void writeMedium(okio.BufferedSink,int)
io.grpc.okhttp.AsyncSink: io.grpc.okhttp.AsyncSink sink(io.grpc.internal.SerializingExecutor,io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: long readLong(android.os.Parcel,int)
com.google.firebase.firestore.bundle.BundleReader: long getBytesRead()
com.google.android.gms.safetynet.zzd: zzd(long,com.google.android.gms.safetynet.HarmfulAppsData[],int,boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder newBuilder()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInWithAuthProvider(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzqu: java.lang.String zzb()
com.google.protobuf.LazyStringArrayList: LazyStringArrayList(java.util.ArrayList)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.gms.internal.firebase-auth-api.zziv: com.google.android.gms.internal.firebase-auth-api.zziv zzc(int)
com.google.protobuf.MessageSchema: int parseOneofField(java.lang.Object,byte[],int,int,int,int,int,int,int,long,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzxc: java.lang.String zza()
com.google.protobuf.ArrayDecoders: int decodeDoubleList(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.firebase.auth.internal.GenericIdpActivity: void zzf(android.net.Uri,java.lang.String)
com.google.android.gms.internal.maps.zzb: zzb(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxw: java.lang.Object[] newArray(int)
kotlinx.coroutines.channels.Receive: Receive()
com.google.firebase.auth.internal.RecaptchaActivity: void onNewIntent(android.content.Intent)
com.google.protobuf.LazyField$LazyIterator: LazyField$LazyIterator(java.util.Iterator)
io.grpc.internal.RetriableStream$1MaxOutboundMessageSizeEntry: RetriableStream$1MaxOutboundMessageSizeEntry(io.grpc.internal.RetriableStream,int)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task updatePassword(java.lang.String)
io.grpc.internal.ClientCallImpl$DeadlineTimer: ClientCallImpl$DeadlineTimer(io.grpc.internal.ClientCallImpl,long)
io.grpc.internal.AbstractStream$TransportState$1RequestRunnable: void run()
com.google.android.gms.internal.firebase-auth-api.zzaaw: zzaaw(byte[],int,int,boolean,com.google.android.gms.internal.firebase-auth-api.zzaav)
com.lyokone.location.MethodCallHandlerImpl: void setLocation(com.lyokone.location.FlutterLocation)
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: WebSettingsHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl$WebSettingsCreator)
com.google.android.gms.maps.internal.zzg: void moveCamera(com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.String getNextCollectionGroupToUpdate()
com.google.protobuf.SmallSortedMap$EmptySet$2: java.util.Iterator iterator()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder()
com.google.firebase.firestore.index.OrderedCodeWriter: void ensureAvailable(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void onInitialized()
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.android.gms.common.internal.zag: com.google.android.gms.common.internal.zag zad(com.google.android.gms.common.api.internal.LifecycleFragment,android.content.Intent,int)
io.flutter.plugins.googlemaps.PolylineBuilder: void setStartCap(com.google.android.gms.maps.model.Cap)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: void run()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: OkHttpClientTransport$ClientFrameHandler(io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.internal.framed.FrameReader,io.grpc.okhttp.OkHttpFrameLogger)
io.flutter.embedding.android.FlutterImageView: void init()
com.google.android.gms.internal.firebase-auth-api.zzqb: java.lang.Object[] newArray(int)
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
io.grpc.Status: int hashCode()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.Object invoke(java.lang.Object)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,double)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: boolean equals(java.lang.Object)
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String getCollectionId()
com.google.firestore.v1.TargetChange: int getTargetIdsCount()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getPageSize()
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: void refreshNameResolution()
com.google.android.gms.internal.firebase-auth-api.zzjc: int zza()
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzig zzc(int)
io.grpc.internal.ForwardingClientStream: void setMaxOutboundMessageSize(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void onPageStarted(java.lang.Long,java.lang.Long,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzc()
com.google.android.gms.internal.firebase-auth-api.zzz: int zzc(int)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: int getType()
com.google.android.gms.internal.firebase-auth-api.zzaeo: long zzk(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzabk: com.google.android.gms.internal.firebase-auth-api.zzabk zza()
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
com.google.firestore.v1.StructuredQuery$Order: void access$5500(com.google.firestore.v1.StructuredQuery$Order,com.google.firestore.v1.StructuredQuery$Direction)
com.google.android.gms.internal.firebase-auth-api.zzkr: void zze(com.google.android.gms.internal.firebase-auth-api.zzkr,com.google.android.gms.internal.firebase-auth-api.zzku)
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task processIntent(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzacw: void putAll(java.util.Map)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: boolean equals(java.lang.Object)
io.grpc.internal.InternalSubchannel: io.grpc.InternalLogId getLogId()
com.lyokone.location.FlutterLocationService: void requestBackgroundPermissions()
com.google.android.gms.internal.firebase-auth-api.zzabj: zzabj(java.lang.Object,int)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnSuccessListener(android.app.Activity,com.google.android.gms.tasks.OnSuccessListener)
com.google.android.gms.common.api.internal.zag: void zag(com.google.android.gms.common.api.internal.zaad,boolean)
com.google.android.gms.common.api.internal.zan: void zaa()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.android.gms.internal.firebase-auth-api.zzor: zzor(com.google.android.gms.internal.firebase-auth-api.zzpd,com.google.android.gms.internal.firebase-auth-api.zzbm,int)
io.grpc.internal.AbstractClientStream: void deliverFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)
com.google.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.firestore.auth.User: boolean isAuthenticated()
io.grpc.okhttp.OkHttpChannelProvider: io.grpc.ManagedChannelBuilder builderForTarget(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory access$000()
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean getLiteMode()
io.grpc.internal.DnsNameResolver: io.grpc.EquivalentAddressGroup detectProxy()
com.google.android.gms.common.internal.BaseGmsClient: void zzi(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IInterface)
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
io.grpc.ForwardingChannelBuilder: io.grpc.ForwardingChannelBuilder keepAliveTime(long,java.util.concurrent.TimeUnit)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getInstanceId()
io.grpc.okhttp.internal.framed.Http2: java.io.IOException access$200(java.lang.String,java.lang.Object[])
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
kotlinx.coroutines.channels.Closed: void completeResumeSend()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void recordLogEventDropped(long,com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason,java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Status toGrpcStatus(io.grpc.okhttp.internal.framed.ErrorCode)
com.google.android.gms.common.api.internal.RegisterListenerMethod: void clearListener()
com.google.android.gms.internal.firebase-auth-api.zzabm: com.google.android.gms.internal.firebase-auth-api.zzabp zza(java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
com.google.android.gms.internal.firebase-auth-api.zzue: void zzb()
com.google.firestore.v1.Target$DocumentsTarget$Builder: Target$DocumentsTarget$Builder(com.google.firestore.v1.Target$1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.util.Map jsonObjectToMap(org.json.JSONObject)
com.google.firebase.firestore.local.EncodedPath: java.lang.String prefixSuccessor(java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform: DocumentTransform$FieldTransform()
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.bundle.BundledQuery decodeBundledQuery(org.json.JSONObject)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Parcelable createParcelable(android.os.Parcel,int,android.os.Parcelable$Creator)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1100(io.grpc.internal.InternalSubchannel)
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
com.lyokone.location.StreamHandlerImpl: void setLocation(com.lyokone.location.FlutterLocation)
com.google.firebase.firestore.model.DocumentSet: int size()
io.grpc.internal.Rescheduler: java.util.concurrent.ScheduledExecutorService access$700(io.grpc.internal.Rescheduler)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
com.google.firestore.bundle.BundledQuery: void access$900(com.google.firestore.bundle.BundledQuery,com.google.firestore.bundle.BundledQuery$LimitType)
com.google.android.gms.internal.firebase-auth-api.zzvu: java.lang.String zze(java.lang.String,com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzal: java.lang.Object remove(int)
com.google.android.gms.common.api.internal.zzd: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzag: boolean zzd(java.lang.String)
com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()
io.grpc.internal.ManagedChannelImplBuilder$ManagedChannelDefaultPortProvider: ManagedChannelImplBuilder$ManagedChannelDefaultPortProvider()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
com.google.firebase.FirebaseTooManyRequestsException: FirebaseTooManyRequestsException(java.lang.String)
com.google.android.gms.common.api.internal.zaad: void zad(com.google.android.gms.tasks.TaskCompletionSource,boolean)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: GzipInflatingBuffer$GzipMetadataReader(io.grpc.internal.GzipInflatingBuffer)
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedSet remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzcb: com.google.android.gms.internal.firebase-auth-api.zzmk zzc(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.Map loadMetadata(android.database.sqlite.SQLiteDatabase,java.util.List)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
com.google.android.gms.internal.firebase-auth-api.zzjk: com.google.android.gms.internal.firebase-auth-api.zzjk zza(int)
com.google.android.gms.internal.maps.zzae: boolean zzn(com.google.android.gms.internal.maps.zzag)
com.google.android.gms.maps.model.Polygon: void setStrokeColor(int)
com.google.firebase.firestore.TransactionOptions$Builder: TransactionOptions$Builder()
com.google.android.gms.internal.firebase-auth-api.zzdn: int[] zzb(int[],int)
com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getHardware()
io.flutter.plugins.googlemaps.TileOverlaysController: void addTileOverlays(java.util.List)
okio.AsyncTimeout$Watchdog: void run()
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: com.google.firestore.v1.Value applyToRemoteDocument(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: void access$000(io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference)
io.grpc.internal.MessageDeframer: MessageDeframer(io.grpc.internal.MessageDeframer$Listener,io.grpc.Decompressor,int,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.gms.common.api.internal.zzd: com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor access$2200(io.grpc.internal.ManagedChannelImpl,io.grpc.CallOptions)
com.baseflow.geolocator.LocationServiceHandlerImpl: LocationServiceHandlerImpl()
io.grpc.internal.DelayedStream: void access$100(io.grpc.internal.DelayedStream)
okio.RealBufferedSource: boolean exhausted()
com.google.android.gms.internal.firebase-auth-api.zzyw: void zzh(java.lang.String)
okio.SegmentedByteString: java.lang.String hex()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()
com.google.android.gms.internal.firebase-auth-api.zzxa: void zza(java.lang.Throwable,java.lang.Throwable)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzw(java.util.List)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
io.grpc.HttpConnectProxiedSocketAddress$Builder: HttpConnectProxiedSocketAddress$Builder()
com.google.gson.stream.JsonReader: java.lang.String getPath()
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzk(com.google.android.gms.internal.firebase-auth-api.zzqk,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.internal.firebase-auth-api.zzaf: zzaf(com.google.android.gms.internal.firebase-auth-api.zzae)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.String toString()
com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
com.google.protobuf.IterableByteBufferInputStream: void updateCurrentByteBufferPos(int)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzd(int,java.util.List,boolean)
com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean getMethodTimingTelemetryEnabled()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: OkHttpFrameLogger$SettingParams(java.lang.String,int,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
io.grpc.internal.DelayedClientCall$DelayedListener$2: DelayedClientCall$DelayedListener$2(io.grpc.internal.DelayedClientCall$DelayedListener,java.lang.Object)
com.google.protobuf.CodedInputStream$StreamDecoder: int readTag()
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.firebase.firestore.core.CompositeFilter: com.google.firebase.firestore.core.CompositeFilter withAddedFilters(java.util.List)
com.google.android.gms.common.ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
com.google.android.gms.internal.firebase-auth-api.zzlp: zzlp()
kotlin.KotlinVersion: int hashCode()
com.google.android.gms.common.internal.zzd: void zzc(int,android.os.IBinder,com.google.android.gms.common.internal.zzj)
com.google.android.gms.maps.internal.zzbe: zzbe()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzef: java.util.Map zzc()
com.google.android.gms.maps.internal.zzg: void setOnMarkerDragListener(com.google.android.gms.maps.internal.zzav)
io.grpc.internal.TransportTracer: void reportKeepAliveSent()
com.google.android.gms.internal.firebase-auth-api.zzaz: java.lang.Object zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.safetynet.zzx: java.lang.String getServiceDescriptor()
com.google.android.gms.internal.firebase-auth-api.zzxm: zzxm(long,boolean)
com.google.firebase.firestore.core.TargetIdGenerator: TargetIdGenerator(int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.grpc.internal.ManagedChannelImpl: java.util.concurrent.Executor getCallExecutor(io.grpc.CallOptions)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.gms.internal.firebase-auth-api.zzsr: void zza(java.lang.String)
io.grpc.internal.ManagedChannelImpl: void access$8100(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzd()
com.google.android.gms.cloudmessaging.zzb: java.lang.Object[] newArray(int)
com.google.firebase.firestore.core.UserData$ParseContext: void addToFieldTransforms(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.mutation.TransformOperation)
com.google.protobuf.BinaryReader$SafeHeapReader: void skipGroup()
com.google.common.io.BaseEncoding$Base16Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel getDefaultImpl()
io.grpc.okhttp.AsyncSink: io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler access$600(io.grpc.okhttp.AsyncSink)
com.google.firestore.v1.StructuredQuery: void access$7600(com.google.firestore.v1.StructuredQuery,com.google.firestore.v1.StructuredQuery$CollectionSelector)
io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor: LoadBalancerRegistry$LoadBalancerPriorityAccessor()
com.google.firebase.auth.internal.zzbc: java.lang.Object[] newArray(int)
com.tekartik.sqflite.SqlCommand: com.tekartik.sqflite.SqlCommand sanitizeForQuery()
com.google.android.gms.common.api.internal.LifecycleCallback: void onStop()
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
com.google.firebase.firestore.local.SQLiteIndexManager: void updateCollectionGroup(java.lang.String,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeDoubleDescending(double)
com.google.firebase.installations.remote.TokenResult: TokenResult()
com.google.android.gms.maps.model.zzg: zzg()
androidx.fragment.app.FragmentManagerViewModel: boolean addRetainedFragment(androidx.fragment.app.Fragment)
com.google.protobuf.Utf8$DecodeUtil: void handleThreeBytes(byte,byte,byte,char[],int)
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: TimeWindow$Builder()
com.google.android.gms.internal.firebase-auth-api.zzit: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.protobuf.LazyFieldLite: com.google.protobuf.MessageLite getValue(com.google.protobuf.MessageLite)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zaa(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.Long,java.lang.String,java.util.Set)
io.flutter.plugins.googlemaps.TileOverlaysController: java.util.Map getTileOverlayInfo(java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmb zzb()
com.google.android.gms.common.stats.ConnectionTracker: boolean zzc(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean,java.util.concurrent.Executor)
io.grpc.internal.CompositeReadableBuffer: CompositeReadableBuffer(int)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.database.collection.ArraySortedMap: int indexOf(java.lang.Object)
com.google.firebase.firestore.QuerySnapshot: java.util.List getDocumentChanges(com.google.firebase.firestore.MetadataChanges)
com.google.android.gms.maps.model.zzj: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.messaging.MessagingAnalytics: boolean shouldUploadFirelogAnalytics(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzzx: java.lang.String zzc()
com.google.android.gms.internal.firebase-auth-api.zzam: int zzb()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyu: java.util.List zzf(org.json.JSONArray)
io.grpc.internal.JsonUtil: java.lang.Double getNumberAsDouble(java.util.Map,java.lang.String)
okio.Buffer: void close()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.android.gms.tasks.zzn: void zzc()
okio.Buffer: java.lang.String readUtf8(long)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzd(com.google.android.gms.internal.firebase-auth-api.zzpw,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.plugins.googlemaps.CircleBuilder: com.google.android.gms.maps.model.CircleOptions build()
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
com.google.firebase.firestore.Query: void validateNewFilter(com.google.firebase.firestore.core.Filter)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
com.google.android.gms.common.api.internal.zacb: void run()
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.grpc.internal.AbstractReadableBuffer: void checkReadable(int)
com.google.firebase.messaging.TopicsSyncTask: boolean hasPermission(android.content.Context,java.lang.String,java.lang.Boolean)
com.google.firestore.v1.Value: void access$700(com.google.firestore.v1.Value,long)
com.google.android.gms.internal.firebase-auth-api.zzaeg: zzaeg()
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger$1: KeepAliveManager$ClientKeepAlivePinger$1(io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger)
com.google.protobuf.BinaryReader$SafeHeapReader: void readBytesList(java.util.List)
com.google.android.gms.signin.internal.zaf: zaf(android.os.IBinder)
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.google.android.gms.internal.firebase-auth-api.zzne: zzne(com.google.android.gms.internal.firebase-auth-api.zznd)
com.google.firebase.database.collection.RBTreeSortedMap: RBTreeSortedMap(com.google.firebase.database.collection.LLRBNode,java.util.Comparator,com.google.firebase.database.collection.RBTreeSortedMap$1)
com.google.firebase.firestore.core.EventManager: void onViewSnapshots(java.util.List)
io.grpc.internal.AbstractClientStream$TransportState: io.grpc.internal.ClientStreamListener listener()
com.google.android.gms.internal.firebase-auth-api.zzde: zzde(java.lang.Class)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
com.baseflow.geolocator.permission.LocationPermission: LocationPermission(java.lang.String,int)
com.squareup.okhttp.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)
io.grpc.Context$DirectExecutor: java.lang.String toString()
com.lyokone.location.LocationPlugin: void dispose()
com.google.protobuf.UnsafeUtil$1: sun.misc.Unsafe run()
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
io.grpc.DecompressorRegistry: DecompressorRegistry()
com.google.android.gms.common.api.internal.zabq: void zaD(com.google.android.gms.common.api.Status)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder: OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder(io.grpc.okhttp.OkHttpChannelBuilder,io.grpc.okhttp.OkHttpChannelBuilder$1)
com.google.firestore.admin.v1.Index$IndexField$Builder: Index$IndexField$Builder()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery getDefaultInstance()
com.google.android.gms.maps.UiSettings: boolean isZoomControlsEnabled()
com.google.firebase.firestore.model.DocumentKey: java.lang.String toString()
androidx.core.os.LocaleListPlatformWrapper: java.lang.Object getLocaleList()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition)
com.google.android.gms.maps.model.PolygonOptions: boolean isGeodesic()
com.google.firebase.firestore.FirebaseFirestoreSettings: java.lang.String getHost()
com.google.firebase.firestore.bundle.BundleReader: java.lang.String readJsonString(int)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getDocumentsMatchingCollectionGroupQuery(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite getDefaultInstance(java.lang.Class)
com.tekartik.sqflite.SqflitePlugin: void onBatchCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firestore.v1.TargetChange$Builder: TargetChange$Builder(com.google.firestore.v1.TargetChange$1)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.Attributes getEagAttributes()
com.google.protobuf.Utf8$UnsafeProcessor: java.lang.String decodeUtf8Direct(java.nio.ByteBuffer,int,int)
com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface getService()
com.google.android.gms.internal.firebase-auth-api.zzit: void zzf(com.google.android.gms.internal.firebase-auth-api.zzit,com.google.android.gms.internal.firebase-auth-api.zziz)
com.google.android.gms.common.api.GoogleApi: android.os.Looper getLooper()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.core.View$DocumentChanges: View$DocumentChanges(com.google.firebase.firestore.model.DocumentSet,com.google.firebase.firestore.core.DocumentViewChangeSet,com.google.firebase.database.collection.ImmutableSortedSet,boolean)
androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugins.urllauncher.WebViewActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback access$100(com.baseflow.geolocator.location.FusedLocationClient)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzL(java.lang.String,java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.google.firebase.firestore.DocumentReference: int hashCode()
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch addMutationBatch(com.google.firebase.Timestamp,java.util.List,java.util.List)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaC(com.google.android.gms.common.api.internal.zaae)
com.google.android.gms.internal.firebase-auth-api.zzoc: zzoc()
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzo(java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: boolean readBool()
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setMapValue(com.google.firestore.v1.MapValue$Builder)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withDrop(io.grpc.Status)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onCreate(android.os.Bundle)
com.google.android.gms.maps.model.Marker: void setRotation(float)
com.google.gson.stream.JsonReader: void beginArray()
com.google.android.gms.common.internal.zzo: android.os.IBinder zzc()
com.tekartik.sqflite.SqflitePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzdc: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.core.SyncEngine: void emitNewSnapsAndNotifyLocalStore(com.google.firebase.database.collection.ImmutableSortedMap,com.google.firebase.firestore.remote.RemoteEvent)
io.grpc.internal.StatsTraceContext: void streamClosed(io.grpc.Status)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder setName(java.lang.String)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFisError()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.firebase.firestore.model.DocumentSet: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzjx: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: android.database.sqlite.SQLiteDatabase getDb()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.internal.firebase-auth-api.zzsi: zzsi(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.firebase.auth.EmailAuthCredential,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zabs: boolean equals(java.lang.Object)
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
com.google.firebase.firestore.core.OrderBy: int compare(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.model.Document)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.core.FieldFilter create(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.core.FieldFilter$Operator,com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzv(com.google.android.gms.internal.firebase-auth-api.zzrg,com.google.android.gms.internal.firebase-auth-api.zzvr)
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zzai: zzai()
com.squareup.okhttp.HttpUrl$Builder: int effectivePort()
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: io.grpc.LoadBalancer$Subchannel nextSubchannel()
io.grpc.internal.MessageDeframer: boolean isStalled()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()
com.google.firebase.messaging.TopicOperation: int hashCode()
com.google.firebase.installations.FirebaseInstallations: void preConditionChecks()
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void postHeartBeatCleanUp()
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzg(long[],long[])
okio.SegmentedByteString: SegmentedByteString(okio.Buffer,int)
com.google.firestore.v1.WriteRequest: WriteRequest()
com.google.android.gms.internal.firebase-auth-api.zzaen: double zza(java.lang.Object,long)
com.google.firestore.v1.Write: java.util.List getUpdateTransformsList()
io.grpc.ConnectivityState: io.grpc.ConnectivityState valueOf(java.lang.String)
com.google.protobuf.AbstractProtobufList: void clear()
com.google.android.datatransport.runtime.EventInternal: java.lang.String get(java.lang.String)
com.google.firebase.firestore.model.BasePath: int compareTo(com.google.firebase.firestore.model.BasePath)
com.google.firebase.firestore.local.SQLiteSchema: void rewriteCanonicalIds()
com.google.firebase.firestore.DocumentChange: com.google.firebase.firestore.QueryDocumentSnapshot getDocument()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument setReadTime(com.google.firebase.firestore.model.SnapshotVersion)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
com.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
com.google.firebase.firestore.model.mutation.PatchMutation: PatchMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.firestore.model.mutation.Precondition)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
io.grpc.internal.LogExceptionRunnable: LogExceptionRunnable(java.lang.Runnable)
com.google.firebase.firestore.model.Values: boolean isReferenceValue(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzek: byte[] zza(byte[],byte[])
kotlin.collections.EmptyList: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaei: int nextIndex()
com.google.firebase.firestore.remote.FirestoreChannel$1: void onReady()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: GeneratedAndroidWebView$WebResourceRequestData$Builder()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: ListenerHolder$ListenerKey(java.lang.Object,java.lang.String)
io.grpc.Codec$Identity: Codec$Identity()
com.google.firebase.firestore.TransactionOptions$Builder: com.google.firebase.firestore.TransactionOptions build()
com.google.android.gms.common.api.internal.zabs: int hashCode()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.android.gms.common.GoogleApiAvailability: java.lang.String getErrorString(int)
io.grpc.ClientCall$Listener: ClientCall$Listener()
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.common.base.Platform$JdkPatternCompiler: Platform$JdkPatternCompiler()
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.zal zan(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: int getPriority(java.lang.Object)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.firestore.v1.StructuredQuery$Filter: void setUnaryFilter(com.google.firestore.v1.StructuredQuery$UnaryFilter)
com.google.protobuf.GeneratedMessageLite: void makeImmutable()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.util.Map remoteMessageNotificationToMap(com.google.firebase.messaging.RemoteMessage$Notification)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zze(byte[],int,int)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.cloudmessaging.zzs zzb(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzos: java.lang.Object zza(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzkg zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.grpc.ClientStreamTracer$StreamInfo: io.grpc.ClientStreamTracer$StreamInfo$Builder newBuilder()
io.grpc.internal.StatsTraceContext: void clientOutboundHeaders()
com.google.android.gms.maps.model.Polyline: void setWidth(float)
com.google.android.gms.maps.internal.zzw: zzw()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.remote.Datastore: com.google.android.gms.tasks.Task commit(java.util.List)
com.google.firestore.v1.StructuredQuery$Order: StructuredQuery$Order()
com.google.firebase.auth.zzi: void zzb(com.google.android.gms.common.api.Status)
com.google.firebase.firestore.local.ReferenceSet: void addReference(com.google.firebase.firestore.model.DocumentKey,int)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
io.grpc.okhttp.internal.framed.Hpack$Reader: Hpack$Reader(int,okio.Source)
com.google.android.gms.internal.firebase-auth-api.zzaeb: boolean equals(java.lang.Object)
com.google.protobuf.CodedInputStreamReader: java.lang.Object readGroupBySchemaWithCheck(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: boolean isApplicationForeground(android.content.Context)
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.model.FieldPath getPath()
com.google.android.gms.tasks.zzad: void zza()
com.google.android.gms.internal.base.zaa: void zac(int,android.os.Parcel)
kotlinx.coroutines.channels.AbstractChannel$Itr: AbstractChannel$Itr(kotlinx.coroutines.channels.AbstractChannel)
io.grpc.NameResolver$Args: java.lang.String toString()
io.grpc.okhttp.Headers: boolean isApplicationHeader(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzdb: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzkw: zzkw(com.google.android.gms.internal.firebase-auth-api.zzkv)
com.google.android.gms.signin.zaa: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzmx: void zzh(com.google.android.gms.internal.firebase-auth-api.zzmx,int)
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: boolean hasNext()
com.google.firebase.firestore.local.QueryEngine: void initialize(com.google.firebase.firestore.local.LocalDocumentsView,com.google.firebase.firestore.local.IndexManager)
com.google.firestore.v1.Document: java.util.Map getFieldsMap()
com.google.android.gms.internal.firebase-auth-api.zzaem: float zzb(java.lang.Object,long)
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
io.grpc.internal.DelayedClientTransport$PendingStream: DelayedClientTransport$PendingStream(io.grpc.internal.DelayedClientTransport,io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[],io.grpc.internal.DelayedClientTransport$1)
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzk(java.util.List)
io.grpc.internal.ManagedChannelImpl: void exitIdleMode()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
com.google.firebase.firestore.proto.MaybeDocument: void setNoDocument(com.google.firebase.firestore.proto.NoDocument)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.grpc.internal.ManagedChannelImpl: void access$1300(io.grpc.internal.ManagedChannelImpl)
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
okio.Segment: okio.Segment push(okio.Segment)
com.google.android.datatransport.runtime.AutoValue_EventInternal: com.google.android.datatransport.runtime.EncodedPayload getEncodedPayload()
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: AutoValue_BackendResponse(com.google.android.datatransport.runtime.backends.BackendResponse$Status,long)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock getInstance()
io.grpc.Metadata$LazyValue: java.io.InputStream toStream()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: com.google.protobuf.ByteString getResumeToken()
com.google.protobuf.SchemaUtil: void writeFixed32List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzp(com.google.android.gms.internal.firebase-auth-api.zzwr)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1302(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzI(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: void maybeAddGmpAppId(io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzvh: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zziz: zziz()
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
com.google.android.gms.common.zzi: byte[] zze(java.lang.String)
com.google.android.gms.common.internal.StringResourceValueReader: StringResourceValueReader(android.content.Context)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
com.google.android.gms.common.internal.zzu: zzu(java.lang.String,java.lang.String,boolean,int,boolean)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()
com.google.protobuf.ListFieldSchema: com.google.protobuf.ListFieldSchema lite()
com.google.protobuf.MapFieldSchemas: com.google.protobuf.MapFieldSchema lite()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.firebase.transport.TimeWindow getTimeWindow()
io.grpc.SynchronizationContext$ScheduledHandle: SynchronizationContext$ScheduledHandle(io.grpc.SynchronizationContext$ManagedRunnable,java.util.concurrent.ScheduledFuture,io.grpc.SynchronizationContext$1)
io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,boolean,io.grpc.Metadata$AsciiMarshaller)
io.flutter.plugins.googlemaps.GoogleMapController: boolean onMarkerClick(com.google.android.gms.maps.model.Marker)
com.google.protobuf.LongArrayList: boolean add(java.lang.Object)
com.google.protobuf.UnknownFieldSetLiteSchema: void addFixed64(java.lang.Object,int,long)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean isAtEnd()
com.google.firebase.firestore.FieldValue$NumericIncrementFieldValue: java.lang.Number getOperand()
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
io.grpc.internal.MessageFramer: void writeBufferChain(io.grpc.internal.MessageFramer$BufferChainOutputStream,boolean)
com.google.android.gms.common.api.Status: Status(com.google.android.gms.common.ConnectionResult,java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzacw: int zzf(java.lang.Object)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: com.google.firebase.firestore.FirebaseFirestoreSettings$Builder setPersistenceEnabled(boolean)
com.google.android.gms.cloudmessaging.zze: void run()
io.grpc.internal.RetriableStream$Sublistener$4: RetriableStream$Sublistener$4(io.grpc.internal.RetriableStream$Sublistener,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzmx: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.PolygonsController: void addPolygons(java.util.List)
com.google.android.gms.internal.maps.zzai: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
io.grpc.internal.HedgingPolicy: HedgingPolicy(int,long,java.util.Set)
okio.Segment: okio.Segment sharedCopy()
io.grpc.internal.InternalSubchannel$Index: boolean seekTo(java.net.SocketAddress)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getToken()
com.squareup.okhttp.internal.http.StatusLine: StatusLine(com.squareup.okhttp.Protocol,int,java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.google.firebase.firestore.bundle.BundleReader: java.lang.String readLengthPrefix()
com.google.firebase.firestore.remote.OnlineStateTracker: void updateState(com.google.firebase.firestore.core.OnlineState)
io.grpc.okhttp.internal.Platform$JettyNegoProvider: Platform$JettyNegoProvider(java.util.List)
com.google.protobuf.LazyStringArrayList: void add(com.google.protobuf.ByteString)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
com.google.firebase.Timestamp$1: com.google.firebase.Timestamp createFromParcel(android.os.Parcel)
com.tekartik.sqflite.SqlCommand: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzabx: int hashCode()
com.google.android.gms.dynamite.zzd: zzd()
com.google.android.datatransport.AutoValue_Event: java.lang.String toString()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.google.firebase.auth.internal.GenericIdpActivity: java.lang.String zzc(java.lang.String)
com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: com.google.android.datatransport.cct.CctTransportBackend$HttpRequest withUrl(java.net.URL)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.mutation.FieldTransform decodeFieldTransform(com.google.firestore.v1.DocumentTransform$FieldTransform)
com.google.firebase.firestore.Query: void validateHasExplicitOrderByForLimitToLast()
com.google.android.gms.common.ErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)
io.flutter.plugins.googlemaps.Convert: int toInt(java.lang.Object)
io.flutter.plugins.androidintent.IntentSender: void send(android.content.Intent)
com.google.firebase.firestore.util.CustomClassMapper: void access$500(boolean,java.lang.String)
com.google.android.gms.common.api.internal.zabm: zabm(com.google.android.gms.common.api.internal.zabq)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setStorageBucket(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzQ(int,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.Timestamp: com.google.firebase.Timestamp now()
com.google.android.gms.common.logging.Logger: Logger(java.lang.String,java.lang.String[])
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.arch.core.internal.SafeIterableMap: int hashCode()
com.google.android.gms.tasks.zzr: void zzb(com.google.android.gms.tasks.Task)
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.firebase.firestore.remote.WatchChangeAggregator: void addDocumentToTarget(int,com.google.firebase.firestore.model.MutableDocument)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void ensureConfigured(android.database.sqlite.SQLiteDatabase)
com.google.firebase.auth.internal.zzz: long getLastSignInTimestamp()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzah: java.lang.Object previous()
io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String toString()
io.grpc.internal.ProxyDetectorImpl: ProxyDetectorImpl()
com.google.firebase.database.collection.LLRBBlackValueNode: void setLeft(com.google.firebase.database.collection.LLRBNode)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void settings(boolean,io.grpc.okhttp.internal.framed.Settings)
com.google.firebase.components.EventBus: void subscribe(java.lang.Class,com.google.firebase.events.EventHandler)
com.google.protobuf.UnsafeUtil: void access$400(java.lang.Object,long,byte)
io.flutter.plugins.googlemaps.GoogleMapController: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.Log: void v(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
io.grpc.internal.OobChannel: java.lang.String authority()
io.grpc.internal.GzipInflatingBuffer: void close()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions build()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
io.grpc.internal.RetriableStream$ChannelBufferMeter: RetriableStream$ChannelBufferMeter()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.android.gms.maps.model.Cap: Cap(int,android.os.IBinder,java.lang.Float)
com.google.android.gms.maps.internal.zzby: void setMyLocationButtonEnabled(boolean)
kotlinx.coroutines.android.HandlerContext: int hashCode()
com.google.android.gms.maps.model.PolylineOptions: PolylineOptions(java.util.List,float,int,float,boolean,boolean,boolean,com.google.android.gms.maps.model.Cap,com.google.android.gms.maps.model.Cap,int,java.util.List)
com.google.firestore.v1.Document$Builder: com.google.firestore.v1.Document$Builder setName(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: AndroidConnectivityMonitor$1(com.google.firebase.firestore.remote.AndroidConnectivityMonitor,java.util.concurrent.atomic.AtomicBoolean)
com.google.firebase.messaging.Metadata: int getGmsVersionCode()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void destroyCachedFirebaseFirestoreInstanceForKey(java.lang.String)
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: LruGarbageCollector$GCScheduler(com.google.firebase.firestore.local.LruGarbageCollector,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.local.LocalStore)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: InternalChannelz$ChannelTrace$Event$Severity(java.lang.String,int)
com.google.common.collect.AbstractIndexedListIterator: AbstractIndexedListIterator(int,int)
io.flutter.plugins.googlemaps.CircleController: void setStrokeWidth(float)
io.grpc.okhttp.OkHttpChannelBuilder: int getDefaultPort()
com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex: MemoryIndexManager$MemoryCollectionParentIndex()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: int hashCode()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageChannel(android.os.Bundle)
com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.Continuation zza(com.google.android.gms.tasks.zzf)
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: com.google.protobuf.WireFormat$FieldType getLiteType()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument newNoDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.SnapshotVersion)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
com.google.firebase.auth.PhoneAuthOptions: java.lang.String zzh()
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzd)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaH(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult)
com.google.android.gms.internal.firebase-auth-api.zzfr: com.google.android.gms.internal.firebase-auth-api.zzmx zzb()
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
io.flutter.plugins.urllauncher.UrlLauncher: void setActivity(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzzb: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
com.google.firebase.installations.Utils: boolean isAuthTokenExpired(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.firestore.auth.CredentialsProvider: CredentialsProvider()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzay: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.okhttp.internal.framed.Hpack$Writer: Hpack$Writer(okio.Buffer)
kotlinx.coroutines.CoroutineId: int hashCode()
com.google.android.gms.common.internal.zzo: android.content.ComponentName zzb()
io.grpc.LoadBalancerProvider$UnknownConfig: java.lang.String toString()
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzr(java.util.List)
com.google.common.collect.RegularImmutableSet: int hashCode()
io.grpc.Attributes: io.grpc.Attributes$Builder newBuilder()
com.google.android.gms.common.api.internal.ListenerHolder: ListenerHolder(android.os.Looper,java.lang.Object,java.lang.String)
io.grpc.internal.DelayedClientTransport: java.lang.Runnable access$602(io.grpc.internal.DelayedClientTransport,java.lang.Runnable)
com.google.android.gms.common.api.GoogleApiActivity: void onCancel(android.content.DialogInterface)
com.google.protobuf.Utf8$UnsafeProcessor: int unsafeEstimateConsecutiveAscii(long,int)
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: void removeChangeListener()
io.grpc.internal.ApplicationThreadDeframerListener: void deframerClosed(boolean)
io.grpc.internal.GzipInflatingBuffer: boolean processTrailer()
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order forNumber(int)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: void encode(com.google.android.datatransport.cct.internal.LogEvent,com.google.firebase.encoders.ObjectEncoderContext)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getExpiresInSecs()
io.grpc.internal.InternalSubchannel$5: InternalSubchannel$5(io.grpc.internal.InternalSubchannel,io.grpc.Status)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.google.android.gms.common.internal.service.zap: android.os.IInterface createServiceInterface(android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzov: zzov()
com.google.protobuf.CodedOutputStreamWriter: void writeDoubleList(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzdv: byte[] zza(byte[],byte[])
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.grpc.internal.OobChannel: io.grpc.ManagedChannel shutdownNow()
com.google.android.gms.location.LocationAvailability: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzis zza()
io.grpc.internal.DelayedClientCall$DelayedListener$3: DelayedClientCall$DelayedListener$3(io.grpc.internal.DelayedClientCall$DelayedListener,io.grpc.Status,io.grpc.Metadata)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
com.google.firebase.auth.internal.zzi: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzaep: zzaep()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
com.google.android.gms.maps.internal.zzbz: void zzc(android.os.Bundle,java.lang.String,android.os.Parcelable)
io.grpc.internal.DnsNameResolver$Resolve$1: DnsNameResolver$Resolve$1(io.grpc.internal.DnsNameResolver$Resolve,boolean)
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderClient getFusedLocationProviderClient(android.content.Context)
com.google.android.gms.common.api.internal.GoogleApiManager: android.os.Handler zaf(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.protobuf.MessageSchema: void writeFieldsInDescendingOrder(java.lang.Object,com.google.protobuf.Writer)
okio.AsyncTimeout$1: void write(okio.Buffer,long)
com.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)
io.grpc.internal.DelayedClientCall$CloseListenerRunnable: DelayedClientCall$CloseListenerRunnable(io.grpc.internal.DelayedClientCall,io.grpc.ClientCall$Listener,io.grpc.Status)
io.grpc.internal.CompositeReadableBuffer$2: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Void,int)
com.google.protobuf.UnmodifiableLazyStringList: java.util.List getUnderlyingElements()
com.google.android.gms.internal.cloudmessaging.zze: com.google.android.gms.internal.cloudmessaging.zzb zza()
com.google.android.gms.internal.firebase-auth-api.zzaeb: boolean zzj()
com.google.android.gms.common.internal.TelemetryData: java.util.List zab()
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.FirebaseUser getUser()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzC(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.database.collection.LLRBRedValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flush()
com.google.android.gms.internal.firebase-auth-api.zzgh: zzgh()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()
io.grpc.MethodDescriptor: java.lang.String toString()
com.google.android.gms.maps.internal.zzby: boolean isMyLocationButtonEnabled()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: long getDelta()
com.google.android.gms.cloudmessaging.zzt: int zzb()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
io.grpc.Codec$Gzip: Codec$Gzip()
com.google.android.gms.internal.firebase-auth-api.zzbd: zzbd()
com.google.android.gms.internal.firebase-auth-api.zzzq: zzzq()
com.google.firebase.firestore.model.BasePath: com.google.firebase.firestore.model.BasePath append(com.google.firebase.firestore.model.BasePath)
com.google.android.gms.internal.firebase-auth-api.zzqx: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.util.Map getAdditionalData()
com.google.android.gms.common.internal.zze: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzpc: java.lang.String zza(byte[])
com.google.firestore.bundle.BundledQuery$LimitType: BundledQuery$LimitType(java.lang.String,int,int)
com.google.protobuf.ManifestSchemaFactory$1: boolean isSupported(java.lang.Class)
io.grpc.Context$CancellableContext: void addListenerInternal(io.grpc.Context$ExecutableListener)
com.google.firebase.internal.DataCollectionConfigStorage: void setEnabled(java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzs(java.lang.Object,long,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
com.google.firestore.v1.Target: void access$2700(com.google.firestore.v1.Target,com.google.protobuf.Timestamp)
com.google.android.gms.maps.model.PolylineOptions: PolylineOptions()
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzd()
io.grpc.Deadline: Deadline(io.grpc.Deadline$Ticker,long,long,boolean)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
com.google.protobuf.CodedOutputStream: CodedOutputStream(com.google.protobuf.CodedOutputStream$1)
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator iterator(int,boolean)
io.grpc.internal.CompositeReadableBuffer$1: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Void,int)
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: WithinAppServiceConnection$BindRequest(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzmu: zzmu()
com.google.android.gms.internal.firebase-auth-api.zzacr: void zzf(long)
com.google.android.gms.internal.firebase-auth-api.zzme: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: java.lang.String getEndpointPackageName()
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
kotlinx.coroutines.CommonPool: java.lang.Thread createPlainPool$lambda-12(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
com.google.firebase.components.RestrictedComponentContainer: RestrictedComponentContainer(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte readByte(android.os.Parcel,int)
io.grpc.Status: Status(io.grpc.Status$Code,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object getMinKey()
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: OkHttpProtocolNegotiator$AndroidNegotiator(io.grpc.okhttp.internal.Platform)
io.grpc.Context: void detach(io.grpc.Context)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setDeepLinkURLScheme(java.lang.String)
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
com.google.android.gms.common.api.internal.zaac: zaac(com.google.android.gms.common.api.internal.zaad,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.google.firebase.FirebaseApp: java.lang.String getName()
com.google.protobuf.Utf8: int incompleteStateFor(int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzmz: com.google.android.gms.internal.firebase-auth-api.zzmz zza(com.google.android.gms.internal.firebase-auth-api.zznb)
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zzc()
com.google.android.gms.common.api.internal.LifecycleCallback: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.firestore.LoadBundleTaskProgress: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvv: java.lang.String zzd()
io.grpc.InternalChannelz: InternalChannelz()
androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions build()
kotlin.random.AbstractPlatformRandom: int nextBits(int)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityPaused(android.app.Activity)
com.google.firebase.firestore.proto.UnknownDocument$Builder: com.google.firebase.firestore.proto.UnknownDocument$Builder setVersion(com.google.protobuf.Timestamp)
io.grpc.internal.Http2ClientStreamTransportState$1: java.lang.Object parseAsciiString(byte[])
io.grpc.LoadBalancer$ResolvedAddresses: java.lang.Object getLoadBalancingPolicyConfig()
com.google.android.gms.internal.firebase-auth-api.zzxk: void zzh(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.safetynet.zzx: java.lang.String getStartServiceAction()
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken()
com.google.android.gms.internal.firebase-auth-api.zzqk: java.lang.String zzb()
io.flutter.plugins.googlemaps.Convert: java.util.List toPoints(java.lang.Object)
com.google.firebase.messaging.DisplayNotification: DisplayNotification(android.content.Context,com.google.firebase.messaging.NotificationParams,java.util.concurrent.ExecutorService)
com.google.common.collect.ImmutableList$SubList: int internalArrayEnd()
io.grpc.internal.InternalSubchannel$TransportListener$3: InternalSubchannel$TransportListener$3(io.grpc.internal.InternalSubchannel$TransportListener)
io.grpc.Deadline: io.grpc.Deadline after(long,java.util.concurrent.TimeUnit,io.grpc.Deadline$Ticker)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
io.grpc.internal.ManagedChannelServiceConfig: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getDocumentsMatchingQuery(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.android.gms.common.api.internal.zah: void zac(com.google.android.gms.common.api.internal.zabq)
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(boolean)
com.google.protobuf.ArrayDecoders: int decodeVarint32(byte[],int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzxy: java.lang.String zza()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientTransport getTransport(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.android.gms.maps.UiSettings: void setTiltGesturesEnabled(boolean)
com.google.firestore.v1.ListenRequest$Builder: ListenRequest$Builder()
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: void run()
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zzni zze()
com.google.android.gms.tasks.zzf: void zzc()
io.grpc.internal.DelayedClientTransport$1: void run()
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp getReadTime()
io.grpc.Context: io.grpc.Context$Storage storage()
com.google.protobuf.LazyStringArrayList: boolean addAll(java.util.Collection)
com.google.firestore.v1.Target$DocumentsTarget$Builder: com.google.firestore.v1.Target$DocumentsTarget$Builder addDocuments(java.lang.String)
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose valueOf(java.lang.String)
com.google.protobuf.DoubleArrayList: java.lang.Double get(int)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void success(java.lang.Object)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.security.interfaces.ECPrivateKey zzh(int,byte[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
com.google.firebase.firestore.proto.MaybeDocument$Builder: com.google.firebase.firestore.proto.MaybeDocument$Builder setUnknownDocument(com.google.firebase.firestore.proto.UnknownDocument)
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zzc()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void initInstance(io.flutter.plugin.common.BinaryMessenger)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore: java.util.Map wrapError(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzje: zzje()
com.google.protobuf.UnknownFieldSetLiteSchema: java.lang.Object toImmutable(java.lang.Object)
com.google.android.gms.internal.maps.zzae: void zzj(boolean)
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void remove(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task write(java.util.List)
io.grpc.InternalMetadata: byte[][] serialize(io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzG(java.lang.Class)
io.grpc.okhttp.OkHttpClientTransport: java.util.logging.Logger access$2100()
androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)
com.google.protobuf.Utf8: int access$100(int,int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)
com.google.android.gms.cloudmessaging.zzr: void zza(android.os.Bundle)
com.google.firebase.firestore.local.MemoryOverlayMigrationManager: void run()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zzt(com.google.firebase.auth.FirebaseAuth,java.lang.String,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks)
com.google.android.gms.internal.firebase-auth-api.zzacd: java.lang.Object zze(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: FlutterFirebaseMessagingPlugin()
com.google.android.gms.tasks.zzr: zzr()
com.google.android.gms.internal.firebase-auth-api.zzlt: com.google.android.gms.internal.firebase-auth-api.zzlt zzc()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$Filter encodeUnaryOrFieldFilter(com.google.firebase.firestore.core.FieldFilter)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int,int)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
com.google.protobuf.ProtobufArrayList: boolean add(java.lang.Object)
io.grpc.Metadata$AsciiKey: java.lang.Object parseBytes(byte[])
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
com.google.android.gms.internal.firebase-auth-api.zzso: void zzb(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabh: boolean add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzK(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzsp: zzsp(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzh)
com.google.android.gms.maps.zzag: zzag(android.view.ViewGroup,com.google.android.gms.maps.internal.IMapViewDelegate)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzU(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.firebase.firestore.model.ObjectValue: void setOverlay(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.android.gms.common.api.internal.zabw: zabw()
com.google.firebase.firestore.model.DocumentSet: int hashCode()
com.google.android.gms.maps.UiSettings: boolean isCompassEnabled()
io.grpc.internal.ForwardingClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.firebase.firestore.core.UserData$ParseContext: boolean isArrayElement()
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: void encode(com.google.android.datatransport.runtime.firebase.transport.TimeWindow,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzF(long)
com.google.android.gms.dynamite.zzg: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()
com.google.android.gms.internal.firebase-auth-api.zzpf: zzpf(com.google.android.gms.internal.firebase-auth-api.zzpg)
io.grpc.internal.NoopClientStream: void setCompressor(io.grpc.Compressor)
com.google.protobuf.UnknownFieldSetLite: void makeImmutable()
com.lyokone.location.MethodCallHandlerImpl: void onRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.datatransport.cct.CCTDestination: byte[] asByteArray()
com.google.protobuf.FieldSet: java.lang.Object clone()
com.google.android.gms.internal.firebase-auth-api.zzaar: int zzf(int,int,int)
com.baseflow.geolocator.StreamHandlerImpl: void stopListening()
com.google.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
okio.Buffer: void skip(long)
io.grpc.okhttp.internal.framed.Http2$Reader: void readData(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.Boolean canGoForward(java.lang.Long)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: void writeLong(long)
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
com.google.firebase.firestore.remote.RemoteStore: void access$500(com.google.firebase.firestore.remote.RemoteStore,com.google.firebase.firestore.model.SnapshotVersion,java.util.List)
com.google.firebase.firestore.core.FieldFilter$Operator: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object tryWithCursor(android.database.Cursor,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)
io.grpc.okhttp.OkHttpClientStream: int id()
com.google.firebase.firestore.local.SQLiteTargetCache: void removeMatchingKeysForTargetId(int)
com.baseflow.geolocator.location.LocationManagerClient: void onProviderEnabled(java.lang.String)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void closedInternal(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzgb: int zze()
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.core.DatabaseInfo getDatabaseInfo()
com.google.protobuf.AbstractProtobufList: void ensureIsMutable()
com.google.firebase.firestore.core.Query: boolean matchesPathAndCollectionGroup(com.google.firebase.firestore.model.Document)
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getMessageId()
com.google.android.gms.internal.firebase-auth-api.zzaay: int zzs(int)
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createDeleteIntent(android.content.Context,android.content.Context,com.google.firebase.messaging.NotificationParams)
com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context,int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.baseflow.geolocator.GeolocatorPlugin: void registerListeners()
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] values()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
com.google.android.gms.internal.firebase-auth-api.zzmd: zzmd()
com.google.android.gms.dynamite.DynamiteModule: void zzd(java.lang.ClassLoader)
com.google.android.gms.internal.firebase-auth-api.zzadg: boolean zzk(java.lang.Object)
com.google.firebase.auth.internal.zzd: void onSuccess(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaby: void removeRange(int,int)
androidx.activity.OnBackPressedCallback: void remove()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zar(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter notInArray(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.protobuf.MessageSchema: boolean booleanAt(java.lang.Object,long)
io.grpc.internal.GrpcUtil$3: java.lang.Object create()
okio.Buffer: long completeSegmentByteCount()
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)
okio.AsyncTimeout$1: AsyncTimeout$1(okio.AsyncTimeout,okio.Sink)
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
com.google.firebase.auth.zzv: zzv()
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
com.google.protobuf.ByteString$SystemByteArrayCopier: ByteString$SystemByteArrayCopier(com.google.protobuf.ByteString$1)
io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector: ManagedChannelServiceConfig$ServiceConfigConvertedSelector(io.grpc.internal.ManagedChannelServiceConfig)
io.flutter.plugins.firebase.messaging.JobIntentService: void onCreate()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder setLogEventDroppedList(java.util.List)
com.google.protobuf.UnsafeUtil: boolean getBooleanBigEndian(java.lang.Object,long)
io.grpc.okhttp.ExceptionHandlingFrameWriter: void ackSettings(io.grpc.okhttp.internal.framed.Settings)
com.google.firestore.v1.DocumentTransform$FieldTransform: void setAppendMissingElements(com.google.firestore.v1.ArrayValue)
com.google.firestore.v1.Precondition: Precondition()
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzaau zzd()
io.grpc.internal.AbstractClientStream$TransportState: void inboundHeadersReceived(io.grpc.Metadata)
com.google.firestore.bundle.BundledQuery: void setStructuredQuery(com.google.firestore.v1.StructuredQuery)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransportContext(com.google.android.datatransport.runtime.TransportContext)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType valueOf(java.lang.String)
com.google.firebase.auth.internal.zzq: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadi: com.google.android.gms.internal.firebase-auth-api.zzadh zza()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo build()
io.grpc.internal.ClientCallImpl: boolean access$1102(io.grpc.internal.ClientCallImpl,boolean)
com.squareup.okhttp.Headers$Builder: Headers$Builder()
com.google.android.gms.common.internal.BaseGmsClient: void disconnect()
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
com.google.firebase.firestore.local.LocalDocumentsView: void populateOverlays(java.util.Map,java.util.Set)
com.google.protobuf.TextFormatEscaper: java.lang.String escapeBytes(com.google.protobuf.TextFormatEscaper$ByteSequence)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(long)
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.ArrayValue getRemoveAllFromArray()
io.grpc.util.RoundRobinLoadBalancer$1: void onSubchannelState(io.grpc.ConnectivityStateInfo)
io.grpc.internal.ManagedChannelImpl: boolean access$7200(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.common.api.internal.zae: zae(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.protobuf.UnknownFieldSetLiteSchema: int getSerializedSize(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzaa(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.android.gms.internal.firebase-auth-api.zzzn: zzzn()
com.google.android.gms.internal.firebase-auth-api.zzal: boolean addAll(int,java.util.Collection)
com.google.firebase.auth.internal.zzx: void zzp(com.google.firebase.auth.zze)
io.grpc.SynchronizationContext$1: java.lang.String toString()
io.flutter.plugins.androidintent.MethodCallHandlerImpl: MethodCallHandlerImpl(io.flutter.plugins.androidintent.IntentSender)
com.google.android.gms.internal.safetynet.zzy: zzy()
com.google.android.gms.internal.firebase-auth-api.zzmx: zzmx()
com.google.protobuf.MessageSetSchema: void mergeFrom(java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] values()
com.google.protobuf.GeneratedMessageLite$Builder: void mergeFromInstance(com.google.protobuf.GeneratedMessageLite,com.google.protobuf.GeneratedMessageLite)
com.google.android.gms.internal.firebase-auth-api.zzfa: com.google.android.gms.internal.firebase-auth-api.zzet zzc(com.google.android.gms.internal.firebase-auth-api.zzmb)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int)
com.google.android.gms.internal.firebase-auth-api.zzabh: int size()
io.grpc.internal.ManagedChannelImpl$RealChannel$4: ManagedChannelImpl$RealChannel$4(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)
io.grpc.internal.LogExceptionRunnable: void run()
com.google.android.gms.internal.firebase-auth-api.zznk: com.google.android.gms.internal.firebase-auth-api.zznk zza(com.google.android.gms.internal.firebase-auth-api.zzno)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialMarkers(java.lang.Object)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.DocumentKey decodeKey(java.lang.String)
com.google.protobuf.MapFieldLite: void putAll(java.util.Map)
io.perfmark.PerfMark: void event(java.lang.String,io.perfmark.Tag)
com.google.android.gms.internal.firebase-auth-api.zzlq: void zzh(com.google.android.gms.internal.firebase-auth-api.zzlq,int)
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.model.DocumentSet getOldDocuments()
com.google.android.gms.internal.firebase-auth-api.zzhn: com.google.android.gms.internal.firebase-auth-api.zzfz zzi(int,int,int,int)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.google.android.gms.internal.base.zab: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.protobuf.SchemaUtil: void writeFloatList(int,java.util.List,com.google.protobuf.Writer,boolean)
io.grpc.okhttp.internal.framed.Settings: int size()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: byte getByte(long)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: android.content.SharedPreferences getPreferences()
io.grpc.internal.GzipInflatingBuffer: int access$512(io.grpc.internal.GzipInflatingBuffer,int)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.messaging.Store: Store(android.content.Context)
com.google.android.datatransport.runtime.AutoValue_EventInternal: AutoValue_EventInternal(java.lang.String,java.lang.Integer,com.google.android.datatransport.runtime.EncodedPayload,long,long,java.util.Map,com.google.android.datatransport.runtime.AutoValue_EventInternal$1)
io.grpc.internal.ClientCallImpl$1ClosedByNotFoundCompressor: ClientCallImpl$1ClosedByNotFoundCompressor(io.grpc.internal.ClientCallImpl,io.grpc.ClientCall$Listener,java.lang.String)
com.google.firestore.v1.Document: void setName(java.lang.String)
io.grpc.internal.ChannelLoggerImpl: void logOnly(io.grpc.InternalLogId,io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])
com.google.protobuf.SchemaUtil: boolean safeEquals(java.lang.Object,java.lang.Object)
io.grpc.InternalChannelz$ChannelTrace$Event: InternalChannelz$ChannelTrace$Event(java.lang.String,io.grpc.InternalChannelz$ChannelTrace$Event$Severity,long,io.grpc.InternalWithLogId,io.grpc.InternalWithLogId,io.grpc.InternalChannelz$1)
com.google.android.gms.internal.firebase-auth-api.zzadg: void zzf(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaaj: java.lang.Object remove(int)
com.google.android.gms.common.internal.zat: zat(int,android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)
com.google.android.gms.internal.firebase-auth-api.zzbd: com.google.android.gms.internal.firebase-auth-api.zzbc zzh(java.lang.String)
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
com.google.android.gms.internal.safetynet.zzh: zzh()
com.google.android.datatransport.runtime.AutoValue_EventInternal: long getEventMillis()
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code valueOf(java.lang.String)
com.google.firebase.firestore.remote.GrpcCallProvider: void clearConnectivityAttemptTimer()
io.grpc.internal.AbstractClientStream$TransportState: void setFullStreamDecompression(boolean)
com.google.android.gms.internal.firebase-auth-api.zzoz: zzoz()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.common.internal.zzg: void zzb(com.google.android.gms.common.ConnectionResult)
io.grpc.internal.MessageFramer: void commitToSink(boolean,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzp(java.lang.Object,long,float)
io.grpc.internal.MessageFramer$BufferChainOutputStream: MessageFramer$BufferChainOutputStream(io.grpc.internal.MessageFramer,io.grpc.internal.MessageFramer$1)
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove getDefaultInstance()
com.google.android.gms.maps.internal.zzg: void setOnPolygonClickListener(com.google.android.gms.maps.internal.zzbf)
com.google.common.io.BaseEncoding$Base16Encoding: BaseEncoding$Base16Encoding(java.lang.String,java.lang.String)
com.google.android.gms.maps.model.zza: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzadt: zzadt()
io.grpc.okhttp.OkHttpClientTransport: OkHttpClientTransport(java.net.InetSocketAddress,java.lang.String,java.lang.String,io.grpc.Attributes,java.util.concurrent.Executor,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,io.grpc.okhttp.internal.ConnectionSpec,int,int,io.grpc.HttpConnectProxiedSocketAddress,java.lang.Runnable,int,io.grpc.internal.TransportTracer,boolean)
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
com.google.android.gms.internal.maps.zzae: int zzf()
com.google.firestore.v1.Target: void setQuery(com.google.firestore.v1.Target$QueryTarget)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzA(com.google.android.gms.internal.firebase-auth-api.zzzq,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfigManager getInstance()
com.google.android.gms.internal.firebase-auth-api.zzacj: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
com.google.firestore.v1.Precondition$Builder: com.google.firestore.v1.Precondition$Builder setExists(boolean)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task batchCommit(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzyg: java.lang.String zza()
com.google.firebase.auth.UserProfileChangeRequest: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzzs: zzzs()
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator forNumber(int)
com.google.firebase.auth.zzq: zzq(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.internal.firebase-auth-api.zzji: zzji()
com.google.firebase.firestore.local.SQLitePersistence$Query: android.database.Cursor startQuery()
io.grpc.internal.PickFirstLoadBalancer$Picker: PickFirstLoadBalancer$Picker(io.grpc.LoadBalancer$PickResult)
com.lyokone.location.FlutterLocation: void requestPermissions()
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
io.grpc.Status: java.util.List access$000()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
com.google.android.gms.common.api.internal.zag: void zae(java.lang.Exception)
com.google.protobuf.ArrayDecoders: int decodeFixed64List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.maps.model.zzb: zzb()
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest getDefaultInstance()
com.google.android.gms.dynamic.ObjectWrapper: com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setProxyDetector(io.grpc.ProxyDetector)
io.grpc.internal.GzipInflatingBuffer: boolean processHeaderExtra()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBoolean(android.os.Parcel,int,boolean)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzabs: zzabs()
com.google.firebase.encoders.proto.ProtobufEncoder: com.google.firebase.encoders.proto.ProtobufEncoder$Builder builder()
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol[] values()
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.fragment.app.FragmentTransition$1: void run()
com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.CodedOutputStreamWriter forCodedOutput(com.google.protobuf.CodedOutputStream)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
io.grpc.okhttp.OkHttpClientTransport: java.util.Map access$2700(io.grpc.okhttp.OkHttpClientTransport)
com.google.firebase.auth.internal.zzx: java.lang.String getEmail()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: void success(java.lang.Object)
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.protobuf.AbstractMessageLite$Builder: void addAll(java.lang.Iterable,java.util.List)
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable)
io.grpc.internal.DelayedClientCall$DelayedListener: void delayOrExecute(java.lang.Runnable)
com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zzb(android.os.Bundle,com.google.android.gms.tasks.Task)
androidx.collection.MapCollections: java.util.Collection getValues()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.protobuf.Timestamp: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaz: java.lang.String zze()
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions clickable(boolean)
io.grpc.NameResolverRegistry$NameResolverPriorityAccessor: NameResolverRegistry$NameResolverPriorityAccessor()
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: void checkNotUsed()
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound getStartAt()
com.google.android.gms.internal.firebase-auth-api.zzko: zzko()
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.android.gms.internal.firebase-auth-api.zzzz: boolean zzg()
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzik zzc()
io.grpc.stub.ClientCalls$StubType: ClientCalls$StubType(java.lang.String,int)
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.android.gms.internal.firebase-auth-api.zzw: zzw(com.google.android.gms.internal.firebase-auth-api.zzv)
com.google.android.gms.common.internal.zzj: zzj(android.os.Bundle,com.google.android.gms.common.Feature[],int,com.google.android.gms.common.internal.ConnectionTelemetryConfiguration)
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
com.google.firebase.auth.internal.zzd: zzd(com.google.firebase.auth.internal.zzf,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.firestore.util.LogicUtils: void assertFieldFilterOrCompositeFilter(com.google.firebase.firestore.core.Filter)
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger$1: void onFailure(java.lang.Throwable)
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.Object[] generateQueryAndBindings(com.google.firebase.firestore.core.Target,int,java.util.List,java.lang.Object[],java.lang.String,java.lang.Object[],java.lang.String,java.lang.Object[])
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.grpc.internal.DelayedClientTransport: io.grpc.internal.DelayedClientTransport$PendingStream createPendingStream(io.grpc.LoadBalancer$PickSubchannelArgs,io.grpc.ClientStreamTracer[])
com.google.firebase.auth.internal.GenericIdpActivity: void zze(java.lang.String,com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabx zzw(com.google.android.gms.internal.firebase-auth-api.zzabx,com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.baseflow.geolocator.MethodCallHandlerImpl: void setActivity(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzff: zzff()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: SchemaManager(android.content.Context,java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq zze()
com.google.android.gms.internal.firebase-auth-api.zzabh: int indexOf(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.channels.Send: void undeliveredElement()
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzace zza()
com.google.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.google.android.gms.common.internal.zzr: com.google.android.gms.common.stats.ConnectionTracker zzg(com.google.android.gms.common.internal.zzr)
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.protobuf.UnknownFieldSetLiteSchema: java.lang.Object newBuilder()
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzsm: void zzb(java.lang.Object)
com.google.android.gms.maps.zzab: java.lang.Object[] newArray(int)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
com.google.android.gms.maps.internal.zzca: zzca()
com.google.protobuf.MessageLiteToString: void printField(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.firebase.auth.internal.zzx: void zzi(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzaeo: java.lang.Object zzm(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaev[] values()
io.grpc.Metadata$TrustedAsciiKey: byte[] toBytes(java.lang.Object)
com.google.firebase.firestore.remote.WatchStream: void start()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
com.google.android.gms.internal.firebase-auth-api.zzup: zzup(com.google.firebase.auth.EmailAuthCredential)
com.google.android.gms.maps.model.Polyline: void setVisible(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTicker()
com.google.android.gms.internal.firebase-auth-api.zzev: com.google.android.gms.internal.firebase-auth-api.zzev zzb(byte[],byte[],com.google.android.gms.internal.firebase-auth-api.zzey,com.google.android.gms.internal.firebase-auth-api.zzet,com.google.android.gms.internal.firebase-auth-api.zzeu,byte[])
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: void mergeListsAt(java.lang.Object,java.lang.Object,long)
com.google.firebase.messaging.MessagingAnalytics: void logNotificationOpen(android.os.Bundle)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getMccMnc()
com.google.android.gms.common.api.internal.zabl: void onBackgroundStateChanged(boolean)
com.google.android.gms.auth.api.signin.internal.Storage: Storage(android.content.Context)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeCompositeFilter(java.util.List,org.json.JSONObject)
com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStreamReader: void readInt32List(java.util.List)
com.google.protobuf.UnknownFieldSchema: void mergeFrom(java.lang.Object,com.google.protobuf.Reader)
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void flush()
io.grpc.internal.KeepAliveManager: long clampKeepAliveTimeInNanos(long)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzd()
com.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setApplicationBuild(java.lang.String)
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
io.grpc.internal.ManagedChannelImpl: void access$5100(io.grpc.internal.ManagedChannelImpl)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
io.grpc.stub.AbstractAsyncStub: io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory,io.grpc.Channel)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
io.flutter.plugins.googlemaps.TileOverlaysController: void removeTileOverlay(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
io.flutter.plugins.firebase.auth.IdTokenChannelStreamHandler: IdTokenChannelStreamHandler(com.google.firebase.auth.FirebaseAuth)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytes(int,com.google.protobuf.ByteString)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete access$000()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.google.firebase.firestore.local.SQLiteSchema: void createV1RemoteDocumentCache()
com.google.android.gms.internal.firebase-auth-api.zzzq: com.google.android.gms.internal.firebase-auth-api.zzzq zzf(java.lang.String)
okio.Okio$1: void write(okio.Buffer,long)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void onTransactionCommitted()
com.google.protobuf.CodedOutputStream: void writeSInt64(int,long)
com.google.android.gms.internal.firebase-auth-api.zznv: zznv(com.google.android.gms.internal.firebase-auth-api.zznu)
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setSampledToLocalTracing(boolean)
com.google.gson.stream.JsonReader: void close()
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
okio.Util: void sneakyRethrow(java.lang.Throwable)
com.google.protobuf.DoubleArrayList: java.lang.Object set(int,java.lang.Object)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] values()
io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String toString()
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order[] values()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzg(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.webkit.WebViewFeature: boolean isFeatureSupported(java.lang.String)
io.grpc.LoadBalancer$PickResult: LoadBalancer$PickResult(io.grpc.LoadBalancer$Subchannel,io.grpc.ClientStreamTracer$Factory,io.grpc.Status,boolean)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean)
com.google.android.gms.internal.firebase-auth-api.zzcg: byte[] zza(byte[],byte[])
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
io.grpc.internal.StatsTraceContext: void outboundMessageSent(int,long,long)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ConnectivityState getState(boolean)
com.google.android.gms.maps.zzah: void zzb()
io.grpc.internal.ApplicationThreadDeframer$4: void run()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.google.protobuf.Utf8$DecodeUtil: void handleOneByte(byte,char[],int)
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: com.google.firebase.firestore.model.mutation.ServerTimestampOperation getInstance()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
com.google.firestore.v1.Write: void setCurrentDocument(com.google.firestore.v1.Precondition)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
com.google.android.gms.cloudmessaging.zza: zza()
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.EventManager$ListenOptions internalOptions(com.google.firebase.firestore.MetadataChanges)
com.google.android.gms.maps.internal.zzbs: zzbs(android.os.IBinder)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.protobuf.MapEntryLite: int computeSerializedSize(com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long getEventUptimeMs()
com.google.protobuf.MessageLiteToString: boolean isDefaultValue(java.lang.Object)
io.grpc.internal.ForwardingReadableBuffer: void readBytes(byte[],int,int)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry access$2400(io.grpc.internal.ManagedChannelImpl)
com.google.firestore.v1.Cursor: boolean getBefore()
com.google.firebase.firestore.core.ViewSnapshot: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.CompositeFilter$Operator: CompositeFilter$Operator(java.lang.String,int,java.lang.String)
okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzz()
com.google.android.gms.internal.firebase-auth-api.zzld: void zzi(com.google.android.gms.internal.firebase-auth-api.zzld,int)
com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)
com.google.firebase.firestore.core.Transaction: java.util.concurrent.Executor getDefaultExecutor()
com.google.android.gms.internal.firebase-auth-api.zzaei: zzaei(com.google.android.gms.internal.firebase-auth-api.zzaek,int)
io.grpc.internal.ChannelTracer$1: ChannelTracer$1(io.grpc.internal.ChannelTracer,int)
com.google.firebase.auth.internal.zzaw: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.googlemaps.GoogleMapController: void setMapToolbarEnabled(boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: WebViewHostApiImpl$InputAwareWebViewPlatformView(android.content.Context,android.view.View)
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
com.google.android.gms.common.api.internal.zzc: zzc(com.google.android.gms.common.api.internal.zzd,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest build()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.grpc.okhttp.internal.Platform$1: java.lang.reflect.Method run()
com.google.firebase.auth.internal.zzj: com.google.firebase.auth.internal.zzj zzb()
io.grpc.internal.KeepAliveManager$1: KeepAliveManager$1(io.grpc.internal.KeepAliveManager)
com.google.protobuf.ByteString$LiteralByteString: int size()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: long access$100(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
com.google.firebase.components.Component: java.util.Set getDependencies()
com.google.android.gms.internal.firebase-auth-api.zzvs: zzvs(com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.safetynet.zzk$zza: com.google.android.gms.common.api.Status getStatus()
com.google.firebase.firestore.core.ViewSnapshot: boolean hasPendingWrites()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
com.google.firebase.firestore.core.Bound: java.util.List getPosition()
com.google.firebase.auth.zzh: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.google.firebase.auth.internal.RecaptchaActivity: void zzg()
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
io.grpc.internal.GzipInflatingBuffer: boolean processHeaderName()
com.google.android.gms.cloudmessaging.zzr: boolean zzb()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
kotlinx.coroutines.CompletedContinuation: int hashCode()
com.tekartik.sqflite.operation.BatchOperation: boolean getNoResult()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void onReady()
com.google.android.gms.maps.internal.zzu: zzu()
io.grpc.internal.DelayedStream$11: void run()
com.google.protobuf.UnsafeUtil$MemoryAccessor: long objectFieldOffset(java.lang.reflect.Field)
io.grpc.internal.AtomicBackoff: java.util.logging.Logger access$300()
com.google.firebase.auth.OAuthProvider$CredentialBuilder: com.google.firebase.auth.OAuthProvider$CredentialBuilder setIdToken(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaad: com.google.android.gms.internal.firebase-auth-api.zzadb zzh(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzc(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzyq,java.lang.String,java.lang.String,java.lang.Boolean,com.google.firebase.auth.zze,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzwx)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: android.os.IBinder onBind(android.content.Intent)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder setOptions(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions)
com.google.firestore.v1.WriteResult: WriteResult()
com.google.firebase.auth.internal.zzq: zzq()
com.google.protobuf.UnsafeUtil: boolean supportsUnsafeByteBufferOperations()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.DocumentKey fromSegments(java.util.List)
io.grpc.Status$Code: byte[] access$300(io.grpc.Status$Code)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Polyline addPolyline(com.google.android.gms.maps.model.PolylineOptions)
io.grpc.LoadBalancer$PickResult: io.grpc.ClientStreamTracer$Factory getStreamTracerFactory()
com.google.gson.stream.JsonReader: void nextNull()
kotlinx.coroutines.JobNode: java.lang.String toString()
io.grpc.okhttp.OkHttpClientTransport: boolean startPendingStreams()
com.tekartik.sqflite.operation.BaseReadOperation: BaseReadOperation()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.baseflow.geolocator.location.LocationManagerClient: void onStatusChanged(java.lang.String,int,android.os.Bundle)
com.google.firebase.firestore.model.FieldIndex: com.google.firebase.firestore.model.FieldIndex$Segment getArraySegment()
com.google.android.gms.maps.model.MarkerOptions: float getAnchorV()
com.google.firestore.v1.Target$DocumentsTarget: int getDocumentsCount()
com.google.protobuf.DoubleArrayList: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzy(int)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.model.SnapshotVersion getSnapshotVersion()
io.grpc.internal.ManagedChannelImpl$4: ManagedChannelImpl$4(io.grpc.NameResolver,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaec: boolean zzb()
com.google.common.collect.UnmodifiableIterator: void remove()
com.google.firebase.auth.zzh: zzh()
com.google.android.gms.common.api.Api$AnyClientKey: Api$AnyClientKey()
com.google.android.gms.internal.firebase-auth-api.zziy: zziy(com.google.android.gms.internal.firebase-auth-api.zzix)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzt(int,long)
kotlin.collections.EmptyIterator: java.lang.Object previous()
com.squareup.okhttp.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
com.google.android.gms.internal.location.zzau: void onNotifyListenerFailed()
com.google.android.gms.cloudmessaging.zzp: void zzc(com.google.android.gms.cloudmessaging.zzq)
io.grpc.internal.PickFirstLoadBalancer: io.grpc.LoadBalancer$Helper access$200(io.grpc.internal.PickFirstLoadBalancer)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy: WebViewHostApiImpl$WebViewProxy()
com.google.firebase.auth.zzz: zzz()
com.google.android.gms.internal.firebase-auth-api.zzabk: zzabk(boolean)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerProvider access$200(io.grpc.internal.AutoConfiguredLoadBalancerFactory,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfp: byte[] zza(byte[],byte[])
com.google.firebase.firestore.core.Bound: Bound(java.util.List,boolean)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: AutoValue_EventStoreConfig(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)
androidx.core.graphics.drawable.IconCompat: IconCompat(int)
com.google.android.gms.internal.firebase-auth-api.zzak: java.lang.Object get(int)
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction valueOf(java.lang.String)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
io.grpc.internal.InternalSubchannel: void access$300(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityState)
com.google.android.gms.common.internal.zac: java.lang.String zaa(android.content.Context)
com.google.android.datatransport.cct.internal.BatchedLogRequest: com.google.firebase.encoders.DataEncoder createDataEncoder()
com.google.android.gms.common.api.internal.zabq: boolean zax(com.google.android.gms.common.api.internal.zabq,boolean)
com.google.android.gms.internal.safetynet.zzj: zzj(android.os.IBinder)
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: long getEndMs()
io.grpc.internal.ChannelLoggerImpl: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)
io.grpc.okhttp.Utils: byte[][] convertHeadersToArray(java.util.List)
com.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)
com.google.protobuf.Protobuf: com.google.protobuf.Schema schemaFor(java.lang.Class)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzww: zzww()
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)
com.google.android.gms.maps.model.LatLngBounds: void writeToParcel(android.os.Parcel,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void release()
com.google.android.gms.internal.firebase-auth-api.zzxz: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.grpc.okhttp.internal.ConnectionSpec$Builder: java.lang.String[] access$200(io.grpc.okhttp.internal.ConnectionSpec$Builder)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzi(java.lang.Object,int,long)
com.google.android.gms.common.api.internal.zabl: zabl(com.google.android.gms.common.api.internal.GoogleApiManager)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
com.google.android.gms.internal.firebase-auth-api.zzaep: int zzA(java.lang.Class)
io.grpc.internal.MessageDeframer: void processBody()
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory access$000()
com.google.firebase.auth.internal.zzar: zzar(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions$Builder setActivity(android.app.Activity)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: void enqueue(okio.Buffer,int,boolean)
com.google.android.gms.common.api.Status: void writeToParcel(android.os.Parcel,int)
com.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.protobuf.UnmodifiableLazyStringList$1: int previousIndex()
com.google.protobuf.FloatArrayList: boolean add(java.lang.Object)
com.google.protobuf.ArrayDecoders: int decodeBytes(byte[],int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzct: int zzf()
com.google.firebase.firestore.remote.TargetChange: com.google.protobuf.ByteString getResumeToken()
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
com.google.firebase.database.collection.ImmutableSortedMapIterator: ImmutableSortedMapIterator(com.google.firebase.database.collection.LLRBNode,java.lang.Object,java.util.Comparator,boolean)
com.google.firebase.firestore.core.OrderBy: int hashCode()
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: InternalSubchannel$1EndOfCurrentBackoff(io.grpc.internal.InternalSubchannel)
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzj()
com.google.android.datatransport.runtime.backends.BackendRequest: com.google.android.datatransport.runtime.backends.BackendRequest$Builder builder()
com.google.protobuf.CodedInputStreamReader: int readUInt32()
com.google.firestore.v1.DocumentDelete: java.util.List getRemovedTargetIdsList()
com.google.firebase.firestore.local.SQLitePersistence: java.lang.Object runTransaction(java.lang.String,com.google.firebase.firestore.util.Supplier)
com.google.android.gms.location.zzo: zzo(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
com.google.protobuf.CodedInputStreamReader: void readBytesList(java.util.List)
io.grpc.internal.InternalSubchannel$5: void run()
com.google.android.gms.internal.firebase-auth-api.zzbd: com.google.android.gms.internal.firebase-auth-api.zzax zza(java.lang.String)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.grpc.internal.RetriableStream: java.util.concurrent.ScheduledExecutorService access$1000(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.core.DocumentViewChangeSet: DocumentViewChangeSet()
com.google.firebase.auth.zzm: zzm(com.google.firebase.auth.FirebaseAuth)
com.google.android.gms.internal.firebase-auth-api.zzzr: zzzr()
io.grpc.util.RoundRobinLoadBalancer: java.util.List filterNonFailingSubchannels(java.util.Collection)
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
com.google.firebase.firestore.model.mutation.FieldMask: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String toString()
com.google.firebase.firestore.util.AsyncQueue: void verifyIsCurrentThread()
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
com.google.android.gms.common.internal.RootTelemetryConfiguration: void writeToParcel(android.os.Parcel,int)
io.grpc.internal.GrpcUtil$TimeoutMarshaller: java.lang.String toAsciiString(java.lang.Object)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode moveRedLeft()
io.grpc.okhttp.OkHttpClientTransport: boolean isUsingPlaintext()
com.google.android.gms.internal.stats.zzb: com.google.android.gms.internal.stats.zzb zza(boolean,com.google.android.gms.internal.stats.zzc)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
com.google.firebase.firestore.Query: com.google.firestore.v1.Value parseDocumentIdValue(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzI(int,java.util.List,boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object remove(java.lang.Object)
com.google.firestore.v1.Target$DocumentsTarget$Builder: Target$DocumentsTarget$Builder()
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManagerImpl)
com.google.android.gms.internal.firebase-auth-api.zzaeb: zzaeb(int,com.google.android.gms.internal.firebase-auth-api.zzaea)
com.google.android.gms.internal.firebase-auth-api.zzaau: java.lang.String zzr(java.nio.charset.Charset)
androidx.window.R$styleable: R$styleable()
io.flutter.plugins.googlemaps.CircleBuilder: void setRadius(double)
com.google.android.datatransport.cct.internal.LogResponse: com.google.android.datatransport.cct.internal.LogResponse fromJson(java.io.Reader)
com.google.protobuf.ByteString: void checkIndex(int,int)
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.ClientStreamTracer[] access$200(io.grpc.internal.DelayedClientTransport$PendingStream)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.util.Logger: void debug(java.lang.String,java.lang.String,java.lang.Object[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OutboundFlowController access$200(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzot: zzot()
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor defaultMarker()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getPageCount()
com.google.android.gms.internal.firebase-auth-api.zzuu: java.lang.String zza()
com.google.android.gms.common.api.internal.zabx: void zaa(android.content.Context)
com.google.android.gms.internal.location.zzas: void zzb(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzaj)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.google.android.gms.internal.firebase-auth-api.zzen: java.lang.Class zza()
com.google.firebase.firestore.FieldValue$NumericIncrementFieldValue: java.lang.String getMethodName()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: FlutterFirebaseFirestoreMessageCodec()
com.google.firebase.firestore.model.ObjectValue: com.google.firebase.firestore.model.mutation.FieldMask extractFieldMask(com.google.firestore.v1.MapValue)
com.google.firestore.v1.StructuredQuery$CollectionSelector: void access$400(com.google.firestore.v1.StructuredQuery$CollectionSelector,boolean)
com.google.android.gms.internal.firebase-auth-api.zzabf: com.google.android.gms.internal.firebase-auth-api.zzabf zzH(java.io.OutputStream,int)
io.grpc.internal.DelayedClientTransport: DelayedClientTransport(java.util.concurrent.Executor,io.grpc.SynchronizationContext)
io.grpc.okhttp.internal.framed.Http2: Http2()
androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebViewProviderFactory createGlueProviderFactory()
com.google.android.gms.common.zzk: zzk(byte[])
com.google.firebase.firestore.core.Transaction: void recordVersion(com.google.firebase.firestore.model.MutableDocument)
com.google.protobuf.RopeByteString$1: boolean hasNext()
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch getNextMutationBatchAfterBatchId(int)
com.google.firestore.v1.Cursor: void access$700(com.google.firestore.v1.Cursor,boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: boolean onStopJob(android.app.job.JobParameters)
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString concatenateBytes(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzly zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.model.BasePath: int length()
com.google.android.gms.maps.zzq: zzq(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.grpc.internal.RetriableStream$Sublistener$5: RetriableStream$Sublistener$5(io.grpc.internal.RetriableStream$Sublistener,io.grpc.internal.StreamListener$MessageProducer)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: ManagedChannelImpl$DelayedTransportListener(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzcb: zzcb()
com.google.android.gms.internal.firebase-auth-api.zzso: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzag: java.lang.String zzc(java.lang.String)
com.google.common.collect.ComparatorOrdering: ComparatorOrdering(java.util.Comparator)
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzlq zze()
com.google.firebase.installations.Utils: long currentTimeInMillis()
com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.GeneratedMessageLite$GeneratedExtension findLiteExtensionByNumber(com.google.protobuf.MessageLite,int)
com.tekartik.sqflite.operation.MethodCallOperation$Result: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
com.google.protobuf.RawMessageInfo: com.google.protobuf.ProtoSyntax getSyntax()
com.google.protobuf.MessageSchema: com.google.protobuf.MessageSchema newSchemaForMessageInfo(com.google.protobuf.StructuralMessageInfo,com.google.protobuf.NewInstanceSchema,com.google.protobuf.ListFieldSchema,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MapFieldSchema)
com.google.android.gms.internal.firebase-auth-api.zzwl: zzwl(com.google.android.gms.internal.firebase-auth-api.zzwq,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: int getNumber()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: float readFloat()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzj(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation()
com.google.android.gms.internal.firebase-auth-api.zzaaj: void removeRange(int,int)
com.google.rpc.Status$Builder: Status$Builder(com.google.rpc.Status$1)
io.grpc.internal.InternalSubchannel: void gotoNonErrorState(io.grpc.ConnectivityState)
com.google.firebase.firestore.DocumentChange: int getNewIndex()
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: android.content.Context getApplicationContext()
com.google.android.gms.internal.firebase-auth-api.zzrz: zzrz()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedMap performQueryUsingIndex(com.google.firebase.firestore.core.Query)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: AutoValue_SchedulerConfig_ConfigValue(long,long,java.util.Set)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: void add(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.gms.location.LocationRequest: boolean equals(java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)
com.google.protobuf.Utf8: int access$300(java.nio.ByteBuffer,int,int,int)
io.grpc.okhttp.internal.Platform: java.security.Provider getProvider()
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: AutoValue_PersistedInstallationEntry(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.ConnectionTelemetryConfiguration getTelemetryConfiguration()
io.grpc.StreamTracer: void inboundMessageRead(int,long,long)
com.google.android.gms.internal.firebase-auth-api.zzkf: zzkf()
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: int readableBytes()
com.google.android.gms.signin.internal.SignInClientImpl: boolean requiresSignIn()
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] values()
com.google.android.gms.common.wrappers.PackageManagerWrapper: java.lang.CharSequence getApplicationLabel(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
io.grpc.InternalConfigSelector$Result$Builder: io.grpc.InternalConfigSelector$Result$Builder setConfig(java.lang.Object)
com.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
com.google.android.gms.safetynet.SafeBrowsingData: SafeBrowsingData()
com.tekartik.sqflite.SqflitePlugin: void onInsertCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.Store$Token: java.lang.String encode(java.lang.String,java.lang.String,long)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.proto.ProtobufEncoder$Builder registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.Timestamp decodeTimestamp(org.json.JSONObject)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
io.grpc.okhttp.internal.framed.Http2$Writer: Http2$Writer(okio.BufferedSink,boolean)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String escapedAV()
kotlin.collections.EmptySet: boolean add(java.lang.Object)
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.grpc.internal.AbstractStream: AbstractStream()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
com.google.firebase.messaging.Metadata: java.lang.String getAppVersionName()
com.google.protobuf.LongArrayList: int size()
com.google.android.gms.tasks.zzl: void zzc()
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.InternalConfigSelector getDefaultConfigSelector()
com.google.android.gms.maps.zza: zza(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerClickListener)
com.google.android.gms.maps.model.Polygon: Polygon(com.google.android.gms.internal.maps.zzaa)
androidx.fragment.app.FragmentManagerImpl$3: FragmentManagerImpl$3(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment)
io.grpc.internal.ForwardingClientStream: void start(io.grpc.internal.ClientStreamListener)
com.google.firebase.auth.internal.zze: zze(java.lang.String,java.lang.String)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task setAutoInitEnabled(java.util.Map)
com.google.firebase.auth.EmailAuthCredential: void writeToParcel(android.os.Parcel,int)
kotlin.KotlinVersion: int compareTo(kotlin.KotlinVersion)
com.google.android.gms.maps.model.SquareCap: SquareCap()
com.google.android.gms.internal.firebase-auth-api.zzuu: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer access$300(io.grpc.internal.ManagedChannelImpl)
io.grpc.Attributes$Builder: Attributes$Builder(io.grpc.Attributes,io.grpc.Attributes$1)
com.google.android.gms.common.internal.zzr: java.util.HashMap zzh(com.google.android.gms.common.internal.zzr)
com.google.android.gms.internal.firebase-auth-api.zzzs: long zzb()
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField$Order getOrder()
com.google.android.gms.internal.firebase-auth-api.zzvv: com.google.android.gms.internal.firebase-auth-api.zzvv zzb(java.lang.String)
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: void handleOnlineStateChange(com.google.firebase.firestore.core.OnlineState)
com.google.firestore.v1.ArrayValue$Builder: java.util.List getValuesList()
com.google.common.base.Objects: int hashCode(java.lang.Object[])
com.google.firebase.messaging.FcmLifecycleCallbacks: FcmLifecycleCallbacks()
io.grpc.internal.PickSubchannelArgsImpl: int hashCode()
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair: ExtensionRegistryLite$ObjectIntPair(java.lang.Object,int)
com.google.android.gms.internal.firebase-auth-api.zzcw: com.google.android.gms.internal.firebase-auth-api.zzfz zzh(int,int)
io.grpc.Metadata$AsciiKey: byte[] toBytes(java.lang.Object)
com.google.android.gms.location.zzs: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.common.api.internal.zabu: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)
com.google.android.gms.common.api.internal.LifecycleCallback: void onDestroy()
com.google.firebase.auth.zzai: java.lang.Object[] newArray(int)
okio.RealBufferedSource: int readInt()
io.flutter.plugins.googlemaps.GoogleMapController: android.view.View getView()
androidx.collection.ArrayMap$1: void colRemoveAt(int)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeBytesAscending(com.google.protobuf.ByteString)
com.google.protobuf.UnknownFieldSetLiteSchema: void setBuilderToMessage(java.lang.Object,java.lang.Object)
com.google.firestore.v1.DocumentTransform: DocumentTransform()
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zzaau zze()
com.google.android.gms.internal.firebase-auth-api.zztl: void zzb(java.lang.Object)
com.google.firebase.auth.internal.zzam: void zzc()
okio.Buffer: byte[] readByteArray(long)
com.google.android.gms.internal.firebase-auth-api.zzrl: java.lang.Object[] newArray(int)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readFixed32()
io.grpc.internal.CompositeReadableBuffer$2: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.location.LocationCallback: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.CallTracer$Factory access$5800(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.common.internal.service.zao: zao(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
okio.ByteString: boolean startsWith(okio.ByteString)
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition getCurrentDocument()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApiCodec: GeneratedAndroidFirebaseCore$FirebaseAppHostApiCodec()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
kotlinx.coroutines.EventLoop: void shutdown()
androidx.fragment.app.DialogFragment$1: DialogFragment$1(androidx.fragment.app.DialogFragment)
io.grpc.okhttp.OkHttpClientStream$TransportState: void sendBuffer(okio.Buffer,boolean,boolean)
com.google.firebase.firestore.local.SQLiteMutationQueue: int getHighestUnacknowledgedBatchId()
io.grpc.internal.ClientCallImpl: void applyMethodConfig()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getPermissions()
com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getKey()
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.firebase.auth.zzl: zzl(com.google.firebase.auth.FirebaseAuth,com.google.firebase.internal.InternalTokenResult)
androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)
io.grpc.InternalServiceProviders: boolean isAndroid(java.lang.ClassLoader)
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
io.grpc.internal.GzipInflatingBuffer: int getAndResetDeflatedBytesConsumed()
com.google.firestore.v1.ArrayValue$Builder: com.google.firestore.v1.Value getValues(int)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.Document: java.lang.String getName()
com.google.android.gms.maps.model.PolygonOptions: int getStrokeJointType()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.google.android.gms.internal.firebase-auth-api.zzeo: com.google.android.gms.internal.firebase-auth-api.zzmp zza(int,int,int,com.google.android.gms.internal.firebase-auth-api.zzmp,int,byte[])
com.google.android.gms.location.LocationResult: boolean equals(java.lang.Object)
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ImmutableSortedMap remove(java.lang.Object)
com.google.type.LatLng$Builder: com.google.type.LatLng$Builder setLatitude(double)
com.google.firestore.v1.Write: boolean hasCurrentDocument()
com.google.android.gms.internal.firebase-auth-api.zzwg: com.google.android.gms.internal.firebase-auth-api.zzwg zza()
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
com.google.firebase.auth.GoogleAuthProvider: com.google.firebase.auth.AuthCredential getCredential(java.lang.String,java.lang.String)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
com.baseflow.geolocator.location.GeolocationManager: void stopPositionUpdates(com.baseflow.geolocator.location.LocationClient)
com.google.android.gms.common.data.zab: zab(java.lang.String[],java.lang.String)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.Store$Token getTokenWithoutTriggeringSync()
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
com.google.firebase.firestore.remote.RemoteStore: void access$200(com.google.firebase.firestore.remote.RemoteStore,io.grpc.Status)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
com.google.protobuf.GeneratedMessageInfoFactory: GeneratedMessageInfoFactory()
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
com.google.firebase.firestore.util.ExponentialBackoff: ExponentialBackoff(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$TimerId)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
com.google.protobuf.CodedOutputStream: void writeSInt32(int,int)
com.google.android.gms.common.util.ProcessUtils: java.lang.String getMyProcessName()
io.grpc.internal.AbstractStream: boolean isReady()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ChannelTracer access$400(io.grpc.internal.ManagedChannelImpl)
io.grpc.okhttp.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.google.firebase.firestore.core.SyncEngine: void registerPendingWritesTask(com.google.android.gms.tasks.TaskCompletionSource)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback access$000(com.baseflow.geolocator.location.FusedLocationClient)
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
com.google.protobuf.CodedInputStream$StreamDecoder: float readFloat()
com.google.firebase.messaging.FirebaseMessaging: void send(com.google.firebase.messaging.RemoteMessage)
com.google.android.gms.internal.firebase-auth-api.zzaby: boolean addAll(java.util.Collection)
com.google.common.collect.Hashing: int smear(int)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory create(javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzrf: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzaep: java.lang.Object zzf(java.lang.Object,long)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.model.Document getDocument(com.google.firebase.firestore.model.DocumentKey)
io.grpc.internal.ManagedChannelImpl$RealChannel$3: void sendMessage(java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderTemporaryDirectory()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
com.google.android.gms.maps.internal.zzaq: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.common.api.ApiException: ApiException(com.google.android.gms.common.api.Status)
com.google.android.gms.safetynet.SafetyNetClient: SafetyNetClient(android.content.Context)
com.google.android.gms.maps.internal.zzbz: android.os.Parcelable zza(android.os.Bundle,java.lang.String)
com.google.firestore.v1.CommitRequest: void setDatabase(java.lang.String)
io.grpc.Metadata: byte[] access$1300(java.io.InputStream)
com.google.firebase.auth.internal.zzbd: com.google.firebase.auth.internal.zzbd zzc()
com.google.firebase.auth.FirebaseAuth: java.lang.String getTenantId()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromActivityForConfigChanges()
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
com.google.common.collect.ImmutableList$SubList: java.util.ListIterator listIterator()
com.google.android.gms.common.api.internal.LifecycleActivity: android.app.Activity zza()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
io.flutter.plugins.googlemaps.PolylineController: void setPattern(java.util.List)
com.google.common.base.Platform: com.google.common.base.PatternCompiler loadPatternCompiler()
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzlc zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzup: void zzb()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
kotlin.collections.EmptyList: java.lang.Object get(int)
com.google.android.gms.common.api.zza: java.lang.Object[] newArray(int)
com.google.protobuf.UnmodifiableLazyStringList: java.lang.String get(int)
com.google.firebase.firestore.proto.NoDocument: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.TileProviderController$Worker: TileProviderController$Worker(io.flutter.plugins.googlemaps.TileProviderController,int,int,int)
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
com.google.firebase.firestore.core.ActivityScope$CallbackList: void run()
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange$TargetChangeType getTargetChangeType()
com.google.android.gms.maps.model.PatternItem: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromActivity()
com.google.firebase.firestore.model.mutation.DeleteMutation: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
com.google.protobuf.NioByteString: java.lang.String toStringInternal(java.nio.charset.Charset)
io.grpc.okhttp.OkHttpClientStream$TransportState: OkHttpClientStream$TransportState(io.grpc.okhttp.OkHttpClientStream,int,io.grpc.internal.StatsTraceContext,java.lang.Object,io.grpc.okhttp.ExceptionHandlingFrameWriter,io.grpc.okhttp.OutboundFlowController,io.grpc.okhttp.OkHttpClientTransport,int,java.lang.String)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
com.google.firebase.firestore.UserDataReader: void parseSentinelFieldValue(com.google.firebase.firestore.FieldValue,com.google.firebase.firestore.core.UserData$ParseContext)
okio.Buffer: short readShort()
com.google.firebase.components.EventBus: void enablePublishingAndFlushPending()
com.google.firebase.auth.PhoneMultiFactorInfo: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzmx zzc()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: double getDouble(java.lang.Object,long)
com.google.firebase.firestore.DocumentSnapshot: boolean exists()
com.google.firebase.auth.ActionCodeSettings: ActionCodeSettings(com.google.firebase.auth.ActionCodeSettings$Builder)
io.grpc.okhttp.OkHttpFrameLogger: void logPingAck(io.grpc.okhttp.OkHttpFrameLogger$Direction,long)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
io.grpc.util.RoundRobinLoadBalancer: RoundRobinLoadBalancer(io.grpc.LoadBalancer$Helper)
com.google.firestore.v1.StructuredQuery$Order: void access$5100(com.google.firestore.v1.StructuredQuery$Order,com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zznl zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageSetExtension(int,com.google.protobuf.MessageLite)
com.google.android.gms.common.api.internal.ListenerHolder: void clear()
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
com.google.android.gms.internal.firebase-auth-api.zzsc: java.lang.String zzc()
com.google.firebase.auth.UserProfileChangeRequest: boolean zzb()
com.google.firebase.auth.internal.zzau: zzau(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
com.google.common.base.Preconditions: int checkElementIndex(int,int)
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacr: boolean contains(java.lang.Object)
io.grpc.ManagedChannelRegistry: ManagedChannelRegistry()
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zze(byte[],byte[],java.lang.String,byte[])
com.google.protobuf.UnknownFieldSetLiteSchema: void addLengthDelimited(com.google.protobuf.UnknownFieldSetLite,int,com.google.protobuf.ByteString)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zam(android.content.Context)
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzvu: com.google.firebase.FirebaseException zza(com.google.android.gms.common.api.Status)
io.flutter.plugins.googlemaps.Convert: java.util.Map tileOverlayArgumentsToJson(java.lang.String,int,int,int)
com.google.firebase.firestore.SnapshotMetadata: int hashCode()
io.grpc.okhttp.OkHttpClientStream: io.grpc.okhttp.OkHttpClientStream$TransportState access$200(io.grpc.okhttp.OkHttpClientStream)
com.google.firebase.auth.internal.zzf: zzf()
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.DocumentReference forPath(com.google.firebase.firestore.model.ResourcePath,com.google.firebase.firestore.FirebaseFirestore)
io.grpc.internal.InternalSubchannel: void access$400(io.grpc.internal.InternalSubchannel)
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal,com.google.android.datatransport.TransportScheduleCallback)
com.google.protobuf.UnsafeUtil: boolean hasUnsafeByteBufferOperations()
com.google.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser: com.google.protobuf.GeneratedMessageLite parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)
io.grpc.util.RoundRobinLoadBalancer: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker)
com.google.android.gms.internal.firebase-auth-api.zzns: zzns(com.google.android.gms.internal.firebase-auth-api.zznr)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.android.gms.tasks.DuplicateTaskCompletionException: DuplicateTaskCompletionException(java.lang.String,java.lang.Throwable)
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.Schema newSchema(java.lang.Class,com.google.protobuf.MessageInfo)
com.google.android.gms.internal.firebase-auth-api.zzzu: zzzu(java.lang.String,java.lang.String,long,boolean)
io.grpc.internal.SharedResourceHolder$2: void run()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApplicationId(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEncodedPayload(com.google.android.datatransport.runtime.EncodedPayload)
com.google.android.gms.internal.firebase-auth-api.zziq: void zzi(com.google.android.gms.internal.firebase-auth-api.zziq,com.google.android.gms.internal.firebase-auth-api.zzln)
com.google.android.datatransport.runtime.TransportFactoryImpl: TransportFactoryImpl(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
com.google.firebase.firestore.bundle.BundleLoader: BundleLoader(com.google.firebase.firestore.bundle.BundleCallback,com.google.firebase.firestore.bundle.BundleMetadata)
io.grpc.InternalDecompressorRegistry: byte[] getRawAdvertisedMessageEncodings(io.grpc.DecompressorRegistry)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.android.gms.internal.firebase-auth-api.zzadg: com.google.android.gms.internal.firebase-auth-api.zzadg zzc(com.google.android.gms.internal.firebase-auth-api.zzaef,com.google.android.gms.internal.firebase-auth-api.zzabl,com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.MutableDocument decodeDocument(com.google.firestore.v1.Document,boolean)
com.google.firebase.auth.FirebaseAuthInvalidUserException: FirebaseAuthInvalidUserException(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInWithEmailAndPassword(java.util.Map)
com.google.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
com.google.android.gms.cloudmessaging.zzn: zzn(android.os.IBinder)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: android.os.IBinder onBind(android.content.Intent)
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.mutation.Mutation decodeMutation(com.google.firestore.v1.Write)
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getBatchGetDocumentsMethod()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
com.google.android.gms.common.api.internal.zal: void zac(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult,java.lang.String)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.View getRootView()
com.google.android.gms.internal.firebase-auth-api.zzabs: boolean zzc(java.lang.Class)
com.google.android.gms.common.internal.BaseGmsClient: boolean zzn(com.google.android.gms.common.internal.BaseGmsClient,int,int,android.os.IInterface)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query startAt(com.google.firebase.firestore.core.Bound)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.core.util.LogWriter: void write(char[],int,int)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getMin()
kotlinx.coroutines.Empty: boolean isActive()
com.google.android.gms.internal.firebase-auth-api.zzzq: com.google.android.gms.internal.firebase-auth-api.zzzq zze(boolean)
io.grpc.MethodDescriptor: java.lang.String extractFullServiceName(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.google.protobuf.FieldSet: int getWireFormatForFieldType(com.google.protobuf.WireFormat$FieldType,boolean)
com.google.firebase.firestore.model.mutation.Precondition: com.google.firebase.firestore.model.mutation.Precondition exists(boolean)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: java.lang.Object parse(java.io.InputStream)
io.grpc.internal.DelayedClientCall: void callCancelled()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firestore.v1.ListenRequest: void setAddTarget(com.google.firestore.v1.Target)
com.google.firestore.v1.Precondition$ConditionTypeCase: Precondition$ConditionTypeCase(java.lang.String,int,int)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getApplicationBuild()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void skipUnknownField(android.os.Parcel,int)
com.google.android.gms.common.api.internal.zabu: zabu(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.Api$Client,com.google.android.gms.common.api.internal.ApiKey)
com.google.protobuf.Utf8$DecodeUtil: void handleTwoBytes(byte,byte,char[],int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)
com.google.android.gms.maps.model.PolygonOptions: float getStrokeWidth()
kotlin.collections.EmptyList: int hashCode()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setAppId(java.lang.String)
com.google.android.gms.tasks.zzf: void onFailure(java.lang.Exception)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNext(kotlin.coroutines.Continuation)
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: void removeChangeListener()
com.google.android.gms.internal.firebase-auth-api.zzgv: zzgv(java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzpo,com.google.android.gms.internal.firebase-auth-api.zzgu)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.gms.common.internal.zzy: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.messaging.threads.PoolableExecutors$DefaultExecutorFactory: java.util.concurrent.ExecutorService newThreadPool(int,java.util.concurrent.ThreadFactory,com.google.firebase.messaging.threads.ThreadPriority)
com.google.protobuf.SchemaUtil: int computeSizeBoolListNoTag(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzu(com.google.firebase.FirebaseApp,java.lang.String,com.google.firebase.auth.ActionCodeSettings,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzar: com.google.android.gms.internal.firebase-auth-api.zzbh zzb(com.google.android.gms.internal.firebase-auth-api.zzfr)
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
com.google.android.gms.common.api.internal.zzd: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.google.android.gms.internal.firebase-auth-api.zzzj: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch decodeInlineMutationBatch(int,byte[])
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzzy: zzzy()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String toString()
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: DaggerTransportRuntimeComponent$Builder()
com.google.android.gms.cloudmessaging.IMessengerCompat$Proxy: IMessengerCompat$Proxy(android.os.IBinder)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSslSocketFactory()
com.google.firebase.auth.zzd: zzd()
io.grpc.okhttp.OkHttpFrameLogger: void logPushPromise(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,int,java.util.List)
com.google.android.gms.internal.location.zzaz: zzaz(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)
com.google.protobuf.WireFormat$JavaType: WireFormat$JavaType(java.lang.String,int,java.lang.Object)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzko zzb()
com.google.protobuf.ByteString: int peekCachedHashCode()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void removeMutationReference(com.google.firebase.firestore.model.DocumentKey)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.maps.internal.zzg: void setPadding(int,int,int,int)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
androidx.window.core.Version: boolean equals(java.lang.Object)
com.google.common.io.BaseEncoding$Alphabet: BaseEncoding$Alphabet(java.lang.String,char[])
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzcg: byte[] zzb(byte[],byte[])
com.google.protobuf.DoubleArrayList: boolean addAll(java.util.Collection)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: byte getByte(long)
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzqy: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.CodedInputStreamReader: void readFloatList(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzoz: java.lang.Object zza(java.lang.String,java.security.Provider)
io.grpc.internal.ApplicationThreadDeframerListener: void bytesRead(int)
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: void run()
com.google.firebase.firestore.remote.WatchChange$DocumentChange: java.util.List getUpdatedTargetIds()
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter getDefaultInstance()
com.google.android.gms.maps.zzag: void onDestroy()
androidx.webkit.internal.WebkitToCompatConverter: WebkitToCompatConverter(org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface)
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.protobuf.SmallSortedMap: boolean equals(java.lang.Object)
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: java.lang.Object parseAsciiString(byte[])
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
com.google.firebase.firestore.local.TargetData: long getSequenceNumber()
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzE(com.google.android.gms.internal.firebase-auth-api.zzry,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.protobuf.ProtobufArrayList: void add(int,java.lang.Object)
com.google.firebase.firestore.core.CompositeFilter: boolean isFlat()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
com.google.firestore.v1.Cursor: void addAllValues(java.lang.Iterable)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void setDownloadListener(android.webkit.DownloadListener)
com.google.android.gms.internal.firebase-auth-api.zzabh: boolean addAll(java.util.Collection)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: int getNumber()
kotlin.jvm.internal.PackageReference: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzjf: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStream$StreamDecoder: long readUInt64()
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Object invoke(java.lang.Object)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: ClientInfo$ClientType(java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zzacy: com.google.android.gms.internal.firebase-auth-api.zzacx zza()
com.google.protobuf.SchemaUtil: void writeMessageList(int,java.util.List,com.google.protobuf.Writer,com.google.protobuf.Schema)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.internal.ClientSettings$Builder createClientSettingsBuilder()
io.flutter.plugins.googlemaps.MarkerBuilder: void setVisible(boolean)
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzmd zzc(int)
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: com.google.firebase.firestore.model.FieldIndex$Segment$Kind getKind()
com.google.protobuf.MapFieldLite: int hashCode()
com.google.firebase.firestore.core.Transaction: java.util.concurrent.Executor createDefaultExecutor()
io.grpc.internal.MessageFramer: void verifyNotClosed()
com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.Context getRemoteContext(android.content.Context)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.common.util.zzb: boolean zza()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogSourceName(java.lang.String)
com.google.common.collect.ImmutableMap: boolean isEmpty()
com.google.protobuf.IntArrayList: java.lang.Object get(int)
io.grpc.okhttp.internal.framed.Http2$Reader: void readPushPromise(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.google.android.gms.internal.firebase-auth-api.zza: boolean zza()
com.google.firebase.auth.FirebaseAuth: java.lang.String getLanguageCode()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String get()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite)
com.google.firebase.firestore.core.ArrayContainsFilter: ArrayContainsFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.MessageLite getDefaultInstance()
io.flutter.plugins.firebase.messaging.JobIntentService$JobWorkEnqueuer: JobIntentService$JobWorkEnqueuer(android.content.Context,android.content.ComponentName,int)
com.google.android.gms.internal.firebase-auth-api.zznt: com.google.android.gms.internal.firebase-auth-api.zznt zza()
com.google.android.gms.internal.firebase-auth-api.zzih: zzih()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.DocumentReference document(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxf: void onCodeAutoRetrievalTimeOut(java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInWithCustomToken(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zzf()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
com.google.firebase.firestore.core.KeyFieldInFilter: java.util.List extractDocumentKeysFromArrayValue(com.google.firebase.firestore.core.FieldFilter$Operator,com.google.firestore.v1.Value)
kotlin.ranges.IntProgression: java.util.Iterator iterator()
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Bound getStartAt()
io.grpc.internal.KeepAliveManager$1: void run()
com.google.android.gms.internal.firebase-auth-api.zzuh: java.lang.String zza()
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceResult(boolean)
io.grpc.CallCredentials$RequestInfo: CallCredentials$RequestInfo()
com.google.android.gms.common.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)
com.google.android.gms.maps.MapView: void onResume()
com.google.android.gms.internal.firebase-auth-api.zzha: int zza()
com.google.firebase.messaging.reporting.MessagingClientEvent: MessagingClientEvent(long,java.lang.String,java.lang.String,com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType,com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform,java.lang.String,java.lang.String,int,int,java.lang.String,long,com.google.firebase.messaging.reporting.MessagingClientEvent$Event,java.lang.String,long,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzH(java.util.List)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.BitmapDescriptor getBitmapFromBytes(java.util.List)
com.google.android.gms.internal.safetynet.zzs: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zza)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parsePartialFrom(com.google.protobuf.GeneratedMessageLite,com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)
com.google.firebase.messaging.NotificationParams: int getLightColor(java.lang.String)
com.google.firestore.v1.TransactionOptions$ReadOnly: TransactionOptions$ReadOnly()
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.TransportTracer access$800(io.grpc.okhttp.OkHttpClientStream)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.google.firebase.messaging.MessagingAnalytics: boolean shouldUploadScionMetrics(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.internal.firebase-auth-api.zzmv: zzmv()
io.grpc.okhttp.OkHttpWritableBufferAllocator: OkHttpWritableBufferAllocator()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
com.google.android.gms.internal.firebase-auth-api.zzsg: zzsg(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzoi: byte[] zze(byte[],int,byte[],int,int)
com.google.firestore.v1.Value: com.google.firestore.v1.Value getDefaultInstance()
com.google.common.io.ByteStreams: byte[] createBuffer()
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.firestore.v1.DocumentRemove$Builder: DocumentRemove$Builder(com.google.firestore.v1.DocumentRemove$1)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: FlutterFirebaseAuthPlugin()
com.google.android.gms.internal.firebase-auth-api.zzvv: java.lang.String zzc()
io.grpc.internal.GrpcUtil: java.lang.String getGrpcUserAgent(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: void serviceProcessingStarted()
io.grpc.internal.CompositeReadableBuffer: void enqueueBuffer(io.grpc.internal.ReadableBuffer)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.grpc.okhttp.internal.ConnectionSpec$Builder: boolean access$000(io.grpc.okhttp.internal.ConnectionSpec$Builder)
com.google.android.gms.internal.firebase-auth-api.zzmv: com.google.android.gms.internal.firebase-auth-api.zzmv zza(com.google.android.gms.internal.firebase-auth-api.zzmk)
com.google.protobuf.BooleanArrayList: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzri: java.lang.String zza()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation)
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.core.EventManager$ListenOptions internalOptions(com.google.firebase.firestore.MetadataChanges)
androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.firebase.firestore.proto.WriteBatch$Builder: com.google.firebase.firestore.proto.WriteBatch$Builder addBaseWrites(com.google.firestore.v1.Write)
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event build()
io.grpc.internal.ManagedChannelImpl: void access$3500(io.grpc.internal.ManagedChannelImpl)
okio.Buffer: okio.ByteString snapshot(int)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzxr: java.lang.String zzh(java.lang.String,int,boolean)
io.grpc.internal.ClientCallImpl: ClientCallImpl(io.grpc.MethodDescriptor,java.util.concurrent.Executor,io.grpc.CallOptions,io.grpc.internal.ClientCallImpl$ClientStreamProvider,java.util.concurrent.ScheduledExecutorService,io.grpc.internal.CallTracer,io.grpc.InternalConfigSelector)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
com.google.firebase.auth.internal.zzax: com.google.firebase.auth.internal.zzax zza()
com.google.android.gms.maps.internal.zzbs: com.google.android.gms.maps.model.VisibleRegion getVisibleRegion()
com.google.firebase.firestore.model.mutation.Mutation: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)
com.google.firebase.firestore.local.SQLiteMutationQueue: void start()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.google.android.gms.cloudmessaging.zzs: android.content.Context zza(com.google.android.gms.cloudmessaging.zzs)
androidx.collection.ArraySet: int size()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: IndexBackfiller$Scheduler(com.google.firebase.firestore.local.IndexBackfiller,com.google.firebase.firestore.util.AsyncQueue)
androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()
io.grpc.NameResolver$Args: NameResolver$Args(java.lang.Integer,io.grpc.ProxyDetector,io.grpc.SynchronizationContext,io.grpc.NameResolver$ServiceConfigParser,java.util.concurrent.ScheduledExecutorService,io.grpc.ChannelLogger,java.util.concurrent.Executor,io.grpc.NameResolver$1)
io.grpc.internal.ProxyDetectorImpl$2: java.net.ProxySelector get()
com.google.protobuf.Utf8: int incompleteStateFor(int,int)
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzla zzf(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.internal.firebase-auth-api.zzam: int size()
com.google.protobuf.CodedInputStream$ArrayDecoder: boolean skipField(int)
com.google.android.gms.cloudmessaging.IMessengerCompat$Proxy: android.os.IBinder asBinder()
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.Api$Client zae(com.google.android.gms.common.api.internal.zabq)
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt64NoTag(long)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.google.firestore.bundle.BundledQuery$Builder: BundledQuery$Builder(com.google.firestore.bundle.BundledQuery$1)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.firebase.firestore.core.FirestoreClient: void addSnapshotsInSyncListener(com.google.firebase.firestore.EventListener)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signOut(java.util.Map)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
com.google.firebase.installations.remote.RequestLimiter: boolean isRequestAllowed()
com.google.firebase.messaging.SharedPreferencesQueue: SharedPreferencesQueue(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void transactionStoreResult(java.util.Map)
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: byte[] toAsciiString(java.lang.Object)
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter getDefaultInstance()
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.internal.safetynet.zzx: java.lang.String zzb(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabp: int hashCode()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: void onTokenChanged(com.google.firebase.appcheck.AppCheckTokenResult)
com.google.protobuf.DoubleArrayList: void add(int,java.lang.Object)
com.google.firestore.v1.Target$DocumentsTarget: void addDocuments(java.lang.String)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzab: int zzc(int)
com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EventInternal$Builder builder()
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
com.google.common.collect.RegularImmutableSet: RegularImmutableSet(java.lang.Object[],int,java.lang.Object[],int,int)
io.grpc.internal.DnsNameResolver: io.grpc.NameResolver$ConfigOrError resolveServiceConfig()
com.google.firebase.auth.internal.zzx: com.google.android.gms.internal.firebase-auth-api.zzyq zzd()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzt(com.google.android.gms.internal.firebase-auth-api.zzrc,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.view.AccessibilityBridge: void release()
com.google.android.gms.maps.model.zzg: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzku zzd()
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
io.flutter.plugins.googlemaps.GoogleMapController: void setBuildingsEnabled(boolean)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.plugins.googlemaps.PolylineBuilder: void setZIndex(float)
com.google.android.gms.common.ConnectionResult: int getErrorCode()
com.google.android.gms.internal.firebase-auth-api.zzrm: com.google.firebase.auth.PhoneAuthCredential zza()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.List invokeAll(java.util.Collection)
io.grpc.internal.TransportFrameUtil: byte[][] serializeHeadersWithCommasInBin(byte[][],int)
com.google.android.gms.internal.firebase-auth-api.zzyk: java.lang.Object createFromParcel(android.os.Parcel)
com.google.common.collect.ImmutableCollection: boolean retainAll(java.util.Collection)
com.google.protobuf.CodedInputStreamReader: java.lang.String readString()
com.google.android.gms.internal.location.zzk: java.lang.String getServiceDescriptor()
com.google.protobuf.SchemaUtil: void writeSInt32List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.firebase.firestore.remote.RemoteStore: void restartNetwork()
com.google.firebase.firestore.model.Values: boolean numberEquals(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.tekartik.sqflite.SqflitePlugin$3: SqflitePlugin$3(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.SqflitePlugin$BgResult,com.tekartik.sqflite.Database)
com.google.android.gms.internal.firebase-auth-api.zzaaj: boolean add(java.lang.Object)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeLazy(byte[],int,int)
com.google.android.gms.maps.internal.zzg: void setOnMapClickListener(com.google.android.gms.maps.internal.zzal)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable)
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.proto.ProtobufEncoder$Builder configureWith(com.google.firebase.encoders.config.Configurator)
com.google.android.gms.maps.zzag: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzad addPolyline(com.google.android.gms.maps.model.PolylineOptions)
com.google.firestore.v1.StructuredQuery$Projection$Builder: StructuredQuery$Projection$Builder(com.google.firestore.v1.StructuredQuery$1)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.LocalStore getLocalStore()
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: IndexByteEncoder$AscendingIndexByteEncoder(com.google.firebase.firestore.index.IndexByteEncoder)
com.google.firebase.firestore.local.SQLiteTargetCache: int removeQueries(long,android.util.SparseArray)
com.google.firebase.firestore.core.FirestoreClient: void removeSnapshotsInSyncListener(com.google.firebase.firestore.EventListener)
com.google.protobuf.RopeByteString$PieceIterator: RopeByteString$PieceIterator(com.google.protobuf.ByteString)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setInterval(long)
com.google.android.gms.common.zzh: zzh(byte[])
com.google.android.gms.common.api.internal.zam: com.google.android.gms.common.ConnectionResult zab()
com.google.android.gms.internal.firebase-auth-api.zzaeo: void zzn(java.lang.Object,long,int)
com.google.firebase.firestore.core.QueryListener: boolean shouldRaiseEvent(com.google.firebase.firestore.core.ViewSnapshot)
com.google.common.collect.ImmutableList: boolean contains(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
com.google.firebase.internal.DataCollectionConfigStorage: boolean readManifestDataCollectionEnabled()
io.grpc.internal.AbstractStream: void endOfMessages()
com.google.android.gms.internal.firebase-auth-api.zzjf: zzjf()
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.Transaction set(com.google.firebase.firestore.DocumentReference,java.lang.Object,com.google.firebase.firestore.SetOptions)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.maps.model.zzs: java.lang.Object[] newArray(int)
io.grpc.Metadata$2: java.lang.String toAsciiString(java.lang.String)
com.google.protobuf.RopeByteString$PieceIterator: RopeByteString$PieceIterator(com.google.protobuf.ByteString,com.google.protobuf.RopeByteString$1)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
com.google.android.gms.internal.firebase-auth-api.zzei: java.lang.String zzc()
com.google.android.gms.internal.firebase-auth-api.zzwo: zzwo(com.google.android.gms.internal.firebase-auth-api.zzwq,com.google.android.gms.common.api.Status)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.android.gms.common.api.internal.zzd: com.google.android.gms.common.api.internal.zzd zzc(androidx.fragment.app.FragmentActivity)
com.google.android.gms.internal.firebase-auth-api.zzsx: zzsx(com.google.android.gms.internal.firebase-auth-api.zzsy,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.firebase.messaging.WakeLockHolder: void checkAndInitWakeLock(android.content.Context)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageLabel(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaau zzp(java.lang.String)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.android.gms.common.api.internal.zabs: java.lang.String toString()
io.grpc.okhttp.OkHttpClientTransport: java.net.Socket createHttpProxySocket(java.net.InetSocketAddress,java.net.InetSocketAddress,java.lang.String,java.lang.String)
com.google.android.gms.cloudmessaging.zzj: zzj(com.google.android.gms.cloudmessaging.zzm,android.os.IBinder)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setProduct(java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.ExceptionHandlingFrameWriter access$2200(io.grpc.okhttp.OkHttpClientTransport)
com.google.firebase.firestore.core.DocumentViewChangeSet: void addChange(com.google.firebase.firestore.core.DocumentViewChange)
com.google.firebase.firestore.bundle.BundledQuery: boolean equals(java.lang.Object)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String,java.lang.String)
com.google.firestore.v1.MapValue: com.google.firestore.v1.Value getFieldsOrThrow(java.lang.String)
com.google.firebase.messaging.RemoteMessage: void populateSendMessageIntent(android.content.Intent)
io.grpc.Metadata$Key: boolean serializesToStreams()
com.google.android.gms.common.logging.Logger: void i(java.lang.String,java.lang.Object[])
com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)
com.google.android.gms.common.internal.zzc: zzc(com.google.android.gms.common.internal.BaseGmsClient,java.lang.Object)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.MessageInfoFactory getDefaultMessageInfoFactory()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
com.google.firebase.auth.internal.zzax: void zzd(com.google.firebase.auth.internal.zzax,android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseAuth,android.content.Context)
io.grpc.okhttp.AsyncSink$1: AsyncSink$1(io.grpc.okhttp.AsyncSink)
io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.firebase.firestore.model.FieldPath: boolean isKeyField()
com.google.android.gms.internal.maps.zzy: void zzu(int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzm(com.google.android.gms.internal.firebase-auth-api.zzqo,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger: io.grpc.internal.ConnectionClientTransport access$1000(io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger)
com.google.protobuf.BooleanArrayList: boolean add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzsa: java.lang.String zzb()
com.google.firebase.firestore.proto.Target: Target()
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task disableNetwork()
io.grpc.internal.ManagedChannelImpl$ExecutorHolder: java.util.concurrent.Executor getExecutor()
com.google.protobuf.SchemaUtil: void writeGroupList(int,java.util.List,com.google.protobuf.Writer,com.google.protobuf.Schema)
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
io.grpc.MethodDescriptor: java.lang.String getFullMethodName()
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: int getPriority(io.grpc.ManagedChannelProvider)
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse$Status getStatus()
com.google.firestore.v1.DocumentTransform: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadf: double zzo(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjn zzb(int)
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: com.google.firebase.firestore.auth.User getUser()
com.google.android.gms.internal.firebase-auth-api.zzpx: java.lang.Object[] newArray(int)
io.grpc.okhttp.internal.framed.Hpack$Writer: void clearDynamicTable()
io.grpc.okhttp.internal.framed.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
okio.SegmentedByteString: int segment(int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.grpc.internal.InternalSubchannel: io.grpc.internal.InUseStateAggregator access$1900(io.grpc.internal.InternalSubchannel)
com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder createListenerHolder(java.lang.Object,android.os.Looper,java.lang.String)
com.google.android.gms.cloudmessaging.zzaa: void handleMessage(android.os.Message)
com.google.android.gms.common.internal.zzo: boolean zzi()
com.google.android.gms.common.api.internal.BackgroundDetector: void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory access$000()
com.google.firestore.v1.StructuredQuery$Filter: void access$900(com.google.firestore.v1.StructuredQuery$Filter,com.google.firestore.v1.StructuredQuery$CompositeFilter)
io.grpc.okhttp.AsyncSink$2: void doRun()
io.grpc.internal.AbstractReadableBuffer: boolean markSupported()
com.google.android.gms.internal.firebase-auth-api.zzpp: zzpp(java.lang.Throwable)
com.google.protobuf.CodedOutputStreamWriter: void writeInt32(int,int)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.MultiFactorSession zzc()
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getStorageDirectoryString(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
io.grpc.InternalLogId: io.grpc.InternalLogId allocate(java.lang.String,java.lang.String)
com.google.android.gms.maps.internal.zzg: void setOnMarkerClickListener(com.google.android.gms.maps.internal.zzat)
com.google.android.gms.internal.firebase-auth-api.zzadv: zzadv(com.google.android.gms.internal.firebase-auth-api.zzaeb,java.lang.Comparable,java.lang.Object)
io.flutter.plugins.webviewflutter.InstanceManager: java.lang.Long getInstanceId(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager: java.lang.Object zas()
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.database.collection.ArraySortedMap: java.util.Comparator getComparator()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeInt32(int,int)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setSdkPlatform(com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform)
com.google.firebase.auth.GithubAuthCredential: com.google.firebase.auth.AuthCredential zza()
io.grpc.Codec$Gzip: java.io.InputStream decompress(java.io.InputStream)
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$Subchannel access$100(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)
io.grpc.internal.ApplicationThreadDeframerListener$1: void run()
com.lyokone.location.LocationPlugin: void detachActivity()
com.google.firebase.auth.internal.zzi: java.lang.String zze()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: byte[] getSourceExtension()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.CallTracer access$2700(io.grpc.internal.InternalSubchannel$CallTracingTransport)
com.google.common.collect.Maps: com.google.common.base.Function valueFunction()
com.google.android.gms.internal.firebase-auth-api.zzgi: zzgi()
androidx.core.app.ActivityCompat$1: void run()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjo zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.internal.firebase-auth-api.zzaba: void zzd(int)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zzL(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLngZoom(com.google.android.gms.maps.model.LatLng,float)
okio.Okio$1: void flush()
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferInt32NoTag(int)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: AutoConfiguredLoadBalancerFactory(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.grpc.internal.MetadataApplierImpl: void finalizeWith(io.grpc.internal.ClientStream)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readableBytes()
com.google.firebase.components.ComponentRuntime: void maybeInitializeEagerComponents()
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
com.google.android.gms.common.internal.zzc: void zzg()
com.google.android.gms.internal.firebase-auth-api.zzaen: boolean zzg(java.lang.Object,long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
androidx.core.app.Person: java.lang.String getKey()
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzf(com.google.android.gms.internal.firebase-auth-api.zzmk)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.proto.UnknownDocument: void access$400(com.google.firebase.firestore.proto.UnknownDocument,com.google.protobuf.Timestamp)
com.google.firebase.FirebaseApp: java.util.List getAllAppNames()
com.google.firebase.auth.internal.zzr: zzr(com.google.firebase.auth.internal.zzx)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int beginObjectHeader(android.os.Parcel)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeTruncationMarker(com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.database.collection.ImmutableSortedSet getMatchingKeysForTargetId(int)
com.google.android.gms.internal.firebase-auth-api.zzzl: zzzl()
com.google.protobuf.RopeByteString$Balancer: com.google.protobuf.ByteString access$100(com.google.protobuf.RopeByteString$Balancer,com.google.protobuf.ByteString,com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzpz: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbi zzb(com.google.android.gms.internal.firebase-auth-api.zzfm)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: void encode(com.google.android.datatransport.cct.internal.NetworkConnectionInfo,com.google.firebase.encoders.ObjectEncoderContext)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: AutoValue_AndroidClientInfo(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$1)
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
io.grpc.internal.RetriableStream: io.grpc.internal.RetryPolicy access$1900(io.grpc.internal.RetriableStream)
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzno zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: void configureNetworkMonitoring()
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setComposerLabel(java.lang.String)
com.google.firebase.auth.OAuthProvider$CredentialBuilder: com.google.firebase.auth.AuthCredential build()
com.google.android.gms.maps.GoogleMap: void setPadding(int,int,int,int)
com.google.protobuf.CodedInputStreamReader: void readEnumList(java.util.List)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.ResourcePath getPath()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmp: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: AutoValue_BackendRequest(java.lang.Iterable,byte[])
io.grpc.util.RoundRobinLoadBalancer$EmptyPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target access$000()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void headersRead(io.grpc.Metadata)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestore getInstance(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
com.google.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.common.base.Platform: Platform()
com.google.firebase.firestore.local.LocalStore: boolean shouldPersistTargetData(com.google.firebase.firestore.local.TargetData,com.google.firebase.firestore.local.TargetData,com.google.firebase.firestore.remote.TargetChange)
com.google.android.gms.internal.firebase-auth-api.zzud: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.common.api.internal.zace: zace(com.google.android.gms.common.internal.MethodInvocation,int,long,int)
com.google.protobuf.Utf8$UnsafeProcessor: int partialIsValidUtf8Direct(int,java.nio.ByteBuffer,int,int)
io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.google.firebase.firestore.local.LruGarbageCollector$Params: LruGarbageCollector$Params(long,int,int)
com.google.protobuf.GeneratedMessageLite: void setMemoizedSerializedSize(int)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)
com.google.firestore.v1.Value: com.google.protobuf.ByteString getBytesValue()
com.baseflow.geolocator.errors.PermissionUndefinedException: PermissionUndefinedException()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getBody()
com.google.android.gms.internal.firebase-auth-api.zzabr: void add(int,java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin: void setup(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
io.grpc.LoadBalancer: void requestConnection()
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readString()
androidx.fragment.app.BackStackRecord: void executeOps()
com.google.firebase.firestore.local.IndexBackfiller: com.google.firebase.firestore.model.FieldIndex$IndexOffset getNewOffset(com.google.firebase.firestore.model.FieldIndex$IndexOffset,com.google.firebase.firestore.local.LocalDocumentsResult)
com.google.protobuf.MessageSchema: void setOneofPresent(java.lang.Object,int,int)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean checkInputConnectionProxy(android.view.View)
com.google.android.gms.common.api.internal.BackgroundDetector: boolean isInBackground()
com.google.android.gms.internal.firebase-auth-api.zzgp: zzgp(java.lang.Class)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.core.Target newUmbrellaTarget(java.lang.String)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.content.Context)
io.perfmark.PerfMark: void startTask(java.lang.String,io.perfmark.Tag)
io.grpc.Codec$Identity: java.io.OutputStream compress(java.io.OutputStream)
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.grpc.internal.OobChannel: io.grpc.ConnectivityState getState(boolean)
com.google.android.gms.internal.firebase-auth-api.zzek: zzek(com.google.android.gms.internal.firebase-auth-api.zzbw)
com.google.firebase.firestore.local.QueryEngine: QueryEngine()
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
com.tekartik.sqflite.operation.BaseReadOperation: boolean getNoResult()
com.google.android.gms.tasks.zzk: void run()
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object getMinKey()
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzaau zze()
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
com.tekartik.sqflite.SqflitePlugin$BgResult: io.flutter.plugin.common.MethodChannel$Result access$1100(com.tekartik.sqflite.SqflitePlugin$BgResult)
com.google.firebase.auth.internal.zzt: zzt(com.google.android.gms.internal.firebase-auth-api.zzyw)
com.google.protobuf.MessageSchema: boolean isFieldPresent(java.lang.Object,int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzzv: java.lang.Object[] newArray(int)
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean equals(java.lang.Object)
com.google.firebase.messaging.SyncTask: void run()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
com.google.firebase.firestore.remote.AbstractStream$IdleTimeoutRunnable: AbstractStream$IdleTimeoutRunnable(com.google.firebase.firestore.remote.AbstractStream)
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzm()
com.google.android.gms.signin.internal.zah: java.lang.Object[] newArray(int)
com.google.firebase.messaging.NotificationParams: java.lang.String userFriendlyKey(java.lang.String)
com.google.android.gms.common.api.internal.TaskApiCall: int zaa()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task setSettings(java.util.Map)
com.google.android.datatransport.runtime.EncodedPayload: byte[] getBytes()
com.google.firebase.firestore.local.SQLiteTargetCache: void updateTargetData(com.google.firebase.firestore.local.TargetData)
com.google.android.gms.common.api.internal.zabq: void zaw()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
com.google.protobuf.CodedInputStreamReader: long readSFixed64()
com.google.common.io.ByteStreams$1: void write(byte[],int,int)
androidx.core.util.LogWriter: void flush()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzx(int,java.util.List,boolean)
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)
com.google.android.gms.internal.firebase-auth-api.zzacr: void add(int,java.lang.Object)
com.google.firebase.firestore.proto.MaybeDocument: void setDocument(com.google.firestore.v1.Document)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeDoubleAscending(double)
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.FirebaseUser zzb()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.protobuf.UnknownFieldSetLite: UnknownFieldSetLite(int,int[],java.lang.Object[],boolean)
com.google.common.base.MoreObjects$ToStringHelper: MoreObjects$ToStringHelper(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
com.google.android.gms.internal.firebase-auth-api.zzyz: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.collection.ArraySortedMap$1: void remove()
io.flutter.plugins.googlemaps.Convert: java.lang.Object latlngBoundsToJson(com.google.android.gms.maps.model.LatLngBounds)
io.flutter.plugins.googlemaps.PolygonBuilder: void setGeodesic(boolean)
com.google.firestore.v1.DocumentTransform$Builder: DocumentTransform$Builder(com.google.firestore.v1.DocumentTransform$1)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.android.gms.internal.maps.zzab: void zzp(boolean)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle createBundleFromClientSettings(com.google.android.gms.common.internal.ClientSettings)
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
com.google.protobuf.SchemaUtil: void mergeMap(com.google.protobuf.MapFieldSchema,java.lang.Object,java.lang.Object,long)
com.lyokone.location.LocationPlugin: void attachToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzjx: void zze(com.google.android.gms.internal.firebase-auth-api.zzjx,int)
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzkx zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.common.internal.zzo: void zze(java.lang.String,java.util.concurrent.Executor)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzji: void zzf(com.google.android.gms.internal.firebase-auth-api.zzji,com.google.android.gms.internal.firebase-auth-api.zzjl)
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
io.grpc.okhttp.internal.ConnectionSpec: boolean supportsTlsExtensions()
com.google.android.gms.cloudmessaging.zzd: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzd()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readRawLittleEndian64()
com.google.android.gms.internal.firebase-auth-api.zzzq: void writeToParcel(android.os.Parcel,int)
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
com.google.firebase.firestore.remote.TargetState: TargetState()
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: LocalStore$DocumentChangeResult(java.util.Map,java.util.Set,com.google.firebase.firestore.local.LocalStore$1)
com.google.android.gms.internal.base.zac: void zad(android.os.Parcel,android.os.IInterface)
com.google.android.gms.internal.firebase-auth-api.zzhz: zzhz()
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzbd: void zzd(com.google.android.gms.internal.firebase-auth-api.zzgq,com.google.android.gms.internal.firebase-auth-api.zzgb)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
io.grpc.internal.DelayedStream: void setMaxOutboundMessageSize(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setFid(java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
com.google.android.gms.internal.firebase-auth-api.zztk: void zza(java.lang.String)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.String annotatedName(java.lang.reflect.AccessibleObject)
com.google.android.gms.maps.model.Polygon: void remove()
com.google.android.gms.internal.location.zzbf: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: void handleRejectedListen(int,io.grpc.Status)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzl()
com.google.firebase.database.collection.LLRBValueNode: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzabr: java.lang.Object remove(int)
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Encoding getEncoding()
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: void onCreate(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzaep: int zzz(java.lang.Class)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
com.google.firebase.firestore.model.mutation.MutationBatchResult: java.util.List getMutationResults()
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()
com.google.protobuf.FieldSet: int hashCode()
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter applyAssociation(com.google.firebase.firestore.core.Filter)
io.grpc.okhttp.internal.framed.Hpack: io.grpc.okhttp.internal.framed.Header[] access$000()
com.google.android.gms.internal.firebase-auth-api.zzoi: byte[] zzd(byte[],byte[])
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$FutureCanceller access$2202(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$FutureCanceller)
com.google.firestore.v1.Write: java.lang.String getVerify()
com.google.firebase.auth.FacebookAuthCredential: com.google.firebase.auth.AuthCredential zza()
com.google.firebase.encoders.proto.AtProtobuf: com.google.firebase.encoders.proto.AtProtobuf builder()
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.tasks.Task zzc(int,android.os.Bundle)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedByte()
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzlm zzb()
io.grpc.internal.AbstractClientStream$TransportState: void access$100(io.grpc.internal.AbstractClientStream$TransportState,io.grpc.DecompressorRegistry)
com.google.android.gms.internal.firebase-auth-api.zzjq: zzjq(com.google.android.gms.internal.firebase-auth-api.zzjp)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
okio.AsyncTimeout$1: java.lang.String toString()
com.google.firestore.v1.StructuredQuery$Filter$Builder: com.google.firestore.v1.StructuredQuery$Filter$Builder setCompositeFilter(com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
androidx.collection.MapCollections: java.util.Set getKeySet()
com.google.android.gms.internal.firebase-auth-api.zzef: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.remote.GrpcCallProvider: void resetChannel(io.grpc.ManagedChannel)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzip zza(com.google.android.gms.internal.firebase-auth-api.zziw)
com.google.firebase.firestore.remote.WatchChangeAggregator: boolean isActiveTarget(int)
com.google.firebase.firestore.model.mutation.FieldTransform: com.google.firebase.firestore.model.mutation.TransformOperation getOperation()
io.grpc.internal.ManagedChannelImpl$ResolutionState: ManagedChannelImpl$ResolutionState(java.lang.String,int)
com.google.android.gms.internal.cloudmessaging.zzf: zzf(android.os.Looper,android.os.Handler$Callback)
io.grpc.internal.DelayedClientCall$7: DelayedClientCall$7()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
com.google.firebase.database.collection.LLRBRedValueNode: com.google.firebase.database.collection.LLRBNode$Color getColor()
com.google.firebase.firestore.core.ViewChange: com.google.firebase.firestore.core.ViewSnapshot getSnapshot()
com.google.protobuf.CodedInputStreamReader: CodedInputStreamReader(com.google.protobuf.CodedInputStream)
com.google.protobuf.CodedOutputStream: void writeBoolNoTag(boolean)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1200(io.flutter.plugin.platform.PlatformPlugin)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setLoadBatchSize(int)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: boolean onStopCurrentWork()
com.google.firebase.firestore.local.MemoryIndexManager: com.google.firebase.firestore.model.FieldIndex$IndexOffset getMinOffset(com.google.firebase.firestore.core.Target)
com.google.firebase.firestore.proto.Target: long getLastListenSequenceNumber()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzp(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
com.google.firebase.firestore.model.FieldPath: FieldPath(java.util.List)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
com.google.firebase.firestore.model.FieldIndex$IndexState: com.google.firebase.firestore.model.FieldIndex$IndexState create(long,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
io.grpc.internal.AbstractStream: void flush()
com.google.android.gms.common.internal.BaseGmsClient: void zzh(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.IGmsServiceBroker)
kotlin.ranges.IntProgression: int getLast()
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzA()
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: ClientMetrics(com.google.android.datatransport.runtime.firebase.transport.TimeWindow,java.util.List,com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.protobuf.RawMessageInfo: boolean isMessageSetWireFormat()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] $values()
com.google.android.gms.location.LocationSettingsStates: boolean isGpsPresent()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void setCachedFirebaseFirestoreInstanceForKey(com.google.firebase.firestore.FirebaseFirestore,java.lang.String)
com.google.firebase.auth.internal.zzj: void zze(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.firebase.firestore.core.ComponentProvider$Configuration: ComponentProvider$Configuration(android.content.Context,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.core.DatabaseInfo,com.google.firebase.firestore.remote.Datastore,com.google.firebase.firestore.auth.User,int,com.google.firebase.firestore.FirebaseFirestoreSettings)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.protobuf.ByteString$LiteralByteString: int partialHash(int,int,int)
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument access$000()
com.google.android.gms.internal.firebase-auth-api.zzct: com.google.android.gms.internal.firebase-auth-api.zzfz zzg(int,int)
com.google.common.collect.Maps$EntryFunction$1: Maps$EntryFunction$1(java.lang.String,int)
com.google.firebase.auth.PlayGamesAuthCredential: com.google.firebase.auth.AuthCredential zza()
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: JsonDataEncoderBuilder$TimestampEncoder(com.google.firebase.encoders.json.JsonDataEncoderBuilder$1)
com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
com.google.android.gms.internal.firebase-auth-api.zzjl: com.google.android.gms.internal.firebase-auth-api.zzjk zzb()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: GoogleSignInAccount(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,long,java.lang.String,java.util.List,java.lang.String,java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withAuthToken(java.lang.String,long,long)
com.google.protobuf.CodedInputStream$StreamDecoder: com.google.protobuf.ByteString readBytes()
okio.Timeout: boolean hasDeadline()
com.google.protobuf.ManifestSchemaFactory$1: ManifestSchemaFactory$1()
com.google.firebase.firestore.remote.FirestoreChannel: io.grpc.Metadata requestHeaders()
com.google.android.gms.internal.firebase-auth-api.zzuk: java.lang.String zza()
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
com.google.protobuf.Utf8$Processor: int partialIsValidUtf8Default(int,java.nio.ByteBuffer,int,int)
com.google.firebase.firestore.model.mutation.SetMutation: com.google.firebase.firestore.model.ObjectValue getValue()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
com.google.android.gms.common.api.internal.zacb: zacb(com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.api.internal.ListenerHolder$Notifier)
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: void onHeaders(io.grpc.Metadata)
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection access$6300()
com.google.android.gms.internal.firebase-auth-api.zzaal: boolean hasNext()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
io.flutter.plugins.pathprovider.Messages: java.util.Map access$000(java.lang.Throwable)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setAppGroupId(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()
com.google.firebase.firestore.bundle.BundleSerializer: long decodeTimezoneOffset(java.lang.String)
io.grpc.LoadBalancer$Factory: LoadBalancer$Factory()
androidx.window.embedding.ActivityStack: boolean isEmpty()
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: void encode(com.google.android.datatransport.cct.internal.LogRequest,com.google.firebase.encoders.ObjectEncoderContext)
com.google.protobuf.BooleanArrayList: boolean addAll(java.util.Collection)
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: java.lang.String unquote(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.google.firebase.auth.internal.zzi: java.lang.String zzb()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readSInt32()
io.grpc.internal.AbstractClientStream$GetFramer: void setMaxOutboundMessageSize(int)
com.google.android.gms.common.api.internal.zao: void run()
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlt zzf()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
com.google.firebase.messaging.Metadata: java.lang.String getAppVersionCode()
com.google.firebase.iid.FirebaseInstanceIdReceiver: void onNotificationDismissed(android.content.Context,android.os.Bundle)
com.google.protobuf.SchemaUtil: int computeSizeUInt32ListNoTag(java.util.List)
io.grpc.internal.AbstractStream$TransportState: void closeDeframer(boolean)
io.flutter.plugins.webviewflutter.InputAwareWebView: boolean isCalledFromListPopupWindowShow()
com.google.firebase.firestore.DocumentSnapshot: java.lang.String toString()
io.flutter.plugins.googlemaps.MarkerController: void setAnchor(float,float)
com.google.android.gms.maps.internal.zzbg: zzbg()
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzkw zzb()
com.google.android.gms.internal.firebase-auth-api.zzqn: zzqn()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityPaused(android.app.Activity)
com.google.firebase.auth.internal.zzah: zzah()
com.google.protobuf.UnsafeUtil$MemoryAccessor: int arrayBaseOffset(java.lang.Class)
com.google.android.gms.cloudmessaging.zzk: zzk(com.google.android.gms.cloudmessaging.zzm,com.google.android.gms.cloudmessaging.zzp)
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath fromSegments(java.util.List)
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugin.platform.PlatformViewRegistry,android.content.Context,android.view.View,io.flutter.plugins.webviewflutter.FlutterAssetManager)
com.google.android.gms.internal.firebase-auth-api.zzqo: zzqo(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzzq)
androidx.collection.SparseArrayCompat: void remove(int)
io.grpc.okhttp.internal.framed.HeadersMode: HeadersMode(java.lang.String,int)
com.google.android.gms.common.GoogleApiAvailabilityLight: GoogleApiAvailabilityLight()
io.flutter.plugins.googlemaps.MarkerController: void setZIndex(float)
com.google.android.gms.maps.model.PolygonOptions: PolygonOptions()
com.google.firebase.firestore.local.DocumentReference: int getId()
io.grpc.LoadBalancer: boolean canHandleEmptyAddressListFromNameResolution()
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder setLimit(com.google.protobuf.Int32Value$Builder)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
com.google.protobuf.BooleanArrayList: void ensureIndexInRange(int)
com.google.android.gms.internal.firebase-auth-api.zzfa: com.google.android.gms.internal.firebase-auth-api.zzeu zza(com.google.android.gms.internal.firebase-auth-api.zzmb)
com.google.firebase.firestore.bundle.BundleMetadata: long getTotalBytes()
io.grpc.internal.Rescheduler$FutureRunnable: Rescheduler$FutureRunnable(io.grpc.internal.Rescheduler)
com.google.android.gms.internal.firebase-auth-api.zzhc: zzhc(java.lang.Class)
com.google.firebase.auth.internal.zzag: com.google.firebase.auth.internal.zzag zzb(java.util.List,java.lang.String)
io.grpc.NameResolver$ResolutionResult: io.grpc.NameResolver$ConfigOrError getServiceConfig()
com.google.firebase.messaging.MessagingAnalytics: int getTtl(android.os.Bundle)
io.grpc.internal.SharedResourceHolder$1: java.util.concurrent.ScheduledExecutorService createScheduledExecutor()
com.google.android.gms.internal.firebase-auth-api.zzfe: zzfe(java.lang.Class)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] values()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec: GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec()
androidx.fragment.app.Fragment: int getNextTransitionStyle()
com.google.protobuf.CodedInputStream$StreamDecoder: CodedInputStream$StreamDecoder(java.io.InputStream,int)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.protobuf.ArrayDecoders: int decodeMessageField(com.google.protobuf.Schema,byte[],int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzadm: zzadm(com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.String,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zzd(byte[],byte[],java.lang.String,byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzcq: zzcq()
com.google.android.gms.internal.firebase-auth-api.zzak: com.google.android.gms.internal.firebase-auth-api.zzal zzf(int,int)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getColor()
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getPackageName()
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionElement,java.lang.Object)
com.google.android.gms.tasks.zzg: zzg(com.google.android.gms.tasks.zzh)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getExternalCachePaths()
com.google.firebase.installations.Utils: Utils(com.google.firebase.installations.time.Clock)
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
io.grpc.ClientStreamTracer$StreamInfo: java.lang.String toString()
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: DartExecutor$DartCallback(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation)
com.google.android.gms.internal.firebase-auth-api.zzdq: byte[] zzc(byte[],byte[],byte[])
io.grpc.internal.CompositeReadableBuffer: void skipBytes(int)
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: ListFieldSchema$ListFieldSchemaLite(com.google.protobuf.ListFieldSchema$1)
com.google.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded()
com.google.android.gms.location.LocationRequest: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.internal.zap: zap(com.google.android.gms.common.api.PendingResult,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter,com.google.android.gms.common.internal.zas)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object getResult()
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
io.flutter.plugins.googlemaps.TileOverlayBuilder: TileOverlayBuilder()
com.google.firebase.firestore.local.SQLiteSchema: SQLiteSchema(android.database.sqlite.SQLiteDatabase,com.google.firebase.firestore.local.LocalSerializer)
com.google.android.gms.common.api.internal.zzb: android.os.Bundle zzb(com.google.android.gms.common.api.internal.zzb)
com.google.android.gms.internal.firebase-auth-api.zzyk: java.lang.Object[] newArray(int)
com.google.protobuf.LazyFieldLite: com.google.protobuf.MessageLite setValue(com.google.protobuf.MessageLite)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle getGetServiceRequestExtraArgs()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: void executeEvenAfterShutdown(java.lang.Runnable)
com.google.firebase.FirebaseOptions: java.lang.String getApiKey()
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Attributes access$1502(io.grpc.okhttp.OkHttpClientTransport,io.grpc.Attributes)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: double operandAsDouble()
com.google.firebase.auth.internal.zzbi: void zzc()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBooleanObject(android.os.Parcel,int,java.lang.Boolean,boolean)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder()
com.tekartik.sqflite.SqflitePlugin$BgResult$2: void run()
com.google.firebase.firestore.core.SyncEngine: SyncEngine(com.google.firebase.firestore.local.LocalStore,com.google.firebase.firestore.remote.RemoteStore,com.google.firebase.firestore.auth.User,int)
io.grpc.internal.DelayedClientTransport$PendingStream: void onEarlyCancellation(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzof: zzof(byte[])
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.tekartik.sqflite.Database: void open()
com.google.android.gms.internal.firebase-auth-api.zzadz: int size()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void dispatch(java.lang.Runnable)
com.google.firebase.messaging.SyncTask$ConnectivityChangeReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.api.internal.zaae: void zae()
androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
io.grpc.okhttp.internal.framed.Hpack$Reader: Hpack$Reader(int,int,okio.Source)
com.google.android.gms.location.zzah: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zaa(android.content.Context,int,com.google.android.gms.common.internal.zag,android.content.DialogInterface$OnCancelListener)
com.google.firebase.installations.Utils: long currentTimeInSecs()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
io.grpc.ManagedChannel: io.grpc.ConnectivityState getState(boolean)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation$Remove: ArrayTransformOperation$Remove(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzjk: zzjk(com.google.android.gms.internal.firebase-auth-api.zzjj)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzxe: zzxe(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwi)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
okio.RealBufferedSink: java.lang.String toString()
io.grpc.okhttp.OkHttpChannelBuilder: OkHttpChannelBuilder(java.lang.String)
com.google.android.gms.internal.location.zzas: void zza(com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzaj)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel valueOf(java.lang.String)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
com.google.android.gms.internal.location.zzo: void writeToParcel(android.os.Parcel,int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
io.grpc.InternalChannelz$Security: InternalChannelz$Security(io.grpc.InternalChannelz$Tls)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
io.grpc.internal.InternalSubchannel$CallTracingTransport: InternalSubchannel$CallTracingTransport(io.grpc.internal.ConnectionClientTransport,io.grpc.internal.CallTracer)
com.google.android.gms.internal.firebase-auth-api.zzaeg: int hashCode()
com.google.firebase.FirebaseApp: void checkNotDeleted()
com.google.android.gms.internal.firebase-auth-api.zzjo: void zzg(com.google.android.gms.internal.firebase-auth-api.zzjo,com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.googlemaps.MarkerBuilder: com.google.android.gms.maps.model.MarkerOptions build()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.protobuf.CodedOutputStreamWriter: void writeSInt64List(int,java.util.List,boolean)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.firebase.firestore.local.SQLiteMutationQueue: void acknowledgeBatch(com.google.firebase.firestore.model.mutation.MutationBatch,com.google.protobuf.ByteString)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.google.firebase.database.collection.LLRBValueNode: LLRBValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.firebase.firestore.local.SQLitePersistence: SQLitePersistence(com.google.firebase.firestore.local.LocalSerializer,com.google.firebase.firestore.local.LruGarbageCollector$Params,com.google.firebase.firestore.local.SQLitePersistence$OpenHelper)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
com.google.android.gms.tasks.zzv: void onStop()
com.google.android.gms.maps.model.LatLng: LatLng(double,double)
com.google.android.gms.common.internal.zzn: android.content.Intent zzc(android.content.Context)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
com.google.android.gms.tasks.zzw: zzw()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult build()
com.google.android.gms.internal.firebase-auth-api.zzej: void zza()
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: java.lang.RuntimeException missingCallSite()
io.flutter.plugins.googlemaps.PolygonBuilder: PolygonBuilder(float)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getLeft()
com.google.firebase.auth.internal.zzbg: void zzc(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzG(com.google.android.gms.internal.firebase-auth-api.zzzm,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.plugins.firebase.messaging.JobIntentService: boolean onStopCurrentWork()
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: com.google.firestore.v1.Value computeBaseValue(com.google.firestore.v1.Value)
com.google.firebase.firestore.remote.RemoteStore: void handleWatchChange(com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.remote.WatchChange)
androidx.fragment.app.FragmentState$1: FragmentState$1()
com.google.android.gms.internal.firebase-auth-api.zzen: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzbw)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.cloudmessaging.zzb: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzct: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.protobuf.UnsafeUtil: void putByteLittleEndian(java.lang.Object,long,byte)
com.google.android.datatransport.runtime.backends.CreationContextFactory: com.google.android.datatransport.runtime.backends.CreationContext create(java.lang.String)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener)
com.google.android.gms.internal.firebase-auth-api.zzaeu: int zzc(java.lang.CharSequence)
com.google.firebase.firestore.remote.WatchChangeAggregator: com.google.firebase.firestore.local.TargetData queryDataForActiveTarget(int)
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zze()
io.grpc.Attributes: Attributes(java.util.Map)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FlutterAssetManagerHostApiCodec: GeneratedAndroidWebView$FlutterAssetManagerHostApiCodec()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
com.google.android.gms.internal.firebase-auth-api.zzeh: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.LoadBalancer$Subchannel: LoadBalancer$Subchannel()
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: void putFloat(java.lang.Object,long,float)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: PersistedInstallation$RegistrationStatus(java.lang.String,int)
io.grpc.internal.CompositeReadableBuffer: void addBuffer(io.grpc.internal.ReadableBuffer)
com.google.android.gms.internal.firebase-auth-api.zzba: java.util.Set zze()
com.google.android.gms.internal.firebase-auth-api.zzch: java.util.logging.Logger zzd()
com.google.firebase.firestore.proto.WriteBatch: com.google.firestore.v1.Write getBaseWrites(int)
com.tekartik.sqflite.SqlCommand: java.util.Map fixMap(java.util.Map)
com.google.protobuf.CodedOutputStream: void writeEnum(int,int)
io.grpc.ClientCall: ClientCall()
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.LLRBNode getNode(java.lang.Object)
com.google.protobuf.ArrayDecoders: int decodeBoolList(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
com.google.android.gms.common.api.internal.zabq: void zat(com.google.android.gms.common.api.internal.zal)
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest$Builder newBuilder()
com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.protobuf.LazyStringArrayList: boolean remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzm(int,java.util.List,boolean)
com.google.protobuf.UnsafeUtil: void access$000(java.lang.Throwable)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.NameResolver$ConfigOrError parseLoadBalancerPolicy(java.util.Map)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: void runInternal()
com.lyokone.location.FlutterLocationService: java.util.Map changeNotificationOptions(com.lyokone.location.NotificationOptions)
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledExecutorService access$600(io.grpc.internal.KeepAliveManager)
io.grpc.internal.InternalSubchannel$TransportListener$2: void run()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzk(int,int)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
io.grpc.InternalChannelz$ChannelTrace$Event: int hashCode()
io.grpc.internal.ManagedChannelImpl$5: ManagedChannelImpl$5()
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference getField()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean removeAll(java.util.Collection)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: AutoValue_NetworkConnectionInfo(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType,com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setProjectId(java.lang.String)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setNullValue(com.google.protobuf.NullValue)
com.google.android.gms.cloudmessaging.zzs: int zzf()
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: void removePendingOverlayMigrations()
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean isFocused()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
io.grpc.internal.InternalSubchannel$8: void run()
com.google.android.gms.internal.firebase-auth-api.zztz: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
kotlin.collections.EmptyList: java.lang.Void get(int)
com.google.firebase.firestore.remote.RemoteStore: void handleCredentialChange()
com.google.android.gms.internal.firebase-auth-api.zzvh: java.lang.String zza()
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange access$000()
com.google.protobuf.UnmodifiableLazyStringList$1: void set(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzcq: com.google.android.gms.internal.firebase-auth-api.zzga zza()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setRequestMarshaller(io.grpc.MethodDescriptor$Marshaller)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialMarkers(java.lang.Object)
io.grpc.internal.DelayedClientCall$6: void run()
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.protobuf.UnsafeUtil: void putLong(java.lang.Object,long,long)
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.firebase.firestore.core.EventManager$ListenOptions: EventManager$ListenOptions()
com.google.firebase.firestore.remote.FirestoreChannel$2: io.grpc.ClientCall delegate()
io.grpc.internal.GzipInflatingBuffer: boolean hasPartialData()
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: int hashCode()
com.google.firebase.messaging.WithinAppServiceBinder: WithinAppServiceBinder(com.google.firebase.messaging.WithinAppServiceBinder$IntentHandler)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzem: zzem(com.google.android.gms.internal.firebase-auth-api.zzbw)
com.google.firebase.firestore.core.MemoryComponentProvider: MemoryComponentProvider()
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzro: long zza()
com.google.android.gms.internal.firebase-auth-api.zzyx: zzyx()
com.google.protobuf.SmallSortedMap: java.util.Map access$700(com.google.protobuf.SmallSortedMap)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzyq: long zzb()
com.google.android.gms.maps.model.zzt: zzt(com.google.android.gms.maps.model.TileOverlayOptions)
com.google.firebase.messaging.Store$Token: boolean needsRefresh(java.lang.String)
com.google.android.gms.common.api.internal.zaad: java.util.Map zab(com.google.android.gms.common.api.internal.zaad)
com.google.firebase.auth.internal.zzag: java.lang.String zzc()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.UnknownDocument getUnknownDocument()
com.google.android.gms.common.Feature: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.model.DocumentKey getKey()
io.grpc.internal.ManagedChannelImpl: com.google.common.base.Supplier access$6400(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.common.ErrorDialogFragment: void onCancel(android.content.DialogInterface)
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.googlemaps.PolylinesController: void addPolyline(java.lang.String,com.google.android.gms.maps.model.PolylineOptions,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.android.datatransport.runtime.AutoValue_TransportContext: AutoValue_TransportContext(java.lang.String,byte[],com.google.android.datatransport.Priority)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.google.protobuf.ByteString: void copyTo(byte[],int,int,int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIntArray(android.os.Parcel,int,int[],boolean)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: void writeBytes(com.google.protobuf.ByteString)
kotlin.collections.EmptyIterator: int nextIndex()
com.google.firebase.messaging.reporting.MessagingClientEventExtension: com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zznb: int zza()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.android.gms.cloudmessaging.zzd: int describeContents()
com.google.android.gms.internal.firebase-auth-api.zztj: void zzb(java.lang.Object)
com.google.firestore.v1.Value: void access$500(com.google.firestore.v1.Value,boolean)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.firebase.firestore.util.ExponentialBackoff: void backoffAndRun(java.lang.Runnable)
com.google.firebase.auth.internal.zzbm: void zzf(android.content.Context,com.google.android.gms.common.api.Status)
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.firebase.firestore.util.Assert: void hardAssert(boolean,java.lang.String,java.lang.Object[])
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.google.protobuf.GeneratedMessageLite: java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
com.baseflow.geolocator.location.LocationManagerClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.android.gms.internal.location.zzae: zzae()
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState valueOf(java.lang.String)
io.grpc.Context$ExecutableListener: io.grpc.Context access$600(io.grpc.Context$ExecutableListener)
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zzd(com.google.android.gms.internal.firebase-auth-api.zzgz)
com.google.android.gms.internal.firebase-auth-api.zzhe: void zzg(com.google.android.gms.internal.firebase-auth-api.zzin)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.protobuf.MessageSchema: double oneofDoubleAt(java.lang.Object,long)
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder setStartAt(com.google.firestore.v1.Cursor$Builder)
io.flutter.plugins.googlemaps.TileProviderController: com.google.android.gms.maps.model.Tile getTile(int,int,int)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setLoadWithOverviewMode(java.lang.Long,java.lang.Boolean)
com.google.firebase.firestore.local.MemoryTargetCache: void setLastRemoteSnapshotVersion(com.google.firebase.firestore.model.SnapshotVersion)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzlq: void zzg(com.google.android.gms.internal.firebase-auth-api.zzlq,com.google.android.gms.internal.firebase-auth-api.zzlt)
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
com.google.protobuf.RopeByteString: java.util.List asReadOnlyByteBufferList()
com.google.firebase.firestore.FirebaseFirestoreSettings: long getCacheSizeBytes()
com.google.android.gms.internal.firebase-auth-api.zzsj: zzsj(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)
com.google.firebase.firestore.remote.OnlineStateTracker: com.google.firebase.firestore.core.OnlineState getState()
io.flutter.plugins.googlemaps.TileOverlayController: void setTransparency(float)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin$2: FlutterFirebaseMessagingPlugin$2(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin,com.google.firebase.messaging.FirebaseMessaging)
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedSet applyQuery(com.google.firebase.firestore.core.Query,com.google.firebase.database.collection.ImmutableSortedMap)
com.google.android.gms.maps.model.zzl: zzl()
com.google.android.gms.internal.maps.zzj: void zzs(int)
com.google.firebase.auth.OAuthProvider$CredentialBuilder: com.google.firebase.auth.OAuthProvider$CredentialBuilder setIdTokenWithRawNonce(java.lang.String,java.lang.String)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
com.lyokone.location.FlutterLocationService: boolean shouldShowRequestBackgroundPermissionRationale()
androidx.fragment.app.FragmentController: void dispatchResume()
com.google.firebase.auth.internal.zzbg: void zzd(com.google.firebase.auth.FirebaseUser)
io.grpc.okhttp.internal.framed.Hpack$Reader: void insertIntoDynamicTable(int,io.grpc.okhttp.internal.framed.Header)
io.grpc.internal.ApplicationThreadDeframer$2: void run()
com.google.android.gms.tasks.zzl: java.lang.Object zzb(com.google.android.gms.tasks.zzl)
com.google.android.gms.internal.location.zzad: zzad(com.google.android.gms.common.api.Status)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.google.android.gms.internal.firebase-auth-api.zzzu: java.lang.String zzd()
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setCode(java.lang.Integer)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: GeneratedAndroidWebView$WebResourceErrorData$Builder()
com.google.android.gms.common.api.internal.zas: zas(com.google.android.gms.common.api.internal.BasePendingResult,com.google.android.gms.common.api.internal.zar)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: void ensureValidDocumentIdType(java.lang.String,java.lang.String,java.lang.reflect.Type)
com.google.firebase.firestore.remote.WatchChangeAggregator: void removeDocumentFromTarget(int,com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.MutableDocument)
com.google.android.gms.internal.firebase-auth-api.zzsb: java.lang.Object[] newArray(int)
com.google.firebase.firestore.model.ObjectValue: ObjectValue(com.google.firestore.v1.Value)
io.grpc.internal.DelayedClientCall$DelayedListener$4: DelayedClientCall$DelayedListener$4(io.grpc.internal.DelayedClientCall$DelayedListener)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.bundle.NamedQuery getNamedQuery(java.lang.String)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String readErrorResponse(java.net.HttpURLConnection)
com.baseflow.geolocator.location.FusedLocationClient: void stopPositionUpdates()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
com.google.android.gms.tasks.zzp: com.google.android.gms.tasks.SuccessContinuation zza(com.google.android.gms.tasks.zzp)
com.google.android.gms.internal.firebase-auth-api.zzdj: java.lang.String zzc()
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzku zzd()
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialPolygons()
com.google.protobuf.LazyStringArrayList: com.google.protobuf.LazyStringArrayList mutableCopyWithCapacity(int)
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
com.google.android.gms.maps.UiSettings: void setZoomGesturesEnabled(boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.protobuf.UnsafeUtil: byte access$300(java.lang.Object,long)
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzxt: zzxt()
com.google.protobuf.UnknownFieldSetLite: boolean equals(java.lang.Object)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: com.google.android.gms.tasks.Task access$600(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor,java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzpx: zzpx()
com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable iterable()
com.google.firebase.auth.internal.zzbi: boolean zzf(com.google.firebase.auth.internal.zzbi)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.bundle.BundleDocument decodeDocument(org.json.JSONObject)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneMultiFactorInfo zzf()
com.google.android.gms.internal.firebase-auth-api.zzcc: com.google.android.gms.internal.firebase-auth-api.zznc zza(com.google.android.gms.internal.firebase-auth-api.zzmx)
com.google.android.gms.common.api.internal.zabp: void onSignOutComplete()
io.grpc.internal.InternalSubchannel$1EndOfCurrentBackoff: void run()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: HeartBeatInfoStorage(android.content.Context,java.lang.String)
com.tekartik.sqflite.SqflitePlugin: boolean query(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.grpc.okhttp.OkHttpReadableBuffer: int readableBytes()
com.google.firebase.firestore.remote.AbstractStream: void stop()
io.grpc.HttpConnectProxiedSocketAddress$Builder: io.grpc.HttpConnectProxiedSocketAddress build()
com.google.android.gms.internal.firebase-auth-api.zzgo: java.lang.Class zzb()
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.DocumentSet emptySet(java.util.Comparator)
com.google.android.gms.dynamic.zaa: zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper)
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraIdle()
com.google.firebase.firestore.remote.WriteStream: WriteStream(com.google.firebase.firestore.remote.FirestoreChannel,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.RemoteSerializer,com.google.firebase.firestore.remote.WriteStream$Callback)
com.google.firestore.bundle.BundledQuery: void access$500(com.google.firestore.bundle.BundledQuery,com.google.firestore.v1.StructuredQuery)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readSInt64()
com.google.android.gms.common.data.DataHolder: void writeToParcel(android.os.Parcel,int)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: AutoBatchedLogRequestEncoder$ClientInfoEncoder()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: double getDouble(java.lang.Object,long)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zziy zzb(com.google.android.gms.internal.firebase-auth-api.zzjc)
com.google.android.gms.common.GoogleApiAvailability: boolean showErrorDialogFragment(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)
com.google.android.gms.common.internal.service.zan: zan()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
com.google.firebase.firestore.proto.WriteBatch: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.stats.WakeLock: void zzd(int)
com.google.android.gms.internal.firebase-auth-api.zzxf: void onCodeSent(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State cancelled()
io.grpc.internal.AbstractReadableBuffer: AbstractReadableBuffer()
com.google.android.gms.internal.firebase-auth-api.zzec: zzec(com.google.android.gms.internal.firebase-auth-api.zzbw)
com.google.firebase.firestore.model.Values: boolean isDouble(com.google.firestore.v1.Value)
com.google.firestore.v1.StructuredQuery$Filter$Builder: StructuredQuery$Filter$Builder()
io.grpc.internal.RetriableStream: long access$2500(io.grpc.internal.RetriableStream)
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()
com.google.common.collect.UnmodifiableIterator: UnmodifiableIterator()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason getReason()
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doWrite(com.google.android.gms.common.api.internal.TaskApiCall)
com.google.android.gms.internal.firebase-auth-api.zzgx: zzgx(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzgw)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: boolean supportsUnsafeByteBufferOperations()
com.google.protobuf.CodedInputStream$StreamDecoder: long readSInt64()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void scrollTo(java.lang.Long,java.lang.Long,java.lang.Long)
com.google.firebase.firestore.core.ListenSequence: ListenSequence(long)
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
com.google.android.gms.maps.model.Polyline: void setGeodesic(boolean)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.ObjectValue getData()
com.google.android.gms.internal.firebase-auth-api.zzads: void remove()
com.google.android.gms.common.internal.zzr: boolean zzc(com.google.android.gms.common.internal.zzn,android.content.ServiceConnection,java.lang.String,java.util.concurrent.Executor)
com.google.firebase.messaging.EnhancedIntentService: void onDestroy()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzln zze(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalStorageDirectories(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseList(java.util.List,com.google.firebase.firestore.core.UserData$ParseContext)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.LocalDocumentsResult writeLocally(java.util.List)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: int getNumber()
io.grpc.internal.AbstractReadableBuffer: void reset()
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmh zzd()
com.google.android.gms.internal.firebase-auth-api.zzzq: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(boolean)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: int hashCode()
io.grpc.internal.DelayedStream: DelayedStream()
com.google.firebase.components.Dependency: boolean equals(java.lang.Object)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.MessageLite$Builder toBuilder()
com.google.android.gms.internal.firebase-auth-api.zzyp: java.util.List zzc()
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzc(int)
com.google.protobuf.Protobuf: com.google.protobuf.Schema registerSchema(java.lang.Class,com.google.protobuf.Schema)
io.grpc.internal.MessageDeframer: void setDecompressor(io.grpc.Decompressor)
io.grpc.Context$DirectExecutor: Context$DirectExecutor(java.lang.String,int)
com.google.firestore.v1.CommitResponse: CommitResponse()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder setFeatures(com.google.android.gms.common.Feature[])
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: FirebaseInstallationServiceClient(android.content.Context,com.google.firebase.inject.Provider)
io.grpc.internal.CompositeReadableBuffer$2: CompositeReadableBuffer$2()
io.grpc.Metadata$TrustedAsciiKey: Metadata$TrustedAsciiKey(java.lang.String,boolean,io.grpc.Metadata$TrustedAsciiMarshaller)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task enableNetwork()
com.google.common.collect.SingletonImmutableSet: boolean isPartialView()
com.google.firestore.v1.Write: void addUpdateTransforms(com.google.firestore.v1.DocumentTransform$FieldTransform)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzF(com.google.android.gms.internal.firebase-auth-api.zzsa,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
com.google.protobuf.LazyField$LazyIterator: boolean hasNext()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode moveRedRight()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityStarted(android.app.Activity)
com.google.firebase.messaging.CommonNotificationBuilder: int getPendingIntentFlags(int)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings$Builder setAndroidPackageName(java.lang.String,boolean,java.lang.String)
com.google.firebase.firestore.DocumentChange: int getOldIndex()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
com.google.protobuf.TextFormatEscaper$1: TextFormatEscaper$1(com.google.protobuf.ByteString)
com.google.android.gms.internal.location.zzat: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.android.gms.internal.firebase-auth-api.zzvl: java.lang.String zza()
com.google.protobuf.SchemaUtil: int computeSizeInt64List(int,java.util.List,boolean)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onStop(androidx.lifecycle.LifecycleOwner)
com.google.firebase.firestore.remote.RemoteStore: void handleWatchStreamClose(io.grpc.Status)
com.google.firebase.firestore.remote.TargetState: void updateResumeToken(com.google.protobuf.ByteString)
okio.Okio: okio.Sink sink(java.io.OutputStream,okio.Timeout)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(boolean)
io.flutter.plugins.androidintent.AndroidIntentPlugin: AndroidIntentPlugin()
com.google.firebase.firestore.remote.RemoteStore: void cleanUpWatchStreamState()
com.google.android.gms.internal.firebase-auth-api.zzkl: int zza(int)
com.google.android.gms.common.GooglePlayServicesRepairableException: GooglePlayServicesRepairableException(int,java.lang.String,android.content.Intent)
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.Metadata getHeaders()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.google.firebase.auth.internal.zzs: zzs()
com.google.protobuf.ExtensionSchemaLite: ExtensionSchemaLite()
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.OverlayMigrationManager getOverlayMigrationManager()
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget access$700()
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setMessageId(java.lang.String)
com.google.firebase.firestore.remote.RemoteEvent: com.google.firebase.firestore.model.SnapshotVersion getSnapshotVersion()
com.google.android.gms.internal.firebase-auth-api.zzkx: void zzh(com.google.android.gms.internal.firebase-auth-api.zzkx,com.google.android.gms.internal.firebase-auth-api.zzla)
com.google.android.gms.maps.model.CameraPosition: void writeToParcel(android.os.Parcel,int)
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String)
com.google.android.gms.tasks.zzw: void zzi()
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: byte[] serializeToBytes(com.google.android.gms.common.internal.safeparcel.SafeParcelable)
com.google.protobuf.ArrayDecoders: int decodeBytesList(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.protobuf.UnsafeUtil$1: UnsafeUtil$1()
io.grpc.internal.ServiceConfigUtil$LbConfig: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzig zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
com.google.android.gms.internal.firebase-auth-api.zzadx: java.lang.Object next()
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.firebase.firestore.local.MemoryIndexManager: void updateCollectionGroup(java.lang.String,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
io.flutter.plugins.googlemaps.PolylinesController: java.lang.String getPolylineId(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution: ManagedChannelImpl$LbHelperImpl$1LoadBalancerRefreshNameResolution(io.grpc.internal.ManagedChannelImpl$LbHelperImpl)
io.grpc.okhttp.internal.DistinguishedNameParser: int getByte(int)
com.google.android.datatransport.runtime.TransportContext: TransportContext()
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
kotlin.internal.ProgressionUtilKt: int mod(int,int)
com.google.firebase.firestore.util.AsyncQueue: void access$200(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$DelayedTask)
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: LogSourceMetrics$Builder()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzc(com.google.firebase.auth.FirebaseUser,boolean)
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions access$1000()
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(boolean)
com.google.android.gms.internal.firebase-auth-api.zzps: java.lang.String zzb()
com.google.firebase.firestore.proto.Target: void access$400(com.google.firebase.firestore.proto.Target,com.google.protobuf.Timestamp)
com.google.protobuf.GeneratedMessageLite: java.lang.Object newMessageInfo(com.google.protobuf.MessageLite,java.lang.String,java.lang.Object[])
io.grpc.internal.AbstractStream$TransportState: boolean isReady()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void zaa(com.google.android.gms.common.api.ResultCallback,com.google.android.gms.common.api.Result)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: byte[] toByteArray()
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zza()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
com.google.firebase.encoders.proto.LengthCountingOutputStream: void write(byte[],int,int)
com.google.common.collect.ComparatorOrdering: java.lang.String toString()
io.grpc.okhttp.Headers: java.util.List createRequestHeaders(io.grpc.Metadata,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzadl: boolean add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyw: zzyw()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
com.google.android.gms.internal.firebase-auth-api.zzga: java.util.Map zzc()
com.google.android.gms.maps.internal.zzao: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.maps.model.TileOverlay: boolean isVisible()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
com.google.android.gms.internal.firebase-auth-api.zzqu: zzqu(java.lang.String,com.google.firebase.auth.ActionCodeSettings)
io.grpc.CallOptions: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzhm: java.util.Map zzc()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void rstStream(int,io.grpc.okhttp.internal.framed.ErrorCode)
androidx.core.app.Person: android.app.Person toAndroidPerson()
com.google.android.gms.maps.GoogleMap: void setMapType(int)
com.google.android.gms.internal.firebase-auth-api.zzdi: zzdi(com.google.android.gms.internal.firebase-auth-api.zzdj,java.lang.Class)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.android.gms.internal.firebase-auth-api.zzrj: zzrj()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: boolean onNewIntent(android.content.Intent)
com.google.protobuf.NioByteString: com.google.protobuf.ByteString substring(int,int)
com.baseflow.geolocator.location.GeolocationManager: boolean isGooglePlayServicesAvailable(android.content.Context)
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
com.google.android.gms.internal.firebase-auth-api.zzwm: void zza(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzaei: void remove()
io.grpc.internal.DelayedClientTransport$2: DelayedClientTransport$2(io.grpc.internal.DelayedClientTransport,io.grpc.internal.ManagedClientTransport$Listener)
io.grpc.okhttp.internal.framed.Http2$Reader: Http2$Reader(okio.BufferedSource,int,boolean)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.Filter decodeUnaryFilter(com.google.firestore.v1.StructuredQuery$UnaryFilter)
com.google.protobuf.AbstractProtobufList: boolean addAll(int,java.util.Collection)
com.google.firebase.firestore.model.DocumentKey: int compareTo(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.core.LimboDocumentChange: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()
io.grpc.Attributes: java.lang.String toString()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.plugins.googlemaps.TileOverlayController: void setVisible(boolean)
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.google.android.gms.internal.firebase-auth-api.zzik: void zzf(com.google.android.gms.internal.firebase-auth-api.zzik,int)
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter getDefaultInstance()
com.google.firebase.platforminfo.DefaultUserAgentPublisher: DefaultUserAgentPublisher(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)
com.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.firebase.encoders.FieldDescriptor$Builder: com.google.firebase.encoders.FieldDescriptor build()
androidx.window.core.Version: int getMajor()
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
com.google.firebase.firestore.util.Util: java.lang.String toDebugString(com.google.protobuf.ByteString)
io.flutter.plugins.googlemaps.GoogleMapController: void invalidateMapIfNeeded()
io.grpc.internal.SerializingExecutor$AtomicHelper: SerializingExecutor$AtomicHelper(io.grpc.internal.SerializingExecutor$1)
com.google.common.collect.ImmutableList$SubList: java.util.ListIterator listIterator(int)
kotlinx.coroutines.CancelHandler: CancelHandler()
io.flutter.plugins.webviewflutter.FlutterWebViewFactory: FlutterWebViewFactory(io.flutter.plugins.webviewflutter.InstanceManager)
com.google.firebase.auth.FacebookAuthCredential: FacebookAuthCredential(java.lang.String)
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.AdditionalUserInfo getAdditionalUserInfo()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void onPageFinished(android.webkit.WebView,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlq zzd()
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.List expandIndexValues(java.util.List,com.google.firebase.firestore.model.FieldIndex$Segment,com.google.firestore.v1.Value)
com.google.firebase.firestore.local.SQLiteSchema: void removeMutationBatch(java.lang.String,int)
com.google.protobuf.BooleanArrayList: void removeRange(int,int)
com.google.firebase.messaging.FirebaseMessaging: java.lang.String blockingGetToken()
io.grpc.okhttp.internal.framed.Http2: void access$600(okio.BufferedSink,int)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
com.google.firebase.auth.internal.zzt: zzt(com.google.android.gms.internal.firebase-auth-api.zzyj,java.lang.String)
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: void success(java.lang.Object)
com.google.android.gms.maps.GoogleMap: void animateCamera(com.google.android.gms.maps.CameraUpdate)
io.grpc.internal.AbstractStream: void optimizeForDirectExecutor()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setRefreshToken(java.lang.String)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String getUserAgent()
io.grpc.okhttp.internal.Platform$Android: Platform$Android(io.grpc.okhttp.internal.OptionalMethod,io.grpc.okhttp.internal.OptionalMethod,java.lang.reflect.Method,java.lang.reflect.Method,io.grpc.okhttp.internal.OptionalMethod,io.grpc.okhttp.internal.OptionalMethod,java.security.Provider,io.grpc.okhttp.internal.Platform$TlsExtensionType)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
com.google.common.collect.Platform: java.lang.Object[] newArray(java.lang.Object[],int)
io.grpc.internal.ForwardingClientStream: java.lang.String toString()
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjf zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.model.BasePath: com.google.firebase.firestore.model.BasePath append(java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: long readUInt64()
com.google.protobuf.BinaryReader$SafeHeapReader: int readVarint32()
com.google.android.gms.common.api.internal.zabq: void onConnectionSuspended(int)
com.google.android.gms.internal.firebase-auth-api.zzxf: void onVerificationCompleted(com.google.firebase.auth.PhoneAuthCredential)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Object invoke(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$1)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext doEncode(com.google.firebase.encoders.ValueEncoder,com.google.firebase.encoders.FieldDescriptor,java.lang.Object,boolean)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzl(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.AuthCredential,java.lang.String,com.google.firebase.auth.internal.zzbk)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] values()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: MetadataBackendRegistry(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)
com.google.android.gms.cloudmessaging.zzu: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firestore.v1.Write: void access$1400(com.google.firestore.v1.Write,com.google.firestore.v1.DocumentMask)
com.google.android.gms.internal.firebase-auth-api.zzabx: boolean zzG()
com.google.firebase.firestore.core.UserData$ParseContext: boolean isWrite()
io.grpc.CallOptions: io.grpc.CallOptions withExecutor(java.util.concurrent.Executor)
io.flutter.plugins.googlemaps.GoogleMapController: void onMapLongClick(com.google.android.gms.maps.model.LatLng)
io.grpc.LoadBalancer$Helper: io.grpc.LoadBalancer$Subchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.firebase.auth.PhoneAuthCredential: java.lang.Object clone()
com.google.android.gms.common.internal.ClientIdentity: int hashCode()
com.google.firestore.v1.Target: void setReadTime(com.google.protobuf.Timestamp)
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzsw: void zza(java.lang.String)
io.grpc.ClientStreamTracer: void inboundTrailers(io.grpc.Metadata)
com.google.protobuf.CodedOutputStream: int computeGroupSize(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.firestore.v1.ListenRequest: java.util.Map access$1000(com.google.firestore.v1.ListenRequest)
com.google.firebase.firestore.core.Bound: int compareToDocument(java.util.List,com.google.firebase.firestore.model.Document)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zza(java.lang.String)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
io.flutter.plugins.googlemaps.Convert: float toFractionalPixels(java.lang.Object,float)
com.google.android.gms.internal.maps.zza: android.os.Parcel zza()
io.grpc.internal.Rescheduler: java.lang.Runnable access$800(io.grpc.internal.Rescheduler)
com.google.firebase.firestore.remote.FirestoreChannel$2: void halfClose()
okio.Okio: Okio()
kotlinx.coroutines.scheduling.NonBlockingContext: void afterTask()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int)
com.google.android.gms.internal.firebase-auth-api.zzkj: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.index.IndexEntry: IndexEntry()
io.grpc.okhttp.internal.Platform$2: java.lang.reflect.Method run()
com.google.protobuf.CodedOutputStream: int computeBoolSize(int,boolean)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.firestore.Query: void validateNewFieldFilter(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.core.FieldFilter)
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection values()
com.google.android.gms.internal.firebase-auth-api.zzaaz: long zzl()
com.google.android.datatransport.runtime.TransportContext: java.lang.String toString()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.grpc.internal.AbstractClientStream$TransportState: void transportReportStatus(io.grpc.Status,boolean,io.grpc.Metadata)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[])
com.lyokone.location.BackgroundNotification: void updateNotification(com.lyokone.location.NotificationOptions,boolean)
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
com.google.firebase.messaging.reporting.MessagingClientEvent: int getPriority()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.window.core.Bounds: int getRight()
com.google.firebase.firestore.model.BasePath: boolean equals(java.lang.Object)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
com.google.android.gms.safetynet.zzf: zzf(java.lang.String)
com.google.firebase.firestore.bundle.BundleSerializer: void verifyCollectionSelector(org.json.JSONArray)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGaTrackingId(java.lang.String)
com.google.protobuf.SmallSortedMap$EntrySet: boolean remove(java.lang.Object)
com.baseflow.geolocator.location.FlutterLocationServiceListener: FlutterLocationServiceListener(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.InstallationTokenResult: com.google.firebase.installations.InstallationTokenResult$Builder builder()
com.google.android.gms.internal.firebase-auth-api.zzkn: zzkn()
com.baseflow.geolocator.location.LocationAccuracyManager: com.baseflow.geolocator.location.LocationAccuracyStatus getLocationAccuracy(android.content.Context,com.baseflow.geolocator.errors.ErrorCallback)
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder clearLastLimboFreeSnapshotVersion()
com.google.android.gms.internal.firebase-auth-api.zzbw: com.google.android.gms.internal.firebase-auth-api.zzhw zzb()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzk(int,byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.grpc.internal.RetriableStream: void setFullStreamDecompression(boolean)
com.google.firestore.v1.CommitRequest$Builder: com.google.firestore.v1.CommitRequest$Builder addWrites(com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzln: void zzh(com.google.android.gms.internal.firebase-auth-api.zzln,int)
com.google.android.gms.common.api.internal.zabt: zabt(com.google.android.gms.common.api.internal.zabu,com.google.android.gms.common.ConnectionResult)
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
com.google.android.gms.internal.firebase-auth-api.zzacx: zzacx()
com.google.android.gms.internal.firebase-auth-api.zzly: void zze(com.google.android.gms.internal.firebase-auth-api.zzly,com.google.android.gms.internal.firebase-auth-api.zzmb)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
io.flutter.plugins.googlemaps.MarkersController: void showMarkerInfoWindow(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.core.SyncEngine$LimboResolution: SyncEngine$LimboResolution(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.internal.firebase-auth-api.zzz: zzz(com.google.android.gms.internal.firebase-auth-api.zzaa,com.google.android.gms.internal.firebase-auth-api.zzaf,java.lang.CharSequence)
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDragEnd(com.google.android.gms.maps.model.Marker)
com.google.android.gms.internal.firebase-auth-api.zzox: java.lang.Object zza(java.lang.String,java.security.Provider)
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: int hashCode()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: CodedInputStream$UnsafeDirectNioDecoder(java.nio.ByteBuffer,boolean)
io.grpc.internal.ReflectionLongAdderCounter: void add(long)
com.google.firebase.messaging.ServiceStarter: int doStartService(android.content.Context,android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzadl: void add(int,java.lang.Object)
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder addUpdateTransforms(com.google.firestore.v1.DocumentTransform$FieldTransform)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder newBuilder()
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task runTransaction(com.google.firebase.firestore.TransactionOptions,com.google.firebase.firestore.Transaction$Function)
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmg zzc()
com.google.firebase.firestore.proto.WriteBatch$Builder: com.google.firebase.firestore.proto.WriteBatch$Builder addWrites(com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzcd: void zza()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.gms.internal.firebase-auth-api.zzacm: void zzc(java.lang.Object,java.lang.Object,long)
com.google.protobuf.NullValue: int getNumber()
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.util.Map$Entry next()
com.google.android.gms.internal.firebase-auth-api.zzvw: void onPostExecute(java.lang.Object)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype forNumber(int)
io.grpc.NameResolverRegistry$NameResolverFactory: io.grpc.NameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
io.grpc.okhttp.OkHttpFrameLogger: void logWindowsUpdate(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,long)
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
com.google.android.gms.internal.maps.zzv: zzv(android.os.IBinder)
com.google.firebase.firestore.model.ObjectValue: com.google.firestore.v1.Value extractNestedValue(com.google.firestore.v1.Value,com.google.firebase.firestore.model.FieldPath)
com.google.protobuf.BinaryReader$SafeHeapReader: int readFixed32()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
com.google.common.collect.RegularImmutableMap$KeySet: int size()
com.google.android.gms.common.data.DataHolder: void close()
com.google.android.gms.maps.MapView: void onStop()
io.grpc.Metadata: Metadata()
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzmu zzc()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$RealChannel access$7500(io.grpc.internal.ManagedChannelImpl)
com.google.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
com.google.firestore.v1.DocumentTransform$FieldTransform: void setFieldPath(java.lang.String)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawLittleEndian32()
com.google.firebase.firestore.FirestoreRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzaes: zzaes()
io.grpc.internal.DnsNameResolver: java.lang.String getServiceAuthority()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.firestore.TransactionOptions: int getMaxAttempts()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.grpc.internal.TransportTracer: io.grpc.internal.TransportTracer$Factory getDefaultFactory()
io.grpc.internal.DnsNameResolver: boolean access$902(io.grpc.internal.DnsNameResolver,boolean)
androidx.fragment.app.Fragment: boolean isStateSaved()
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
com.google.android.gms.internal.firebase-auth-api.zzzq: zzzq(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzD(com.google.firebase.auth.internal.zzag,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.util.concurrent.Executor,android.app.Activity)
com.google.firestore.admin.v1.Index$IndexField: java.lang.String getFieldPath()
com.google.firebase.messaging.Store: void deleteToken(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
com.google.firestore.v1.ListenResponse$Builder: ListenResponse$Builder(com.google.firestore.v1.ListenResponse$1)
com.google.android.gms.internal.firebase-auth-api.zzcq: java.lang.String zzc()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder builder()
okio.Buffer: long read(okio.Buffer,long)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzn()
com.google.firebase.auth.internal.zzj: void zzd(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.UiSettings getUiSettings()
com.google.android.gms.internal.firebase-auth-api.zzzc: zzzc()
io.grpc.util.RoundRobinLoadBalancer: java.util.Collection getSubchannels()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.google.android.gms.internal.firebase-auth-api.zzabq: int zza()
com.google.firebase.encoders.FieldDescriptor: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLiteSchema: void ensurePathLength()
com.google.android.gms.common.internal.GmsLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.Object zzQ(com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: java.lang.String toString()
com.google.firestore.bundle.BundledQuery: java.lang.String getParent()
io.grpc.okhttp.AsyncSink: java.net.Socket access$700(io.grpc.okhttp.AsyncSink)
com.google.firebase.firestore.local.SQLiteTargetCache: void writeMetadata()
com.google.firebase.FirebaseApp$UserUnlockReceiver: void access$200(android.content.Context)
com.google.firebase.firestore.remote.Stream$State: Stream$State(java.lang.String,int)
androidx.collection.ArraySet: void allocArrays(int)
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.internal.ClientStream newSubstream(io.grpc.Metadata,io.grpc.ClientStreamTracer$Factory,int,boolean)
com.google.firebase.firestore.proto.WriteBatch: void access$1300(com.google.firebase.firestore.proto.WriteBatch,com.google.firestore.v1.Write)
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
com.google.android.datatransport.runtime.AutoValue_EventInternal: java.lang.Integer getCode()
com.google.firestore.v1.DocumentMask: void access$200(com.google.firestore.v1.DocumentMask,java.lang.String)
com.google.android.gms.common.api.internal.ListenerHolder: void zaa(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)
com.google.firebase.auth.internal.zze: java.lang.String zzb()
com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)
com.google.android.gms.location.zzad: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzmx: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmx,com.google.android.gms.internal.firebase-auth-api.zzmw)
com.baseflow.geolocator.LocationServiceHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse access$000()
com.google.common.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])
com.google.android.gms.internal.maps.zzy: void zzr(boolean)
com.google.firebase.firestore.FirestoreMultiDbComponent: FirestoreMultiDbComponent(android.content.Context,com.google.firebase.FirebaseApp,com.google.firebase.inject.Deferred,com.google.firebase.inject.Deferred,com.google.firebase.firestore.remote.GrpcMetadataProvider)
com.google.android.gms.internal.firebase-auth-api.zzfc: zzfc(com.google.android.gms.internal.firebase-auth-api.zzfd,java.lang.Class)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: byte readRawByte()
com.google.common.collect.RegularImmutableSet: java.util.Iterator iterator()
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs build()
com.google.protobuf.UnsafeUtil$MemoryAccessor: int getInt(java.lang.Object,long)
com.google.common.base.Throwables: java.lang.String getStackTraceAsString(java.lang.Throwable)
com.google.protobuf.CodedOutputStream: void writeFloatNoTag(float)
com.google.firebase.firestore.model.DocumentKey: boolean isDocumentKey(com.google.firebase.firestore.model.ResourcePath)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1HeadersRead: void runInContext()
com.google.firebase.firestore.local.LruGarbageCollector: long getNthSequenceNumber(int)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.database.collection.ImmutableSortedMap rejectBatch(int)
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ExecutorHolder access$2800(io.grpc.internal.ManagedChannelImpl)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver: AndroidConnectivityMonitor$NetworkReceiver(com.google.firebase.firestore.remote.AndroidConnectivityMonitor)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
com.google.firebase.auth.ActionCodeSettings: java.lang.String getAndroidPackageName()
com.google.protobuf.CodedInputStream$StreamDecoder: CodedInputStream$StreamDecoder(java.io.InputStream,int,com.google.protobuf.CodedInputStream$1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
com.google.android.datatransport.Event: Event()
com.google.android.gms.internal.firebase-auth-api.zzcv: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: CodedInputStream$IterableDirectByteBufferDecoder(java.lang.Iterable,int,boolean,com.google.protobuf.CodedInputStream$1)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
io.flutter.plugins.googlemaps.Convert: java.util.Map pointToJson(android.graphics.Point)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzn(com.google.android.gms.internal.firebase-auth-api.zzyq)
com.google.android.gms.internal.firebase-auth-api.zzvt: zzvt(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.local.QueryPurpose: QueryPurpose(java.lang.String,int)
io.grpc.internal.RetriableStream: void setMaxInboundMessageSize(int)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry fetchAuthTokenFromServer(com.google.firebase.installations.local.PersistedInstallationEntry)
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: void reset()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzabh: java.lang.Object get(int)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall,io.grpc.ClientCall$Listener,io.grpc.Status)
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp access$000()
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzadv: int hashCode()
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
com.google.firebase.firestore.Blob: byte[] toBytes()
com.google.firebase.messaging.DisplayNotification: boolean isAppForeground()
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger: KeepAliveManager$ClientKeepAlivePinger(io.grpc.internal.ConnectionClientTransport)
com.google.android.gms.internal.firebase-auth-api.zzkd: zzkd()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getLocalizationArgs(com.google.firebase.messaging.NotificationParams,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setSnapshotVersion(com.google.protobuf.Timestamp)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.firebase-auth-api.zzwl: void zza(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.lang.Object[])
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor get()
com.google.protobuf.MessageSchema: void writeUnknownInMessageTo(com.google.protobuf.UnknownFieldSchema,java.lang.Object,com.google.protobuf.Writer)
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator getOp()
com.google.firebase.firestore.core.ViewSnapshot: boolean isFromCache()
com.google.android.gms.internal.firebase-auth-api.zzn: zzn()
com.google.android.gms.common.internal.GetServiceRequest: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.tasks.zzw: boolean zzd(java.lang.Exception)
com.google.firestore.v1.ListenRequest: void access$200(com.google.firestore.v1.ListenRequest,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void burpActive()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.String getUrl(java.lang.Long)
com.google.firebase.auth.PhoneAuthCredential: java.lang.String getSignInMethod()
com.google.firebase.firestore.FieldPath: com.google.firebase.firestore.FieldPath of(java.lang.String[])
com.google.protobuf.UnsafeUtil: float getFloat(java.lang.Object,long)
com.google.type.LatLng: LatLng()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator getOp()
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions zIndex(float)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder: io.grpc.internal.ClientTransportFactory buildClientTransportFactory()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
com.google.android.gms.common.api.internal.zah: boolean zaa(com.google.android.gms.common.api.internal.zabq)
com.google.firebase.firestore.remote.FirestoreChannel$StreamingListener: FirestoreChannel$StreamingListener()
com.google.android.gms.internal.firebase-auth-api.zzkj: zzkj()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStop()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: int headerBlockSize(java.util.List)
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet getRemovedDocuments()
com.google.android.gms.internal.firebase-auth-api.zzads: java.lang.Object next()
io.flutter.plugins.googlemaps.MarkersController: void changeMarker(java.lang.Object)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
com.google.android.gms.internal.firebase-auth-api.zzabm: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzabk,com.google.android.gms.internal.firebase-auth-api.zzadc,int)
com.google.android.gms.internal.firebase-auth-api.zzjx: zzjx()
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.ListenerRegistration addSnapshotListenerInternal(java.util.concurrent.Executor,com.google.firebase.firestore.core.EventManager$ListenOptions,android.app.Activity,com.google.firebase.firestore.EventListener)
com.google.android.gms.internal.firebase-auth-api.zzsn: void zzb(java.lang.Object)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void onBackgroundStateChanged(boolean)
com.google.firebase.firestore.core.ActivityScope: void onActivityStopCallOnce(android.app.Activity,java.lang.Runnable)
io.grpc.internal.DelayedClientCall$5: DelayedClientCall$5(io.grpc.internal.DelayedClientCall,int)
com.google.protobuf.ByteString$LiteralByteString: boolean equalsRange(com.google.protobuf.ByteString,int,int)
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Builder newBuilder()
io.grpc.okhttp.OkHttpClientTransport: boolean isForTest()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.android.gms.internal.firebase-auth-api.zzhw: zzhw(java.util.Map,com.google.android.gms.internal.firebase-auth-api.zzhv)
com.google.firebase.firestore.local.MemoryPersistence: void shutdown()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
com.google.android.gms.internal.firebase-auth-api.zzace: zzace(java.lang.String)
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
com.google.firestore.v1.Document: java.util.Map access$400(com.google.firestore.v1.Document)
io.flutter.plugins.googlemaps.GoogleMapController: void onCircleClick(com.google.android.gms.maps.model.Circle)
com.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics build()
com.google.android.gms.internal.firebase-auth-api.zzabf: void zzI()
io.flutter.plugins.googlemaps.PolylinesController: void addPolyline(java.lang.Object)
com.google.firebase.auth.internal.zzp: java.lang.String getProviderId()
com.google.firebase.firestore.core.FieldFilter: com.google.firestore.v1.Value getValue()
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: int cleanQueue(java.lang.ref.ReferenceQueue)
com.google.firebase.auth.internal.zzal: zzal(com.google.firebase.auth.internal.zzam,java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
io.grpc.internal.JsonParser: JsonParser()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
com.google.android.gms.internal.firebase-auth-api.zzmk: java.lang.String zze()
com.google.firestore.v1.Value: void access$2500(com.google.firestore.v1.Value,com.google.firestore.v1.ArrayValue)
com.google.firebase.auth.ActionCodeUrl: java.lang.String zzb(java.lang.String,java.lang.String)
com.tekartik.sqflite.SqflitePlugin: void onOpenDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean shouldIncludeField(java.lang.reflect.Field)
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: FlutterAndroidLifecyclePlugin()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.grpc.okhttp.internal.framed.Huffman$Node: int access$200(io.grpc.okhttp.internal.framed.Huffman$Node)
com.google.android.gms.internal.base.zaa: android.os.IBinder asBinder()
com.google.protobuf.BooleanArrayList: java.lang.Object set(int,java.lang.Object)
com.google.firestore.v1.DocumentDelete: java.lang.String getDocument()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void flush()
com.google.android.gms.tasks.zzz: void run()
com.google.firebase.firestore.local.MemoryTargetCache: boolean containsKey(com.google.firebase.firestore.model.DocumentKey)
io.flutter.plugins.googlemaps.PolylineController: java.lang.String getGoogleMapsPolylineId()
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin$Companion: FlutterToastPlugin$Companion()
io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: AndroidChannelBuilder$AndroidChannel$1(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback)
com.google.protobuf.ArrayDecoders: int decodeUnknownField(int,byte[],int,int,com.google.protobuf.UnknownFieldSetLite,com.google.protobuf.ArrayDecoders$Registers)
com.google.firestore.v1.Target$QueryTarget: void access$900(com.google.firestore.v1.Target$QueryTarget,java.lang.String)
com.google.firebase.firestore.remote.WatchChange$DocumentChange: java.lang.String toString()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void requestLoading(android.webkit.WebViewClient,android.webkit.WebView,android.webkit.WebResourceRequest,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.grpc.internal.DelayedStream: void flush()
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzno zzc()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: AutoValue_SchedulerConfig(com.google.android.datatransport.runtime.time.Clock,java.util.Map)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.internal.maps.zzaj zza(com.google.android.gms.maps.model.TileOverlayOptions)
io.grpc.internal.ProxyDetectorImpl$2: java.lang.Object get()
io.grpc.internal.DelayedStream$4: DelayedStream$4(io.grpc.internal.DelayedStream)
com.google.protobuf.Utf8$UnsafeProcessor: int unsafeIncompleteStateFor(long,int,int)
com.google.android.gms.internal.firebase-auth-api.zzsp: void zzb(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabm: void zzg(com.google.android.gms.internal.firebase-auth-api.zzaau,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabk,com.google.android.gms.internal.firebase-auth-api.zzabp)
com.google.firebase.firestore.core.LimboDocumentChange$Type: LimboDocumentChange$Type(java.lang.String,int)
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] values()
com.google.android.gms.internal.firebase-auth-api.zzdu: zzdu()
com.google.firebase.firestore.model.FieldIndex$IndexOffset: com.google.firebase.firestore.model.FieldIndex$IndexOffset fromDocument(com.google.firebase.firestore.model.Document)
com.google.android.gms.internal.firebase-auth-api.zzmr: zzmr(com.google.android.gms.internal.firebase-auth-api.zzmq)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: MessagingClientEvent$Event(java.lang.String,int,int)
com.google.firestore.v1.StructuredQuery$FieldReference: void setFieldPath(java.lang.String)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] values()
io.grpc.internal.ForwardingClientStream: void optimizeForDirectExecutor()
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbj zzc(com.google.android.gms.internal.firebase-auth-api.zzfm)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzkf zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] values()
com.google.protobuf.CodedInputStream$StreamDecoder: int read(java.io.InputStream,byte[],int,int)
io.grpc.LoadBalancer$ResolvedAddresses: LoadBalancer$ResolvedAddresses(java.util.List,io.grpc.Attributes,java.lang.Object)
com.google.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser: GeneratedMessageLite$DefaultInstanceBasedParser(com.google.protobuf.GeneratedMessageLite)
io.grpc.internal.ForwardingClientStreamListener: void onReady()
com.google.protobuf.ByteString: ByteString()
kotlinx.coroutines.Dispatchers: Dispatchers()
com.google.android.gms.maps.model.Marker: int hashCode()
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl: DownloadListenerHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerCreator,io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder setNetworkType(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzvw: byte[] zzb(java.io.InputStream,int)
com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onDetachedFromActivity()
com.google.protobuf.FieldSet: int computeElementSize(com.google.protobuf.WireFormat$FieldType,int,java.lang.Object)
com.google.firestore.v1.Precondition: com.google.protobuf.Timestamp getUpdateTime()
io.grpc.internal.RetriableStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.android.gms.common.internal.GmsClient: java.util.Set getScopes()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.maps.model.Circle: void setClickable(boolean)
com.google.firebase.auth.PhoneAuthOptions$Builder: PhoneAuthOptions$Builder(com.google.firebase.auth.FirebaseAuth)
com.google.protobuf.CodedOutputStream: boolean access$100()
com.google.android.gms.tasks.zzaf: void onCanceled()
com.google.protobuf.ByteString$LiteralByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()
com.google.protobuf.UnknownFieldSetLite: com.google.protobuf.UnknownFieldSetLite newInstance()
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.PackageReference: int hashCode()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: AndroidChannelBuilder$AndroidChannel(io.grpc.ManagedChannel,android.content.Context)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds getLatLngBoundsForCameraTarget()
com.google.android.gms.maps.model.CircleOptions: int getStrokeColor()
com.google.protobuf.UnmodifiableLazyStringList$1: void add(java.lang.String)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.firebase.messaging.FirebaseMessaging: FirebaseMessaging(com.google.firebase.FirebaseApp,com.google.firebase.iid.internal.FirebaseInstanceIdInternal,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)
com.google.android.gms.maps.zzaf: zzaf(com.google.android.gms.maps.zzag,com.google.android.gms.maps.OnMapReadyCallback)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: void shutdownNow(io.grpc.Status)
io.grpc.okhttp.OkHttpClientStream$TransportState: void start(int)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.MutableDocument decodeMissingDocument(com.google.firestore.v1.BatchGetDocumentsResponse)
okio.RealBufferedSource: RealBufferedSource(okio.Source)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse)
com.google.android.gms.common.internal.zaw: zaw()
com.google.firebase.messaging.CommonNotificationBuilder: boolean shouldUploadMetrics(com.google.firebase.messaging.NotificationParams)
io.grpc.okhttp.internal.framed.Http2$Writer: void ackSettings(io.grpc.okhttp.internal.framed.Settings)
com.google.android.gms.maps.zzaf: void zzb(com.google.android.gms.maps.internal.IGoogleMapDelegate)
io.grpc.internal.ServiceConfigUtil: java.util.Map getHealthCheckedService(java.util.Map)
com.google.android.gms.dynamite.zzq: int zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzml: zzml()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task applyActionCode(java.util.Map)
com.google.firestore.v1.WriteResponse: WriteResponse()
okio.Util: void sneakyThrow2(java.lang.Throwable)
com.google.protobuf.CodedOutputStream: void writeSFixed32NoTag(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)
com.google.firebase.auth.PhoneAuthCredential: com.google.firebase.auth.PhoneAuthCredential zze(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ExecutorService newIntentHandleExecutor()
com.google.firebase.auth.zzx: zzx(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.ActionCodeSettings)
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value getDefaultInstance()
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
com.google.firebase.FirebaseApp: java.lang.Object access$300()
com.google.firebase.firestore.index.OrderedCodeWriter: byte[] encodedBytes()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
io.grpc.internal.ManagedChannelImpl: ManagedChannelImpl(io.grpc.internal.ManagedChannelImplBuilder,io.grpc.internal.ClientTransportFactory,io.grpc.internal.BackoffPolicy$Provider,io.grpc.internal.ObjectPool,com.google.common.base.Supplier,java.util.List,io.grpc.internal.TimeProvider)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialTileOverlays(java.util.List)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task getIdToken(boolean)
com.google.android.gms.location.LocationSettingsStates: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzaaf: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzxz: java.util.List zzf()
com.google.firebase.auth.internal.zzam: void zzd()
com.google.gson.stream.JsonReader: void skipToEndOfLine()
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])
com.google.android.gms.common.zzi: int zzc()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: ManagedChannelImpl$SubchannelImpl(io.grpc.internal.ManagedChannelImpl,io.grpc.LoadBalancer$CreateSubchannelArgs,io.grpc.internal.ManagedChannelImpl$LbHelperImpl)
com.google.android.gms.internal.firebase-auth-api.zzhn: void zzh(com.google.android.gms.internal.firebase-auth-api.zzln)
com.google.android.gms.internal.firebase-auth-api.zzaep: java.lang.reflect.Field zzB()
com.google.firebase.auth.UserProfileChangeRequest$Builder: UserProfileChangeRequest$Builder()
io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatFlags(byte,byte)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.SnapshotVersion decodeVersionFromListenResponse(com.google.firestore.v1.ListenResponse)
com.google.android.gms.internal.firebase-auth-api.zzyf: zzyf(java.lang.String)
com.google.firebase.appcheck.AppCheckTokenResult: AppCheckTokenResult()
io.grpc.internal.DnsNameResolver: java.util.logging.Logger access$400()
com.google.common.base.Preconditions: int checkPositionIndex(int,int)
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailability,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialCircles(java.lang.Object)
com.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.TargetCache getTargetCache()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)
com.google.common.collect.ImmutableList: boolean addAll(int,java.util.Collection)
com.google.gson.stream.JsonReader: char readEscapeCharacter()
com.google.android.gms.common.GoogleApiAvailability: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: void setChangeListener(com.google.firebase.firestore.util.Listener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.grpc.internal.Http2Ping: long payload()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
androidx.webkit.internal.WebResourceErrorImpl: org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface getBoundaryInterface()
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.lang.String getLogSourceName()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
io.grpc.internal.RetriableStream: RetriableStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.internal.RetriableStream$ChannelBufferMeter,long,long,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,io.grpc.internal.RetryPolicy,io.grpc.internal.HedgingPolicy,io.grpc.internal.RetriableStream$Throttle)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApiCodec: GeneratedAndroidWebView$CookieManagerHostApiCodec()
com.google.android.gms.internal.firebase-auth-api.zzka: void zzf(com.google.android.gms.internal.firebase-auth-api.zzka,int)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.grpc.internal.DelayedClientTransport: io.grpc.InternalLogId getLogId()
com.google.firestore.v1.Write: void setDelete(java.lang.String)
com.google.firebase.messaging.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.google.firebase.messaging.SyncTask: SyncTask(com.google.firebase.messaging.FirebaseMessaging,long)
io.grpc.internal.RetriableStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzcn: int zzf()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: void writeVarInt32(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.grpc.internal.DelayedClientCall: io.grpc.ClientCall access$100(io.grpc.internal.DelayedClientCall)
io.grpc.internal.ForwardingDeframerListener: void bytesRead(int)
com.google.firebase.firestore.Filter$CompositeFilter: com.google.firebase.firestore.core.CompositeFilter$Operator getOperator()
io.grpc.ServiceProviders: java.lang.Object create(java.lang.Class,java.lang.Class)
com.google.android.gms.common.internal.zai: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
com.google.firestore.v1.ListenRequest: void setDatabase(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.android.gms.internal.firebase-auth-api.zzdu: javax.crypto.Cipher zza()
com.google.protobuf.ByteString: int hashCode()
com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()
com.google.firebase.firestore.FieldPath: int hashCode()
io.grpc.internal.ForwardingNameResolver: void start(io.grpc.NameResolver$Listener)
okio.ByteString: int codePointIndexToCharIndex(java.lang.String,int)
com.google.firebase.firestore.model.mutation.Precondition: boolean isNone()
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
com.google.firebase.firestore.remote.WatchStream: void stop()
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: void serializeToIntentExtra(com.google.android.gms.common.internal.safeparcel.SafeParcelable,android.content.Intent,java.lang.String)
androidx.fragment.app.FragmentActivity: void onStop()
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference$Builder newBuilder()
com.google.firestore.bundle.BundledQuery$Builder: com.google.firestore.bundle.BundledQuery$Builder setLimitType(com.google.firestore.bundle.BundledQuery$LimitType)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.google.firebase.firestore.FirebaseFirestoreException$Code: FirebaseFirestoreException$Code(java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.android.gms.tasks.zzc: zzc(com.google.android.gms.tasks.zzd,com.google.android.gms.tasks.Task)
com.google.protobuf.SchemaUtil: int computeSizeMessageList(int,java.util.List,com.google.protobuf.Schema)
io.grpc.internal.DelayedClientCall: void delayOrExecute(java.lang.Runnable)
com.baseflow.geolocator.location.ServiceStatus: ServiceStatus(java.lang.String,int)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zabq zaI(com.google.android.gms.common.api.GoogleApi)
com.baseflow.geolocator.location.LocationOptions: LocationOptions(com.baseflow.geolocator.location.LocationAccuracy,long,long)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
com.google.android.gms.internal.firebase-auth-api.zzqw: com.google.firebase.auth.ActionCodeSettings zza()
com.google.android.datatransport.runtime.logging.Logging: java.lang.String concatTag(java.lang.String,java.lang.String)
io.grpc.okhttp.OkHttpClientTransport$1: void handleNotInUse()
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.MultiFactor getMultiFactor()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zai(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter notEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.firebase.provider.FirebaseInitProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.google.android.gms.common.api.internal.LifecycleActivity: boolean zzd()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: AutoValue_LibraryVersion(java.lang.String,java.lang.String)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeGeoPoint(com.google.firestore.v1.Value$Builder,org.json.JSONObject)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.firestore.v1.WriteResponse: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.Attributes: java.lang.Object get(io.grpc.Attributes$Key)
com.google.firebase.firestore.core.DatabaseInfo: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzaz: com.google.android.gms.internal.firebase-auth-api.zzmk zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.messaging.MessagingAnalytics: boolean isDirectBootMessage(android.content.Intent)
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.OrderBy$Direction getKeyOrder()
com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(byte[],int,int)
io.flutter.plugins.googlemaps.PolylineBuilder: void setWidth(float)
com.google.firebase.firestore.bundle.BundleSerializer: java.util.List decodePosition(org.json.JSONObject)
com.google.android.gms.signin.internal.zah: zah()
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
com.google.firebase.database.collection.ImmutableSortedSet: ImmutableSortedSet(java.util.List,java.util.Comparator)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver getNameResolver(java.lang.String,io.grpc.NameResolver$Factory,io.grpc.NameResolver$Args)
com.google.firebase.firestore.model.FieldIndex$IndexOffset: int compareTo(com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.android.gms.internal.firebase-auth-api.zzut: java.lang.String zza()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzdd: byte[] zza(byte[],byte[])
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferFixed32NoTag(int)
com.google.firebase.firestore.core.SyncEngine: void resolvePendingWriteTasks(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1000(io.grpc.internal.InternalSubchannel)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
com.google.android.gms.dynamite.zzl: zzl()
com.google.protobuf.IterableByteBufferInputStream: int read(byte[],int,int)
com.google.protobuf.MessageSchema: int presenceMaskAndOffsetAt(int)
com.google.firebase.messaging.SyncTask$ConnectivityChangeReceiver: void registerReceiver()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapToolbarEnabled(boolean)
com.google.android.gms.common.api.internal.zzd: android.os.Bundle zzb(com.google.android.gms.common.api.internal.zzd)
com.google.firebase.encoders.proto.AtProtobuf: AtProtobuf()
com.google.protobuf.LazyStringArrayList: java.lang.Object remove(int)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: com.google.firebase.database.collection.ImmutableSortedSet getRemoteKeysForTarget(int)
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.core.UserData$ParseContext childContext(com.google.firebase.firestore.model.FieldPath)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder registerEncoder(java.lang.Class,com.google.firebase.encoders.ValueEncoder)
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: int hashCode()
io.flutter.plugins.googlemaps.PolylineController: PolylineController(com.google.android.gms.maps.model.Polyline,boolean,float)
com.google.protobuf.ArrayDecoders: int decodeFixed32(byte[],int)
com.google.android.gms.maps.internal.zzo: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.protobuf.CodedInputStreamReader: java.lang.Object readGroup(java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
com.google.firebase.firestore.util.Util: java.lang.String typeName(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaaw: java.lang.String zzk()
com.google.android.gms.location.LocationRequest: LocationRequest()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getTag(com.google.firebase.messaging.NotificationParams)
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value getLimit()
com.google.android.gms.internal.firebase-auth-api.zzxv: zzxv()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getVersion()
io.flutter.plugins.googlemaps.MarkersController: boolean onMarkerTap(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zab(android.accounts.Account)
io.grpc.internal.ManagedChannelImpl$5: void request(int)
com.google.firebase.firestore.model.ResourcePath: com.google.firebase.firestore.model.ResourcePath fromString(java.lang.String)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: AutoValue_TokenResult$Builder()
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.core.EventManager createEventManager(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzk(long)
com.google.firebase.firestore.local.LocalViewChanges: com.google.firebase.database.collection.ImmutableSortedSet getAdded()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] values()
androidx.fragment.app.BackStackRecord: java.lang.String getName()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereNotIn(com.google.firebase.firestore.FieldPath,java.util.List)
com.google.protobuf.RopeByteString: boolean equalsFragments(com.google.protobuf.ByteString)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMyLocationButtonEnabled(boolean)
com.google.firestore.v1.StructuredQuery$CompositeFilter: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setApiKey(java.lang.String)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.dynamite.DynamiteModule: int getLocalVersion(android.content.Context,java.lang.String)
kotlin.collections.EmptyMap: EmptyMap()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task signInWithCredential(com.google.firebase.auth.AuthCredential)
com.google.android.gms.signin.internal.SignInClientImpl: SignInClientImpl(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.ClientSettings,android.os.Bundle,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.android.gms.common.api.internal.zzd: void onDestroy()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
com.google.android.gms.safetynet.SafeBrowsingData: com.google.android.gms.common.data.DataHolder getBlacklistsDataHolder()
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Map zat(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableList createAsList()
com.google.android.gms.internal.firebase-auth-api.zzed: java.lang.Class zza()
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: java.io.InputStream next()
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.auth.internal.RecaptchaActivity: void zze(java.lang.String,com.google.android.gms.common.api.Status)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: ManagedChannelImpl$1CancelIdleTimer(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzael: zzael()
com.google.protobuf.ArrayDecoders: int decodeStringRequireUtf8(byte[],int,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: ReadableBuffers$ByteArrayWrapper(byte[],int,int)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder: OkHttpChannelBuilder$OkHttpChannelTransportFactoryBuilder(io.grpc.okhttp.OkHttpChannelBuilder)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setAuthToken(com.google.firebase.installations.remote.TokenResult)
com.google.android.gms.maps.GoogleMap: GoogleMap(com.google.android.gms.maps.internal.IGoogleMapDelegate)
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: com.google.android.gms.common.internal.RootTelemetryConfiguration zza()
io.grpc.internal.TransportFrameUtil: TransportFrameUtil()
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema proto2UnknownFieldSetSchema()
io.grpc.InternalChannelz: io.grpc.InternalChannelz instance()
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
com.google.android.gms.internal.firebase-auth-api.zzaeu: int zza(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzwk: void zza(android.app.Activity,java.util.List)
com.google.firebase.components.CycleDetector$ComponentNode: CycleDetector$ComponentNode(com.google.firebase.components.Component)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: AbstractSendChannel$SendBuffered(java.lang.Object)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: ClientCallImpl$ClientStreamListenerImpl(io.grpc.internal.ClientCallImpl,io.grpc.ClientCall$Listener)
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
com.google.protobuf.CodedOutputStreamWriter: void writeFixed32(int,int)
com.google.protobuf.WireFormat: int getTagWireType(int)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: io.grpc.internal.ReadableBuffers$ByteArrayWrapper readBytes(int)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzs(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzzq,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.GeoPoint: GeoPoint(double,double)
com.google.firebase.encoders.proto.ProtobufValueEncoderContext: void resetContext(com.google.firebase.encoders.FieldDescriptor,boolean)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.firebase.messaging.TopicsSyncTask: android.content.Context access$300(com.google.firebase.messaging.TopicsSyncTask)
io.flutter.plugins.googlemaps.PolygonController: java.lang.String getGoogleMapsPolygonId()
com.google.protobuf.FieldSet: int getMessageSetSerializedSize(java.util.Map$Entry)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzpv: zzpv()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.google.firebase.firestore.model.mutation.FieldTransform: com.google.firebase.firestore.model.FieldPath getFieldPath()
io.grpc.Metadata$Key: byte[] asciiName()
com.google.firebase.firestore.local.SQLitePersistence: void execute(java.lang.String,java.lang.Object[])
com.squareup.okhttp.HttpUrl: HttpUrl(com.squareup.okhttp.HttpUrl$Builder)
com.google.protobuf.LongArrayList: LongArrayList(long[],int)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.google.android.gms.common.util.concurrent.zza: zza(java.lang.Runnable,int)
com.google.firebase.firestore.remote.GrpcCallProvider: void initChannelTask()
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: java.util.Map getAll(java.lang.Iterable)
io.grpc.internal.RetriableStream: void cancel(io.grpc.Status)
io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)
io.grpc.Metadata$LazyValue: io.grpc.Metadata$BinaryStreamMarshaller getBinaryStreamMarshaller(io.grpc.Metadata$Key)
com.google.firebase.firestore.core.DocumentViewChange: DocumentViewChange(com.google.firebase.firestore.core.DocumentViewChange$Type,com.google.firebase.firestore.model.Document)
com.google.android.gms.internal.firebase-auth-api.zzok: void zza(long[],long[],int)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.webkit.internal.WebkitToCompatConverter: java.lang.reflect.InvocationHandler convertWebResourceError(android.webkit.WebResourceError)
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zza()
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.Feature[] getRequiredFeatures()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.CameraUpdate toCameraUpdate(java.lang.Object,float)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.installations.FirebaseInstallationsException: FirebaseInstallationsException(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newTopicsSyncExecutor()
com.google.android.gms.internal.firebase-auth-api.zzln: void zzi(com.google.android.gms.internal.firebase-auth-api.zzln,com.google.android.gms.internal.firebase-auth-api.zzlt)
com.google.firebase.installations.RandomFidGenerator: RandomFidGenerator()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Long readLongObject(android.os.Parcel,int)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
com.google.android.gms.maps.model.PatternItem: int hashCode()
com.google.android.gms.internal.safetynet.zza: zza(android.os.IBinder,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)
io.grpc.internal.ChannelTracer$1: boolean add(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzA(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.auth.internal.zzg)
com.google.firebase.firestore.GeoPoint: boolean equals(java.lang.Object)
com.google.protobuf.ExtensionSchemaLite: com.google.protobuf.FieldSet getExtensions(java.lang.Object)
com.google.protobuf.CodedInputStreamReader: double readDouble()
com.google.android.gms.maps.GoogleMap: float getMaxZoomLevel()
com.google.android.gms.maps.model.zzl: java.lang.Object[] newArray(int)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void dispose(android.webkit.WebViewClient,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.android.gms.internal.firebase-auth-api.zzzi: zzzi(java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
com.squareup.okhttp.HttpUrl: java.lang.String host()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator forNumber(int)
androidx.core.view.WindowInsetsControllerCompat$Impl: WindowInsetsControllerCompat$Impl()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.google.android.gms.internal.firebase-auth-api.zzvk: java.lang.String zza()
com.google.android.gms.cloudmessaging.zzi: void run()
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getDevice()
com.google.android.gms.internal.firebase-auth-api.zzaby: java.lang.Object get(int)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setPriority(int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportDirectory()
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
com.google.android.gms.signin.internal.SignInClientImpl: void zad(com.google.android.gms.signin.internal.zae)
io.grpc.Status: java.lang.String toString()
com.google.firebase.firestore.proto.NoDocument$Builder: NoDocument$Builder(com.google.firebase.firestore.proto.NoDocument$1)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task disableNetwork()
com.google.firestore.v1.Value: void setBytesValue(com.google.protobuf.ByteString)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.remote.RemoteStore getRemoteStore()
com.google.common.collect.ImmutableList: int lastIndexOf(java.lang.Object)
com.google.firebase.firestore.model.AutoValue_FieldIndex: java.lang.String getCollectionGroup()
com.google.android.gms.internal.firebase-auth-api.zzzu: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.grpc.SynchronizationContext$ManagedRunnable: SynchronizationContext$ManagedRunnable(java.lang.Runnable)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.lyokone.location.MethodCallHandlerImpl: void onGetLocation(io.flutter.plugin.common.MethodChannel$Result)
androidx.tracing.Trace: void beginSection(java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
io.grpc.internal.JsonUtil: int parseNanos(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzR(java.lang.Object,int,int,int,int)
kotlinx.coroutines.Empty: java.lang.String toString()
com.google.firebase.firestore.model.mutation.VerifyMutation: com.google.firebase.firestore.model.mutation.FieldMask applyToLocalView(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.Timestamp)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: java.util.List getElements()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getInstanceId(android.os.Bundle)
io.grpc.internal.ManagedChannelImpl$1NotifyStateChanged: ManagedChannelImpl$1NotifyStateChanged(io.grpc.internal.ManagedChannelImpl,java.lang.Runnable,io.grpc.ConnectivityState)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor$1: void success(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdc: zzdc()
com.google.android.gms.internal.firebase-auth-api.zzzu: java.lang.String zzc()
io.grpc.SynchronizationContext: void throwIfNotInThisSynchronizationContext()
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: boolean isReferenced(com.google.firebase.firestore.model.DocumentKey)
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$ChannelBufferMeter access$2700(io.grpc.internal.RetriableStream)
kotlinx.coroutines.DefaultExecutor: void run()
com.squareup.okhttp.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)
com.google.android.gms.internal.maps.zzv: void zzq(boolean)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
com.google.protobuf.Utf8: int access$1100(byte[],int,int)
com.google.android.gms.internal.maps.zzv: void zzo(float)
com.google.protobuf.ByteString: java.lang.String truncateAndEscapeForDisplay()
okio.Buffer: boolean exhausted()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder keepAliveTime(long,java.util.concurrent.TimeUnit)
com.google.protobuf.MessageSetSchema: com.google.protobuf.MessageSetSchema newSchema(com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MessageLite)
com.google.android.gms.common.api.internal.ListenerHolder: void notifyListener(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator$1: StructuredQuery$CompositeFilter$Operator$1()
com.google.protobuf.CodedOutputStream: void writeSFixed64(int,long)
io.flutter.plugins.googlemaps.Convert: double toDouble(java.lang.Object)
androidx.collection.ArrayMap$1: int colGetSize()
com.google.firebase.auth.internal.zzr: com.google.firebase.auth.AuthCredential getCredential()
com.google.firebase.auth.FirebaseAuthActionCodeException: FirebaseAuthActionCodeException(java.lang.String,java.lang.String)
io.grpc.internal.RetriableStream$4: void run()
io.grpc.StatusException: java.lang.Throwable fillInStackTrace()
com.google.android.gms.internal.firebase-auth-api.zzfc: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.tasks.zzp: void zzd(com.google.android.gms.tasks.Task)
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
com.google.firebase.auth.FirebaseAuthRecentLoginRequiredException: FirebaseAuthRecentLoginRequiredException(java.lang.String,java.lang.String)
io.grpc.Context: void validateGeneration(int)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.google.android.gms.internal.firebase-auth-api.zzaaz: com.google.android.gms.internal.firebase-auth-api.zzaau zzp()
com.google.android.gms.internal.firebase-auth-api.zzck: com.google.android.gms.internal.firebase-auth-api.zzfz zzg(int,int,int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzwg: zzwg(java.lang.String)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: AndroidChannelBuilder$AndroidChannel$NetworkReceiver(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$1)
io.grpc.okhttp.OkHttpClientTransport: boolean access$800(io.grpc.okhttp.OkHttpClientTransport)
com.google.common.collect.RegularImmutableList: java.lang.Object[] internalArray()
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzih zzc()
com.google.android.gms.internal.firebase-auth-api.zzabb: void zza(byte[],int,int)
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.firebase.firestore.Source getSource(java.util.Map)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
com.google.protobuf.Utf8$UnsafeProcessor: Utf8$UnsafeProcessor()
com.google.firebase.firestore.DocumentSnapshot: java.util.Map getData(com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior)
com.google.android.gms.common.api.Api$AbstractClientBuilder: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: com.google.firebase.firestore.FirebaseFirestoreSettings build()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void upgrade(android.database.sqlite.SQLiteDatabase,int,int)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readEnum()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.firebase.messaging.RemoteMessage: java.lang.String getTo()
com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator access$1000()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: ManagedChannelImpl$DelayedTransportListener(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue$1: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue findValueByNumber(int)
io.grpc.internal.ManagedChannelImpl$RealChannel$3: void halfClose()
com.google.firebase.firestore.core.ArrayContainsFilter: boolean matches(com.google.firebase.firestore.model.Document)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zza(com.google.firebase.auth.FirebaseUser)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readInt32()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: com.google.firebase.messaging.FirebaseMessaging getFirebaseMessagingForArguments(java.util.Map)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.DelayedClientTransport access$1600(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.signin.internal.SignInClientImpl: void zab()
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: java.net.Socket access$1702(io.grpc.okhttp.OkHttpClientTransport,java.net.Socket)
io.flutter.plugin.platform.PlatformPlugin: boolean access$1100(io.flutter.plugin.platform.PlatformPlugin)
com.google.firebase.auth.internal.zzx: java.lang.String getPhoneNumber()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: java.util.Iterator iterator()
io.flutter.plugins.googlemaps.PolylineBuilder: boolean consumeTapEvents()
com.google.gson.stream.JsonReader: double nextDouble()
com.google.firebase.firestore.local.SQLiteTargetCache: void addMatchingKeys(com.google.firebase.database.collection.ImmutableSortedSet,int)
io.flutter.plugins.googlemaps.CircleController: CircleController(com.google.android.gms.maps.model.Circle,boolean,float)
com.google.protobuf.SmallSortedMap: int getNumArrayEntries()
com.google.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()
okio.ByteString: int compareTo(java.lang.Object)
com.google.android.gms.common.api.internal.zabq: int zac()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task deleteUser(java.util.Map)
androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter getDefaultInstance()
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()
okio.Buffer: okio.Buffer getBuffer()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
androidx.fragment.app.BackStackState$1: BackStackState$1()
com.google.android.gms.internal.firebase-auth-api.zzko: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set getRequestedScopes()
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] values()
com.google.android.gms.internal.firebase-auth-api.zzmw: boolean zzg()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.lang.String registerEventChannel(java.lang.String,io.flutter.plugin.common.EventChannel$StreamHandler)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityResumed(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzev: zzev(byte[],byte[],byte[],java.math.BigInteger,com.google.android.gms.internal.firebase-auth-api.zzeu)
com.google.android.gms.internal.firebase-auth-api.zzacd: java.lang.String zzh(byte[])
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zze(com.google.android.gms.internal.firebase-auth-api.zzgt)
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: com.google.firebase.firestore.model.mutation.Mutation getMutation()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long currentRemaining()
com.google.common.io.BaseEncoding: byte[] decode(java.lang.CharSequence)
com.google.firebase.messaging.CommonNotificationBuilder: boolean isValidIcon(android.content.res.Resources,int)
com.google.android.gms.common.api.internal.zzd: android.app.Activity getLifecycleActivity()
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.firebase-auth-api.zzbf: com.google.android.gms.internal.firebase-auth-api.zzbf zze(java.lang.String,byte[],int)
com.google.android.gms.internal.location.zzap: android.location.Location zza(java.lang.String)
com.google.android.gms.common.api.internal.zabn: void run()
okio.Buffer: okio.ByteString snapshot()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getComposerLabel(android.os.Bundle)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzta: zzta(com.google.android.gms.internal.firebase-auth-api.zztb,com.google.android.gms.internal.firebase-auth-api.zzwy,com.google.android.gms.internal.firebase-auth-api.zzyq)
com.google.android.gms.internal.firebase-auth-api.zzpi: zzpi()
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source valueOf(java.lang.String)
com.google.firebase.firestore.QueryDocumentSnapshot: com.google.firebase.firestore.QueryDocumentSnapshot fromDocument(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.model.Document,boolean,boolean)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3(java.lang.reflect.Constructor)
com.google.firebase.messaging.RemoteMessageCreator: void writeToParcel(com.google.firebase.messaging.RemoteMessage,android.os.Parcel,int)
com.google.protobuf.ArrayDecoders: int decodeStringList(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.firestore.model.ServerTimestamps: com.google.firestore.v1.Value valueOf(com.google.firebase.Timestamp,com.google.firestore.v1.Value)
com.google.common.base.Ticker: Ticker()
com.tekartik.sqflite.Database: android.database.sqlite.SQLiteDatabase getWritableDatabase()
com.google.protobuf.LazyFieldLite: void ensureInitialized(com.google.protobuf.MessageLite)
com.google.firebase.firestore.core.Query: java.lang.String toString()
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetCurrentPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzi(com.google.android.gms.internal.firebase-auth-api.zzvs,java.lang.String)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.bundle.NamedQuery decodeNamedQuery(org.json.JSONObject)
io.grpc.internal.RetriableStream$1MaxInboundMessageSizeEntry: RetriableStream$1MaxInboundMessageSizeEntry(io.grpc.internal.RetriableStream,int)
com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)
com.google.android.gms.internal.firebase-auth-api.zzcm: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.auth.internal.zzx: java.util.List zzo()
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaev: com.google.android.gms.internal.firebase-auth-api.zzaew zza()
com.google.firebase.auth.internal.zzu: zzu()
com.google.android.gms.internal.location.zzas: android.location.Location getLastLocation()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.gms.common.api.internal.zal: java.util.Set zab()
io.grpc.internal.ManagedChannelImpl: java.util.Collection access$4302(io.grpc.internal.ManagedChannelImpl,java.util.Collection)
io.grpc.internal.ApplicationThreadDeframer: io.grpc.internal.MessageDeframer access$000(io.grpc.internal.ApplicationThreadDeframer)
io.grpc.internal.DelayedClientCall: java.lang.String toString()
com.google.firebase.firestore.index.OrderedCodeWriter: void writeUnsignedLongAscending(long)
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: AlarmManagerScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
io.flutter.plugins.googlemaps.GoogleMapController: void onSaveInstanceState(android.os.Bundle)
io.grpc.okhttp.OkHttpClientTransport: boolean mayHaveCreatedStream(int)
com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
androidx.window.layout.WindowMetrics: int hashCode()
com.google.android.gms.common.internal.GmsLogger: GmsLogger(java.lang.String,java.lang.String)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zab()
io.flutter.embedding.android.FlutterActivity: void release()
com.google.firebase.auth.EmailAuthCredential: boolean zzg()
com.google.android.gms.cloudmessaging.zzy: zzy(com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: GeneratedAndroidWebView$WebResourceRequestData(io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$1)
io.flutter.plugins.googlemaps.PolygonBuilder: void setHoles(java.util.List)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlin.coroutines.CombinedContext: int size()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.TimeProvider access$5400(io.grpc.internal.ManagedChannelImpl)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
com.google.firebase.firestore.bundle.BundleSerializer: void decodeFieldFilter(java.util.List,org.json.JSONObject)
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] values()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzmj zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
com.google.common.collect.ImmutableList$SubList: ImmutableList$SubList(com.google.common.collect.ImmutableList,int,int)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.firebase.auth.FirebaseAuthEmailException: FirebaseAuthEmailException(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView: void convertToImageView()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query limit(long)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
io.grpc.StreamTracer: void inboundMessage(int)
io.grpc.internal.ClientCallImpl: void cancelInternal(java.lang.String,java.lang.Throwable)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readSFixed32()
com.google.android.gms.internal.maps.zzj: void zzn()
com.google.firestore.v1.Write: void access$200(com.google.firestore.v1.Write,com.google.firestore.v1.Document)
com.google.android.gms.common.api.GoogleApi$Settings$Builder: GoogleApi$Settings$Builder()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setTimestampValue(com.google.protobuf.Timestamp$Builder)
com.google.android.gms.internal.firebase-auth-api.zzadz: void clear()
com.google.android.gms.cloudmessaging.Rpc: void zzh(java.lang.String,android.os.Bundle)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.google.firebase.auth.internal.zzav: zzav(com.google.firebase.auth.internal.zzax,android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.google.protobuf.UnknownFieldSetLite: void writeAsMessageSetTo(com.google.protobuf.Writer)
com.google.android.gms.internal.firebase-auth-api.zzzz: long zzb()
io.grpc.Attributes$Builder: Attributes$Builder(io.grpc.Attributes)
com.google.firebase.firestore.remote.WriteStream: boolean isHandshakeComplete()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.firestore.bundle.NamedQuery: com.google.firebase.firestore.model.SnapshotVersion getReadTime()
com.google.android.gms.maps.internal.zzg: void setOnMapLoadedCallback(com.google.android.gms.maps.internal.zzan)
com.google.android.gms.maps.model.RoundCap: java.lang.String toString()
kotlin.jvm.internal.Intrinsics: int compare(int,int)
com.google.android.gms.internal.firebase-auth-api.zzabm: zzabm()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzm(com.google.firebase.auth.FirebaseUser,java.lang.String)
com.google.android.gms.maps.model.Polygon: void setVisible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzpk: boolean zzb()
com.squareup.okhttp.HttpUrl$Builder: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.google.firebase.auth.UserProfileChangeRequest: boolean zzc()
io.grpc.internal.GrpcUtil$Http2Error: long code()
com.google.android.gms.internal.firebase-auth-api.zzvo: zzvo(java.lang.String,java.lang.String)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder: java.util.List combineLists(java.util.List,java.util.List)
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: void write(okio.Buffer,int,boolean)
com.google.firebase.firestore.model.DatabaseId: DatabaseId(java.lang.String,java.lang.String)
io.grpc.CompressorRegistry: CompressorRegistry(io.grpc.Compressor[])
com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)
androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjx zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.internal.firebase-auth-api.zzxk: zzxk(com.google.android.gms.internal.firebase-auth-api.zzxn,com.google.android.gms.internal.firebase-auth-api.zzvs,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaau zzn(byte[])
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind valueOf(java.lang.String)
com.google.firebase.auth.zzk: void run()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityStopped(android.app.Activity)
io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Index access$800(io.grpc.internal.InternalSubchannel)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.LocationPermission checkPermissionStatus(android.content.Context)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getCollapseKey()
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema proto3UnknownFieldSetSchema()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTrackCameraPosition(boolean)
kotlin.collections.EmptyList: java.lang.Object remove(int)
com.google.android.gms.internal.location.zzp: zzp()
com.google.android.gms.internal.firebase-auth-api.zzpv: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.MapView: void onStart()
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: BinaryMessenger$TaskQueueOptions()
com.google.common.collect.ImmutableList$Itr: ImmutableList$Itr(com.google.common.collect.ImmutableList,int)
io.grpc.internal.DelayedStream$10: void run()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMapType(int)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
androidx.webkit.internal.WebkitToCompatConverter: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(android.webkit.SafeBrowsingResponse)
androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()
io.grpc.internal.ManagedChannelImpl$1NotifyStateChanged: void run()
com.google.firebase.FirebaseApp: android.content.Context getApplicationContext()
com.google.firebase.firestore.util.AsyncQueue: com.google.firebase.firestore.util.AsyncQueue$DelayedTask enqueueAfterDelay(com.google.firebase.firestore.util.AsyncQueue$TimerId,long,java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
com.google.android.gms.internal.firebase-auth-api.zzme: void zzh(com.google.android.gms.internal.firebase-auth-api.zzme,com.google.android.gms.internal.firebase-auth-api.zzmh)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()
com.google.android.gms.internal.location.zzat: void release()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzp(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.auth.internal.zzbk)
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
io.grpc.internal.SerializingExecutor$SynchronizedAtomicHelper: SerializingExecutor$SynchronizedAtomicHelper()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.firestore.v1.Document: void access$100(com.google.firestore.v1.Document,java.lang.String)
com.google.firestore.v1.StructuredQuery: void access$8500(com.google.firestore.v1.StructuredQuery,com.google.firestore.v1.StructuredQuery$Order)
com.google.protobuf.LongArrayList: boolean equals(java.lang.Object)
okio.SegmentPool: void recycle(okio.Segment)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationDocumentsPath()
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: com.google.protobuf.MessageLite parse(java.io.InputStream)
com.tekartik.sqflite.SqflitePlugin: void onOptionsCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.grpc.internal.Http2Ping: void addCallback(io.grpc.internal.ClientTransport$PingCallback,java.util.concurrent.Executor)
com.google.firebase.auth.internal.zzf: com.google.android.gms.tasks.Task zza(com.google.firebase.auth.FirebaseAuth,java.lang.String,android.app.Activity,boolean)
com.google.protobuf.UnsafeUtil: com.google.protobuf.UnsafeUtil$MemoryAccessor getMemoryAccessor()
com.google.android.gms.common.api.ResolvableApiException: ResolvableApiException(com.google.android.gms.common.api.Status)
com.google.common.base.Splitter: Splitter(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity)
io.grpc.internal.ClientCallImpl: io.grpc.Deadline effectiveDeadline()
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
com.google.firebase.components.CycleDetector$ComponentNode: void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode)
io.grpc.LoadBalancer$CreateSubchannelArgs: LoadBalancer$CreateSubchannelArgs(java.util.List,io.grpc.Attributes,java.lang.Object[][])
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
com.google.firebase.firestore.FirebaseFirestoreException: FirebaseFirestoreException(java.lang.String,com.google.firebase.firestore.FirebaseFirestoreException$Code,java.lang.Throwable)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.google.android.datatransport.cct.CCTDestination: java.util.Set getSupportedEncodings()
androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
io.grpc.CompositeCallCredentials: CompositeCallCredentials(io.grpc.CallCredentials,io.grpc.CallCredentials)
io.grpc.internal.TransportFrameUtil: byte[][] toHttp2Headers(io.grpc.Metadata)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: void reprocess()
io.grpc.okhttp.OkHttpClientStream: boolean useGet()
com.google.protobuf.ExtensionSchemaLite: java.lang.Object parseExtension(com.google.protobuf.Reader,java.lang.Object,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.FieldSet,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
com.google.android.gms.internal.firebase-auth-api.zzfp: zzfp(java.lang.String,java.security.KeyStore)
com.google.firebase.firestore.local.MemoryIndexManager: void updateIndexEntries(com.google.firebase.database.collection.ImmutableSortedMap)
com.google.android.gms.internal.firebase-auth-api.zzrh: zzrh()
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.Timestamp decodeTimestamp(java.lang.String)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$ResolutionState access$7000(io.grpc.internal.ManagedChannelImpl)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
io.grpc.Deadline: long timeRemaining(java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzjh zzb()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: com.google.android.datatransport.runtime.time.Clock getClock()
com.google.firebase.firestore.core.OrderBy: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task enableNetwork(java.util.Map)
io.flutter.plugins.googlemaps.CircleController: void setCenter(com.google.android.gms.maps.model.LatLng)
com.google.android.gms.internal.firebase-auth-api.zzabh: zzabh()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzp(byte[],int,int)
com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder: com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder setMessagingClientEvent(com.google.firebase.messaging.reporting.MessagingClientEvent)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.location.zzw: zzw(android.os.IBinder)
io.grpc.internal.JsonParser: java.lang.Object parseRecursive(com.google.gson.stream.JsonReader)
kotlin.Result$Failure: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzah: boolean hasNext()
io.grpc.internal.Rescheduler$ChannelFutureRunnable: void run()
com.google.android.gms.common.api.internal.zap: void zah(com.google.android.gms.common.ConnectionResult,int)
io.flutter.plugins.googlemaps.TileOverlaysController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int incrementStreamWindow(int)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytesNoTag(com.google.protobuf.ByteString)
io.grpc.StreamTracer: void outboundMessageSent(int,long,long)
com.google.android.gms.common.Feature: long getVersion()
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$Substream createSubstream(int,boolean)
com.google.firebase.firestore.core.Transaction: void set(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.core.UserData$ParsedSetData)
com.google.common.collect.UnmodifiableListIterator: UnmodifiableListIterator()
io.grpc.LoadBalancer$PickResult: int hashCode()
io.grpc.okhttp.OkHttpClientTransport: int access$2600(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: java.lang.String getAppNamespace()
com.google.firebase.auth.zze: com.google.firebase.auth.AuthCredential zza()
io.grpc.internal.KeepAliveManager: io.grpc.internal.KeepAliveManager$State access$002(io.grpc.internal.KeepAliveManager,io.grpc.internal.KeepAliveManager$State)
com.google.android.gms.internal.firebase-auth-api.zzuk: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.protobuf.BinaryReader$SafeHeapReader: void readStringList(java.util.List)
com.google.firebase.firestore.Filter$UnaryFilter: java.lang.Object getValue()
com.google.android.gms.internal.firebase-auth-api.zztp: void zza(java.lang.String)
com.google.firebase.firestore.local.SQLiteTargetCache: int getHighestTargetId()
com.google.firebase.firestore.Filter$UnaryFilter: com.google.firebase.firestore.core.FieldFilter$Operator getOperator()
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget access$000()
com.google.firebase.firestore.LoadBundleTask: java.lang.Exception getException()
com.google.protobuf.ExtensionSchemaLite: boolean hasExtensions(com.google.protobuf.MessageLite)
com.google.protobuf.CodedInputStreamReader: void readSFixed64List(java.util.List)
io.grpc.ForwardingClientCall: void cancel(java.lang.String,java.lang.Throwable)
androidx.webkit.internal.SafeBrowsingResponseImpl: SafeBrowsingResponseImpl(java.lang.reflect.InvocationHandler)
com.google.firebase.firestore.core.SyncEngine: void trackLimboChange(com.google.firebase.firestore.core.LimboDocumentChange)
io.grpc.okhttp.OkHttpClientTransport: com.squareup.okhttp.Request createHttpProxyRequest(java.net.InetSocketAddress,java.lang.String,java.lang.String)
com.google.android.gms.internal.location.zzl: zzl(com.google.android.gms.internal.location.zzk)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
com.google.firebase.messaging.TopicsSubscriber: TopicsSubscriber(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.messaging.Metadata,com.google.firebase.messaging.TopicsStore,com.google.firebase.messaging.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void access$700(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl,io.grpc.Status)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions visible(boolean)
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.api.internal.TaskApiCall$Builder builder()
com.google.firebase.auth.ActionCodeEmailInfo: java.lang.String getEmail()
com.google.android.gms.maps.internal.zzg: void setOnPolylineClickListener(com.google.android.gms.maps.internal.zzbh)
androidx.collection.SparseArrayCompat: int size()
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzm()
io.grpc.Attributes$Key: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzph: zzph(com.google.android.gms.internal.firebase-auth-api.zzie,int)
io.grpc.internal.InternalSubchannel: io.grpc.internal.InternalSubchannel$Callback access$000(io.grpc.internal.InternalSubchannel)
com.google.firebase.firestore.remote.WriteStream: void onNext(com.google.firestore.v1.WriteResponse)
com.google.android.gms.internal.firebase-auth-api.zzph: void zza(byte[],byte[])
com.google.firebase.firestore.core.Query: Query(com.google.firebase.firestore.model.ResourcePath,java.lang.String,java.util.List,java.util.List,long,com.google.firebase.firestore.core.Query$LimitType,com.google.firebase.firestore.core.Bound,com.google.firebase.firestore.core.Bound)
com.google.firestore.v1.Document: java.util.Map getMutableFieldsMap()
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform access$000()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1000(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.maps.model.MarkerOptions: float getZIndex()
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest getDefaultInstance()
com.google.android.gms.maps.internal.zzg: void setOnInfoWindowClickListener(com.google.android.gms.maps.internal.zzad)
com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationUsable()
com.google.android.gms.internal.firebase-auth-api.zzpt: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.JobSupport: JobSupport(boolean)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: SQLiteEventStore_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.location.LocationRequest: int hashCode()
androidx.collection.SimpleArrayMap: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: long getMaxAllowedDelay()
com.google.firestore.v1.StructuredQuery$CollectionSelector: void setAllDescendants(boolean)
com.google.android.gms.internal.maps.zzae: void zzm(float)
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zznc zzc()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
com.google.firebase.messaging.DisplayNotification: void showNotification(com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo)
com.google.android.gms.tasks.zzp: void onFailure(java.lang.Exception)
androidx.fragment.app.FragmentFactory: FragmentFactory()
com.google.firebase.auth.PhoneAuthOptions: java.util.concurrent.Executor zzi()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
io.flutter.plugins.googlemaps.GoogleMapController: void setZoomGesturesEnabled(boolean)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzp(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.PhoneAuthCredential)
com.google.firebase.firestore.model.DatabaseId: java.lang.String toString()
com.google.firestore.v1.ArrayValue: java.util.List getValuesList()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long access$000(io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor)
kotlin.SynchronizedLazyImpl: java.lang.String toString()
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)
com.google.android.gms.internal.firebase-auth-api.zzyq: com.google.android.gms.internal.firebase-auth-api.zzyq zzd(java.lang.String)
com.google.firebase.firestore.util.AsyncQueue: com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor access$000(com.google.firebase.firestore.util.AsyncQueue)
com.google.android.gms.internal.firebase-auth-api.zzaby: java.lang.Object set(int,java.lang.Object)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
com.google.android.gms.signin.zac: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabh: void add(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zznw zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.location.FusedLocationProviderClient$zza: FusedLocationProviderClient$zza(com.google.android.gms.tasks.TaskCompletionSource)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
com.google.firestore.v1.DocumentRemove: DocumentRemove()
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: StorageMetrics$Builder()
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexString(java.lang.String,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: void copyMemory(long,byte[],long,long)
com.google.android.gms.internal.firebase-auth-api.zzli: zzli()
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: JobIntentService$JobServiceEngineImpl(io.flutter.plugins.firebase.messaging.JobIntentService)
com.google.android.gms.maps.model.VisibleRegion: java.lang.String toString()
com.google.protobuf.AbstractProtobufList: boolean addAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzael: sun.misc.Unsafe zza()
io.grpc.okhttp.internal.framed.Header: Header(okio.ByteString,okio.ByteString)
com.baseflow.geolocator.permission.PermissionManager: java.util.List getLocationPermissionsFromManifest(android.content.Context)
com.baseflow.geolocator.MethodCallHandlerImpl: void getLocationAccuracy(io.flutter.plugin.common.MethodChannel$Result,android.content.Context)
io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Builder newBuilder()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void pushPromise(int,int,java.util.List)
io.grpc.internal.RetriableStream: java.lang.Runnable commit(io.grpc.internal.RetriableStream$Substream)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData createWebResourceErrorData(androidx.webkit.WebResourceErrorCompat)
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.grpc.internal.RetriableStream: io.grpc.internal.HedgingPolicy access$900(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: IndexByteEncoder$DescendingIndexByteEncoder(com.google.firebase.firestore.index.IndexByteEncoder)
com.google.firebase.auth.PhoneAuthCredential: com.google.firebase.auth.AuthCredential zza()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
com.google.firebase.firestore.CollectionReference: CollectionReference(com.google.firebase.firestore.model.ResourcePath,com.google.firebase.firestore.FirebaseFirestore)
com.google.android.gms.maps.internal.zzbz: void zzb(android.os.Bundle,android.os.Bundle)
com.google.protobuf.FloatArrayList: boolean add(java.lang.Float)
io.grpc.NameResolver$ConfigOrError: NameResolver$ConfigOrError(io.grpc.Status)
com.google.android.gms.common.data.zaf: zaf()
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Transformer getTransformer()
com.google.firebase.firestore.remote.WatchChangeAggregator: WatchChangeAggregator(com.google.firebase.firestore.remote.WatchChangeAggregator$TargetMetadataProvider)
com.google.firebase.firestore.remote.RemoteStore$1: void onWatchChange(com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.remote.WatchChange)
com.google.protobuf.LazyStringArrayList: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
com.google.protobuf.NewInstanceSchemas: com.google.protobuf.NewInstanceSchema loadSchemaForFullRuntime()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeString(int,java.lang.String)
com.google.android.gms.common.zzf: zzf(byte[])
io.grpc.internal.ServiceConfigUtil$LbConfig: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzaep: java.lang.reflect.Field zzC(java.lang.Class,java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
com.google.android.gms.internal.firebase-auth-api.zzhm: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzaaf: int hashCode()
io.grpc.CompositeCallCredentials$CombiningMetadataApplier: void fail(io.grpc.Status)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
io.grpc.internal.ForwardingClientStream: void setAuthority(java.lang.String)
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: ManagedChannelRegistry$ManagedChannelPriorityAccessor()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnFailureListener(android.app.Activity,com.google.android.gms.tasks.OnFailureListener)
io.grpc.okhttp.OkHttpClientTransport: void setInUse(io.grpc.okhttp.OkHttpClientStream)
com.google.protobuf.MapFieldSchemaLite: java.util.Map forMutableMapData(java.lang.Object)
io.grpc.internal.Http2Ping: Http2Ping(long,com.google.common.base.Stopwatch)
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)
com.google.firebase.auth.internal.zzax: boolean zzf(android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser)
com.google.firebase.firestore.core.EventManager: void removeSnapshotsInSyncListener(com.google.firebase.firestore.EventListener)
com.google.android.gms.common.Feature: Feature(java.lang.String,int,long)
com.google.android.gms.common.api.internal.zabq: void zaK()
com.google.firebase.auth.PhoneAuthCredential: boolean zzi()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error valueOf(java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedArray(android.os.Parcel,int,android.os.Parcelable[],int,boolean)
com.google.android.gms.internal.firebase-auth-api.zziw: zziw()
com.google.firebase.auth.FirebaseAuthRegistrar: com.google.firebase.auth.FirebaseAuth lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.grpc.internal.CompositeReadableBuffer: void readBytes(java.io.OutputStream,int)
io.flutter.plugins.firebase.auth.AuthStateChannelStreamHandler: AuthStateChannelStreamHandler(com.google.firebase.auth.FirebaseAuth)
com.google.firebase.firestore.util.LogicUtils: boolean isDisjunctionOfFieldFiltersAndFlatConjunctions(com.google.firebase.firestore.core.Filter)
com.google.firebase.messaging.ServiceStarter: java.lang.String resolveServiceClassName(android.content.Context,android.content.Intent)
io.grpc.internal.ServiceConfigUtil: io.grpc.internal.ServiceConfigUtil$LbConfig unwrapLoadBalancingConfig(java.util.Map)
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: SquelchLateMessagesAvailableDeframerListener(io.grpc.internal.MessageDeframer$Listener)
com.google.android.gms.internal.firebase-auth-api.zzdh: zzdh(java.lang.Class)
com.google.android.gms.maps.model.Circle: void setRadius(double)
com.google.android.gms.internal.firebase-auth-api.zzmu: int zza()
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl$LbHelperImpl access$900(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.common.internal.BaseGmsClient: void onConnectedLocked(android.os.IInterface)
com.google.firebase.auth.zzag: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
com.google.android.gms.internal.firebase-auth-api.zznk: zznk()
com.google.android.gms.internal.firebase-auth-api.zzpr: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.security.interfaces.ECPublicKey zzj(java.security.spec.ECParameterSpec,int,byte[])
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.DocumentMask encodeDocumentMask(com.google.firebase.firestore.model.mutation.FieldMask)
com.google.android.gms.common.internal.ClientSettings: java.lang.Integer zab()
com.google.android.gms.internal.stats.zzg: zzg(com.google.android.gms.internal.stats.zzf)
com.google.firebase.firestore.bundle.BundledDocumentMetadata: boolean exists()
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zzc()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: boolean equals(java.lang.Object)
com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers()
com.google.android.gms.internal.safetynet.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationOptions parseArguments(java.util.Map)
com.google.android.gms.maps.zzah: zzah(android.view.ViewGroup,android.content.Context,com.google.android.gms.maps.GoogleMapOptions)
io.flutter.plugins.googlemaps.PolygonsController: void changePolygons(java.util.List)
com.google.android.gms.common.util.Base64Utils: byte[] decodeUrlSafeNoPadding(java.lang.String)
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean getAllDescendants()
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
com.google.firebase.firestore.LoadBundleTaskProgress: int getTotalDocuments()
com.google.android.gms.common.api.internal.GoogleApiManager: long zac(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.firebase.firestore.remote.TargetState: void recordPendingTargetRequest()
com.google.firebase.firestore.core.ArrayContainsAnyFilter: boolean matches(com.google.firebase.firestore.model.Document)
io.grpc.internal.ManagedChannelImpl: void maybeTerminateChannel()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: float getFloat(java.lang.Object,long)
com.google.protobuf.CodedOutputStreamWriter: void writeSFixed32List(int,java.util.List,boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeByteArrayNoTag(byte[],int,int)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
com.google.android.gms.internal.firebase-auth-api.zzabt: void zza(com.google.android.gms.internal.firebase-auth-api.zzabx,com.google.android.gms.internal.firebase-auth-api.zzabx)
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.firestore.remote.TargetChange createSynthesizedTargetChangeForCurrentChange(boolean)
com.google.firebase.firestore.model.ObjectValue: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
com.google.android.gms.internal.maps.zzy: boolean zzB(com.google.android.gms.internal.maps.zzaa)
com.google.android.gms.common.api.internal.zzd: void onResume()
com.google.android.gms.internal.firebase-auth-api.zzhe: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
com.google.firebase.components.Component: boolean isValue()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
com.squareup.okhttp.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)
io.grpc.internal.GrpcUtil$4: java.util.concurrent.ScheduledExecutorService create()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.util.Map)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: float readFloat(android.os.Parcel,int)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
com.google.android.gms.maps.internal.zza: java.lang.Boolean zzb(byte)
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.AbstractStream$TransportState transportState()
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzrr: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzmw: void zzl(com.google.android.gms.internal.firebase-auth-api.zzmw,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
com.google.android.gms.internal.firebase-auth-api.zzul: void zzb()
androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: int hashCode()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloat(android.os.Parcel,int,float)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
com.google.android.gms.location.LocationResult: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.FloatArrayList: int hashCode()
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext access$1500(io.grpc.internal.InternalSubchannel)
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ExecutorService newNetworkIOExecutor()
com.google.android.gms.internal.firebase-auth-api.zzuw: zzuw(java.lang.String,com.google.firebase.auth.ActionCodeSettings,java.lang.String,java.lang.String)
io.grpc.internal.DelayedClientCall$DelayedListener: void onHeaders(io.grpc.Metadata)
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
com.google.android.gms.internal.firebase-auth-api.zzsg: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaeo: int zzh(java.lang.Class)
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
com.google.android.gms.internal.firebase-auth-api.zzno: com.google.android.gms.internal.firebase-auth-api.zzmp zza()
okio.Okio$2: Okio$2(okio.Timeout,java.io.InputStream)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions visible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzaby: java.lang.Object remove(int)
com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder: com.google.android.gms.common.internal.TelemetryLoggingOptions build()
io.grpc.internal.DnsNameResolver$Resolve$1: void run()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$Order encodeOrderBy(com.google.firebase.firestore.core.OrderBy)
io.grpc.okhttp.OkHttpClientStream: int access$1102(io.grpc.okhttp.OkHttpClientStream,int)
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String getName()
com.google.android.gms.internal.firebase-auth-api.zzaek: java.lang.Object zzf(int)
io.grpc.internal.InternalSubchannel$CallTracingTransport: InternalSubchannel$CallTracingTransport(io.grpc.internal.ConnectionClientTransport,io.grpc.internal.CallTracer,io.grpc.internal.InternalSubchannel$1)
kotlin.jvm.internal.Lambda: int getArity()
com.google.protobuf.SchemaUtil: int computeSizeSInt64ListNoTag(java.util.List)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions maxZoomPreference(float)
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.zzw zzb(com.google.android.gms.tasks.zzd)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setSupportMultipleWindows(java.lang.Long,java.lang.Boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: SchedulerConfig()
okio.RealBufferedSink: void flush()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzku: void zzf(com.google.android.gms.internal.firebase-auth-api.zzku,com.google.android.gms.internal.firebase-auth-api.zzld)
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zza()
com.google.firebase.auth.zzk: zzk(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseAuth$AuthStateListener)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: Uploader(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.ClientHealthMetricsStore)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long ensureTransportContext(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)
io.grpc.internal.Rescheduler: long access$500(io.grpc.internal.Rescheduler)
io.grpc.okhttp.OkHttpClientStream: io.grpc.okhttp.OkHttpClientStream$TransportState transportState()
androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String hexAV()
com.google.android.datatransport.cct.CctTransportBackend: java.io.InputStream maybeUnGzip(java.io.InputStream,java.lang.String)
com.google.firebase.firestore.remote.RemoteStore: void handleWriteHandshakeError(io.grpc.Status)
com.google.android.gms.location.zzae: zzae(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugins.googlemaps.CircleController: boolean consumeTapEvents()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: void buildOverlays()
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.firebase.firestore.QuerySnapshot: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzE(int)
io.grpc.internal.AbstractClientStream$TransportState: void deframerClosed(boolean)
com.google.android.gms.internal.firebase-auth-api.zzgb: java.util.Set zzm()
com.google.firebase.firestore.auth.User: java.lang.String getUid()
com.google.android.gms.cloudmessaging.zze: zze(com.google.android.gms.cloudmessaging.CloudMessagingReceiver,android.content.Intent,android.content.Context,boolean,android.content.BroadcastReceiver$PendingResult)
io.grpc.ForwardingChannelBuilder: io.grpc.ForwardingChannelBuilder usePlaintext()
com.google.firebase.auth.internal.zzx: java.util.List getProviderData()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: java.lang.String getPolicyName()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: android.os.Bundle getMetadata(android.content.Context)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzH(int,int)
com.google.firebase.firestore.util.Util: com.google.firebase.firestore.FirebaseFirestoreException exceptionFromStatus(io.grpc.Status)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzjo: int zza()
io.grpc.internal.SerializingExecutor: void schedule(java.lang.Runnable)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
com.google.protobuf.FloatArrayList: void addFloat(float)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzacj: void clear()
com.google.firebase.messaging.GmsRpc: void setDefaultAttributesToBundle(java.lang.String,java.lang.String,android.os.Bundle)
com.google.protobuf.MessageSchema: MessageSchema(int[],java.lang.Object[],int,int,com.google.protobuf.MessageLite,boolean,boolean,int[],int,int,com.google.protobuf.NewInstanceSchema,com.google.protobuf.ListFieldSchema,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MapFieldSchema)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
com.google.firebase.auth.zze: java.lang.String getProvider()
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzf(java.lang.String)
com.google.firebase.firestore.model.DocumentSet: int indexOf(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.ListenerRegistration addSnapshotsInSyncListener(java.util.concurrent.Executor,android.app.Activity,java.lang.Runnable)
com.google.android.gms.maps.internal.zzby: void setRotateGesturesEnabled(boolean)
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp getCommitTime()
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString$ByteIterator iterator()
com.google.common.base.VerifyException: VerifyException(java.lang.String)
com.google.firebase.firestore.local.LocalStore: int getHighestUnacknowledgedBatchId()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper scrollBy(float,float)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
io.grpc.NameResolver$ConfigOrError: java.lang.Object getConfig()
com.google.android.gms.internal.firebase-auth-api.zzfq: com.google.android.gms.internal.firebase-auth-api.zzap zza(java.lang.String)
com.google.protobuf.UnmodifiableLazyStringList$1: boolean hasNext()
androidx.core.app.Person: java.lang.String getUri()
com.google.android.gms.cloudmessaging.zzw: void onComplete(com.google.android.gms.tasks.Task)
com.google.android.gms.common.api.internal.zzb: com.google.android.gms.common.api.internal.zzb zzc(android.app.Activity)
com.google.firebase.firestore.remote.AbstractStream: void cancelHealthCheck()
com.google.firebase.firestore.local.SQLiteSchema: void addTargetCount()
com.google.firebase.firestore.DocumentReference: java.lang.String getPath()
io.grpc.okhttp.OkHttpChannelBuilder$1: void close(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzg(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.protobuf.TextFormatEscaper: java.lang.String escapeBytes(com.google.protobuf.ByteString)
com.google.firestore.admin.v1.Index$IndexField$Order$1: Index$IndexField$Order$1()
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenCreationTimestamp(long)
com.google.android.gms.internal.firebase-auth-api.zzwk: zzwk(com.google.android.gms.common.api.internal.LifecycleFragment,java.util.List)
com.google.android.gms.common.api.internal.zacd: void onComplete(com.google.android.gms.tasks.Task)
com.google.android.gms.common.util.DefaultClock: long currentTimeMillis()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbp zze(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzmw,boolean)
com.google.firebase.messaging.WithinAppServiceConnection: com.google.android.gms.tasks.Task sendIntent(android.content.Intent)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)
io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl: void onDownloadStart(android.webkit.DownloadListener,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi$Reply)
io.grpc.internal.ManagedChannelImpl$RealChannel: java.util.concurrent.atomic.AtomicReference access$3100(io.grpc.internal.ManagedChannelImpl$RealChannel)
com.google.android.gms.internal.firebase-auth-api.zzgm: zzgm(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzhg,byte[])
okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()
com.google.android.gms.internal.firebase-auth-api.zzre: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.model.mutation.MutationBatchResult: MutationBatchResult(com.google.firebase.firestore.model.mutation.MutationBatch,com.google.firebase.firestore.model.SnapshotVersion,java.util.List,com.google.protobuf.ByteString,com.google.firebase.database.collection.ImmutableSortedMap)
com.google.android.gms.internal.firebase-auth-api.zzry: java.lang.String zzb()
com.google.common.collect.ImmutableList: java.lang.Object set(int,java.lang.Object)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.LatLng getCenter()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task linkUserWithCredential(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzb()
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.Transaction update(com.google.firebase.firestore.DocumentReference,com.google.firebase.firestore.core.UserData$ParsedUpdateData)
com.lyokone.location.FlutterLocationService: void setResult(io.flutter.plugin.common.MethodChannel$Result)
okio.RealBufferedSink: okio.BufferedSink writeShort(int)
com.lyokone.location.FlutterLocation: FlutterLocation(android.content.Context,android.app.Activity)
io.grpc.internal.DelayedClientCall$DelayedListener: DelayedClientCall$DelayedListener(io.grpc.ClientCall$Listener)
com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder: void configure(com.google.firebase.encoders.config.EncoderConfig)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
com.google.protobuf.CodedInputStreamReader: boolean readBool()
com.google.firestore.v1.StructuredQuery: int getFromCount()
com.google.android.gms.internal.firebase-auth-api.zzaaj: java.lang.Object get(int)
com.google.android.gms.internal.firebase-auth-api.zzaby: boolean contains(java.lang.Object)
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
io.grpc.okhttp.OkHttpReadableBuffer: void skipBytes(int)
okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
com.google.android.gms.internal.firebase-auth-api.zznb: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.model.Polygon: void setFillColor(int)
com.tekartik.sqflite.SqflitePlugin$1: SqflitePlugin$1(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.SqflitePlugin$BgResult,com.tekartik.sqflite.Database)
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat getIconCompat()
com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder: MessagingClientEventExtension$Builder()
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
io.grpc.internal.ClientCallImpl: java.lang.String toString()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument setHasCommittedMutations()
com.google.firestore.v1.ListenRequest$Builder: com.google.firestore.v1.ListenRequest$Builder setDatabase(java.lang.String)
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setEncoding(com.google.android.datatransport.Encoding)
io.grpc.okhttp.internal.Protocol: java.lang.String toString()
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.CollectionReference collection(java.lang.String)
com.google.firebase.firestore.core.UserData$ParseAccumulator: void addToFieldMask(com.google.firebase.firestore.model.FieldPath)
io.grpc.internal.ManagedChannelImpl$1PanicSubchannelPicker: ManagedChannelImpl$1PanicSubchannelPicker(io.grpc.internal.ManagedChannelImpl,java.lang.Throwable)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
io.grpc.ClientInterceptors$2: void request(int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: JsonValueObjectEncoderContext(java.io.Writer,java.util.Map,java.util.Map,com.google.firebase.encoders.ObjectEncoder,boolean)
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlp zzb()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzacd: java.lang.Object zzf(java.lang.Object,java.lang.String)
com.google.firebase.firestore.DocumentChange: com.google.firebase.firestore.DocumentChange$Type getType(com.google.firebase.firestore.core.DocumentViewChange)
com.baseflow.geolocator.location.FusedLocationClient: int toPriority(com.baseflow.geolocator.location.LocationAccuracy)
com.google.firebase.firestore.local.SQLiteSchema: void dropV1TargetCache()
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.View$DocumentChanges computeDocChanges(com.google.firebase.database.collection.ImmutableSortedMap)
io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer: void run()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzi(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzb(java.lang.String)
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: SmallSortedMap$DescendingEntryIterator(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)
io.grpc.internal.ManagedChannelImpl$1PrepareToLoseNetworkRunnable: void run()
io.grpc.internal.RetriableStream$Substream: RetriableStream$Substream(int)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: void clearSafely()
com.google.firebase.firestore.model.ServerTimestamps: com.google.firestore.v1.Value getPreviousValue(com.google.firestore.v1.Value)
kotlinx.coroutines.CommonPool: CommonPool()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
com.google.android.gms.internal.firebase-auth-api.zzaew: zzaew(java.lang.String,int,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory access$000()
com.google.android.gms.internal.firebase-auth-api.zzff: int zzf()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: void writeString(java.lang.String)
com.google.android.gms.common.util.WorkSourceUtil: boolean hasWorkSourcePermission(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzsi: void zzb(java.lang.Object)
com.google.android.gms.common.internal.zzo: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzoo: byte[] zza(byte[],java.lang.String,byte[],byte[],int,int)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
androidx.fragment.app.Fragment: void onStop()
com.google.android.gms.internal.firebase-auth-api.zzmg: zzmg(com.google.android.gms.internal.firebase-auth-api.zzmf)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
com.google.firebase.firestore.remote.Datastore: Datastore(com.google.firebase.firestore.core.DatabaseInfo,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider,android.content.Context,com.google.firebase.firestore.remote.GrpcMetadataProvider)
com.google.protobuf.SchemaUtil: void writeEnumList(int,java.util.List,com.google.protobuf.Writer,boolean)
io.flutter.plugins.urllauncher.WebViewActivity: void onDestroy()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.grpc.okhttp.OkHttpClientStream$TransportState: void http2ProcessingFailed(io.grpc.Status,boolean,io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzabs: com.google.android.gms.internal.firebase-auth-api.zzacz zzb(java.lang.Class)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: boolean onCreateWindow(android.webkit.WebView,android.os.Message,android.webkit.WebView)
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.android.gms.internal.firebase-auth-api.zzyn zzd(com.google.firebase.auth.ActionCodeSettings)
com.google.firebase.firestore.remote.TargetState: void markCurrent()
io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl: void postMessage(io.flutter.plugins.webviewflutter.JavaScriptChannel,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi$Reply)
com.google.android.gms.internal.firebase-auth-api.zzrq: zzrq(com.google.firebase.auth.PhoneMultiFactorInfo,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zza(com.google.android.gms.internal.firebase-auth-api.zzxu,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.android.gms.common.api.internal.zabt: void run()
com.google.android.gms.internal.firebase-auth-api.zzcy: java.util.Map zzc()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setMessagingSenderId(java.lang.String)
io.grpc.InternalMetadata: io.grpc.Metadata$Key keyOf(java.lang.String,io.grpc.InternalMetadata$TrustedAsciiMarshaller)
com.lyokone.location.BackgroundNotification: void updateChannel(java.lang.String)
com.google.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)
io.grpc.okhttp.OkHttpClientStream: void access$600(io.grpc.okhttp.OkHttpClientStream,int)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel(io.grpc.internal.ManagedChannelImpl$SubchannelImpl)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall: ManagedChannelImpl$RealChannel$PendingCall(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.Context,io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.firebase.firestore.remote.FirestoreChannel$1: FirestoreChannel$1(com.google.firebase.firestore.remote.FirestoreChannel,com.google.firebase.firestore.remote.IncomingStreamObserver,io.grpc.ClientCall[])
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.android.gms.internal.firebase-auth-api.zzuz: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
androidx.fragment.app.FragmentActivity: void onStart()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString substring(int,int)
com.google.firebase.messaging.MessagingAnalytics: boolean shouldUploadScionMetrics(android.content.Intent)
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.model.ResourcePath decodeName(java.lang.String)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
com.tekartik.sqflite.LogLevel: boolean hasVerboseLevel(int)
com.google.android.gms.cloudmessaging.zzm: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzl(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzlc zza()
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator identityTranslator()
io.grpc.internal.ManagedChannelImpl: boolean access$7600(io.grpc.internal.ManagedChannelImpl)
io.grpc.internal.DnsNameResolver$Resolve: DnsNameResolver$Resolve(io.grpc.internal.DnsNameResolver,io.grpc.NameResolver$Listener2)
com.google.android.gms.internal.firebase-auth-api.zzhf: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()
io.grpc.Metadata: void merge(io.grpc.Metadata)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall build()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void loadData(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.components.ComponentRuntime: java.util.List iterableToList(java.lang.Iterable)
io.grpc.internal.RetriableStream$ChannelBufferMeter: long addAndGet(long)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void requestLoading(java.lang.Long,java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
androidx.fragment.app.Fragment: android.content.Context getContext()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.google.android.gms.internal.firebase-auth-api.zzvn: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzed: zzed()
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApiCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzuv: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: void onCodeAutoRetrievalTimeOut(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.gms.internal.firebase-auth-api.zzoh: byte[] zza(byte[])
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean)
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator valueOf(java.lang.String)
com.google.protobuf.RopeByteString: int size()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
com.google.firebase.firestore.core.UserData$ParseContext: UserData$ParseContext(com.google.firebase.firestore.core.UserData$ParseAccumulator,com.google.firebase.firestore.model.FieldPath,boolean,com.google.firebase.firestore.core.UserData$1)
io.grpc.internal.ClientCallImpl: void halfClose()
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zzd()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
com.google.protobuf.DoubleArrayList: java.lang.Double set(int,java.lang.Double)
com.google.protobuf.ByteString$LiteralByteString: int partialIsValidUtf8(int,int,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)
io.grpc.internal.ClientCallImpl$1ClosedByNotFoundCompressor: void runInContext()
io.grpc.internal.SharedResourceHolder: java.lang.Object get(io.grpc.internal.SharedResourceHolder$Resource)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: void handleRemoteEvent(com.google.firebase.firestore.remote.RemoteEvent)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] values()
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry emptyInstance()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxz: boolean zzg()
com.google.protobuf.CodedInputStreamReader: void readStringListInternal(java.util.List,boolean)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.scheduling.persistence.EventStore getEventStore()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
io.grpc.internal.ManagedChannelImpl$RealChannel$1: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
io.grpc.okhttp.OkHttpClientTransport: java.lang.String readUtf8LineStrictUnbuffered(okio.Source)
com.google.android.gms.common.internal.zzk: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.model.TileOverlayOptions: TileOverlayOptions(android.os.IBinder,boolean,float,boolean,float)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()
io.grpc.internal.MessageFramer$OutputStreamAdapter: MessageFramer$OutputStreamAdapter(io.grpc.internal.MessageFramer)
io.grpc.internal.DelayedStream$6: DelayedStream$6(io.grpc.internal.DelayedStream,java.io.InputStream)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.grpc.internal.MessageFramer: int getKnownLength(java.io.InputStream)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: java.lang.String access$500(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder)
com.google.android.gms.common.api.internal.zah: zah(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.tasks.TaskCompletionSource)
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
com.google.firebase.messaging.TopicsSyncTask: void run()
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.google.android.gms.common.api.internal.zaae: zaae(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.GoogleApiAvailability)
com.google.android.gms.cloudmessaging.zzp: void zzd(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void populateLogSourcesMetrics(com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder,java.util.Map)
io.grpc.InternalConfigSelector$Result$Builder: InternalConfigSelector$Result$Builder()
io.grpc.internal.CallCredentialsApplyingTransportFactory: io.grpc.internal.ConnectionClientTransport newClientTransport(java.net.SocketAddress,io.grpc.internal.ClientTransportFactory$ClientTransportOptions,io.grpc.ChannelLogger)
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions$Builder setCallbacks(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks)
com.google.android.gms.cloudmessaging.zzx: com.google.android.gms.tasks.Task then(java.lang.Object)
com.google.protobuf.UnknownFieldSetLite: void writeTo(com.google.protobuf.Writer)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void setUserCallbackHandle(long)
com.google.firebase.messaging.TopicsSyncTask: java.lang.String createPermissionMissingLog(java.lang.String)
com.google.firebase.auth.GithubAuthCredential: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(com.google.firebase.auth.GithubAuthCredential,java.lang.String)
io.grpc.internal.MessageDeframer: void close()
io.flutter.plugins.packageinfo.PackageInfoPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)
io.grpc.InternalChannelz: long id(io.grpc.InternalWithLogId)
com.google.firebase.firestore.remote.WatchChange$DocumentChange: int hashCode()
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.google.firebase.firestore.local.LocalStore: void saveBundle(com.google.firebase.firestore.bundle.BundleMetadata)
com.tekartik.sqflite.SqflitePlugin$6: SqflitePlugin$6(com.tekartik.sqflite.SqflitePlugin,boolean,java.lang.String,com.tekartik.sqflite.SqflitePlugin$BgResult,java.lang.Boolean,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,boolean,int)
com.google.protobuf.MessageSetSchema: boolean parseMessageSetItemOrUnknownField(com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ExtensionSchema,com.google.protobuf.FieldSet,com.google.protobuf.UnknownFieldSchema,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvj: void zzb()
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: ConnectivityMonitor$NetworkStatus(java.lang.String,int)
io.grpc.util.RoundRobinLoadBalancer: void handleNameResolutionError(io.grpc.Status)
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zze()
com.google.firebase.firestore.remote.RemoteEvent: java.util.Map getTargetChanges()
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.webviewflutter.DisplayListenerProxy: java.util.ArrayList yoinkDisplayListeners(android.hardware.display.DisplayManager)
com.google.android.gms.internal.firebase-auth-api.zzacr: int hashCode()
com.google.protobuf.CodedInputStream$StreamDecoder: int getTotalBytesRead()
com.google.android.gms.internal.firebase-auth-api.zzro: zzro(java.lang.String,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean)
com.google.firebase.firestore.core.DocumentViewChange: com.google.firebase.firestore.core.DocumentViewChange$Type getType()
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions anchor(float,float)
com.google.android.gms.internal.firebase-auth-api.zzyu: zzyu(java.lang.String,java.lang.String,java.lang.String,long)
com.google.firebase.firestore.local.LruGarbageCollector: int removeOrphanedDocuments(long)
com.google.android.gms.internal.firebase-auth-api.zzabc: zzabc(java.lang.Throwable)
com.google.android.gms.maps.model.Marker: void hideInfoWindow()
com.google.android.gms.maps.zza: boolean zzb(com.google.android.gms.internal.maps.zzx)
com.google.firebase.firestore.remote.RemoteStore: void access$400(com.google.firebase.firestore.remote.RemoteStore)
com.google.android.gms.internal.firebase-auth-api.zzjt: zzjt()
io.grpc.okhttp.internal.framed.Http2$Reader: void readWindowUpdate(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
com.google.android.gms.internal.firebase-auth-api.zzjk: zzjk()
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: com.google.firebase.firestore.model.SnapshotVersion getReadTime()
io.grpc.okhttp.OkHttpProtocolNegotiator: boolean isValidHostName(java.lang.String)
com.google.android.gms.maps.UiSettings: boolean isMapToolbarEnabled()
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zznw zzc()
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken(io.flutter.embedding.engine.dart.DartMessenger$1)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getDocumentsMatchingCollectionQuery(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics build()
com.google.android.gms.internal.firebase-auth-api.zzzj: zzzj()
io.grpc.NameResolver$ResolutionResult: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzhd: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.GrpcUtil: java.lang.String getHost(java.net.InetSocketAddress)
com.google.protobuf.Utf8$Processor: int partialIsValidUtf8(java.nio.ByteBuffer,int,int)
com.google.android.gms.common.api.Status: Status(int)
com.google.protobuf.ExtensionSchemaLite: int extensionNumber(java.util.Map$Entry)
com.google.protobuf.UnsafeUtil: void access$800(java.lang.Object,long,boolean)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()
io.grpc.internal.ManagedChannelImpl: void cancelNameResolverBackoff()
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
io.grpc.okhttp.OkHttpReadableBuffer: void readBytes(java.io.OutputStream,int)
io.grpc.internal.DelayedClientTransport: java.lang.Runnable access$600(io.grpc.internal.DelayedClientTransport)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo$Builder setPreviousAttempts(int)
io.grpc.internal.ReadableBuffers$1: ReadableBuffers$1(io.grpc.internal.ReadableBuffer)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7100(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.auth.zzf: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.CompositeReadableBuffer: void reset()
com.google.android.gms.common.api.internal.zabo: zabo(com.google.android.gms.common.api.internal.zabp)
com.google.firebase.auth.internal.zzl: java.lang.String getPreviousEmail()
com.google.firebase.messaging.FirebaseMessaging: void setAutoInitEnabled(boolean)
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.grpc.ChannelLogger$ChannelLogLevel: ChannelLogger$ChannelLogLevel(java.lang.String,int)
io.grpc.internal.ServiceConfigUtil: java.util.List getMethodConfigFromServiceConfig(java.util.Map)
com.google.android.gms.common.api.Status: com.google.android.gms.common.ConnectionResult getConnectionResult()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: java.lang.String toString()
com.google.protobuf.Timestamp$Builder: Timestamp$Builder()
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig empty()
io.grpc.internal.DelayedClientTransport$PendingStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setSdkVersion(java.lang.Integer)
com.google.gson.stream.JsonReader: void endArray()
com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.auth.internal.zzbg: com.google.firebase.auth.internal.zzx zzf(org.json.JSONObject)
com.google.protobuf.UnsafeUtil: void putBooleanBigEndian(java.lang.Object,long,boolean)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelImpl shutdownNow()
com.google.android.gms.internal.firebase-auth-api.zziv: com.google.android.gms.internal.firebase-auth-api.zziv zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlin.jvm.internal.Lambda: Lambda(int)
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPlainPool()
com.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: WorkInitializer(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzB(java.util.List)
com.google.firebase.firestore.model.mutation.SetMutation: SetMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.Precondition)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32NoTag(int)
com.google.firebase.firestore.model.Values: boolean equals(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzwi: zzwi(android.content.Context,com.google.firebase.FirebaseApp,java.lang.String)
com.google.android.gms.dynamite.zzn: zzn(com.google.android.gms.dynamite.zzm)
com.google.android.gms.internal.firebase-auth-api.zzdz: zzdz(com.google.android.gms.internal.firebase-auth-api.zzea,java.lang.Class)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
com.google.android.gms.location.zzak: java.lang.Object[] newArray(int)
com.google.protobuf.CodedOutputStreamWriter: void writeEndGroup(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.common.api.AvailabilityException: java.lang.String getMessage()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData createWebResourceRequestData(android.webkit.WebResourceRequest)
com.google.protobuf.RopeByteString: int partialHash(int,int,int)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter applyDistribution(com.google.firebase.firestore.core.Filter,com.google.firebase.firestore.core.Filter)
com.google.android.gms.internal.firebase-auth-api.zzcs: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.maps.model.VisibleRegion: boolean equals(java.lang.Object)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.grpc.okhttp.internal.framed.Hpack$Reader: int readInt(int,int)
com.google.firebase.firestore.model.Values: int upperBoundCompare(com.google.firestore.v1.Value,boolean,com.google.firestore.v1.Value,boolean)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeByteAscending(byte)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: AbstractChannel$ReceiveHasNext(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugins.googlemaps.Convert: java.lang.Float toFloatWrapper(java.lang.Object)
com.google.protobuf.UnmodifiableLazyStringList: int size()
com.google.android.gms.common.logging.Logger: java.lang.String format(java.lang.String,java.lang.Object[])
com.google.firebase.messaging.TopicsSyncTask: boolean isLoggable()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady: void runInContext()
com.google.android.gms.cloudmessaging.IMessengerCompat$Proxy: void send(android.os.Message)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MutationQueue getMutationQueue(com.google.firebase.firestore.auth.User,com.google.firebase.firestore.local.IndexManager)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
io.grpc.internal.ForwardingClientStream: void setCompressor(io.grpc.Compressor)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task queryGet(java.util.Map)
com.google.firestore.v1.Write: void access$2300(com.google.firestore.v1.Write,com.google.firestore.v1.Precondition)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logBadConfigError()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzr(java.lang.String,java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.google.protobuf.LazyField$LazyIterator: void remove()
com.google.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.firebase.firestore.model.AutoValue_FieldIndex: AutoValue_FieldIndex(int,java.lang.String,java.util.List,com.google.firebase.firestore.model.FieldIndex$IndexState)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4(java.lang.reflect.Constructor)
com.google.android.gms.internal.firebase-auth-api.zzvl: zzvl(com.google.firebase.auth.PhoneAuthCredential)
okio.AsyncTimeout: void timedOut()
kotlin.collections.EmptySet: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaci: void zzc(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)
com.google.firebase.installations.local.IidStore: java.lang.String parseIidTokenFromJson(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzsu: void zzb(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
com.google.protobuf.MessageSetSchema: void mergeFrom(java.lang.Object,byte[],int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.maps.internal.zzca: android.content.Context zzc(android.content.Context,com.google.android.gms.maps.MapsInitializer$Renderer)
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask access$000()
io.grpc.internal.RetriableStream$Sublistener: io.grpc.internal.RetriableStream$RetryPlan makeRetryDecision(io.grpc.Status,io.grpc.Metadata)
com.google.protobuf.CodedInputStreamReader: void readStringListRequireUtf8(java.util.List)
com.google.firebase.installations.GetAuthTokenListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.android.gms.dynamic.zzb: zzb(android.os.IBinder)
com.google.firestore.v1.BatchGetDocumentsRequest: void access$600(com.google.firestore.v1.BatchGetDocumentsRequest,java.lang.String)
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
com.google.protobuf.SchemaUtil: int computeSizeFixed64List(int,java.util.List,boolean)
io.flutter.plugins.googlemaps.PolylineController: void setWidth(float)
com.google.android.gms.internal.firebase-auth-api.zzov: java.lang.Object zza(java.lang.String,java.security.Provider)
androidx.fragment.app.FragmentManagerImpl: void dispatchLowMemory()
io.grpc.internal.ManagedChannelImpl: void refreshNameResolution()
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task deleteToken()
com.google.android.datatransport.runtime.AutoValue_TransportContext: byte[] getExtras()
com.google.android.gms.common.internal.TelemetryLogging: com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions)
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.ViewChange applyChanges(com.google.firebase.firestore.core.View$DocumentChanges)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.grpc.internal.GzipInflatingBuffer: int access$000(io.grpc.internal.GzipInflatingBuffer)
com.google.firestore.v1.Document$Builder: Document$Builder(com.google.firestore.v1.Document$1)
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.util.AsyncQueue getAsyncQueue()
io.grpc.Attributes$Builder: io.grpc.Attributes build()
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzpo zzb()
com.google.android.gms.internal.firebase-auth-api.zzik: zzik()
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadl: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,float,boolean)
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: ApplicationThreadDeframer$InitializingMessageProducer(io.grpc.internal.ApplicationThreadDeframer,java.lang.Runnable,io.grpc.internal.ApplicationThreadDeframer$1)
com.google.protobuf.IterableByteBufferInputStream: int read()
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.ApiKey zab(com.google.android.gms.common.api.internal.zabu)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onDetachedFromActivityForConfigChanges()
com.google.firebase.auth.internal.zzw: void setAppVerificationDisabledForTesting(boolean)
com.google.android.gms.internal.firebase-auth-api.zzsj: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzl(java.util.List)
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
com.google.android.gms.common.api.internal.zai: com.google.android.gms.common.api.Status zah(android.os.RemoteException)
com.google.firebase.installations.GetIdListener: boolean onException(java.lang.Exception)
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
com.google.android.gms.internal.firebase-auth-api.zzjf: void zzg(com.google.android.gms.internal.firebase-auth-api.zzjf,int)
io.grpc.internal.PickSubchannelArgsImpl: io.grpc.MethodDescriptor getMethodDescriptor()
com.google.firestore.v1.Target$Builder: com.google.firestore.v1.Target$Builder setResumeToken(com.google.protobuf.ByteString)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
com.google.protobuf.AbstractMessageLite: java.lang.String getSerializingExceptionMessage(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void addBackStackState(androidx.fragment.app.BackStackRecord)
com.google.firebase.firestore.local.MemoryMutationQueue: boolean containsKey(com.google.firebase.firestore.model.DocumentKey)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.grpc.ManagedChannelBuilder: io.grpc.ManagedChannelBuilder forTarget(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzut: zzut(com.google.firebase.auth.PhoneAuthCredential,java.lang.String)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String)
com.google.android.gms.maps.zzag: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ConnectivityStateManager access$500(io.grpc.internal.ManagedChannelImpl)
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.google.firebase.firestore.util.ExponentialBackoff: void resetToMax()
com.google.firebase.firestore.core.View: com.google.firebase.database.collection.ImmutableSortedSet getSyncedDocuments()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: boolean isNotRunning()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)
com.google.firebase.firestore.core.Transaction: com.google.firebase.firestore.model.mutation.Precondition preconditionForUpdate(com.google.firebase.firestore.model.DocumentKey)
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object getKey()
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()
io.flutter.plugins.googlemaps.PolygonsController: PolygonsController(io.flutter.plugin.common.MethodChannel,float)
com.google.android.gms.common.api.internal.RegisterListenerMethod: RegisterListenerMethod(com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.Feature[],boolean,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite internalGetMutableFields()
com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(boolean)
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: AutoValue_FieldIndex_Segment(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.FieldIndex$Segment$Kind)
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task set(java.lang.Object,com.google.firebase.firestore.SetOptions)
com.google.android.gms.internal.firebase-auth-api.zzak: zzak(com.google.android.gms.internal.firebase-auth-api.zzal,int,int)
com.google.android.datatransport.runtime.logging.Logging: void w(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
com.google.firebase.firestore.remote.AbstractStream: long access$100(com.google.firebase.firestore.remote.AbstractStream)
com.google.android.gms.internal.firebase-auth-api.zzzh: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.android.gms.maps.model.zzu: com.google.android.gms.maps.model.Tile zzb(int,int,int)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: java.lang.Object get()
com.google.firebase.auth.ActionCodeSettings: java.lang.String getAndroidMinimumVersion()
com.google.android.gms.common.internal.zzm: zzm()
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void removeTarget(com.google.firebase.firestore.local.TargetData)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: SQLitePersistence$OpenHelper(android.content.Context,com.google.firebase.firestore.local.LocalSerializer,java.lang.String,com.google.firebase.firestore.local.SQLitePersistence$1)
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.String toString()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
com.google.android.gms.internal.safetynet.zza: android.os.IBinder asBinder()
com.google.android.gms.internal.firebase-auth-api.zzzm: void zzd(com.google.android.gms.internal.firebase-auth-api.zzxs)
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
io.grpc.internal.GrpcUtil$3: void close(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: GoogleMapController(int,android.content.Context,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider,com.google.android.gms.maps.GoogleMapOptions)
com.google.android.gms.internal.firebase-auth-api.zzmv: com.google.android.gms.internal.firebase-auth-api.zzmv zzc(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void onPageFinished(java.lang.Long,java.lang.Long,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.grpc.internal.ForwardingReadableBuffer: ForwardingReadableBuffer(io.grpc.internal.ReadableBuffer)
com.google.firestore.v1.StructuredQuery$Filter$Builder: StructuredQuery$Filter$Builder(com.google.firestore.v1.StructuredQuery$1)
com.google.android.gms.internal.firebase-auth-api.zzji: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.model.mutation.PatchMutation: void applyToRemoteDocument(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.MutationResult)
com.google.protobuf.RopeByteString$PieceIterator: java.lang.Object next()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeInt(android.os.Parcel,int,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.google.firebase.firestore.Query: Query(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.FirebaseFirestore)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.model.mutation.MutationBatch getNextMutationBatch(int)
com.google.protobuf.Utf8: boolean isValidUtf8(byte[])
com.google.android.gms.internal.firebase-auth-api.zzkz: zzkz(com.google.android.gms.internal.firebase-auth-api.zzky)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
androidx.lifecycle.ViewModelStore: ViewModelStore()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.internal.SharedResourceHolder$Resource access$300()
io.grpc.Status: io.grpc.Status access$400(byte[])
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
io.flutter.plugins.firebase.messaging.JobIntentService$ComponentNameWithWakeful: JobIntentService$ComponentNameWithWakeful(android.content.ComponentName,boolean)
com.google.firebase.auth.zzaa: zzaa()
com.google.android.gms.internal.firebase-auth-api.zzof: byte[] zza(byte[],byte[])
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[])
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
io.grpc.NameResolver$Args: int getDefaultPort()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.google.firebase.firestore.local.QueryEngine: boolean needsRefill(com.google.firebase.firestore.core.Query,int,com.google.firebase.database.collection.ImmutableSortedSet,com.google.firebase.firestore.model.SnapshotVersion)
com.google.firebase.firestore.local.TargetData: java.lang.String toString()
io.grpc.internal.InternalSubchannel$1: void handleNotInUse()
com.squareup.okhttp.Headers: Headers(com.squareup.okhttp.Headers$Builder)
io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityState getState()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.List shutdownNow()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.grpc.okhttp.internal.framed.Header: boolean equals(java.lang.Object)
com.google.firebase.messaging.TopicsSyncTask: boolean hasWakeLockPermission(android.content.Context)
com.tekartik.sqflite.SqlCommand: java.lang.String toString(java.lang.Object)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean getIsSerial()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode colorFlip()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.lang.String readString()
com.google.firebase.messaging.FirebaseMessagingService: void onMessageSent(java.lang.String)
com.google.android.gms.maps.model.Dot: Dot()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.core.app.NotificationCompat$BigPictureStyle: java.lang.String getClassName()
com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()
com.google.firebase.messaging.FirebaseMessagingService: void handleIntent(android.content.Intent)
com.google.firebase.auth.ActionCodeSettings$Builder: boolean zzf(com.google.firebase.auth.ActionCodeSettings$Builder)
com.google.android.gms.common.api.internal.zag: boolean zaa(com.google.android.gms.common.api.internal.zabq)
com.google.firebase.auth.FirebaseAuth: java.util.List zzC(com.google.firebase.auth.FirebaseAuth)
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
com.google.android.gms.common.internal.zzo: zzo(com.google.android.gms.common.internal.zzr,com.google.android.gms.common.internal.zzn)
io.grpc.internal.DelayedClientTransport: void shutdown(io.grpc.Status)
com.google.firebase.auth.ActionCodeInfo: ActionCodeInfo()
com.google.android.gms.internal.firebase-auth-api.zzzu: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.dynamic.zac: void zab(com.google.android.gms.dynamic.LifecycleDelegate)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
io.grpc.PartialForwardingClientCall: void cancel(java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: com.google.firebase.firestore.remote.ExistenceFilter getExistenceFilter()
com.google.android.gms.internal.firebase-auth-api.zzyx: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.internal.zzg: float getMinZoomLevel()
com.google.firebase.auth.internal.zzbb: zzbb(java.util.List)
io.grpc.Metadata: byte[] streamToBytes(java.io.InputStream)
io.grpc.internal.ManagedChannelImpl: void access$1000(io.grpc.internal.ManagedChannelImpl)
io.grpc.internal.MessageDeframer$SingleMessageProducer: MessageDeframer$SingleMessageProducer(java.io.InputStream,io.grpc.internal.MessageDeframer$1)
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zzd()
com.google.firebase.messaging.NotificationParams: long[] getVibrateTimings()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView: java.util.Map access$200(java.lang.Throwable)
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.Filter parseCompositeFilter(com.google.firebase.firestore.Filter$CompositeFilter)
com.google.android.gms.safetynet.HarmfulAppsData: HarmfulAppsData(java.lang.String,byte[],int)
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
com.google.android.gms.common.api.internal.GoogleApiManager: void zaw(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.protobuf.CodedInputStreamReader: int readSInt32()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)
com.google.protobuf.LazyStringArrayList: void add(int,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzda: zzda(java.lang.Class)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.TokenResult generateAuthToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.Query: java.util.List conflictingOps(com.google.firebase.firestore.core.FieldFilter$Operator)
com.google.protobuf.SchemaUtil: void mergeExtensions(com.google.protobuf.ExtensionSchema,java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.PolylinesController: boolean onPolylineTap(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
com.google.android.gms.safetynet.SafeBrowsingData: java.lang.String getMetadata()
androidx.fragment.app.FragmentManagerImpl: void removeFragment(androidx.fragment.app.Fragment)
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder newBuilder()
com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.ByteString build()
com.google.android.gms.internal.firebase-auth-api.zzal: int zza(java.lang.Object[],int)
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator iterator()
io.grpc.internal.MessageFramer: void setMaxOutboundMessageSize(int)
com.google.android.gms.common.api.internal.zabu: void zag()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: void success(java.lang.Object)
com.google.common.collect.ImmutableList: java.util.ListIterator listIterator(int)
com.google.android.gms.internal.firebase-auth-api.zzfv: zzfv(com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzfu)
com.google.firebase.auth.zzn: zzn(com.google.firebase.auth.FirebaseAuth)
com.google.protobuf.CodedOutputStream: void writeEnumNoTag(int)
io.grpc.Metadata$LazyValue: byte[] toBytes()
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.lang.Object get()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readInt64()
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode)
com.google.firebase.auth.zzq: void onVerificationFailed(com.google.firebase.FirebaseException)
com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
com.google.firebase.firestore.model.mutation.Mutation: boolean hasSameKeyAndPrecondition(com.google.firebase.firestore.model.mutation.Mutation)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
com.google.android.gms.internal.firebase-auth-api.zzyi: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
com.lyokone.location.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner: void run(java.lang.Runnable)
com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object previous()
com.google.firebase.firestore.FieldPath: FieldPath(java.util.List)
com.google.firebase.messaging.FirebaseMessagingService: void dispatchMessage(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzh: java.lang.Object next()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.firebase.firestore.remote.RemoteStore: void startWriteStream()
io.grpc.internal.DelayedStream$6: void run()
com.google.android.gms.internal.firebase-auth-api.zzacy: com.google.android.gms.internal.firebase-auth-api.zzacx zzb()
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp getDefaultInstance()
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: void saveOverlays(int,java.util.Map)
com.google.android.gms.common.internal.GetServiceRequest: java.lang.String zza()
com.google.firestore.v1.CommitRequest: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int window()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onDetachedFromActivityForConfigChanges()
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: java.util.Map getOverlays(java.lang.String,int,int)
com.google.common.collect.ComparatorOrdering: int compare(java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.internal.ClientInfo$Builder: ClientInfo$Builder()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.google.android.gms.internal.firebase-auth-api.zzbf: zzbf(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzL(com.google.android.gms.internal.firebase-auth-api.zzyn,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.grpc.internal.ClientCallImpl$ContextCancellationListener: ClientCallImpl$ContextCancellationListener(io.grpc.internal.ClientCallImpl,io.grpc.internal.ClientCallImpl$1)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
com.google.firebase.auth.internal.zzar: void onFailure(java.lang.Exception)
com.google.android.gms.maps.model.Polygon: void setHoles(java.util.List)
io.flutter.plugins.googlemaps.Convert: java.lang.Object cameraPositionToJson(com.google.android.gms.maps.model.CameraPosition)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
com.google.common.util.concurrent.ThreadFactoryBuilder$1: ThreadFactoryBuilder$1(java.util.concurrent.ThreadFactory,java.lang.String,java.util.concurrent.atomic.AtomicLong,java.lang.Boolean,java.lang.Integer,java.lang.Thread$UncaughtExceptionHandler)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
okio.RealBufferedSource: int read(java.nio.ByteBuffer)
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzme zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.Query$Direction: Query$Direction(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzf(com.google.android.gms.internal.firebase-auth-api.zzse)
com.google.firebase.auth.internal.zzbi: void zze(com.google.android.gms.internal.firebase-auth-api.zzyq)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.firestore.FirebaseFirestoreException$Code: int value()
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String encodeResourceName(com.google.firebase.firestore.model.DatabaseId,com.google.firebase.firestore.model.ResourcePath)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzq(com.google.android.gms.internal.firebase-auth-api.zzqw,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzz(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String,com.google.firebase.auth.internal.zzg)
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
androidx.webkit.WebViewClientCompat: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
kotlinx.coroutines.EventLoopImplBase: void shutdown()
com.google.android.gms.common.api.Scope: java.lang.String toString()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.inject.Provider zzy()
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
com.google.firebase.firestore.util.Util: java.lang.StringBuilder repeatSequence(java.lang.CharSequence,int,java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zza()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.local.TargetData withResumeToken(com.google.protobuf.ByteString,com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.gms.internal.firebase-auth-api.zzmv: com.google.android.gms.internal.firebase-auth-api.zzmv zzb(int)
com.google.protobuf.LazyField$LazyEntry: LazyField$LazyEntry(java.util.Map$Entry)
com.google.firebase.firestore.core.Target: java.util.Collection getNotInValues(com.google.firebase.firestore.model.FieldIndex)
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.android.gms.tasks.Task registerHeartBeat()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
com.google.firebase.auth.zzo: zzo(com.google.firebase.auth.FirebaseAuth,java.lang.String,long,java.util.concurrent.TimeUnit,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,android.app.Activity,java.util.concurrent.Executor,boolean)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: WatchChange$WatchTargetChangeType(java.lang.String,int)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder transportExecutor(java.util.concurrent.Executor)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source valueOf(java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task documentGet(java.util.Map)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.firebase-auth-api.zzaq: zzaq(java.io.OutputStream)
com.google.type.LatLng: com.google.type.LatLng getDefaultInstance()
io.grpc.ConnectivityStateInfo: io.grpc.Status getStatus()
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: FirebaseFirestoreSettings$Builder(com.google.firebase.firestore.FirebaseFirestoreSettings)
io.grpc.internal.DelayedStream$9: void run()
com.google.android.gms.internal.firebase-auth-api.zznb: zznb()
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder setEndMs(long)
com.google.android.gms.internal.firebase-auth-api.zzaau: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.internal.firebase-auth-api.zzep: int zzc(int)
io.grpc.internal.ManagedChannelServiceConfig: java.util.Map getHealthCheckingConfig()
com.google.android.gms.location.LocationResult: android.location.Location getLastLocation()
com.google.android.gms.internal.firebase-auth-api.zzrr: java.lang.Object[] newArray(int)
io.grpc.internal.FailingClientTransport: FailingClientTransport(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.TokenResult readGenerateAuthTokenResponse(java.net.HttpURLConnection)
com.google.android.gms.internal.firebase-auth-api.zzck: java.lang.String zzc()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onConfigure(android.database.sqlite.SQLiteDatabase)
com.google.firebase.messaging.SharedPreferencesQueue: boolean checkAndSyncState(boolean)
com.google.firebase.firestore.core.UserData$ParsedUpdateData: com.google.firebase.firestore.model.mutation.Mutation toMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzi(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,java.lang.String,com.google.firebase.auth.internal.zzbk)
com.google.android.gms.internal.firebase-auth-api.zzdo: java.nio.ByteBuffer zzc(byte[],int)
com.google.android.gms.internal.maps.zzah: zzah(android.os.IBinder)
io.grpc.okhttp.internal.framed.Hpack$Reader: void adjustDynamicTableByteCount()
com.google.android.gms.internal.firebase-auth-api.zzpy: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabx zzb(com.google.android.gms.internal.firebase-auth-api.zzabx,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzabk)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzd(long[])
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteLruReferenceDelegate getReferenceDelegate()
com.google.android.gms.internal.firebase-auth-api.zzaeb: void clear()
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isErrored()
io.grpc.internal.SerializeReentrantCallsDirectExecutor: void enqueue(java.lang.Runnable)
com.google.firebase.firestore.model.mutation.PatchMutation: java.util.List getFieldTransformPaths()
com.google.android.gms.internal.firebase-auth-api.zzaeo: int zzj(java.lang.Object,long)
io.grpc.internal.RetriableStream: java.util.concurrent.Executor access$1200(io.grpc.internal.RetriableStream)
io.grpc.okhttp.AsyncSink: void write(okio.Buffer,long)
com.lyokone.location.NotificationOptions: int hashCode()
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi: GeneratedAndroidWebView$DownloadListenerFlutterApi(io.flutter.plugin.common.BinaryMessenger)
com.google.firebase.messaging.Constants$MessagePayloadKeys: androidx.collection.ArrayMap extractDeveloperDefinedPayload(android.os.Bundle)
com.google.firebase.auth.internal.zzl: zzl(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: void error(java.lang.Throwable)
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)
io.grpc.okhttp.OutboundFlowController: boolean initialOutboundWindowSize(int)
com.google.android.gms.maps.GoogleMap: void moveCamera(com.google.android.gms.maps.CameraUpdate)
com.google.android.gms.internal.firebase-auth-api.zzbd: zzbd(com.google.android.gms.internal.firebase-auth-api.zzbd)
io.grpc.internal.SharedResourceHolder: SharedResourceHolder(io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory)
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String getBestProvider(android.location.LocationManager,com.baseflow.geolocator.location.LocationAccuracy)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
com.google.android.gms.internal.firebase-auth-api.zzur: void zzb()
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.WriteStream createWriteStream(com.google.firebase.firestore.remote.WriteStream$Callback)
io.grpc.okhttp.Utils: io.grpc.Metadata convertTrailers(java.util.List)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
com.google.protobuf.UnknownFieldSetLiteSchema: void addGroup(com.google.protobuf.UnknownFieldSetLite,int,com.google.protobuf.UnknownFieldSetLite)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzip zzb(com.google.android.gms.internal.firebase-auth-api.zzln)
com.google.protobuf.CodedOutputStream: int computeSFixed64Size(int,long)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: java.util.List getLogSourceMetricsList()
io.flutter.plugins.googlemaps.Convert: java.util.Map toObjectMap(java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsClient getSettingsClient(android.content.Context)
com.google.android.gms.common.api.Status: Status(com.google.android.gms.common.ConnectionResult,java.lang.String)
com.google.firebase.messaging.FcmBroadcastProcessor: com.google.android.gms.tasks.Task startMessagingService(android.content.Context,android.content.Intent)
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.grpc.SynchronizationContext$1: SynchronizationContext$1(io.grpc.SynchronizationContext,io.grpc.SynchronizationContext$ManagedRunnable,java.lang.Runnable)
com.google.android.datatransport.runtime.SendRequest: SendRequest()
io.grpc.NameResolver$ResolutionResult: NameResolver$ResolutionResult(java.util.List,io.grpc.Attributes,io.grpc.NameResolver$ConfigOrError)
com.google.firebase.auth.internal.zzaf: java.lang.Object[] newArray(int)
com.google.firebase.firestore.remote.RemoteStore$2: void onHandshakeComplete()
com.google.firebase.components.EventBus: void publish(com.google.firebase.events.Event)
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzA(com.google.android.gms.internal.firebase-auth-api.zzadc,com.google.android.gms.internal.firebase-auth-api.zzado)
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.NameResolver$ConfigOrError access$302(io.grpc.internal.DnsNameResolver$InternalResolutionResult,io.grpc.NameResolver$ConfigOrError)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeArrayValue(com.google.firestore.v1.Value$Builder,org.json.JSONArray)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.ImmutableSortedMap insert(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmo zza()
com.google.android.gms.internal.firebase-auth-api.zzxg: zzxg(com.google.android.gms.internal.firebase-auth-api.zzwt,long)
com.google.android.gms.internal.firebase-auth-api.zzabm: void zzf(com.google.android.gms.internal.firebase-auth-api.zzadn,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabk,com.google.android.gms.internal.firebase-auth-api.zzabp)
com.google.firebase.firestore.local.MemoryMutationQueue: MemoryMutationQueue(com.google.firebase.firestore.local.MemoryPersistence,com.google.firebase.firestore.auth.User)
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zze(float)
com.google.protobuf.MessageSchema: boolean isMapInitialized(java.lang.Object,int,int)
io.grpc.internal.ForwardingConnectionClientTransport: io.grpc.InternalLogId getLogId()
com.google.android.gms.internal.firebase-auth-api.zzsv: zzsv(com.google.android.gms.internal.firebase-auth-api.zzsw,com.google.android.gms.internal.firebase-auth-api.zzwy)
io.grpc.Deadline: int compareTo(java.lang.Object)
com.google.android.gms.tasks.zzw: java.lang.Object getResult()
com.google.firebase.firestore.model.ObjectValue: com.google.firestore.v1.MapValue applyOverlay(com.google.firebase.firestore.model.FieldPath,java.util.Map)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
com.google.firebase.auth.internal.zzbd: void zze(com.google.firebase.auth.FirebaseAuth)
com.google.protobuf.MapFieldSchemaLite: com.google.protobuf.MapEntryLite$Metadata forMapMetadata(java.lang.Object)
com.google.protobuf.DoubleArrayList: double getDouble(int)
io.grpc.internal.AbstractStream$TransportState: void access$000(io.grpc.internal.AbstractStream$TransportState,int)
io.flutter.plugins.googlemaps.GoogleMapController: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int unallocatedBytes()
com.google.android.gms.common.internal.zad: void zaa()
okio.Base64: java.lang.String encode(byte[],byte[])
io.grpc.InternalConfigSelector$Result: io.grpc.InternalConfigSelector$Result$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zzui: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.protobuf.CodedInputStreamReader: long readInt64()
kotlin.collections.EmptyMap: java.util.Collection values()
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.lifecycle.ReportFragment: void onStart()
com.google.android.gms.tasks.zzu: zzu()
com.google.firebase.installations.remote.RequestLimiter: long getBackoffDuration(int)
com.google.firebase.firestore.remote.GrpcCallProvider: void shutdown()
io.grpc.ClientCall$Listener: void onClose(io.grpc.Status,io.grpc.Metadata)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: ManagedChannelImpl$RestrictedScheduledExecutor(java.util.concurrent.ScheduledExecutorService)
com.google.android.gms.internal.firebase-auth-api.zzqq: java.lang.String zzb()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzr(int,int)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.common.math.IntMath: int saturatedMultiply(int,int)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: java.util.Map getAll(com.google.firebase.firestore.model.ResourcePath,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.android.gms.common.api.Scope: boolean equals(java.lang.Object)
com.google.android.gms.dynamite.zzk: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.model.ResourcePath getPath()
com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzji: com.google.android.gms.internal.firebase-auth-api.zzji zzc()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.gms.internal.firebase-auth-api.zzaaf: zzaaf()
com.google.android.gms.internal.firebase-auth-api.zzuy: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.protobuf.FieldType$Collection: FieldType$Collection(java.lang.String,int,boolean)
com.google.android.gms.common.api.internal.ApiKey: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapFactory: GoogleMapFactory(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider)
com.google.android.gms.internal.firebase-auth-api.zzxr: java.lang.String zzc(java.lang.String)
androidx.fragment.app.FragmentManagerImpl$4: FragmentManagerImpl$4(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
io.grpc.okhttp.OkHttpWritableBuffer: void release()
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void addReference(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext add(com.google.firebase.encoders.FieldDescriptor,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzkt zzb()
com.google.android.gms.common.api.internal.zza: void run()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query startAt(java.lang.Object[])
io.flutter.plugin.common.StringCodec: StringCodec()
com.google.firestore.v1.TransactionOptions$Builder: TransactionOptions$Builder()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: ManagedChannelImpl$1ChannelCallTracerFactory(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.TimeProvider)
com.google.common.collect.ImmutableList: java.util.Iterator iterator()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzz(java.util.List)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: boolean hasPendingEventsFor(com.google.android.datatransport.runtime.TransportContext)
com.google.firebase.firestore.core.FieldFilter: int hashCode()
io.grpc.ProxiedSocketAddress: ProxiedSocketAddress()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzgh zza()
com.google.android.gms.internal.firebase-auth-api.zzyn: zzyn(int,com.google.firebase.auth.ActionCodeSettings,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.webkit.internal.WebResourceErrorImpl: java.lang.CharSequence getDescription()
com.google.android.gms.common.UserRecoverableException: UserRecoverableException(java.lang.String,android.content.Intent)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query where(com.google.firebase.firestore.Filter)
com.google.android.gms.internal.tasks.zza: zza(android.os.Looper)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt64NoTag(long)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: BatchGetDocumentsResponse$ResultCase(java.lang.String,int,int)
com.google.android.gms.common.internal.service.zap: java.lang.String getServiceDescriptor()
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: SchedulingConfigModule_ConfigFactory(javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzdl: javax.crypto.Cipher zza()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.collections.EmptyMap: java.lang.String toString()
com.google.firebase.auth.internal.zzf: void zze(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.internal.zzbm,android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource)
com.google.protobuf.Utf8$UnsafeProcessor: int unsafeIncompleteStateFor(byte[],int,long,int)
io.grpc.internal.ServiceConfigUtil$PolicySelection: ServiceConfigUtil$PolicySelection(io.grpc.LoadBalancerProvider,java.lang.Object)
com.google.firebase.firestore.local.MemoryTargetCache: void removeMatchingKeys(com.google.firebase.database.collection.ImmutableSortedSet,int)
com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: void invalidateToken()
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: void stop()
com.google.firebase.firestore.FirestoreMultiDbComponent: void remove(java.lang.String)
com.google.firebase.firestore.model.mutation.VerifyMutation: java.lang.String toString()
com.google.firebase.encoders.FieldDescriptor: com.google.firebase.encoders.FieldDescriptor$Builder builder(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzal: java.util.List subList(int,int)
androidx.collection.ArrayMap: java.util.Set entrySet()
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp$Builder newBuilder()
com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
io.grpc.EquivalentAddressGroup: java.util.List getAddresses()
com.google.android.gms.internal.firebase-auth-api.zzup: java.lang.String zza()
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
com.google.firebase.auth.internal.zzat: void onFailure(java.lang.Exception)
com.google.android.datatransport.runtime.retries.Retries: java.lang.Object retry(int,java.lang.Object,com.google.android.datatransport.runtime.retries.Function,com.google.android.datatransport.runtime.retries.RetryStrategy)
io.grpc.internal.ManagedChannelImpl$RealChannel: ManagedChannelImpl$RealChannel(io.grpc.internal.ManagedChannelImpl,java.lang.String)
com.google.firestore.v1.DocumentMask: void ensureFieldPathsIsMutable()
androidx.fragment.app.Fragment: int getNextTransition()
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzaau zzh()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseAuthResult(com.google.firebase.auth.AuthResult)
io.grpc.internal.AbstractClientStream: void start(io.grpc.internal.ClientStreamListener)
com.google.android.gms.common.api.internal.LifecycleCallback: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
com.google.protobuf.GeneratedMessageLite: java.lang.Object buildMessageInfo()
com.google.android.gms.internal.firebase-auth-api.zztw: void zzb(java.lang.Object)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener)
com.google.android.gms.signin.internal.zag: zag(java.util.List,java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzea: java.lang.String zzc()
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly access$400()
com.google.android.gms.internal.firebase-auth-api.zzrg: java.lang.String zzb()
com.google.firebase.firestore.remote.RemoteStore: void startWatchStream()
com.google.android.gms.tasks.zzad: boolean zzb(long,java.util.concurrent.TimeUnit)
kotlin.collections.EmptySet: EmptySet()
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzr(int,int)
com.google.firebase.firestore.remote.WriteStream: void stop()
io.grpc.internal.Http2ClientStreamTransportState: void deframerClosed(boolean)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzju: int zza()
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zzjc zzf()
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbf zza(com.google.android.gms.location.zzx,com.google.android.gms.internal.location.zzaj)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void popLimit(int)
com.google.firebase.firestore.core.KeyFieldFilter: KeyFieldFilter(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.core.FieldFilter$Operator,com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzfd: zzfd()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ManagedClientTransport access$1002(io.grpc.internal.InternalSubchannel,io.grpc.internal.ManagedClientTransport)
com.google.firebase.messaging.NotificationParams: java.lang.String keyWithOldPrefix(java.lang.String)
com.google.common.base.Stopwatch: Stopwatch()
com.google.android.datatransport.cct.internal.AndroidClientInfo: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder builder()
com.google.protobuf.Android: boolean isOnAndroidDevice()
com.google.protobuf.Utf8: int partialIsValidUtf8(int,java.nio.ByteBuffer,int,int)
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzko zza()
com.google.protobuf.AbstractProtobufList: int hashCode()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
com.google.protobuf.MessageSchema: void writeString(int,java.lang.Object,com.google.protobuf.Writer)
com.google.android.gms.maps.internal.zzby: void setZoomControlsEnabled(boolean)
com.google.android.gms.common.internal.LibraryVersion: com.google.android.gms.common.internal.LibraryVersion getInstance()
com.google.android.gms.internal.location.zzbk: com.google.android.gms.common.api.PendingResult checkLocationSettings(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationSettingsRequest)
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$602(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)
com.google.firebase.firestore.model.BasePath: BasePath(java.util.List)
com.baseflow.geolocator.LocationServiceHandlerImpl: void setActivity(android.app.Activity)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite valueOf(java.lang.String)
com.google.firebase.messaging.EnhancedIntentService: int onStartCommand(android.content.Intent,int,int)
com.google.android.gms.common.zzb: java.lang.Object[] newArray(int)
com.google.protobuf.MessageSchema: int parseProto3Message(java.lang.Object,byte[],int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeInfinityDescending()
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: RoundRobinLoadBalancer$ReadyPicker(java.util.List,int)
com.google.android.gms.safetynet.zzb: java.lang.Object[] newArray(int)
com.google.protobuf.MapFieldLite: com.google.protobuf.MapFieldLite mutableCopy()
androidx.fragment.app.Fragment: boolean isInBackStack()
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder access$200(com.squareup.okhttp.Request$Builder)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.WriteBatch update(com.google.firebase.firestore.DocumentReference,java.util.Map)
com.google.firebase.messaging.RemoteMessage$Notification: RemoteMessage$Notification(com.google.firebase.messaging.NotificationParams)
com.google.protobuf.UnknownFieldSetLite: void writeField(int,java.lang.Object,com.google.protobuf.Writer)
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: ProtoLiteUtils$MessageMarshaller(com.google.protobuf.MessageLite)
com.google.android.gms.internal.firebase-auth-api.zzsm: zzsm(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzwx,java.lang.String,java.lang.String,java.lang.Boolean,com.google.firebase.auth.zze,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzyq)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory create(javax.inject.Provider,javax.inject.Provider)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.google.android.gms.maps.internal.zzbs: com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.dynamic.IObjectWrapper)
com.google.common.collect.SingletonImmutableSet: int size()
com.google.protobuf.ArrayDecoders: int decodeGroupList(com.google.protobuf.Schema,int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzaaz: double zza()
io.grpc.InternalConfigSelector$Result: io.grpc.Status getStatus()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzf(int,java.util.List,boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getComposerLabel()
com.google.common.base.Preconditions: Preconditions()
com.google.firebase.firestore.local.MemoryIndexManager: java.lang.String getNextCollectionGroupToUpdate()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.google.android.gms.common.internal.GmsClient: android.accounts.Account getAccount()
com.google.firebase.firestore.model.Values: boolean isArray(com.google.firestore.v1.Value)
com.google.firebase.firestore.LoadBundleTaskProgress: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState getTaskState()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
com.google.firebase.firestore.model.mutation.SetMutation: com.google.firebase.firestore.model.mutation.FieldMask applyToLocalView(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.Timestamp)
com.google.firebase.firestore.core.Transaction: void update(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.core.UserData$ParsedUpdateData)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task getDocumentsFromLocalCache(com.google.firebase.firestore.core.Query)
com.google.android.gms.common.internal.zat: zat(android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)
com.google.android.gms.safetynet.zza: zza(java.lang.String)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task checkActionCode(java.lang.String)
com.google.firebase.messaging.GmsRpc: GmsRpc(com.google.firebase.FirebaseApp,com.google.firebase.messaging.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: android.content.Intent getIntent()
com.google.android.gms.internal.maps.zzae: zzae(android.os.IBinder)
com.google.protobuf.BinaryReader$SafeHeapReader: int readSInt32()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
com.google.firebase.firestore.util.BackgroundQueue: void execute(java.lang.Runnable)
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setResumeToken(com.google.protobuf.ByteString)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
io.grpc.internal.RetriableStream: boolean isReady()
androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface()
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$GlobalMetricsEncoder: void encode(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target parseFrom(byte[])
com.tekartik.sqflite.SqflitePlugin: void access$700(com.tekartik.sqflite.SqflitePlugin,java.lang.Exception,com.tekartik.sqflite.operation.Operation,com.tekartik.sqflite.Database)
com.google.android.gms.internal.firebase-auth-api.zzak: int size()
androidx.core.app.NotificationCompatBuilder: java.util.List getPeople(java.util.List)
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
io.grpc.internal.MessageDeframer: void processHeader()
com.google.common.collect.RegularImmutableSet: int copyIntoArray(java.lang.Object[],int)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.google.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.google.firebase.firestore.SetOptions: boolean isMerge()
io.grpc.internal.RetriableStream$1CompressorEntry: RetriableStream$1CompressorEntry(io.grpc.internal.RetriableStream,io.grpc.Compressor)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
com.google.firebase.auth.internal.zzax: void zzb(com.google.firebase.auth.internal.zzax,android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseUser,android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzmx: java.util.List zzg()
com.google.android.gms.common.api.internal.GoogleApiManager: android.content.Context zae(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.android.gms.internal.firebase-auth-api.zzpf: javax.crypto.Mac zza()
com.google.android.gms.internal.firebase-auth-api.zzyj: java.util.List zzq()
com.google.firebase.components.AbstractComponentContainer: AbstractComponentContainer()
io.grpc.internal.ChannelTracer: void traceOnly(io.grpc.InternalChannelz$ChannelTrace$Event)
com.google.firebase.firestore.Query: com.google.firebase.firestore.FirebaseFirestore getFirestore()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder setErrorCode(java.lang.Long)
com.google.firestore.v1.WriteResponse: int getWriteResultsCount()
com.google.android.gms.internal.firebase-auth-api.zzmw: zzmw()
com.google.protobuf.MapFieldSchemaLite: com.google.protobuf.MapFieldLite mergeFromLite(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.location.zzbd: void writeToParcel(android.os.Parcel,int)
io.grpc.internal.DelayedStream$3: void run()
com.google.android.gms.internal.firebase-auth-api.zzni: com.google.android.gms.internal.firebase-auth-api.zzni zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.core.OrderBy: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: SQLiteLruReferenceDelegate(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LruGarbageCollector$Params)
com.google.android.gms.internal.firebase-auth-api.zzdg: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.common.collect.RegularImmutableMap$EntrySet: boolean contains(java.lang.Object)
io.flutter.view.VsyncWaiter$DisplayListener: void register()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.firestore.v1.StructuredQuery$Filter: void access$1200(com.google.firestore.v1.StructuredQuery$Filter,com.google.firestore.v1.StructuredQuery$FieldFilter)
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzld zzc()
io.flutter.plugins.webviewflutter.InstanceManager: java.lang.Object removeInstanceWithId(long)
com.google.protobuf.RopeByteString$Balancer: int getDepthBinForLength(int)
io.grpc.internal.KeepAliveManager: void onDataReceived()
com.google.android.gms.internal.firebase-auth-api.zzym: zzym()
com.google.firebase.firestore.local.SQLitePersistence$Query: java.lang.Object firstValue(com.google.firebase.firestore.util.Function)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.gms.common.api.Scope: java.lang.String getScopeUri()
com.google.firebase.firestore.model.AutoValue_FieldIndex_Segment: java.lang.String toString()
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$1: StructuredQuery$UnaryFilter$Operator$1()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zzne zzb()
com.google.android.gms.internal.firebase-auth-api.zzadq: boolean zzH(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.index.IndexEntry: int compareTo(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzhk: void zza()
com.google.android.gms.internal.firebase-auth-api.zzabn: com.google.android.gms.internal.firebase-auth-api.zzabl zza()
com.google.android.gms.tasks.zzw: boolean isCanceled()
com.google.android.gms.internal.firebase-auth-api.zzacj: com.google.android.gms.internal.firebase-auth-api.zzack zze()
com.google.android.gms.location.zzai: zzai()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zze(com.google.firebase.auth.zze)
io.flutter.plugins.googlemaps.Convert: java.lang.Object circleIdToJson(java.lang.String)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzoa: java.lang.Object initialValue()
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzc(int,int)
com.google.android.gms.internal.firebase-auth-api.zzhe: void zzi(com.google.android.gms.internal.firebase-auth-api.zzin)
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zza(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue access$000()
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite access$000()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.protobuf.Timestamp encodeTimestamp(com.google.firebase.Timestamp)
com.google.android.gms.internal.firebase-auth-api.zzer: byte[] zzc(byte[],byte[],byte[],byte[])
com.google.firebase.firestore.local.LruGarbageCollector: LruGarbageCollector(com.google.firebase.firestore.local.LruDelegate,com.google.firebase.firestore.local.LruGarbageCollector$Params)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereNotEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding omitPadding()
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzln: void zzk(com.google.android.gms.internal.firebase-auth-api.zzln,com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.google.android.gms.location.zzaj: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzye: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzmb: zzmb()
io.grpc.Context$ExecutableListener: void deliver()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzsv: void zzb(java.lang.Object)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: java.util.Map toMap()
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
com.google.android.gms.internal.firebase-auth-api.zzsy: void zza(java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient: java.util.ArrayList zzf(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: void processSingleCollection(java.util.Map,com.google.firebase.firestore.util.BackgroundQueue,com.google.firebase.firestore.model.ResourcePath,java.util.List)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readSInt32()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt64(int,long)
com.google.common.base.CharMatcher$NamedFastMatcher: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzmk: void zzg(com.google.android.gms.internal.firebase-auth-api.zzmk,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzcb: void zzo(com.google.android.gms.internal.firebase-auth-api.zzbx)
io.grpc.internal.ClientCallImpl: java.util.concurrent.Executor access$800(io.grpc.internal.ClientCallImpl)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isRestrictedUserProfile(android.content.Context)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.protobuf.ByteString$BoundedByteString: byte internalByteAt(int)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
com.google.common.io.BaseEncoding$StandardBaseEncoding: void encodeChunkTo(java.lang.Appendable,byte[],int,int)
androidx.window.embedding.SplitPairRule: int hashCode()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ExecutorService newTaskExecutor()
com.google.firebase.firestore.core.Target: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.IndexManager getIndexManager(com.google.firebase.firestore.auth.User)
com.google.android.gms.common.api.internal.zaab: void onComplete(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzb()
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyh: java.util.List zzb()
com.google.android.gms.location.SettingsClient: SettingsClient(android.content.Context)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: java.util.Map getAll(java.lang.String,com.google.firebase.firestore.model.FieldIndex$IndexOffset,int)
com.google.firestore.v1.TransactionOptions$ReadOnly$Builder: TransactionOptions$ReadOnly$Builder(com.google.firestore.v1.TransactionOptions$1)
io.grpc.internal.ClientCallImpl: void sendMessage(java.lang.Object)
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema unknownFieldSetLiteSchema()
okio.Buffer$1: void write(byte[],int,int)
com.google.android.gms.maps.model.CameraPosition: int hashCode()
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzip zzb()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
com.google.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeValueTypeLabel(com.google.firebase.firestore.index.DirectionalIndexByteEncoder,int)
com.google.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPathOneChunk(int)
com.google.android.gms.maps.internal.zzbt: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.gms.maps.internal.zzas: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
okio.ByteString: byte getByte(int)
com.google.android.gms.internal.firebase-auth-api.zzm: zzm()
com.google.android.gms.internal.firebase-auth-api.zzhe: int zzf()
com.google.firebase.auth.OAuthProvider: com.google.firebase.auth.OAuthProvider$Builder newBuilder(java.lang.String,com.google.firebase.auth.FirebaseAuth)
com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: DefaultScheduler_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzpo: com.google.android.gms.internal.firebase-auth-api.zzpo zza(byte[])
com.google.firebase.firestore.core.InFilter: InFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.firebase.provider.FirebaseInitProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: CustomClassMapper$BeanMapper(java.lang.Class)
kotlinx.coroutines.JobNode: JobNode()
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch$Builder newBuilder()
com.google.firebase.auth.PlayGamesAuthCredential: PlayGamesAuthCredential(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzqz: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.components.Dependency: boolean isDirectInjection()
io.grpc.internal.InternalSubchannel$CallTracingTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
com.google.android.gms.internal.maps.zzb: android.os.IBinder asBinder()
com.google.firestore.v1.StructuredQuery: boolean hasStartAt()
com.google.protobuf.SmallSortedMap$EntrySet: boolean add(java.util.Map$Entry)
com.google.android.gms.common.util.DeviceProperties: boolean zzb(android.content.Context)
com.google.protobuf.RopeByteString: RopeByteString(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
com.google.firebase.database.collection.LLRBEmptyNode: java.lang.Object getKey()
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
com.google.android.gms.common.internal.BaseGmsClient: void zzp(int,android.os.IInterface)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
com.google.firebase.auth.OAuthProvider: com.google.firebase.auth.OAuthProvider$CredentialBuilder newCredentialBuilder(java.lang.String)
com.google.firebase.auth.internal.zzal: void run()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: AutoValue_NetworkConnectionInfo(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType,com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype,com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$1)
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: io.grpc.internal.MessageDeframer$Listener delegate()
com.google.firebase.firestore.remote.TargetState: void clearChanges()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
com.google.android.gms.internal.firebase-auth-api.zzjr: com.google.android.gms.internal.firebase-auth-api.zzjr zzc()
com.google.firebase.firestore.proto.Target$TargetTypeCase: Target$TargetTypeCase(java.lang.String,int,int)
io.grpc.ClientStreamTracer: void inboundHeaders()
com.google.firebase.auth.internal.GenericIdpActivity: void zzh()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock get()
com.google.android.gms.internal.firebase-auth-api.zzaby: boolean add(java.lang.Object)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State valueOf(java.lang.String)
io.grpc.internal.StatsTraceContext: void inboundMessageRead(int,long,long)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
com.google.android.gms.internal.firebase-auth-api.zzrn: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: int removeTargets(long,android.util.SparseArray)
com.google.android.gms.internal.firebase-auth-api.zzal: zzal()
com.google.android.gms.internal.firebase-auth-api.zzaek: java.lang.Object get(int)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
com.google.firebase.firestore.remote.AbstractStream: void access$300(com.google.firebase.firestore.remote.AbstractStream)
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzx(int,com.google.android.gms.internal.firebase-auth-api.zzadc,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.protobuf.LazyField$LazyEntry: java.lang.Object getValue()
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: boolean equals(java.lang.Object)
com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.MessageLite)
com.google.protobuf.CodedInputStreamReader: int readFixed32()
com.google.firebase.firestore.core.CompositeFilter: boolean isFlatConjunction()
com.google.firestore.v1.StructuredQuery$CollectionSelector: StructuredQuery$CollectionSelector()
com.google.protobuf.CodedInputStream$StreamDecoder: int available(java.io.InputStream)
io.grpc.internal.ManagedChannelImpl$2: ManagedChannelImpl$2(io.grpc.internal.ManagedChannelImpl)
com.google.protobuf.BinaryReader$SafeHeapReader: void skipVarint()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue$Builder newBuilder()
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()
io.grpc.internal.ServiceConfigUtil: java.lang.Integer getMaxRequestMessageBytesFromMethodConfig(java.util.Map)
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite build()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void cleanUpStoredHeartBeats()
com.google.android.gms.common.internal.service.zap: int getMinApkVersion()
com.google.firestore.v1.Write: com.google.firestore.v1.Write$Builder newBuilder(com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzdc: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator getOp()
io.grpc.internal.ForwardingConnectionClientTransport: java.lang.String toString()
io.grpc.internal.NoopClientStream: void setFullStreamDecompression(boolean)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.android.gms.tasks.zzk: zzk(com.google.android.gms.tasks.zzl,com.google.android.gms.tasks.Task)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setArrayValue(com.google.firestore.v1.ArrayValue)
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: void accept(java.lang.Object)
com.google.common.io.ByteStreams: byte[] toByteArray(java.io.InputStream)
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
com.google.firebase.database.collection.ArraySortedMap: ArraySortedMap(java.util.Comparator)
com.google.firebase.installations.local.IidStore: java.lang.String readPublicKeyFromLocalStorageAndCalculateInstanceId()
androidx.lifecycle.LiveData: void onInactive()
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch lookupMutationBatch(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.android.gms.location.LocationResult: java.util.List getLocations()
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
com.google.android.gms.maps.internal.zzg: void animateCamera(com.google.android.gms.dynamic.IObjectWrapper)
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
io.grpc.SynchronizationContext$ScheduledHandle: SynchronizationContext$ScheduledHandle(io.grpc.SynchronizationContext$ManagedRunnable,java.util.concurrent.ScheduledFuture)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereEqualTo(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.android.gms.tasks.zzw: java.lang.Exception getException()
androidx.collection.ArraySet: int indexOfNull()
com.google.firebase.firestore.model.mutation.MutationBatch: com.google.firebase.Timestamp getLocalWriteTime()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
io.grpc.okhttp.OkHttpClientStream: boolean access$102(io.grpc.okhttp.OkHttpClientStream,boolean)
com.google.protobuf.Utf8: int access$1200(int)
io.flutter.plugins.googlemaps.Convert: boolean toBoolean(java.lang.Object)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
io.grpc.internal.ManagedChannelImpl$IdleModeTimer: void run()
com.google.android.gms.cloudmessaging.zzf: zzf(com.google.android.gms.cloudmessaging.zzm)
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: TimeModule_EventClockFactory()
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.internal.BatchedLogRequest getRequestBody(com.google.android.datatransport.runtime.backends.BackendRequest)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: com.google.android.gms.tasks.Task executeAndInitiateShutdown(java.lang.Runnable)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: com.google.android.gms.tasks.Task executeAndReportResult(java.util.concurrent.Callable)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzf(int,double)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
com.google.android.gms.location.zzaa: zzaa()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.protobuf.ExtensionSchemaLite: java.lang.Object findExtensionByNumber(com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.MessageLite,int)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryIndexManager getIndexManager(com.google.firebase.firestore.auth.User)
com.google.firestore.v1.Cursor: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ClientCallImpl$ClientStreamProvider access$4000(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzyl: zzyl()
io.grpc.okhttp.internal.ConnectionSpec: int hashCode()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBool(int,boolean)
com.google.android.gms.safetynet.SafetyNetApi$AttestationResponse: SafetyNetApi$AttestationResponse()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
com.google.android.gms.internal.firebase-auth-api.zzvb: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withRegisteredFid(java.lang.String,java.lang.String,long,java.lang.String,long)
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String format(java.lang.String,java.lang.Object[])
com.google.android.gms.internal.maps.zzab: void zzw(com.google.android.gms.maps.model.Cap)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void goForward(java.lang.Long)
com.google.firebase.auth.ActionCodeSettings: boolean canHandleCodeInApp()
com.google.protobuf.CodedOutputStream: void writeInt64NoTag(long)
com.google.android.gms.dynamite.zzf: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.android.gms.internal.firebase-auth-api.zzvl: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[])
com.google.android.gms.internal.firebase-auth-api.zzabn: com.google.android.gms.internal.firebase-auth-api.zzabl zzb()
com.google.protobuf.WireFormat$FieldType$2: WireFormat$FieldType$2(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void detachToActivity()
com.google.firebase.firestore.FirebaseFirestoreException$Code: android.util.SparseArray buildStatusList()
com.google.firebase.auth.FirebaseAuth: void useEmulator(java.lang.String,int)
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.BasePath createPathWithSegments(java.util.List)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
com.google.protobuf.ByteString$LiteralByteString: boolean isValidUtf8()
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: ReadableBuffers$ByteArrayWrapper(byte[])
kotlinx.coroutines.channels.ArrayChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: java.util.concurrent.Executor getBroadcastExecutor()
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeDocumentChange(java.io.ByteArrayOutputStream,com.google.firebase.firestore.DocumentChange)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.security.interfaces.ECPublicKey zzi(int,byte[],byte[])
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.ResourcePath extractLocalPathFromResourceName(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.internal.firebase-auth-api.zzaeg: com.google.android.gms.internal.firebase-auth-api.zzaeg zze()
com.google.protobuf.SmallSortedMap: java.lang.Object remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zztm: void zza(java.lang.String)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
com.google.firebase.FirebaseOptions: java.lang.String getGaTrackingId()
com.google.android.gms.internal.firebase-auth-api.zzwq: void zze(com.google.android.gms.internal.firebase-auth-api.zzsc)
com.google.firebase.firestore.remote.AbstractStream: boolean isStarted()
com.google.protobuf.BooleanArrayList: java.lang.Boolean remove(int)
com.google.common.collect.ByFunctionOrdering: ByFunctionOrdering(com.google.common.base.Function,com.google.common.collect.Ordering)
com.google.protobuf.SmallSortedMap$EntryIterator: void remove()
com.google.android.gms.internal.firebase-auth-api.zzun: zzun(com.google.firebase.auth.AuthCredential,java.lang.String)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: HeartBeatInfo$HeartBeat(java.lang.String,int,int)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setTransparency(float)
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzju zzc()
com.google.common.collect.Ordering: Ordering()
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory doBuild(com.google.common.util.concurrent.ThreadFactoryBuilder)
com.google.common.collect.AbstractIndexedListIterator: int previousIndex()
com.google.protobuf.LongArrayList: void removeRange(int,int)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setTimezoneOffsetSeconds(long)
com.google.firebase.firestore.local.MemoryMutationQueue: void removeMutationBatch(com.google.firebase.firestore.model.mutation.MutationBatch)
com.google.android.gms.internal.firebase-auth-api.zzmh: void zzk(com.google.android.gms.internal.firebase-auth-api.zzmh,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int getMaxMethodInvocationsLogged()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelHostApiCodec: GeneratedAndroidWebView$JavaScriptChannelHostApiCodec()
com.google.firebase.firestore.util.LogicUtils: boolean isFlatConjunction(com.google.firebase.firestore.core.Filter)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.google.android.gms.common.zac: void handleMessage(android.os.Message)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.google.android.gms.internal.maps.zzc: void zzf(android.os.Parcel,android.os.IInterface)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceive(kotlinx.coroutines.channels.Receive)
com.google.android.gms.internal.firebase-auth-api.zzcb: void zzq(java.lang.String,java.util.Map)
androidx.collection.ArrayMap$1: void colClear()
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus valueOf(java.lang.String)
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
com.google.android.gms.common.api.internal.zabq: void onConnected(android.os.Bundle)
io.grpc.internal.InternalSubchannel$6: InternalSubchannel$6(io.grpc.internal.InternalSubchannel)
io.grpc.internal.ForwardingManagedChannel: java.lang.String authority()
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.google.protobuf.UnknownFieldSetLiteSchema: com.google.protobuf.UnknownFieldSetLite toImmutable(com.google.protobuf.UnknownFieldSetLite)
io.grpc.internal.AbstractClientStream: void cancel(io.grpc.Status)
com.google.android.gms.common.internal.Preconditions: void checkMainThread(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyh: void writeToParcel(android.os.Parcel,int)
com.google.firebase.Timestamp: Timestamp(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzai: java.lang.Object[] toArray()
io.grpc.internal.CompositeReadableBuffer: void mark()
com.google.android.gms.common.ConnectionResult: boolean hasResolution()
io.grpc.Deadline$SystemTicker: long nanoTime()
io.flutter.plugins.urllauncher.WebViewActivity$2: WebViewActivity$2(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: com.google.android.datatransport.runtime.time.Clock getMonotonicClock()
com.google.firestore.v1.FirestoreGrpc$FirestoreStub: FirestoreGrpc$FirestoreStub(io.grpc.Channel,io.grpc.CallOptions,com.google.firestore.v1.FirestoreGrpc$1)
com.google.android.gms.internal.location.zzbc: void zza(com.google.android.gms.location.LocationSettingsResult)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
io.grpc.internal.DelayedClientTransport: io.grpc.Status access$1000(io.grpc.internal.DelayedClientTransport)
com.google.protobuf.CodedOutputStreamWriter: void writeLazyString(int,java.lang.Object)
com.google.common.io.BaseEncoding$StandardBaseEncoding: int maxDecodedSize(int)
io.grpc.internal.ApplicationThreadDeframerListener$3: ApplicationThreadDeframerListener$3(io.grpc.internal.ApplicationThreadDeframerListener,java.lang.Throwable)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zaa(android.os.IBinder)
io.grpc.internal.ServiceConfigUtil: ServiceConfigUtil()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
androidx.lifecycle.LiveData: LiveData()
com.google.android.gms.internal.firebase-auth-api.zzkx: int zza()
com.google.common.base.CharMatcher$None: CharMatcher$None()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.protobuf.TextFormatEscaper$1: byte byteAt(int)
com.google.android.gms.common.internal.BaseGmsClient: boolean usesClientTelemetry()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzq(int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.android.gms.internal.firebase-auth-api.zzcv: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.installations.remote.RequestLimiter: void setNextRequestTime(int)
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor(com.google.firebase.FirebaseApp$1)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomByWithFocus(float,int,int)
io.grpc.Codec$Identity: java.lang.String getMessageEncoding()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
com.google.protobuf.SchemaUtil: int computeSizeSInt32List(int,java.util.List,boolean)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.common.internal.zzd: void zzb(int,android.os.Bundle)
com.google.protobuf.JavaType: JavaType(java.lang.String,int,java.lang.Class,java.lang.Class,java.lang.Object)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.ManagedChannelBuilder usePlaintext()
com.google.firebase.auth.zzs: zzs(com.google.firebase.auth.FirebaseAuth)
com.google.android.gms.common.api.internal.GoogleApiManager: int zaa()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeStringList(android.os.Parcel,int,java.util.List,boolean)
com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])
com.google.firebase.firestore.core.ArrayContainsAnyFilter: ArrayContainsAnyFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.android.gms.internal.maps.zzaf: com.google.android.gms.internal.maps.zzag zzb(android.os.IBinder)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void windowUpdate(int,long)
com.google.firebase.firestore.remote.FirestoreChannel$3: FirestoreChannel$3(com.google.firebase.firestore.remote.FirestoreChannel,com.google.firebase.firestore.remote.FirestoreChannel$StreamingListener,io.grpc.ClientCall)
com.google.protobuf.GeneratedMessageLite$GeneratedExtension: com.google.protobuf.MessageLite getMessageDefaultInstance()
io.flutter.plugins.urllauncher.WebViewActivity$1: WebViewActivity$1(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.android.gms.common.api.internal.zzb: void onStop()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.protobuf.FieldSet: void mergeFromField(java.util.Map$Entry)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean isConnecting()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzadb zzB()
io.grpc.InternalConfigSelector$Result$Builder: io.grpc.InternalConfigSelector$Result build()
com.google.firebase.firestore.model.BasePath: java.lang.String toString()
com.google.android.gms.common.api.internal.RegisterListenerMethod: int zaa()
com.google.firebase.firestore.core.TargetIdGenerator: com.google.firebase.firestore.core.TargetIdGenerator forTargetCache(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
com.google.firebase.firestore.TransactionOptions: TransactionOptions(int,com.google.firebase.firestore.TransactionOptions$1)
io.flutter.plugins.googlemaps.PolygonController: void setGeodesic(boolean)
com.google.protobuf.MessageSchema: int typeAndOffsetAt(int)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: java.util.Map isStringKeyedMap(java.lang.Object)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$1: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator findValueByNumber(int)
com.google.protobuf.GeneratedMessageLite$Builder: void copyOnWrite()
com.google.protobuf.SchemaUtil: com.google.protobuf.UnknownFieldSchema getUnknownFieldSetSchema(boolean)
com.google.android.gms.common.internal.zaab: zaab()
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder setAutoResolveMissingFeatures(boolean)
okio.RealBufferedSink: boolean isOpen()
androidx.fragment.app.BackStackRecord: int commit()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] values()
com.google.protobuf.SmallSortedMap$DescendingEntrySet: java.util.Iterator iterator()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.firebase.firestore.model.AutoValue_FieldIndex: boolean equals(java.lang.Object)
com.google.android.gms.common.api.Status: java.lang.String getStatusMessage()
com.google.android.gms.maps.zzx: zzx(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraIdleListener)
androidx.fragment.app.Fragment: void onPause()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
com.google.protobuf.FieldType: boolean isMap()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doBestEffortWrite(com.google.android.gms.common.api.internal.TaskApiCall)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)
com.google.android.gms.maps.internal.zze: void zzk(com.google.android.gms.dynamic.IObjectWrapper,int)
com.google.android.gms.internal.location.zzaz: void zza(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,java.lang.String)
io.grpc.okhttp.ExceptionHandlingFrameWriter: void connectionPreface()
com.google.android.gms.internal.firebase-auth-api.zzdd: zzdd(com.google.android.gms.internal.firebase-auth-api.zzmp,com.google.android.gms.internal.firebase-auth-api.zzap)
io.grpc.okhttp.OkHttpClientTransport: void removePendingStream(io.grpc.okhttp.OkHttpClientStream)
com.google.firebase.FirebaseApp: void access$600(com.google.firebase.FirebaseApp,boolean)
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzaau zzg()
com.google.android.gms.tasks.zzp: zzp(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation,com.google.android.gms.tasks.zzw)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setResult(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzmd zzb(com.google.android.gms.internal.firebase-auth-api.zzmh)
com.google.protobuf.DoubleArrayList: int size()
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
io.grpc.internal.HedgingPolicy: java.lang.String toString()
com.google.firestore.v1.FirestoreGrpc$1: io.grpc.stub.AbstractStub newStub(io.grpc.Channel,io.grpc.CallOptions)
io.perfmark.PerfMark: io.perfmark.Tag createTag(java.lang.String,long)
com.google.protobuf.MessageSchema: int decodeMapEntry(byte[],int,int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.NameResolver$Args: io.grpc.SynchronizationContext getSynchronizationContext()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
com.tekartik.sqflite.SqflitePlugin$BgResult$1: SqflitePlugin$BgResult$1(com.tekartik.sqflite.SqflitePlugin$BgResult,java.lang.Object)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall$1CloseInContext: void runInContext()
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziw zze()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzk(long)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setDatabaseURL(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlayController: TileOverlayController(com.google.android.gms.maps.model.TileOverlay)
com.google.android.gms.internal.safetynet.zzk$zza: java.lang.String getJwsResult()
io.grpc.internal.AbstractStream$TransportState: void onStreamAllocated()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void ensureAtEnd(android.os.Parcel,int)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] values()
com.google.protobuf.UnsafeUtil: java.lang.reflect.Field field(java.lang.Class,java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: com.google.android.datatransport.cct.internal.AndroidClientInfo getAndroidClientInfo()
com.google.android.gms.internal.firebase-auth-api.zzfa: com.google.android.gms.internal.firebase-auth-api.zzey zzb(com.google.android.gms.internal.firebase-auth-api.zzmb)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] values()
com.google.android.gms.internal.location.zzak: zzak()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Iterable zzc()
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.MessageLite$Builder newBuilderForType()
io.grpc.okhttp.OutboundFlowController$WriteStatus: OutboundFlowController$WriteStatus()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzf()
com.google.android.gms.common.api.internal.zaad: void zah(boolean,com.google.android.gms.common.api.Status)
androidx.collection.SimpleArrayMap: int size()
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresSignIn()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzu(java.lang.Object,byte[],int,int,int,int,int,int,int,long,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.grpc.Metadata$Key: io.grpc.Metadata$Key of(java.lang.String,io.grpc.Metadata$AsciiMarshaller)
com.google.android.gms.internal.firebase-auth-api.zzxn: java.util.HashMap zzd(com.google.android.gms.internal.firebase-auth-api.zzxn)
io.grpc.internal.InternalSubchannel: void handleTermination()
com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task checkActionCode(java.util.Map)
com.google.android.gms.common.api.internal.LifecycleCallback: android.app.Activity getActivity()
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.internal.zzx zzm()
io.grpc.okhttp.OkHttpFrameLogger: void logSettings(io.grpc.okhttp.OkHttpFrameLogger$Direction,io.grpc.okhttp.internal.framed.Settings)
com.google.android.gms.internal.location.zzn: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzua: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzaau zzf()
com.google.firebase.firestore.FirebaseFirestoreException: com.google.firebase.firestore.FirebaseFirestoreException$Code getCode()
io.grpc.internal.ApplicationThreadDeframer$4: ApplicationThreadDeframer$4(io.grpc.internal.ApplicationThreadDeframer)
com.tekartik.sqflite.SqflitePlugin: void onCloseDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setTtl(int)
com.google.android.gms.internal.firebase-auth-api.zzqm: void writeToParcel(android.os.Parcel,int)
io.grpc.internal.DelayedStream$2: void run()
com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawVarintFastPath()
com.google.android.gms.internal.firebase-auth-api.zzih: void zzg(com.google.android.gms.internal.firebase-auth-api.zzih,int)
io.flutter.plugins.googlemaps.MarkerController: MarkerController(com.google.android.gms.maps.model.Marker,boolean)
io.grpc.okhttp.OkHttpClientStream$TransportState: void deframerClosed(boolean)
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Direction getDirection()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzX(int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabg)
com.google.android.gms.common.api.internal.BackgroundDetector: boolean readCurrentStateIfPossible(boolean)
com.google.firebase.firestore.Query: com.google.firebase.firestore.ListenerRegistration addSnapshotListenerInternal(java.util.concurrent.Executor,com.google.firebase.firestore.core.EventManager$ListenOptions,android.app.Activity,com.google.firebase.firestore.EventListener)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
com.google.android.gms.internal.firebase-auth-api.zzkx: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
com.google.android.gms.internal.maps.zzv: void zzz(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.google.android.gms.internal.firebase-auth-api.zzvd: void zzb()
io.grpc.internal.AbstractStream$TransportState: boolean access$100(io.grpc.internal.AbstractStream$TransportState)
androidx.core.view.WindowInsetsControllerCompat$Impl23: WindowInsetsControllerCompat$Impl23(android.view.Window,android.view.View)
com.google.android.gms.maps.internal.zzl: void onResume()
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseTimestamp(com.google.firebase.Timestamp)
com.google.firebase.firestore.core.Query: boolean matchesAllDocuments()
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmg zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: void remove()
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler access$300(io.grpc.okhttp.OkHttpClientTransport)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onInputConnectionLocked()
com.google.android.gms.internal.firebase-auth-api.zzht: java.lang.Class zza()
com.google.protobuf.MapFieldLite: void checkForNullKeysAndValues(java.util.Map)
com.google.firebase.firestore.remote.RemoteSerializer: java.lang.String databaseName()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
io.grpc.internal.TransportFrameUtil: boolean endsWith(byte[],byte[])
com.google.android.gms.internal.firebase-auth-api.zzabp: void zzd(com.google.android.gms.internal.firebase-auth-api.zzabo,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zztz: void zzb()
androidx.core.app.Person: java.lang.CharSequence getName()
com.google.android.gms.internal.firebase-auth-api.zzgi: void zzb(com.google.android.gms.internal.firebase-auth-api.zzfv)
com.google.android.gms.internal.firebase-auth-api.zzjl: int zza()
com.google.firestore.v1.StructuredQuery$Order$Builder: StructuredQuery$Order$Builder(com.google.firestore.v1.StructuredQuery$1)
com.google.common.collect.ImmutableList$SubList: java.util.List subList(int,int)
com.google.android.gms.internal.firebase-auth-api.zzkt: zzkt()
com.google.android.gms.internal.firebase-auth-api.zzgp: java.lang.Class zzb()
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState valueOf(java.lang.String)
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.maps.model.TileOverlayOptions: boolean isVisible()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder setReason(com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason)
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaeo: int zzi(java.lang.Class)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions$Builder setPhoneNumber(java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialMarkers()
com.google.android.gms.dynamic.zag: int zaa()
okio.Util: boolean arrayRangeEquals(byte[],int,byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzadt: java.util.Iterator iterator()
io.grpc.internal.InternalSubchannel: void checkListHasNoNulls(java.util.List,java.lang.String)
com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream getCodedOutput()
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.google.android.gms.common.internal.zac: java.lang.String zad(android.content.Context,int)
io.grpc.ManagedChannelBuilder: io.grpc.ManagedChannelBuilder keepAliveTime(long,java.util.concurrent.TimeUnit)
com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: void start()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport: ManagedChannelImpl$ChannelStreamProvider$1ExitIdleModeForTransport(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider)
io.grpc.internal.ReadableBuffers$BufferInputStream: boolean markSupported()
androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzrc: zzrc(java.lang.String)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.grpc.SecurityLevel: SecurityLevel(java.lang.String,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
com.google.android.datatransport.runtime.backends.BackendRequest$Builder: BackendRequest$Builder()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder: AutoProtoEncoderDoNotUseEncoder()
com.google.firestore.v1.Write: com.google.firestore.v1.Write$Builder newBuilder()
io.grpc.internal.InternalSubchannel$CallTracingTransport$1: void start(io.grpc.internal.ClientStreamListener)
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzjz zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.mutation.Mutation decodeMutation(com.google.firestore.v1.Write)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzlx: zzlx()
io.grpc.internal.StatsTraceContext: void outboundMessage(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
io.grpc.internal.InsightBuilder: InsightBuilder()
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition getDefaultInstance()
com.google.protobuf.FloatArrayList: java.lang.Object get(int)
io.grpc.internal.ApplicationThreadDeframer$3: ApplicationThreadDeframer$3(io.grpc.internal.ApplicationThreadDeframer,io.grpc.internal.ReadableBuffer)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzu(int,java.util.List,boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent: int getTtl()
io.grpc.internal.GzipInflatingBuffer$State: GzipInflatingBuffer$State(java.lang.String,int)
okio.ByteString: byte[] toByteArray()
io.flutter.plugins.googlemaps.MarkersController: MarkersController(io.flutter.plugin.common.MethodChannel)
com.google.firebase.auth.FirebaseAuthMultiFactorException: FirebaseAuthMultiFactorException(java.lang.String,java.lang.String,com.google.firebase.auth.MultiFactorResolver)
com.google.android.gms.internal.auth-api-phone.zzb: void zza(int,android.os.Parcel)
com.google.firebase.firestore.FieldValue$ArrayUnionFieldValue: java.lang.String getMethodName()
com.google.android.datatransport.runtime.EventInternal: int getInteger(java.lang.String)
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder access$200(io.grpc.LoadBalancer$CreateSubchannelArgs$Builder,java.lang.Object[][])
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()
com.google.android.gms.internal.firebase-auth-api.zzaba: void zzg(long)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: MemoryComponentProvider$RemoteStoreCallback(com.google.firebase.firestore.core.MemoryComponentProvider)
com.google.firebase.messaging.ImageDownload: com.google.android.gms.tasks.Task getTask()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
androidx.window.core.Bounds: android.graphics.Rect toRect()
io.grpc.internal.ForwardingClientStream: void setDeadline(io.grpc.Deadline)
com.google.android.gms.internal.firebase-auth-api.zzrm: zzrm(com.google.firebase.auth.PhoneAuthCredential,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
com.google.android.gms.internal.location.zzm: void writeToParcel(android.os.Parcel,int)
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
com.google.protobuf.FloatArrayList: boolean contains(java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.gms.maps.model.Circle: void setZIndex(float)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
com.google.android.datatransport.runtime.TransportImpl: void send(com.google.android.datatransport.Event)
com.google.android.gms.internal.firebase-auth-api.zzdp: zzdp(byte[])
com.google.common.collect.ImmutableCollection: boolean remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmp: java.lang.String zze()
com.google.firebase.installations.GetAuthTokenListener: boolean onException(java.lang.Exception)
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] values()
com.google.firebase.firestore.remote.AbstractStream: void handleIdleCloseTimer()
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
com.google.firebase.auth.internal.zzw: boolean zze()
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.Api$Client zaf()
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
com.google.protobuf.ByteString$2: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: java.lang.Object next()
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setTopic(java.lang.String)
com.google.firebase.firestore.bundle.NamedQuery: int hashCode()
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.local.SQLiteMutationQueue: void loadNextBatchIdAcrossAllUsers()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
com.google.firebase.firestore.Blob: Blob(com.google.protobuf.ByteString)
io.grpc.okhttp.NegotiationType: NegotiationType(java.lang.String,int)
io.grpc.internal.AbstractReadableBuffer: void mark()
io.grpc.internal.RetriableStream$Sublistener: io.grpc.internal.RetriableStream$HedgingPlan makeHedgingDecision(io.grpc.Status,io.grpc.Metadata)
com.google.android.gms.maps.model.zzj: zzj()
io.grpc.okhttp.internal.DistinguishedNameParser: char getEscaped()
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: CodedOutputStream$AbstractBufferedEncoder(int)
com.google.common.base.CharMatcher: CharMatcher()
com.google.android.datatransport.runtime.AutoValue_SendRequest: com.google.android.datatransport.Event getEvent()
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.google.firebase.firestore.proto.WriteBatch: WriteBatch()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
com.google.android.gms.internal.maps.zzab: void zzz(float)
okio.RealBufferedSink: RealBufferedSink(okio.Sink)
io.grpc.internal.ReadableBuffers: java.lang.String readAsString(io.grpc.internal.ReadableBuffer,java.nio.charset.Charset)
com.google.android.gms.signin.internal.zal: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
com.google.firebase.messaging.GmsRpc: java.lang.String handleResponse(android.os.Bundle)
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: AndroidChannelBuilder$AndroidChannel$NetworkReceiver(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.Timestamp decodeTimestamp(com.google.protobuf.Timestamp)
com.google.firebase.firestore.local.MemoryMutationQueue: void performConsistencyCheck()
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: void readContinuationHeader()
com.google.protobuf.UnsafeUtil: long fieldOffset(java.lang.reflect.Field)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_PackageNameFactory create(javax.inject.Provider)
com.google.firestore.v1.StructuredQuery: void setEndAt(com.google.firestore.v1.Cursor)
com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.IMapViewDelegate zzg(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.GoogleMapOptions)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestore getInstance(com.google.firebase.FirebaseApp,java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Iterable loadActiveContexts()
com.google.firebase.auth.AuthCredential: AuthCredential()
com.google.android.gms.internal.firebase-auth-api.zzvn: zzvn(java.lang.String,java.lang.String,com.google.firebase.auth.ActionCodeSettings)
io.flutter.plugins.googlemaps.MarkerController: void setAlpha(float)
io.grpc.internal.ProxyDetectorImpl$1: ProxyDetectorImpl$1()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: void updateAddresses(java.util.List)
com.google.firebase.firestore.local.SQLiteSchema: void runSchemaUpgrades(int)
com.google.firebase.auth.zzq: void onCodeSent(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: RBTreeSortedMap$Builder$Base1_2$1(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
com.google.firestore.v1.ArrayValue: void access$200(com.google.firestore.v1.ArrayValue,com.google.firestore.v1.Value)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$1: void success(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: void executeCloseObserverInContext(io.grpc.ClientCall$Listener,io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzS(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.android.gms.internal.firebase-auth-api.zzdd: byte[] zzb(byte[],byte[])
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.MutableDocument decodeNoDocument(com.google.firebase.firestore.proto.NoDocument,boolean)
androidx.fragment.app.Fragment: void performDetach()
com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()
com.google.android.gms.internal.firebase-auth-api.zzyj: void writeToParcel(android.os.Parcel,int)
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: IncompatibleApkWebViewProviderFactory()
com.google.android.gms.signin.internal.zab: java.lang.Object[] newArray(int)
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzc()
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: JobIntentService$CompatWorkItem(io.flutter.plugins.firebase.messaging.JobIntentService,android.content.Intent,int)
io.grpc.internal.SerializingExecutor$FieldUpdaterAtomicHelper: void runStateSet(io.grpc.internal.SerializingExecutor,int)
com.google.android.gms.location.zzac: java.lang.Object[] newArray(int)
io.grpc.internal.InternalSubchannel$TransportLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmk: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.model.mutation.SetMutation: boolean equals(java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.google.protobuf.UnknownFieldSetLiteSchema: com.google.protobuf.UnknownFieldSetLite getBuilderFromMessage(java.lang.Object)
io.grpc.Metadata: Metadata(int,java.lang.Object[])
com.google.firebase.firestore.local.SQLitePersistence: void shutdown()
com.google.android.gms.internal.firebase-auth-api.zzaeq: void zzb(byte,byte,byte,char[],int)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.IInterface createServiceInterface(android.os.IBinder)
io.grpc.internal.ServiceConfigUtil: java.lang.Boolean getWaitForReadyFromMethodConfig(java.util.Map)
com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicLongMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)
io.grpc.internal.ReadableBuffers$BufferInputStream: void close()
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.ManagedClientTransport$Listener access$000(io.grpc.okhttp.OkHttpClientTransport)
io.perfmark.PerfMark: void stopTask(java.lang.String)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: java.lang.String convertAction(java.lang.String)
com.google.protobuf.BooleanArrayList: BooleanArrayList()
com.google.android.gms.internal.firebase-auth-api.zzcq: int zzf()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientHostApiCodec: GeneratedAndroidWebView$WebViewClientHostApiCodec()
io.grpc.internal.GrpcUtil: java.lang.String checkAuthority(java.lang.String)
com.google.firebase.firestore.model.Values: boolean isNumber(com.google.firestore.v1.Value)
com.google.protobuf.MessageSchema: boolean isListInitialized(java.lang.Object,int,int)
com.google.android.gms.internal.firebase-auth-api.zzt: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: java.util.Map getValues()
com.google.firebase.firestore.local.MemoryTargetCache: com.google.firebase.database.collection.ImmutableSortedSet getMatchingKeysForTargetId(int)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.IndexManager getIndexManager(com.google.firebase.firestore.auth.User)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setModel(java.lang.String)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzyp: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: ViewSnapshot$SyncState(java.lang.String,int)
com.google.protobuf.CodedInputStream$ArrayDecoder: void skipRawBytes(int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
com.google.firebase.firestore.model.DocumentKey: boolean hasCollectionId(java.lang.String)
com.google.firebase.encoders.FieldDescriptor: java.lang.annotation.Annotation getProperty(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzuj: void zzb()
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.flutter.plugins.googlemaps.GoogleMapController: void setMyLocationButtonEnabled(boolean)
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: void teardownChannel()
com.google.protobuf.Utf8$DecodeUtil: void access$700(byte,byte,char[],int)
com.google.firebase.firestore.local.ReferenceSet: boolean containsKey(com.google.firebase.firestore.model.DocumentKey)
io.grpc.okhttp.OkHttpFrameLogger: boolean isEnabled()
com.google.android.gms.internal.firebase-auth-api.zzdq: byte[] zzb(java.nio.ByteBuffer,byte[],byte[])
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.QueryResult executeQuery(com.google.firebase.firestore.core.Query,boolean)
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: long getMaxValue()
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: void onDisplayChanged(int)
com.google.protobuf.AbstractProtobufList: boolean equals(java.lang.Object)
com.google.firebase.messaging.reporting.MessagingClientEventExtension: com.google.firebase.messaging.reporting.MessagingClientEvent getMessagingClientEventInternal()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
com.google.android.gms.internal.location.zzaz: void zzb(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzaj)
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.common.Feature[] zab(com.google.android.gms.common.api.internal.zabq)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
com.google.android.gms.location.LocationAvailability: LocationAvailability(int,int,int,long,com.google.android.gms.location.zzaj[])
com.google.firebase.auth.internal.zzaw: zzaw(com.google.firebase.auth.internal.zzax,android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApiCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
com.google.protobuf.BinaryReader$SafeHeapReader: void readSInt32List(java.util.List)
io.grpc.internal.ManagedChannelImpl$RealChannel: void onConfigError()
com.google.android.gms.cloudmessaging.zzy: void run()
com.google.firebase.auth.zzaj: zzaj()
io.grpc.StreamTracer: void inboundUncompressedSize(long)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.math.BigInteger zzb(java.security.spec.EllipticCurve)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.Object,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyw: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readInt64()
io.grpc.internal.TransportTracer: void reportLocalStreamStarted()
com.google.firebase.firestore.local.SQLiteSchema: void addPendingDataMigration(java.lang.String)
com.google.protobuf.RopeByteString$Balancer: void doBalance(com.google.protobuf.ByteString)
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
com.google.android.gms.internal.firebase-auth-api.zzhe: void zzn(int)
com.google.firebase.auth.internal.zzy: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task reload()
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: ManagedChannelRegistry$ManagedChannelPriorityAccessor(io.grpc.ManagedChannelRegistry$1)
io.grpc.Status$StatusMessageMarshaller: java.lang.Object parseAsciiString(byte[])
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: com.google.android.datatransport.cct.internal.QosTier getQosTier()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getCollapseKey(android.os.Bundle)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setMapValue(com.google.firestore.v1.MapValue)
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setResponseMarshaller(io.grpc.MethodDescriptor$Marshaller)
com.google.firebase.auth.zzs: void zza(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.firebase.auth.FirebaseUser)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.firebase.messaging.NotificationParams: android.os.Bundle paramsForAnalyticsIntent()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.grpc.internal.AbstractStream$TransportState: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task runTransaction(com.google.firebase.firestore.TransactionOptions,com.google.firebase.firestore.Transaction$Function,java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzna: com.google.android.gms.internal.firebase-auth-api.zzna zzc(int)
com.google.android.gms.maps.UiSettings: boolean isZoomGesturesEnabled()
com.google.firebase.firestore.local.LocalStore: LocalStore(com.google.firebase.firestore.local.Persistence,com.google.firebase.firestore.local.QueryEngine,com.google.firebase.firestore.auth.User)
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.String zzg(int)
com.google.android.gms.internal.firebase-auth-api.zzkt: com.google.android.gms.internal.firebase-auth-api.zzkt zza(com.google.android.gms.internal.firebase-auth-api.zzko)
com.google.firebase.messaging.TopicsSubscriber: void blockingUnsubscribeFromTopic(java.lang.String)
io.flutter.plugins.googlemaps.Convert: android.graphics.Point toPoint(java.lang.Object)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zzaau zzg()
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel(kotlin.jvm.functions.Function1)
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.protobuf.ByteString getStreamToken()
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: boolean isTerminated()
com.google.android.gms.maps.model.PatternItem: PatternItem(int,java.lang.Float)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.internal.firebase-auth-api.zzaci: zzaci()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task fetchSignInMethodsForEmail(java.lang.String)
com.google.protobuf.UnknownFieldSetLiteSchema: int getSerializedSizeAsMessageSet(com.google.protobuf.UnknownFieldSetLite)
androidx.window.core.Bounds: int getTop()
com.google.gson.stream.JsonReader: boolean isLiteral(char)
okio.SegmentedByteString: byte getByte(int)
com.google.protobuf.FieldSet: int computeElementSizeNoTag(com.google.protobuf.WireFormat$FieldType,java.lang.Object)
com.google.android.gms.safetynet.zzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzmj zza()
io.grpc.okhttp.OutboundFlowController: void flush()
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: io.grpc.internal.ConnectionClientTransport delegate()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzadq: java.lang.Object zzC(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzacb,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzaef)
com.google.android.gms.internal.firebase-auth-api.zzdf: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
com.google.firebase.database.collection.ImmutableSortedSet: boolean isEmpty()
com.google.firestore.v1.Value: com.google.firestore.v1.Value access$000()
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.local.LocalStore createLocalStore(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.firebase.messaging.WithinAppServiceConnection: void startConnectionIfNeeded()
com.google.common.collect.ImmutableSet: ImmutableSet()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.database.collection.ImmutableSortedMap applyRemoteEvent(com.google.firebase.firestore.remote.RemoteEvent)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
com.google.protobuf.UnknownFieldSetLiteSchema: void addFixed32(java.lang.Object,int,int)
io.grpc.internal.Http2ClientStreamTransportState: java.nio.charset.Charset extractCharset(io.grpc.Metadata)
com.google.android.gms.internal.firebase-auth-api.zzqp: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: StructuredQuery$UnaryFilter$Operator(java.lang.String,int,int)
com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey createListenerKey(java.lang.Object,java.lang.String)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: io.grpc.Status access$500(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl)
com.google.android.gms.internal.common.zzc: void zze(android.os.Parcel,android.os.IInterface)
com.google.android.gms.internal.firebase-auth-api.zzaen: void zze(java.lang.Object,long,double)
com.google.android.gms.internal.firebase-auth-api.zzzg: boolean zzn(java.lang.String)
io.flutter.plugins.googlemaps.MarkerController: boolean consumeTapEvents()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzi()
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
io.grpc.Context$Storage: void attach(io.grpc.Context)
com.google.firebase.firestore.remote.WatchChange$DocumentChange: com.google.firebase.firestore.model.MutableDocument getNewDocument()
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,java.lang.Object)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)
com.google.android.gms.common.api.internal.BasePendingResult: void zal(com.google.android.gms.common.api.Result)
com.google.android.gms.internal.firebase-auth-api.zzrc: java.lang.String zza()
com.google.firebase.firestore.model.Values: int compareArrays(com.google.firestore.v1.ArrayValue,com.google.firestore.v1.ArrayValue)
com.google.firebase.messaging.TopicsSubscriber: void syncWithDelaySecondsInternal(long)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
com.tekartik.sqflite.SqflitePlugin: java.lang.Object cursorValue(android.database.Cursor,int)
kotlinx.coroutines.CommonPool: java.lang.String toString()
io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.Attributes getAttributes()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void startBackgroundIsolate(long,io.flutter.embedding.engine.FlutterShellArgs)
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.model.DocumentSet getDocuments()
io.grpc.okhttp.OkHttpWritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
com.google.android.gms.maps.model.zzl: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
com.google.firebase.firestore.remote.RemoteStore: boolean shouldStartWatchStream()
com.google.android.gms.common.api.internal.GoogleApiManager: void zav(com.google.android.gms.common.api.internal.GoogleApiManager,boolean)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
io.grpc.internal.ForwardingManagedChannel: java.lang.String toString()
com.google.android.gms.common.api.internal.zaad: boolean zag()
kotlin.collections.IntIterator: IntIterator()
com.google.firebase.firestore.model.DocumentKey: java.lang.String getDocumentId()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
okio.SegmentedByteString: void write(okio.Buffer)
com.google.firebase.firestore.Query: com.google.firebase.firestore.core.FieldFilter$Operator findOpInsideFilters(java.util.List,java.util.List)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] values()
com.google.protobuf.SchemaUtil: java.lang.Object storeUnknownEnum(int,int,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
com.google.protobuf.MessageSchema: com.google.protobuf.UnknownFieldSetLite getMutableUnknownFields(java.lang.Object)
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
okio.Base64: java.lang.String encode(byte[])
com.google.android.gms.internal.auth-api-phone.zza: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.grpc.internal.RetriableStream$FutureCanceller: RetriableStream$FutureCanceller(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzD(com.google.firebase.auth.EmailAuthCredential,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firestore.bundle.BundledQuery$LimitType$1: BundledQuery$LimitType$1()
com.google.firebase.provider.FirebaseInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.google.protobuf.Utf8$Processor: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)
io.grpc.internal.ManagedChannelImpl: java.lang.String access$7800(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.messaging.NotificationParams: java.lang.String getSoundResourceName()
com.google.firebase.auth.internal.zzbh: void onBackgroundStateChanged(boolean)
io.flutter.plugins.googlemaps.TileProviderController: android.os.Handler access$000(io.flutter.plugins.googlemaps.TileProviderController)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
com.google.firebase.auth.zzt: void zzb(com.google.android.gms.common.api.Status)
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler access$302(io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
io.perfmark.PerfMark: void linkIn(io.perfmark.Link)
com.google.android.gms.internal.firebase-auth-api.zzpo: java.lang.String toString()
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] values()
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.firestore.model.mutation.MutationBatchResult create(com.google.firebase.firestore.model.mutation.MutationBatch,com.google.firebase.firestore.model.SnapshotVersion,java.util.List,com.google.protobuf.ByteString)
io.grpc.internal.DelayedClientCall: java.util.concurrent.ScheduledFuture scheduleDeadlineIfNeeded(java.util.concurrent.ScheduledExecutorService,io.grpc.Deadline)
com.google.android.gms.internal.auth-api-phone.zzi: void zza(com.google.android.gms.internal.auth-api-phone.zzl)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.firestore.bundle.BundledQuery$Builder: com.google.firestore.bundle.BundledQuery$Builder setStructuredQuery(com.google.firestore.v1.StructuredQuery)
io.grpc.ManagedChannelProvider: io.grpc.ManagedChannelProvider provider()
io.grpc.okhttp.AsyncSink$WriteRunnable: AsyncSink$WriteRunnable(io.grpc.okhttp.AsyncSink)
com.google.firebase.firestore.remote.RemoteStore: void fillWritePipeline()
io.flutter.plugins.firebase.messaging.JobIntentService: void ensureProcessorRunningLocked(boolean)
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.Status access$200(io.grpc.internal.DnsNameResolver$InternalResolutionResult)
com.google.firestore.v1.Target$Builder: com.google.firestore.v1.Target$Builder setTargetId(int)
com.google.android.gms.internal.firebase-auth-api.zzcp: zzcp(com.google.android.gms.internal.firebase-auth-api.zzcq,java.lang.Class)
com.google.android.gms.maps.model.LatLng: int hashCode()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
com.google.android.gms.internal.firebase-auth-api.zzee: zzee(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzob: zzob(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzqs: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
io.flutter.plugins.googlemaps.MarkerController: void hideInfoWindow()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.protobuf.Utf8$DecodeUtil: char lowSurrogate(int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void onReceivedError(android.webkit.WebViewClient,android.webkit.WebView,java.lang.Long,java.lang.String,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.android.gms.internal.firebase-auth-api.zzid: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzlc: zzlc(com.google.android.gms.internal.firebase-auth-api.zzlb)
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzaau zze()
com.google.android.gms.internal.firebase-auth-api.zzaei: boolean hasNext()
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath createPathWithSegments(java.util.List)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
io.flutter.plugins.googlemaps.CircleController: java.lang.String getGoogleMapsCircleId()
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void ensureConfigured(android.database.sqlite.SQLiteDatabase)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task updateEmail(java.util.Map)
io.grpc.internal.RetriableStream$Sublistener$3: void run()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void evaluateJavascript(java.lang.Long,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$Result)
com.google.android.gms.internal.firebase-auth-api.zzvd: java.lang.String zza()
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: DocumentTransform$FieldTransform$Builder(com.google.firestore.v1.DocumentTransform$1)
com.google.android.gms.internal.firebase-auth-api.zzzg: zzzg()
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
com.google.android.gms.maps.model.Circle: void setStrokeWidth(float)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
com.google.android.gms.internal.firebase-auth-api.zzgo: com.google.android.gms.internal.firebase-auth-api.zzgo zzc(com.google.android.gms.internal.firebase-auth-api.zzhg,java.lang.Class,java.lang.Class)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
kotlin.Pair: java.lang.Object component2()
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
io.grpc.okhttp.OkHttpClientStream$TransportState: void deframeFailed(java.lang.Throwable)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.google.protobuf.MessageSchema: void readStringList(java.lang.Object,int,com.google.protobuf.Reader)
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: DocumentTransform$FieldTransform$TransformTypeCase(java.lang.String,int,int)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: com.google.firestore.v1.Value applyToRemoteDocument(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
com.google.protobuf.SmallSortedMap$EmptySet$2: SmallSortedMap$EmptySet$2()
com.google.android.gms.internal.firebase-auth-api.zzyg: zzyg(java.lang.String)
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status getStatus()
com.google.protobuf.MessageSchema: com.google.protobuf.Internal$EnumVerifier getEnumFieldVerifier(int)
com.google.android.gms.auth.api.phone.zza: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.protobuf.BinaryReader$SafeHeapReader: void readUInt32List(java.util.List)
com.google.protobuf.CodedInputStream$StreamDecoder: byte readRawByte()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzi(int,int)
com.google.firebase.auth.internal.zzax: void zze(android.content.Context)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setCriticalSectionEnterTimeoutMs(int)
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()
com.google.android.gms.internal.firebase-auth-api.zzfh: zzfh(com.google.android.gms.internal.firebase-auth-api.zzet,int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.String toString()
com.google.android.gms.common.internal.zzl: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.safetynet.zze: zze()
com.google.firebase.firestore.SetOptions: SetOptions(boolean,com.google.firebase.firestore.model.mutation.FieldMask)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.proto.Target encodeTargetData(com.google.firebase.firestore.local.TargetData)
io.grpc.okhttp.internal.framed.Huffman$Node: Huffman$Node(int,int)
com.google.firebase.firestore.core.OrderBy: com.google.firebase.firestore.core.OrderBy getInstance(com.google.firebase.firestore.core.OrderBy$Direction,com.google.firebase.firestore.model.FieldPath)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse build()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.firebase.auth.TwitterAuthCredential: java.lang.String getSignInMethod()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] values()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $values()
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzpo zza()
com.google.firebase.firestore.util.FileUtil: void delete(java.io.File)
com.google.firebase.firestore.model.mutation.Overlay: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.protobuf.SmallSortedMap: void access$300(com.google.protobuf.SmallSortedMap)
io.grpc.internal.DelayedClientTransport$PendingStream: io.grpc.LoadBalancer$PickSubchannelArgs access$300(io.grpc.internal.DelayedClientTransport$PendingStream)
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.grpc.okhttp.internal.framed.Http2$Reader: void readGoAway(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
com.google.firestore.v1.BatchGetDocumentsRequest: void ensureDocumentsIsMutable()
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
com.google.android.gms.maps.model.MarkerOptions: boolean isDraggable()
com.google.protobuf.LongArrayList: boolean contains(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2(java.lang.reflect.Constructor)
com.google.common.collect.Lists: int lastIndexOfRandomAccess(java.util.List,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
com.google.android.gms.common.internal.zzm: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzwp: void run()
com.google.firestore.v1.Target: void setResumeToken(com.google.protobuf.ByteString)
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzacd: int zzb(byte[])
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: SQLiteDocumentOverlayCache(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer,com.google.firebase.firestore.auth.User)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.android.gms.internal.firebase-auth-api.zzpy: java.lang.String zzb()
io.grpc.internal.DelayedClientCall$7: void halfClose()
androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
com.google.android.gms.cloudmessaging.zzc: zzc()
androidx.localbroadcastmanager.content.LocalBroadcastManager: void executePendingBroadcasts()
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
kotlin.KotlinVersion$Companion: KotlinVersion$Companion()
com.google.android.gms.internal.firebase-auth-api.zzaby: int indexOf(java.lang.Object)
com.google.android.gms.common.internal.BaseGmsClient: boolean enableLocalFallback()
com.google.android.gms.internal.firebase-auth-api.zzed: java.lang.Class zzb()
com.google.android.gms.internal.maps.zzv: void zzs(com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.internal.location.zzap: void zza(boolean)
com.google.android.gms.maps.model.MarkerOptions: java.lang.String getSnippet()
com.google.firebase.firestore.util.ApiUtil: java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzvq: void zzO(com.google.firebase.FirebaseApp,com.google.android.gms.internal.firebase-auth-api.zzzd,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,android.app.Activity,java.util.concurrent.Executor)
io.grpc.CompressorRegistry: io.grpc.Compressor lookupCompressor(java.lang.String)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long)
io.grpc.Metadata$1: Metadata$1()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getOsBuild()
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: void deframeFailed(java.lang.Throwable)
io.grpc.internal.CompositeReadableBuffer: int readUnsignedByte()
com.google.android.gms.safetynet.zzk: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object getValue()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzx(int)
com.google.firebase.firestore.local.MemoryTargetCache: int getHighestTargetId()
com.google.firebase.firestore.util.LogicUtils: java.util.List getDnfTerms(com.google.firebase.firestore.core.CompositeFilter)
com.google.android.gms.internal.firebase-auth-api.zzcn: void zzg(com.google.android.gms.internal.firebase-auth-api.zzcn,com.google.android.gms.internal.firebase-auth-api.zzjc)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.common.collect.RegularImmutableMap$EntrySet: int access$200(com.google.common.collect.RegularImmutableMap$EntrySet)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzp(com.google.android.gms.internal.firebase-auth-api.zzzm,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zze(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.internal.zzan)
io.grpc.ClientInterceptors$2: ClientInterceptors$2()
com.google.android.gms.internal.firebase-auth-api.zzlh: com.google.android.gms.internal.firebase-auth-api.zzlh zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.protobuf.ExtensionSchemaLite: com.google.protobuf.FieldSet getMutableExtensions(java.lang.Object)
com.google.common.collect.ByFunctionOrdering: int hashCode()
io.grpc.internal.GzipInflatingBuffer: byte[] access$200(io.grpc.internal.GzipInflatingBuffer)
com.google.firebase.firestore.core.SyncEngine: void handleSuccessfulWrite(com.google.firebase.firestore.model.mutation.MutationBatchResult)
com.google.protobuf.SmallSortedMap$EmptySet$1: boolean hasNext()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getCountry()
io.grpc.internal.ClientCallImpl: void access$1200(io.grpc.internal.ClientCallImpl)
com.google.firebase.messaging.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: void writeDouble(double)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzgb: zzgb(java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzgp[])
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest create()
com.google.common.collect.Ordering: com.google.common.collect.Ordering from(java.util.Comparator)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency deferred(java.lang.Class)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getMessageId(android.os.Bundle)
com.google.android.gms.common.internal.zzf: zzf(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IBinder,android.os.Bundle)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
io.grpc.okhttp.OkHttpClientTransport: java.net.InetSocketAddress access$900(io.grpc.okhttp.OkHttpClientTransport)
io.grpc.internal.MessageDeframer: boolean isClosedOrScheduledToClose()
com.google.android.gms.internal.firebase-auth-api.zzaeg: com.google.android.gms.internal.firebase-auth-api.zzaeg zzd(com.google.android.gms.internal.firebase-auth-api.zzaeg,com.google.android.gms.internal.firebase-auth-api.zzaeg)
com.google.android.gms.internal.firebase-auth-api.zzcw: boolean zzi()
com.google.android.gms.maps.model.Polygon: java.lang.String getId()
io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerProvider getProvider(java.lang.String)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: com.google.firestore.v1.Value applyToLocalView(com.google.firestore.v1.Value,com.google.firebase.Timestamp)
com.google.firebase.auth.zzi: zzi(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser)
com.google.android.gms.internal.firebase-auth-api.zzaby: zzaby(int[],int)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
com.google.android.gms.internal.location.zzbc: zzbc(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)
com.google.firebase.firestore.remote.OnlineStateTracker: void setAndBroadcastState(com.google.firebase.firestore.core.OnlineState)
com.google.firebase.firestore.model.mutation.Mutation: java.lang.String keyAndPreconditionToString()
com.lyokone.location.MethodCallHandlerImpl: void onHasPermission(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzah: java.lang.Object next()
io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCountOrDefault(java.lang.Class,int)
io.grpc.CallOptions$Key: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzD(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzdf: zzdf(com.google.android.gms.internal.firebase-auth-api.zzdg,java.lang.Class)
androidx.webkit.internal.WebViewGlueCommunicator: java.lang.Object getWebViewProviderFactory()
com.google.firebase.FirebaseApp: void delete()
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzg()
com.google.protobuf.CodedOutputStreamWriter: void writeGroup(int,java.lang.Object,com.google.protobuf.Schema)
androidx.collection.ArraySet: java.lang.String toString()
com.google.firestore.v1.Value$ValueTypeCase: Value$ValueTypeCase(java.lang.String,int,int)
io.flutter.plugins.googlemaps.Convert: void interpretInfoWindowOptions(io.flutter.plugins.googlemaps.MarkerOptionsSink,java.util.Map)
com.google.protobuf.BinaryReader: com.google.protobuf.BinaryReader newInstance(java.nio.ByteBuffer,boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
com.google.firebase.firestore.bundle.BundledDocumentMetadata: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvp: void zzb()
io.grpc.internal.CompositeReadableBuffer: boolean markSupported()
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature valueOf(java.lang.String)
okio.RealBufferedSink: void close()
androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)
io.grpc.internal.InsightBuilder: java.lang.String toString()
io.grpc.internal.SerializingExecutor$SynchronizedAtomicHelper: SerializingExecutor$SynchronizedAtomicHelper(io.grpc.internal.SerializingExecutor$1)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions center(com.google.android.gms.maps.model.LatLng)
io.grpc.Status$StatusMessageMarshaller: Status$StatusMessageMarshaller()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setManufacturer(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaan: zzaan()
com.google.firebase.firestore.core.Query$QueryComparator: int compare(java.lang.Object,java.lang.Object)
io.grpc.internal.ForwardingReadableBuffer: java.lang.String toString()
com.google.android.gms.common.api.UnsupportedApiCallException: java.lang.String getMessage()
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzkz zzd(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzK(java.lang.Object,java.lang.Object,int)
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zzf()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: void error(java.lang.Throwable)
io.grpc.internal.ClientCallImpl: void halfCloseInternal()
com.google.protobuf.CodedOutputStream: int computeRawMessageSetExtensionSize(int,com.google.protobuf.ByteString)
com.google.android.gms.common.api.internal.zact: zact(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.ClientSettings)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzq(int,int)
io.grpc.internal.SerializingExecutor: io.grpc.internal.SerializingExecutor$AtomicHelper getAtomicHelper()
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzw(java.util.List)
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.android.gms.tasks.zzu: void execute(java.lang.Runnable)
com.google.android.gms.location.LocationSettingsResult: LocationSettingsResult(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzp(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder()
com.google.android.gms.common.api.internal.zam: int zaa()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: void putByte(java.lang.Object,long,byte)
com.google.android.gms.maps.model.zzi: java.lang.Object createFromParcel(android.os.Parcel)
androidx.webkit.internal.WebkitToCompatConverter: android.webkit.SafeBrowsingResponse convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
com.google.firestore.v1.Value: void access$900(com.google.firestore.v1.Value,double)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: void run()
io.grpc.okhttp.internal.Platform$JdkAlpnPlatform: Platform$JdkAlpnPlatform(java.security.Provider,java.lang.reflect.Method,java.lang.reflect.Method)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType forNumber(int)
com.google.android.gms.maps.UiSettings: void setCompassEnabled(boolean)
com.google.firebase.firestore.core.SQLiteComponentProvider: com.google.firebase.firestore.local.Scheduler createGarbageCollectionScheduler(com.google.firebase.firestore.core.ComponentProvider$Configuration)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: void putDouble(java.lang.Object,long,double)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.google.firebase.auth.internal.zzbj: zzbj()
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
com.google.android.gms.common.logging.Logger: void w(java.lang.String,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzaau: byte[] zzt()
com.google.android.gms.internal.firebase-auth-api.zzct: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.gms.common.internal.zac: java.lang.String zag(android.content.Context,int)
com.google.android.gms.maps.internal.zzam: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
com.google.android.gms.maps.model.Dash: java.lang.String toString()
com.google.protobuf.CodedInputStream$StreamDecoder: boolean skipField(int)
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.google.protobuf.MessageSchema: void mergeFrom(java.lang.Object,java.lang.Object)
io.grpc.okhttp.internal.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
com.google.firestore.v1.Value: void access$2200(com.google.firestore.v1.Value,com.google.type.LatLng)
com.google.common.base.Stopwatch: long elapsedNanos()
com.google.android.gms.common.internal.zah: zah(com.google.android.gms.common.api.internal.ConnectionCallbacks)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.gms.internal.firebase-auth-api.zzabp: boolean equals(java.lang.Object)
com.google.android.gms.common.logging.Logger: boolean isLoggable(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void onReceivedError(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
com.google.firebase.auth.FirebaseAuth: boolean zzM(java.lang.String)
com.google.firestore.v1.MapValue$Builder: MapValue$Builder()
com.google.android.gms.common.api.internal.LifecycleCallback: void onActivityResult(int,int,android.content.Intent)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite$Builder newBuilderForType()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getRefreshToken()
com.google.android.gms.internal.firebase-auth-api.zzva: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
io.grpc.internal.InternalSubchannel: io.grpc.Status access$1602(io.grpc.internal.InternalSubchannel,io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzabq: zzabq(java.lang.String,int,int,int,com.google.android.gms.internal.firebase-auth-api.zzacg)
io.flutter.plugins.webviewflutter.JavaScriptChannelHostApiImpl: void setPlatformThreadHandler(android.os.Handler)
com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)
kotlin.coroutines.CombinedContext: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaal: zzaal(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
com.google.android.gms.internal.firebase-auth-api.zzuc: java.lang.String zza()
io.grpc.okhttp.internal.CipherSuite: CipherSuite(java.lang.String,int,java.lang.String,int)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: int hashCode()
com.baseflow.geolocator.StreamHandlerImpl: StreamHandlerImpl(com.baseflow.geolocator.location.GeolocationManager)
com.google.firebase.firestore.local.EncodedPath: java.lang.String encode(com.google.firebase.firestore.model.BasePath)
com.google.firebase.messaging.SyncTask: boolean isDeviceConnected()
com.google.firebase.firestore.model.mutation.FieldTransform: FieldTransform(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.model.mutation.TransformOperation)
com.google.firebase.messaging.FirebaseMessagingService: void onNewToken(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics build()
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzT(java.lang.Object,int,int)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvi: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zziz zzd()
com.google.firebase.auth.ActionCodeSettings: com.google.firebase.auth.ActionCodeSettings zzb()
com.google.common.io.BaseEncoding: java.lang.String encode(byte[],int,int)
androidx.fragment.app.Fragment$4: boolean onHasView()
com.google.android.gms.common.api.internal.TaskApiCall: boolean shouldAutoResolveMissingFeatures()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)
com.google.android.gms.internal.firebase-auth-api.zzacj: zzacj(int)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase getFilterTypeCase()
io.grpc.internal.RetriableStream$Sublistener$5: void run()
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: com.google.protobuf.Internal$ProtobufList getProtobufList(java.lang.Object,long)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeFixed64(int,long)
com.google.android.gms.internal.firebase-auth-api.zzkd: void zze(com.google.android.gms.internal.firebase-auth-api.zzkd,int)
com.google.android.gms.internal.firebase-auth-api.zzaau: java.util.Iterator iterator()
io.grpc.okhttp.OkHttpClientStream: io.grpc.okhttp.OkHttpClientStream$Sink abstractClientStreamSink()
com.google.firestore.v1.MapValue$Builder: com.google.firestore.v1.MapValue$Builder removeFields(java.lang.String)
io.grpc.MethodDescriptor$Builder: MethodDescriptor$Builder(io.grpc.MethodDescriptor$1)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ranges.IntProgression: boolean isEmpty()
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
io.grpc.internal.DnsNameResolverProvider: DnsNameResolverProvider()
com.google.common.io.BaseEncoding$StandardBaseEncoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)
com.google.protobuf.IntArrayList: int getInt(int)
com.google.firebase.messaging.CommonNotificationBuilder: android.os.Bundle getManifestMetadata(android.content.pm.PackageManager,java.lang.String)
com.google.protobuf.SchemaUtil: void requireGeneratedMessage(java.lang.Class)
com.google.android.gms.common.api.Status: Status(int,int,java.lang.String,android.app.PendingIntent,com.google.android.gms.common.ConnectionResult)
com.google.android.gms.common.zzj: zzj(byte[])
com.google.firebase.firestore.local.LocalDocumentsResult: com.google.firebase.firestore.local.LocalDocumentsResult fromOverlayedDocuments(int,java.util.Map)
com.google.firebase.auth.internal.zzx: java.lang.String getDisplayName()
io.grpc.internal.ExponentialBackoffPolicy: ExponentialBackoffPolicy()
io.grpc.internal.JsonUtil: long normalizedDuration(long,int)
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: com.google.firestore.v1.StructuredQuery$FieldFilter$Builder setField(com.google.firestore.v1.StructuredQuery$FieldReference)
com.google.firestore.v1.Cursor$Builder: com.google.firestore.v1.Cursor$Builder setBefore(boolean)
io.grpc.internal.Rescheduler: long nanoTime()
com.google.protobuf.CodedInputStream$ArrayDecoder: int pushLimit(int)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)
com.google.firebase.auth.zzx: java.lang.Object then(com.google.android.gms.tasks.Task)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
com.google.android.gms.internal.maps.zzab: void zzy(boolean)
com.google.firebase.firestore.remote.OnlineStateTracker: void clearOnlineStateTimer()
com.google.firebase.firestore.local.LruGarbageCollector: int calculateQueryCount(int)
kotlinx.coroutines.internal.OpDescriptor: boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor)
io.grpc.Context: void removeListener(io.grpc.Context$CancellationListener)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
io.grpc.internal.RetriableStream$Sublistener: java.lang.Integer getPushbackMills(io.grpc.Metadata)
com.google.protobuf.LazyStringArrayList: java.lang.String get(int)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzw(java.lang.Object,long)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase forNumber(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.common.collect.Lists: int indexOfImpl(java.util.List,java.lang.Object)
io.flutter.plugins.googlemaps.PolylineBuilder: void setEndCap(com.google.android.gms.maps.model.Cap)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.maps.zzw: com.google.android.gms.internal.maps.zzx zzb(android.os.IBinder)
io.grpc.Context: boolean isCancelled()
com.google.android.gms.common.api.Status: Status(int,java.lang.String,android.app.PendingIntent)
com.google.firebase.firestore.remote.RemoteStore$2: RemoteStore$2(com.google.firebase.firestore.remote.RemoteStore)
kotlin.Pair: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
com.google.firebase.firestore.local.SQLiteMutationQueue: com.google.protobuf.ByteString getLastStreamToken()
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzaau zzg()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.firebase-auth-api.zzmo: zzmo()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder setIsAutomaticDataCollectionEnabled(java.lang.Boolean)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzo(com.google.android.gms.internal.firebase-auth-api.zzzk,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.firebase.firestore.core.Bound: boolean sortsBeforeDocument(java.util.List,com.google.firebase.firestore.model.Document)
com.google.android.gms.internal.firebase-auth-api.zzvu: com.google.firebase.auth.FirebaseAuthMultiFactorException zzc(com.google.firebase.auth.FirebaseAuth,com.google.android.gms.internal.firebase-auth-api.zzse,com.google.firebase.auth.FirebaseUser)
io.grpc.Metadata: int headerCount()
com.google.android.gms.internal.firebase-auth-api.zzabt: zzabt(com.google.android.gms.internal.firebase-auth-api.zzabx)
androidx.collection.ArrayMap: java.util.Set keySet()
io.grpc.internal.StatsTraceContext: void inboundWireSize(long)
com.google.android.gms.internal.firebase-auth-api.zzld: void zzh(com.google.android.gms.internal.firebase-auth-api.zzld,int)
com.google.android.gms.stats.WakeLock: void zzc()
com.google.common.collect.SingletonImmutableSet: SingletonImmutableSet(java.lang.Object,int)
io.grpc.EquivalentAddressGroup: int hashCode()
io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)
com.google.android.gms.internal.safetynet.zzb: android.os.IBinder asBinder()
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)
com.google.firebase.firestore.core.SyncEngine: void pumpEnqueuedLimboResolutions()
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessageBySchemaWithCheck(com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.grpc.internal.AbstractStream$TransportState: void onSentBytes(int)
io.grpc.internal.ApplicationThreadDeframerListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.database.collection.ImmutableSortedMap handleUserChange(com.google.firebase.firestore.auth.User)
com.google.firebase.auth.GetTokenResult: GetTokenResult(java.lang.String,java.util.Map)
com.google.firebase.auth.zzd: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.proto.MaybeDocument encodeMaybeDocument(com.google.firebase.firestore.model.Document)
okio.RealBufferedSource: void close()
com.google.android.gms.internal.firebase-auth-api.zzrj: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean)
com.google.protobuf.BinaryReader$SafeHeapReader: void readInt32List(java.util.List)
com.google.protobuf.MessageSchema: int positionForFieldNumber(int)
com.google.android.gms.common.api.internal.GoogleApiManager: long zab(com.google.android.gms.common.api.internal.GoogleApiManager)
io.grpc.Metadata$2: java.lang.String toAsciiString(java.lang.Object)
io.grpc.internal.Http2ClientStreamTransportState$1: java.lang.Integer parseAsciiString(byte[])
androidx.lifecycle.LifecycleRegistry: void popParentState()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.SnapshotVersion getReadTime()
com.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()
com.google.android.gms.internal.firebase-auth-api.zzaar: byte zzb(int)
com.google.firebase.auth.PhoneAuthOptions: boolean zzk()
com.google.android.gms.common.util.CrashUtils: boolean addDynamiteErrorToDropBox(android.content.Context,java.lang.Throwable)
com.google.protobuf.CodedOutputStream: int computeInt32Size(int,int)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: PhoneNumberVerificationStreamHandler(android.app.Activity,java.util.Map,io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$OnCredentialsListener)
com.google.android.gms.internal.firebase-auth-api.zzgb: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler newScheduler(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.local.LocalStore)
okio.Buffer: void flush()
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
com.google.firebase.installations.remote.TokenResult: com.google.firebase.installations.remote.TokenResult$Builder builder()
androidx.collection.SimpleArrayMap: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzaan: java.lang.Object next()
com.google.protobuf.UnknownFieldSetLiteSchema: void writeTo(java.lang.Object,com.google.protobuf.Writer)
com.google.protobuf.LongArrayList: long setLong(int,long)
io.grpc.internal.RetriableStream$1OptimizeDirectEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.firebase.auth.FirebaseAuthInvalidCredentialsException: FirebaseAuthInvalidCredentialsException(java.lang.String,java.lang.String)
com.google.firebase.auth.GetTokenResult: long getExpirationTimestamp()
com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder jsonBuilder(java.lang.String)
com.tekartik.sqflite.SqflitePlugin: int access$1000()
com.google.android.gms.location.zzai: java.lang.Object[] newArray(int)
com.google.firebase.auth.TwitterAuthCredential: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery$UnaryFilter: void setOp(com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator)
com.google.android.gms.internal.firebase-auth-api.zzrf: java.lang.Object[] newArray(int)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: PhoneNumberVerificationStreamHandler$1(io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: double readDouble()
io.grpc.internal.PickFirstLoadBalancer: void processSubchannelState(io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)
com.google.firebase.firestore.proto.WriteBatch$Builder: com.google.firebase.firestore.proto.WriteBatch$Builder setLocalWriteTime(com.google.protobuf.Timestamp)
com.google.firebase.auth.internal.zzx: java.util.List zzn()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: void execute(java.lang.Runnable)
com.google.firebase.messaging.FirebaseMessaging: boolean tokenNeedsRefresh(com.google.firebase.messaging.Store$Token)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
io.grpc.internal.MetadataApplierImpl: void fail(io.grpc.Status)
okio.Buffer: okio.Buffer clone()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.ReferenceDelegate getReferenceDelegate()
com.google.firebase.firestore.model.DocumentKey: int compareTo(java.lang.Object)
com.google.firebase.firestore.proto.Target$Builder: Target$Builder(com.google.firebase.firestore.proto.Target$1)
io.grpc.okhttp.OkHttpClientStream: java.lang.Object getOutboundFlowState()
com.google.protobuf.SmallSortedMap$EntryIterator: SmallSortedMap$EntryIterator(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)
com.google.android.gms.internal.firebase-auth-api.zzacd: int zzc(long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.location.zzp: zzp(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState valueOf(java.lang.String)
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.DocumentKey fromName(java.lang.String)
com.google.android.gms.common.api.internal.zacd: zacd(com.google.android.gms.common.api.internal.GoogleApiManager,int,com.google.android.gms.common.api.internal.ApiKey,long,long,java.lang.String,java.lang.String)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readUInt64()
com.google.firestore.v1.CommitRequest: void access$100(com.google.firestore.v1.CommitRequest,java.lang.String)
com.google.firebase.messaging.ProxyNotificationInitializer: com.google.android.gms.tasks.Task setEnableProxyNotification(java.util.concurrent.Executor,android.content.Context,boolean)
kotlinx.coroutines.JobSupport: boolean isActive()
com.google.android.gms.internal.firebase-auth-api.zzna: zzna(com.google.android.gms.internal.firebase-auth-api.zzmy)
com.google.android.gms.common.internal.Objects$ToStringHelper: Objects$ToStringHelper(java.lang.Object,com.google.android.gms.common.internal.zzah)
com.google.firebase.firestore.DocumentSnapshot: DocumentSnapshot(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.Document,boolean,boolean)
com.google.android.datatransport.runtime.scheduling.DefaultScheduler: DefaultScheduler(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.CctTransportBackend$HttpResponse doSend(com.google.android.datatransport.cct.CctTransportBackend$HttpRequest)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGcmSenderId(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: boolean isJobServiceOn(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzdr: int zza()
com.google.firebase.firestore.QuerySnapshot: java.util.Iterator iterator()
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: DaggerTransportRuntimeComponent(android.content.Context)
com.google.firebase.firestore.proto.Target: void access$1100(com.google.firebase.firestore.proto.Target,com.google.firestore.v1.Target$QueryTarget)
io.grpc.okhttp.internal.OptionalMethod: OptionalMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.google.android.gms.common.api.internal.zap: void zaf(com.google.android.gms.common.api.internal.zap,com.google.android.gms.common.ConnectionResult,int)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.gms.signin.internal.zak: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: com.google.firebase.firestore.FirebaseFirestore readFirestoreInstance(java.nio.ByteBuffer)
com.lyokone.location.FlutterLocation: boolean onActivityResult(int,int,android.content.Intent)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnSuccessListener(android.app.Activity,com.google.android.gms.tasks.OnSuccessListener)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl: WebChromeClientHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientCreator,io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl)
io.grpc.internal.GrpcUtil$5: GrpcUtil$5()
com.google.firestore.v1.CommitRequest$Builder: CommitRequest$Builder(com.google.firestore.v1.CommitRequest$1)
com.google.protobuf.CodedInputStreamReader: void readDoubleList(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzoi: byte[] zzc(byte[][])
com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)
io.grpc.internal.ServiceConfigUtil: java.lang.Long getMaxBackoffNanosFromRetryPolicy(java.util.Map)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void release()
io.grpc.internal.ExponentialBackoffPolicy$Provider: io.grpc.internal.BackoffPolicy get()
com.google.firebase.auth.internal.zzo: zzo(com.google.android.gms.internal.firebase-auth-api.zzzb)
com.google.android.gms.internal.firebase-auth-api.zzrg: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzwg: java.lang.String zzb()
com.google.protobuf.UnmodifiableLazyStringList$2: boolean hasNext()
com.google.firebase.firestore.core.Bound: boolean sortsAfterDocument(java.util.List,com.google.firebase.firestore.model.Document)
com.google.android.gms.signin.internal.zal: zal()
io.flutter.view.AccessibilityBridge: int access$7000()
com.google.android.gms.maps.GoogleMap: void setMyLocationEnabled(boolean)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
io.flutter.plugins.googlemaps.CircleController: void setZIndex(float)
com.google.protobuf.CodedOutputStreamWriter: void writeMessageSetItem(int,java.lang.Object)
com.google.protobuf.UnknownFieldSetLite: int getSerializedSize()
androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)
io.grpc.internal.ClientCallImpl: void startInternal(io.grpc.ClientCall$Listener,io.grpc.Metadata)
io.grpc.internal.DnsNameResolver: java.util.List resolveAddresses()
com.google.android.gms.internal.firebase-auth-api.zzaaw: boolean zzq()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult(com.google.android.gms.common.api.GoogleApiClient)
com.google.firestore.bundle.BundledQuery: void setParent(java.lang.String)
io.grpc.LoadBalancer$CreateSubchannelArgs: java.util.List getAddresses()
com.google.firebase.firestore.core.TargetIdGenerator: int nextId()
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
com.google.android.gms.maps.model.Circle: Circle(com.google.android.gms.internal.maps.zzl)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzv(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyw: zzyw(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
io.perfmark.Link: Link(long)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
com.google.firestore.v1.DocumentRemove: java.lang.String getDocument()
com.google.firebase.messaging.FirebaseMessaging: void setSyncScheduledOrRunning(boolean)
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzf()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.ImmutableSortedMap remove(java.lang.Object)
com.google.protobuf.SchemaUtil: int computeSizeInt32List(int,java.util.List,boolean)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
io.grpc.internal.ManagedChannelImpl: void cancelIdleTimer(boolean)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.grpc.internal.FailingClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
com.google.common.collect.SingletonImmutableSet: java.lang.String toString()
com.google.android.gms.common.internal.zac: java.lang.String zaf(android.content.Context,int)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.grpc.internal.DelayedClientTransport: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.ClientStreamTracer[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
com.google.protobuf.MapFieldLite: boolean equals(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: CodedOutputStream$OutputStreamEncoder(java.io.OutputStream,int)
com.google.protobuf.UnsafeUtil: boolean access$600(java.lang.Object,long)
com.google.protobuf.MapEntryLite$Metadata: MapEntryLite$Metadata(com.google.protobuf.WireFormat$FieldType,java.lang.Object,com.google.protobuf.WireFormat$FieldType,java.lang.Object)
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair: int hashCode()
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.Document getDocument(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.UserDataWriter: java.lang.Object convertValue(com.google.firestore.v1.Value)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ShutdownSubchannel: void run()
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getLastDisconnectMessage()
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
com.google.gson.stream.JsonReader: boolean hasNext()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task verifyBeforeUpdateEmail(java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.google.android.gms.internal.firebase-auth-api.zzaeo: void zzp(java.lang.Object,long,java.lang.Object)
com.google.firebase.firestore.index.IndexByteEncoder: byte[] getEncodedBytes()
io.grpc.internal.NoopClientStream: void writeMessage(java.io.InputStream)
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue arrayRemove(java.lang.Object[])
com.tekartik.sqflite.operation.BaseOperation: void success(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$IdleModeTimer: ManagedChannelImpl$IdleModeTimer(io.grpc.internal.ManagedChannelImpl)
io.grpc.internal.DelayedStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
com.google.common.collect.ImmutableList$SubList: int size()
io.grpc.internal.FailingClientStream: void start(io.grpc.internal.ClientStreamListener)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
kotlin.collections.EmptyIterator: java.lang.Void next()
io.grpc.internal.ForwardingManagedChannel: void notifyWhenStateChanged(io.grpc.ConnectivityState,java.lang.Runnable)
com.google.firebase.firestore.model.mutation.Mutation: java.util.List getFieldTransforms()
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
com.google.android.gms.location.LocationCallback: void onLocationResult(com.google.android.gms.location.LocationResult)
io.grpc.okhttp.OutboundFlowController$WriteStatus: boolean hasWritten()
com.google.firebase.firestore.core.FirestoreClient: void loadBundle(java.io.InputStream,com.google.firebase.firestore.LoadBundleTask)
com.google.firestore.v1.DocumentTransform$FieldTransform: void access$600(com.google.firestore.v1.DocumentTransform$FieldTransform,com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue)
io.grpc.Codec$Identity: java.io.InputStream decompress(java.io.InputStream)
com.google.android.gms.common.api.internal.zaag: zaag(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzadc zzH()
com.google.firebase.auth.internal.zzm: zzm(java.lang.String)
com.google.firebase.messaging.WithinAppServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzrz: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.SerializingExecutor$SynchronizedAtomicHelper: void runStateSet(io.grpc.internal.SerializingExecutor,int)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void skipRawVarint()
com.google.protobuf.UnsafeUtil: void putBooleanLittleEndian(java.lang.Object,long,boolean)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
io.grpc.internal.RetriableStream: void sendMessage(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.protobuf.LazyField: int hashCode()
com.google.android.gms.common.internal.zao: zao()
io.grpc.ClientStreamTracer: void outboundHeaders()
com.google.firebase.messaging.RemoteMessage: java.lang.String getCollapseKey()
io.grpc.util.RoundRobinLoadBalancer: void processSubchannelState(io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
com.google.firestore.v1.Value: void setGeoPointValue(com.google.type.LatLng)
com.google.firebase.firestore.local.LruGarbageCollector: int removeTargets(long,android.util.SparseArray)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$800(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
com.google.firebase.messaging.NotificationParams: java.lang.String getLocalizedString(android.content.res.Resources,java.lang.String,java.lang.String)
com.squareup.okhttp.Headers: Headers(com.squareup.okhttp.Headers$Builder,com.squareup.okhttp.Headers$1)
io.grpc.NameResolverRegistry: io.grpc.NameResolverRegistry getDefaultRegistry()
com.google.android.gms.internal.firebase-auth-api.zzoa: javax.crypto.Cipher zza()
com.google.firebase.firestore.model.mutation.FieldTransform: int hashCode()
io.grpc.okhttp.OkHttpClientTransport: javax.net.SocketFactory access$1000(io.grpc.okhttp.OkHttpClientTransport)
com.google.firebase.firestore.UserDataReader: com.google.firebase.firestore.core.UserData$ParsedSetData parseMergeData(java.lang.Object,com.google.firebase.firestore.model.mutation.FieldMask)
com.google.protobuf.UnknownFieldSetLite: com.google.protobuf.UnknownFieldSetLite mutableCopyOf(com.google.protobuf.UnknownFieldSetLite,com.google.protobuf.UnknownFieldSetLite)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: SafeLoggingExecutor$SafeLoggingRunnable(java.lang.Runnable)
com.google.firebase.firestore.local.SQLitePersistence: int execute(android.database.sqlite.SQLiteStatement,java.lang.Object[])
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase valueOf(java.lang.String)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUserRecoverableError(int)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: void notifyWhenStateChanged(io.grpc.ConnectivityState,java.lang.Runnable)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzaeh: java.lang.Object zzd(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object)
com.google.android.gms.internal.safetynet.zzl: void doExecute(com.google.android.gms.common.api.Api$AnyClient)
com.google.android.gms.maps.internal.zzo: zzo()
com.google.android.gms.internal.firebase-auth-api.zzaeb: void zzi(com.google.android.gms.internal.firebase-auth-api.zzaeb)
com.google.protobuf.RopeByteString: java.util.Iterator iterator()
com.google.android.gms.internal.maps.zzv: com.google.android.gms.maps.model.LatLng zzi()
com.google.firebase.firestore.core.OrderBy$Direction: int getComparisonModifier()
io.grpc.internal.DnsNameResolverProvider: io.grpc.internal.DnsNameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)
io.grpc.MethodDescriptor: java.lang.Object parseResponse(java.io.InputStream)
com.google.firestore.v1.StructuredQuery$UnaryFilter: void access$4400(com.google.firestore.v1.StructuredQuery$UnaryFilter,com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator)
com.tekartik.sqflite.SqflitePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.maps.model.zzw: java.lang.Object createFromParcel(android.os.Parcel)
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
com.google.android.gms.internal.firebase-auth-api.zzaq: void zzb(com.google.android.gms.internal.firebase-auth-api.zzli)
com.google.protobuf.UnknownFieldSetLite: boolean tagsEquals(int[],int[],int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: void error(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzwi: void zza(java.net.URLConnection)
com.google.android.datatransport.runtime.time.UptimeClock: long getTime()
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] values()
com.google.common.collect.ImmutableCollection: ImmutableCollection()
com.google.android.gms.internal.firebase-auth-api.zzct: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.EmptyMap: void putAll(java.util.Map)
com.google.firestore.bundle.BundledQuery$LimitType$1: com.google.firestore.bundle.BundledQuery$LimitType findValueByNumber(int)
com.google.android.gms.location.LocationAvailability: boolean isLocationAvailable()
io.flutter.plugins.googlemaps.MarkerController: void setFlat(boolean)
com.google.android.gms.maps.model.PolygonOptions: PolygonOptions(java.util.List,java.util.List,float,int,int,float,boolean,boolean,boolean,int,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhz zzc(int)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.fragment.app.FragmentController: void dispatchStop()
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzd(byte[])
com.google.firebase.firestore.LoadBundleTask: boolean isComplete()
io.grpc.internal.StatsTraceContext: void inboundUncompressedSize(long)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation)
io.grpc.okhttp.internal.framed.Http2$Writer: void close()
com.google.android.gms.internal.firebase-auth-api.zztt: void zzb(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
io.grpc.internal.DelayedClientCall: void halfClose()
io.grpc.internal.AbstractClientStream$GetFramer: void close()
com.google.android.gms.internal.firebase-auth-api.zzwc: zzwc(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwi)
com.google.firebase.messaging.DisplayNotification: boolean handleNotification()
com.google.firebase.firestore.model.Values: int typeOrder(com.google.firestore.v1.Value)
com.google.android.datatransport.Encoding: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.firebase.firestore.remote.Datastore: boolean isMissingSslCiphers(io.grpc.Status)
com.google.protobuf.UnsafeUtil$MemoryAccessor: void putLong(java.lang.Object,long,long)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: FragmentManagerImpl$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
com.google.android.gms.maps.GoogleMap: void setOnMarkerClickListener(com.google.android.gms.maps.GoogleMap$OnMarkerClickListener)
com.google.android.gms.internal.firebase-auth-api.zzaek: java.util.Iterator iterator()
com.google.android.gms.internal.firebase-auth-api.zzao: void set(java.lang.Object)
com.google.android.gms.internal.safetynet.zzk: com.google.android.gms.common.api.PendingResult zza(com.google.android.gms.common.api.GoogleApiClient,byte[],java.lang.String)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean equals(java.lang.Object)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode)
com.google.firebase.auth.internal.zzbf: boolean zza(com.google.android.gms.safetynet.SafetyNetApi$AttestationResponse)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readTag()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.google.firebase.auth.zze: com.google.firebase.auth.zze zzb(com.google.android.gms.internal.firebase-auth-api.zzzq)
com.google.common.collect.ImmutableSet: boolean isHashCodeFast()
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzA(java.util.List)
com.google.firebase.firestore.proto.Target: void access$1700(com.google.firebase.firestore.proto.Target,com.google.protobuf.Timestamp)
com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Map$Entry next()
com.google.android.gms.internal.firebase-auth-api.zzzz: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
com.google.android.gms.maps.zzv: zzv(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveListener)
com.google.protobuf.CodedOutputStreamWriter: void writeStringList(int,java.util.List)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onCreate()
com.google.firestore.v1.WriteResult: int getTransformResultsCount()
com.google.firebase.messaging.ProxyNotificationInitializer: boolean shouldEnableProxyNotification(android.content.Context)
io.perfmark.Impl: Impl(io.perfmark.Tag)
com.google.firebase.messaging.MessagingAnalytics: void logNotificationReceived(android.content.Intent)
io.grpc.Status: boolean isOk()
com.google.protobuf.FloatArrayList: FloatArrayList(float[],int)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readInt(android.os.Parcel,int)
com.google.android.gms.common.internal.RootTelemetryConfigManager: void zza(com.google.android.gms.common.internal.RootTelemetryConfiguration)
com.google.protobuf.SchemaUtil: void writeUInt64List(int,java.util.List,com.google.protobuf.Writer,boolean)
io.grpc.okhttp.internal.ConnectionSpec: java.lang.String[] access$500(io.grpc.okhttp.internal.ConnectionSpec)
com.google.firestore.v1.WriteRequest$Builder: WriteRequest$Builder()
io.grpc.internal.RetriableStream$1OptimizeDirectEntry: RetriableStream$1OptimizeDirectEntry(io.grpc.internal.RetriableStream)
com.google.android.gms.location.LocationSettingsRequest$Builder: LocationSettingsRequest$Builder()
com.google.android.gms.internal.firebase-auth-api.zzaae: zzaae()
com.google.android.gms.internal.firebase-auth-api.zzqv: zzqv()
io.grpc.internal.DelayedClientCall: void access$000(io.grpc.internal.DelayedClientCall,io.grpc.Status,boolean)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getIdToken()
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.firebase.firestore.util.Assert: java.lang.AssertionError fail(java.lang.String,java.lang.Object[])
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: void makeImmutableListAt(java.lang.Object,long)
com.google.android.gms.maps.model.Circle: boolean equals(java.lang.Object)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: void addProperty(java.lang.String)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)
androidx.fragment.app.FragmentManagerImpl: boolean executePendingTransactions()
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: java.util.HashMap access$100()
com.google.android.gms.internal.firebase-auth-api.zzade: java.lang.String zza(com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzuc: void zzb()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.google.android.gms.common.api.UnsupportedApiCallException: UnsupportedApiCallException(com.google.android.gms.common.Feature)
com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder: StructuredQuery$CollectionSelector$Builder()
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: java.lang.String getAuthority()
io.flutter.FlutterInjector$Builder: void fillDefaults()
com.google.firebase.firestore.bundle.BundleReader: java.lang.IllegalArgumentException abort(java.lang.String)
io.flutter.plugins.googlemaps.PolylineController: void remove()
com.google.android.gms.maps.model.Polyline: Polyline(com.google.android.gms.internal.maps.zzad)
com.google.android.gms.cloudmessaging.zzp: java.lang.String toString()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.firebase-auth-api.zzk: zzk(char)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.google.protobuf.UnsafeUtil$MemoryAccessor: boolean supportsUnsafeByteBufferOperations()
com.google.android.gms.internal.firebase-auth-api.zzyu: java.lang.String zze()
okio.SegmentedByteString: java.lang.String utf8()
com.google.android.gms.internal.firebase-auth-api.zziq: void zzh(com.google.android.gms.internal.firebase-auth-api.zziq,com.google.android.gms.internal.firebase-auth-api.zziw)
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.RetriableStream$Throttle getRetryThrottling()
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.model.FieldPath inequalityField()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void goAway(int,io.grpc.okhttp.internal.framed.ErrorCode,okio.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzbi zzd(int)
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.firebase.auth.internal.zzz: zzz(long,long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
com.google.android.gms.internal.firebase-auth-api.zzln: zzln()
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzx(com.google.android.gms.internal.firebase-auth-api.zzrk,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.firebase.firestore.local.MemoryMutationQueue: void acknowledgeBatch(com.google.firebase.firestore.model.mutation.MutationBatch,com.google.protobuf.ByteString)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean)
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzli zzc(byte[],com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.proto.MaybeDocument: void setUnknownDocument(com.google.firebase.firestore.proto.UnknownDocument)
com.google.android.gms.common.api.internal.zaad: void zae(int,java.lang.String)
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: MemoryRemoteDocumentCache()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzQ(int,com.google.android.gms.internal.firebase-auth-api.zzaau)
kotlin.ranges.IntRange: java.lang.Integer getStart()
com.google.type.LatLng: void access$300(com.google.type.LatLng,double)
com.google.android.gms.maps.GoogleMapOptions: void writeToParcel(android.os.Parcel,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: int getNumber()
com.google.protobuf.CodedOutputStream: int computeLazyFieldSize(int,com.google.protobuf.LazyFieldLite)
com.squareup.okhttp.Headers: int size()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery$LimitType getLimitType()
io.grpc.internal.CompositeReadableBuffer: void readBytes(byte[],int,int)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
androidx.fragment.app.Fragment: boolean getRetainInstance()
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setType(io.grpc.MethodDescriptor$MethodType)
io.grpc.internal.ManagedChannelServiceConfig: java.lang.Object getLoadBalancingConfig()
com.google.firebase.FirebaseException: FirebaseException(java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: int hashCode()
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.core.CompositeFilter: CompositeFilter(java.util.List,com.google.firebase.firestore.core.CompositeFilter$Operator)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.gms.common.zzi: com.google.android.gms.dynamic.IObjectWrapper zzd()
com.google.firebase.database.collection.LLRBBlackValueNode: LLRBBlackValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.android.gms.internal.firebase-auth-api.zzaar: zzaar(byte[])
com.google.protobuf.ExtensionSchema: ExtensionSchema()
com.google.android.gms.internal.location.zzm: zzm(com.google.android.gms.location.zzj,java.util.List,java.lang.String)
com.google.protobuf.WireFormat: int getTagFieldNumber(int)
com.google.android.gms.internal.firebase-auth-api.zzu: boolean zza(java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.zav: zav(int,android.os.IBinder,com.google.android.gms.common.ConnectionResult,boolean,boolean)
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDragEnd(java.lang.String,com.google.android.gms.maps.model.LatLng)
androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
com.google.android.gms.internal.maps.zzae: float zzd()
io.grpc.okhttp.OkHttpSettingsUtil: void set(io.grpc.okhttp.internal.framed.Settings,int,int)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void removeEventListeners()
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: void fail(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzju: zzju()
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaj: java.lang.Object zza(int)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzrk: com.google.firebase.auth.EmailAuthCredential zza()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApiCodec: GeneratedAndroidWebView$WebViewClientFlutterApiCodec()
com.google.firebase.messaging.RemoteMessage$Builder: RemoteMessage$Builder(java.lang.String)
androidx.collection.MapCollections$MapIterator: void remove()
androidx.lifecycle.Lifecycle: Lifecycle()
com.google.android.gms.internal.firebase-auth-api.zzig: zzig(com.google.android.gms.internal.firebase-auth-api.zzif)
com.google.firebase.firestore.local.LocalViewChanges: com.google.firebase.database.collection.ImmutableSortedSet getRemoved()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()
com.google.android.gms.internal.firebase-auth-api.zzaac: java.util.List zzb(org.json.JSONArray)
io.grpc.internal.ForwardingReadableBuffer: void skipBytes(int)
okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
com.google.android.gms.internal.firebase-auth-api.zzld: int zzf()
com.google.firebase.messaging.EnhancedIntentService: boolean handleIntentOnMainThread(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzacx: boolean zzb(java.lang.Object)
io.grpc.internal.RetriableStream: long access$2302(io.grpc.internal.RetriableStream,long)
com.google.android.gms.internal.firebase-auth-api.zzadq: java.lang.Object zzD(int,int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzaef)
com.google.android.gms.internal.firebase-auth-api.zzcw: com.google.android.gms.internal.firebase-auth-api.zzga zza()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
com.google.protobuf.FieldSet: java.lang.Object cloneIfMutable(java.lang.Object)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: AutoValue_HeartBeatResult(java.lang.String,java.util.List)
com.google.firebase.messaging.RemoteMessage: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.maps.internal.zzl: void onStop()
com.google.firebase.firestore.proto.MaybeDocument$Builder: com.google.firebase.firestore.proto.MaybeDocument$Builder setDocument(com.google.firestore.v1.Document)
com.lyokone.location.BackgroundNotification: void updateOptions(com.lyokone.location.NotificationOptions,boolean)
io.flutter.plugins.webviewflutter.InputAwareWebView: void clearFocus()
com.google.android.gms.internal.firebase-auth-api.zzaa: zzaa(com.google.android.gms.internal.firebase-auth-api.zzn)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzd()
com.google.firebase.firestore.local.Persistence: Persistence()
com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzhw: java.lang.String toString()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException: java.lang.String getCode()
com.google.android.gms.maps.model.zzv: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzly zzb()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: int getNumber()
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzuw: void zzb()
com.google.firebase.firestore.core.InFilter: boolean matches(com.google.firebase.firestore.model.Document)
com.google.protobuf.ByteString$BoundedByteString: int size()
com.google.firebase.database.collection.LLRBBlackValueNode: com.google.firebase.database.collection.LLRBNode$Color getColor()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastN()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.google.firebase.firestore.core.ActivityScope$CallbackList: ActivityScope$CallbackList(com.google.firebase.firestore.core.ActivityScope$1)
kotlin.Result$Failure: java.lang.String toString()
com.google.firebase.auth.internal.zzt: boolean isEmailVerified()
com.google.android.gms.internal.firebase-auth-api.zzan: void remove()
com.google.android.gms.internal.firebase-auth-api.zzvp: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
com.google.firebase.auth.internal.zzag: zzag()
io.grpc.internal.TransportFrameUtil: boolean isSpecCompliantAscii(byte[])
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
io.grpc.NameResolverRegistry: NameResolverRegistry()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zznc: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readSFixed64()
com.google.android.gms.internal.firebase-auth-api.zznw: void zzg(com.google.android.gms.internal.firebase-auth-api.zznw,com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.googlemaps.PolylineController: void setColor(int)
com.google.protobuf.SchemaUtil: void writeFixed64List(int,java.util.List,com.google.protobuf.Writer,boolean)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.collection.SimpleArrayMap: void clear()
io.grpc.internal.GrpcUtil: void closeQuietly(io.grpc.internal.StreamListener$MessageProducer)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.google.android.gms.internal.firebase-auth-api.zzze: java.lang.Object[] newArray(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.google.android.gms.common.api.internal.zabq: void zal(com.google.android.gms.common.api.internal.zabq,com.google.android.gms.common.api.internal.zabs)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzh(java.lang.Throwable)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.protobuf.NioByteString: void writeTo(com.google.protobuf.ByteOutput)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: MessagingClientEvent$MessageType(java.lang.String,int,int)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.firebase.firestore.index.IndexEntry: int compareTo(com.google.firebase.firestore.index.IndexEntry)
com.google.protobuf.ProtobufArrayList: com.google.protobuf.ProtobufArrayList emptyList()
com.google.firebase.messaging.NotificationParams: android.os.Bundle paramsWithReservedKeysRemoved()
io.flutter.plugins.googlemaps.GoogleMapBuilder: GoogleMapBuilder()
com.google.android.gms.internal.firebase-auth-api.zzid: java.lang.String toString()
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: MaybeDocument$DocumentTypeCase(java.lang.String,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: void applySetterAnnotations(java.lang.reflect.Method)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
com.google.firestore.v1.FirestoreGrpc$FirestoreStub: io.grpc.stub.AbstractStub build(io.grpc.Channel,io.grpc.CallOptions)
com.google.android.gms.internal.firebase-auth-api.zziq: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.messaging.ProxyNotificationInitializer: void initialize(android.content.Context)
com.google.protobuf.IntArrayList: IntArrayList(int[],int)
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.core.ComponentProvider$Configuration: int getMaxConcurrentLimboResolutions()
androidx.webkit.internal.WebViewProviderFactoryAdapter: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter()
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryRemoteDocumentCache getRemoteDocumentCache()
io.flutter.embedding.engine.plugins.lifecycle.FlutterLifecycleAdapter: androidx.lifecycle.Lifecycle getActivityLifecycle(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: com.google.firestore.v1.Value computeBaseValue(com.google.firestore.v1.Value)
com.google.android.gms.common.internal.zzb: zzb(com.google.android.gms.common.internal.BaseGmsClient,android.os.Looper)
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: int size()
com.google.firebase.auth.PhoneAuthCredential: PhoneAuthCredential(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)
com.google.firebase.components.EventBus: java.util.Set getHandlers(com.google.firebase.events.Event)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzln: com.google.android.gms.internal.firebase-auth-api.zzln zzc()
com.google.firebase.messaging.TopicsSubscriber: boolean syncTopics()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setBytesValue(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzj(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter access$3000()
com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteIterator iterator()
com.google.android.gms.stats.zzc: zzc()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: boolean isAvailable()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
com.tekartik.sqflite.SqflitePlugin: SqflitePlugin()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
io.grpc.NameResolver$Args: io.grpc.NameResolver$ServiceConfigParser getServiceConfigParser()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBean()
com.google.firebase.auth.ActionCodeSettings$Builder: boolean zzg(com.google.firebase.auth.ActionCodeSettings$Builder)
io.flutter.plugins.webviewflutter.InputAwareWebView: void unlockInputConnection()
com.google.protobuf.Any: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.internal.zzl: void getMapAsync(com.google.android.gms.maps.internal.zzar)
com.google.protobuf.ArrayDecoders: double decodeDouble(byte[],int)
okio.Okio: okio.BufferedSink buffer(okio.Sink)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: java.util.Map getOverlays(java.util.SortedSet)
com.google.android.gms.internal.firebase-auth-api.zzabm: boolean zzh(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.remote.WriteStream: void start()
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getTopic()
com.google.firestore.v1.StructuredQuery$FieldReference$Builder: StructuredQuery$FieldReference$Builder()
com.google.protobuf.BooleanArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
io.grpc.internal.AbstractStream$TransportState: AbstractStream$TransportState(int,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer)
com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context)
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: AutoValue_TransportContext$Builder()
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult complete()
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: GoogleMapsPlugin$2(io.flutter.plugins.googlemaps.GoogleMapsPlugin)
com.google.protobuf.ByteString$LiteralByteString: void writeTo(com.google.protobuf.ByteOutput)
io.flutter.plugins.webviewflutter.InputAwareWebView: void lockInputConnection()
io.grpc.internal.InternalSubchannel$TransportLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])
com.google.android.gms.tasks.zzo: zzo(com.google.android.gms.tasks.zzp,com.google.android.gms.tasks.Task)
io.grpc.internal.ForwardingManagedChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setWebChromeClient(java.lang.Long,java.lang.Long)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfiguration getConfig()
com.google.firebase.database.collection.ArraySortedMap: int size()
com.google.firebase.messaging.RemoteMessageCreator: com.google.firebase.messaging.RemoteMessage[] newArray(int)
com.google.firebase.messaging.TopicsStore: boolean removeTopicOperation(com.google.firebase.messaging.TopicOperation)
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown: ManagedChannelImpl$RealChannel$1RealChannelShutdown(io.grpc.internal.ManagedChannelImpl$RealChannel)
com.google.android.gms.internal.firebase-auth-api.zzsf: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: void encode(java.lang.Object,java.io.Writer)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean isSslEnabled()
com.google.android.gms.internal.firebase-auth-api.zznl: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzh(java.lang.String)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withNoResult()
io.grpc.Attributes: Attributes(java.util.Map,io.grpc.Attributes$1)
com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
io.flutter.plugins.googlemaps.MarkersController: void isInfoWindowShown(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.protobuf.GeneratedMessageLite$Builder: GeneratedMessageLite$Builder(com.google.protobuf.GeneratedMessageLite)
com.google.android.gms.internal.firebase-auth-api.zzzr: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.CommonPool: boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService)
com.squareup.okhttp.HttpUrl$Builder: com.squareup.okhttp.HttpUrl$Builder scheme(java.lang.String)
com.google.firebase.firestore.remote.WatchStream: void onNext(java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean)
io.grpc.Status$StatusMessageMarshaller: java.lang.String parseAsciiStringSlow(byte[])
com.google.android.gms.internal.firebase-auth-api.zzcy: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.local.SQLiteTargetCache: com.google.firebase.firestore.local.TargetData getTargetData(com.google.firebase.firestore.core.Target)
com.google.android.gms.internal.firebase-auth-api.zzkn: com.google.android.gms.internal.firebase-auth-api.zzkn zza(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.android.gms.maps.internal.zzg: boolean setMapStyle(com.google.android.gms.maps.model.MapStyleOptions)
com.google.firebase.messaging.SendException: int parseErrorCode(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzd(com.google.android.gms.internal.firebase-auth-api.zzado,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
com.google.firebase.firestore.FieldValue$ArrayRemoveFieldValue: java.lang.String getMethodName()
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
com.google.firebase.database.collection.ImmutableSortedMapIterator: boolean hasNext()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.firebase.firestore.DocumentChange: com.google.firebase.firestore.DocumentChange$Type getType()
io.flutter.plugins.googlemaps.PolylineBuilder: void setColor(int)
com.google.protobuf.CodedInputStream$StreamDecoder: com.google.protobuf.ByteString readBytesSlowPath(int)
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzik zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzjw zza(int)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog getErrorDialog(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32NoTag(int)
com.google.android.gms.internal.firebase-auth-api.zzfs: void zzb(com.google.android.gms.internal.firebase-auth-api.zzli)
com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()
com.google.android.datatransport.runtime.AutoValue_EventInternal: long getUptimeMillis()
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzd: boolean zzf()
com.google.firebase.firestore.remote.AbstractStream: AbstractStream(com.google.firebase.firestore.remote.FirestoreChannel,io.grpc.MethodDescriptor,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$TimerId,com.google.firebase.firestore.util.AsyncQueue$TimerId,com.google.firebase.firestore.util.AsyncQueue$TimerId,com.google.firebase.firestore.remote.Stream$StreamCallback)
com.google.firebase.firestore.model.MutableDocument: boolean isNoDocument()
com.google.firestore.v1.Target$QueryTarget: java.lang.String getParent()
io.grpc.internal.DnsNameResolver: io.grpc.internal.DnsNameResolver$ResourceResolverFactory getResourceResolverFactory(java.lang.ClassLoader)
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzk(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs,long,boolean)
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziz zze(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.grpc.internal.ConnectivityStateManager: io.grpc.ConnectivityState getState()
com.google.android.gms.internal.firebase-auth-api.zzaad: zzaad()
com.google.android.gms.internal.firebase-auth-api.zzdj: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
io.grpc.internal.AbstractClientStream: java.util.logging.Logger access$300()
com.google.android.gms.internal.firebase-auth-api.zzrl: zzrl()
com.google.protobuf.RopeByteString: RopeByteString(com.google.protobuf.ByteString,com.google.protobuf.ByteString,com.google.protobuf.RopeByteString$1)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzk()
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.grpc.Status: io.grpc.Status withDescription(java.lang.String)
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition access$000()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig$MethodInfo getMethodConfig(io.grpc.MethodDescriptor)
com.google.android.gms.internal.safetynet.zze: void zza(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
com.google.android.gms.internal.firebase-auth-api.zzlh: com.google.android.gms.internal.firebase-auth-api.zzlh zzb(com.google.android.gms.internal.firebase-auth-api.zznc)
androidx.core.os.LocaleListCompatWrapper: LocaleListCompatWrapper(java.util.Locale[])
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer,boolean)
io.grpc.internal.MessageDeframer: void deframe(io.grpc.internal.ReadableBuffer)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void onTransactionCommitted()
com.google.protobuf.CodedOutputStreamWriter: void writeFloat(int,float)
com.google.protobuf.ArrayDecoders: int decodeVarint32List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int zza(android.os.Parcel,int)
com.google.android.gms.common.ErrorDialogFragment: com.google.android.gms.common.ErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)
com.google.firebase.firestore.model.mutation.FieldTransform: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzc(com.google.android.gms.internal.firebase-auth-api.zzxv)
io.grpc.okhttp.internal.framed.Hpack$Reader: int dynamicTableIndex(int)
io.grpc.internal.CompositeReadableBuffer: void readBytes(java.nio.ByteBuffer)
com.google.protobuf.MessageSchema: java.lang.Object filterMapUnknownEnumValues(java.lang.Object,int,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readSFixed32()
com.google.android.gms.internal.firebase-auth-api.zzhm: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.okhttp.internal.framed.Hpack$Reader: void readHeaders()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: void enterIdle()
io.grpc.internal.AbstractStream: void request(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.android.gms.internal.firebase-auth-api.zzzb: boolean zzf()
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
com.google.firestore.v1.WriteResult$Builder: WriteResult$Builder()
com.google.android.gms.internal.location.zzav: void onNotifyListenerFailed()
com.google.android.gms.internal.firebase-auth-api.zzeg: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzg(java.lang.Object,java.lang.Object)
com.google.protobuf.LazyStringArrayList: boolean addAll(int,java.util.Collection)
io.grpc.ConnectivityStateInfo: java.lang.String toString()
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: void start()
com.google.firebase.auth.internal.RecaptchaActivity: void onCreate(android.os.Bundle)
com.google.android.gms.cloudmessaging.zzd: zzd(android.os.IBinder)
com.google.android.gms.maps.internal.zzg: float getMaxZoomLevel()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.grpc.internal.ProxyDetectorImpl: io.grpc.ProxiedSocketAddress proxyFor(java.net.SocketAddress)
com.google.firebase.firestore.local.LruGarbageCollector: com.google.firebase.firestore.local.LruGarbageCollector$Results runGarbageCollection(android.util.SparseArray)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.gms.tasks.zzl: void zzd(com.google.android.gms.tasks.Task)
io.grpc.internal.CompositeReadableBuffer$4: int read(io.grpc.internal.ReadableBuffer,int,java.nio.ByteBuffer,int)
io.grpc.internal.ManagedChannelImplBuilder$ManagedChannelDefaultPortProvider: ManagedChannelImplBuilder$ManagedChannelDefaultPortProvider(io.grpc.internal.ManagedChannelImplBuilder$1)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzlt: void zze(com.google.android.gms.internal.firebase-auth-api.zzlt,int)
io.grpc.internal.JsonUtil: JsonUtil()
com.google.gson.stream.JsonReader: boolean fillBuffer(int)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$TimestampEncoder: void encode(java.util.Date,com.google.firebase.encoders.ValueEncoderContext)
com.google.firebase.firestore.FieldPath: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void setZoomControlsEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzadl: com.google.android.gms.internal.firebase-auth-api.zzadl zze()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzh(int)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: boolean equals(java.lang.Object)
io.grpc.InternalMetadata: io.grpc.Metadata newMetadata(byte[][])
androidx.fragment.app.FragmentManagerViewModel: boolean removeRetainedFragment(androidx.fragment.app.Fragment)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
com.google.android.gms.maps.model.zzv: java.lang.Object[] newArray(int)
io.grpc.internal.ManagedChannelImpl$RealChannel$3: ManagedChannelImpl$RealChannel$3(io.grpc.internal.ManagedChannelImpl$RealChannel)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzadg: zzadg(com.google.android.gms.internal.firebase-auth-api.zzaef,com.google.android.gms.internal.firebase-auth-api.zzabl,com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.CodedOutputStreamWriter: com.google.protobuf.Writer$FieldOrder fieldOrder()
com.google.android.gms.internal.maps.zzv: void zzp(float,float)
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
io.grpc.internal.DelayedStream: void setMaxInboundMessageSize(int)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: ImmutableSortedSet$WrappedEntryIterator(java.util.Iterator)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.gms.internal.firebase-auth-api.zzaei: void set(java.lang.Object)
com.google.android.gms.maps.internal.zzby: boolean isScrollGesturesEnabled()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
com.google.android.gms.internal.firebase-auth-api.zzes: int zza()
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzaad zzg(com.google.android.gms.internal.firebase-auth-api.zzaae)
com.google.firebase.firestore.util.ExponentialBackoff: void reset()
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: DartMessenger$ConcurrentTaskQueue(java.util.concurrent.ExecutorService)
com.google.firebase.firestore.local.SQLiteMutationQueue: boolean isEmpty()
io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAttributes(io.grpc.Attributes)
com.google.firebase.auth.internal.zzx: boolean zzs()
com.google.android.gms.internal.safetynet.zzj: void zza(com.google.android.gms.internal.safetynet.zzg,byte[],java.lang.String)
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: boolean equals(java.lang.Object)
com.google.firestore.v1.Write: void setVerify(java.lang.String)
com.tekartik.sqflite.operation.BaseReadOperation: boolean getContinueOnError()
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
io.grpc.internal.Rescheduler$FutureRunnable: Rescheduler$FutureRunnable(io.grpc.internal.Rescheduler,io.grpc.internal.Rescheduler$1)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency optional(java.lang.Class)
io.grpc.protobuf.lite.ProtoInputStream: int read()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task applyActionCode(java.lang.String)
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument getDefaultInstance()
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzkx zzc()
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmg zzc(int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task getIdToken(java.util.Map)
com.google.protobuf.MessageSchema: void writeMapHelper(com.google.protobuf.Writer,int,java.lang.Object,int)
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setAutoMetadata(java.util.Map)
com.google.protobuf.CodedInputStream$StreamDecoder: void skipMessage()
com.google.android.gms.cloudmessaging.zzm: void zzb(int,java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.model.ResourcePath: com.google.firebase.firestore.model.BasePath createPathWithSegments(java.util.List)
com.google.protobuf.CodedInputStreamReader: float readFloat()
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult: DynamiteModule$VersionPolicy$SelectionResult()
io.grpc.Metadata$2: java.lang.Object parseAsciiString(java.lang.String)
com.google.firebase.firestore.UserDataReader: com.google.firebase.firestore.model.ObjectValue convertAndParseDocumentData(java.lang.Object,com.google.firebase.firestore.core.UserData$ParseContext)
com.google.firebase.firestore.SetOptions: int hashCode()
com.google.firebase.auth.internal.zzo: com.google.firebase.auth.ActionCodeInfo getInfo()
com.google.firebase.firestore.proto.WriteBatch: com.google.firestore.v1.Write getWrites(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
io.grpc.okhttp.internal.framed.Header: java.lang.String toString()
com.google.android.gms.signin.internal.zaa: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
com.google.firebase.firestore.model.mutation.PatchMutation: java.util.Map getPatch()
com.google.firebase.firestore.proto.Target: int getTargetId()
io.grpc.internal.ConnectivityStateManager$Listener: void runInExecutor()
com.google.android.gms.internal.maps.zzv: void zzn()
com.google.android.gms.internal.firebase-auth-api.zzni: java.lang.String zzd()
com.google.firebase.firestore.model.ObjectValue: java.lang.Object clone()
io.grpc.internal.InternalSubchannel: void access$1800(io.grpc.internal.InternalSubchannel)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.bundle.BundleMetadata decodeBundleMetadata(org.json.JSONObject)
io.grpc.internal.InternalSubchannel$8: InternalSubchannel$8(io.grpc.internal.InternalSubchannel,io.grpc.Status)
com.google.android.datatransport.runtime.EncodedPayload: EncodedPayload(com.google.android.datatransport.Encoding,byte[])
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.String toIdList(java.lang.Iterable)
com.google.protobuf.RopeByteString: byte internalByteAt(int)
com.google.protobuf.UnsafeUtil: void putDouble(java.lang.Object,long,double)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readFixed64()
com.google.android.gms.internal.firebase-auth-api.zzaby: void add(int,java.lang.Object)
io.grpc.internal.NoopClientStream: void setMaxInboundMessageSize(int)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.google.android.datatransport.cct.internal.QosTier: QosTier(java.lang.String,int,int)
com.google.firebase.firestore.core.View: void applyTargetChange(com.google.firebase.firestore.remote.TargetChange)
com.google.android.gms.internal.firebase-auth-api.zzlk: int zzb(int)
io.grpc.okhttp.OkHttpClientTransport$1: OkHttpClientTransport$1(io.grpc.okhttp.OkHttpClientTransport)
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type valueOf(java.lang.String)
com.google.android.datatransport.runtime.AutoValue_EventInternal: int hashCode()
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: java.lang.String toString()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.FieldFilter decodeFieldFilter(com.google.firestore.v1.StructuredQuery$FieldFilter)
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
io.grpc.internal.DelayedStream$8: DelayedStream$8(io.grpc.internal.DelayedStream,io.grpc.Status)
kotlin.Pair: java.lang.Object getFirst()
com.google.firebase.messaging.TopicsStore: TopicsStore(android.content.SharedPreferences,java.util.concurrent.Executor)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCloseWebView(io.flutter.plugin.common.MethodChannel$Result)
io.grpc.ClientCall$Listener: void onHeaders(io.grpc.Metadata)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
io.grpc.internal.Rescheduler: void reschedule(long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzme zzc()
com.google.android.gms.common.api.internal.TaskApiCall: TaskApiCall(com.google.android.gms.common.Feature[],boolean,int)
androidx.fragment.app.FragmentManagerImpl: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
com.google.firebase.database.collection.LLRBBlackValueNode: int size()
io.perfmark.Impl: io.perfmark.Tag createTag(java.lang.String,long)
io.flutter.plugins.googlemaps.GoogleMapController: void onRestoreInstanceState(android.os.Bundle)
com.google.protobuf.NioByteString: boolean equals(java.lang.Object)
com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)
com.google.firebase.firestore.index.OrderedCodeWriter: int signedNumLength(long)
com.google.android.gms.cloudmessaging.zzo: zzo(int,int,android.os.Bundle)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
io.flutter.plugins.webviewflutter.InputAwareWebView: android.view.View access$000(io.flutter.plugins.webviewflutter.InputAwareWebView)
com.google.firebase.auth.internal.zzz: long getCreationTimestamp()
com.google.android.gms.maps.GoogleMap: void setOnMarkerDragListener(com.google.android.gms.maps.GoogleMap$OnMarkerDragListener)
io.flutter.plugins.googlemaps.GoogleMapController: void setMyLocationEnabled(boolean)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollInternal()
com.google.protobuf.LazyStringArrayList: java.lang.Object get(int)
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: void onVerificationFailed(com.google.firebase.FirebaseException)
kotlin.random.Random$Default: Random$Default()
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: boolean onStartJob(android.app.job.JobParameters)
com.google.firebase.firestore.LoadBundleTask: com.google.firebase.firestore.LoadBundleTaskProgress getResult(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzE(com.google.android.gms.internal.firebase-auth-api.zzzy,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
io.grpc.okhttp.internal.framed.Header: Header(java.lang.String,java.lang.String)
com.google.android.gms.cloudmessaging.Rpc: void zzc(com.google.android.gms.cloudmessaging.Rpc,android.os.Message)
com.google.android.gms.maps.model.zzi: java.lang.Object[] newArray(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void addJavaScriptChannel(java.lang.Long,java.lang.Long)
com.google.protobuf.CodedOutputStream: int computeFixed32Size(int,int)
com.tekartik.sqflite.operation.MethodCallOperation: java.lang.Object getArgument(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo build()
com.google.firebase.firestore.remote.FirestoreChannel$1: void onMessage(java.lang.Object)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: com.google.firebase.firestore.FirebaseFirestoreSettings readFirestoreSettings(java.nio.ByteBuffer)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
com.google.firestore.v1.StructuredQuery$CompositeFilter: void setOp(com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator)
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zznl zzc()
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: void onBlockedStatusChanged(android.net.Network,boolean)
io.grpc.internal.DnsNameResolverProvider: int priority()
com.google.android.gms.internal.firebase-auth-api.zzui: zzui(com.google.firebase.auth.EmailAuthCredential)
com.google.protobuf.FloatArrayList: void add(int,java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.io.InputStream,int)
com.google.firebase.firestore.proto.Target: void access$1900(com.google.firebase.firestore.proto.Target)
com.google.firestore.v1.Precondition: void access$400(com.google.firestore.v1.Precondition,com.google.protobuf.Timestamp)
com.google.android.gms.internal.firebase-auth-api.zzdr: int[] zzb(int[],int)
com.google.protobuf.MapFieldLite: MapFieldLite()
com.google.firebase.firestore.local.MemoryMutationQueue: int indexOfBatchId(int)
com.google.android.gms.common.zzk: byte[] zzf()
com.google.android.gms.tasks.zzw: void zzf()
com.google.common.collect.RegularImmutableMap: int size()
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()
com.google.firebase.messaging.reporting.MessagingClientEvent: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform getSdkPlatform()
com.google.protobuf.SchemaUtil: int computeSizeStringList(int,java.util.List)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: boolean equals(java.lang.Object)
com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkPermission(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzd: void zze(com.google.android.gms.internal.firebase-auth-api.zzxs)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task transactionGet(java.util.Map)
com.google.firebase.auth.ActionCodeSettings$Builder: com.google.firebase.auth.ActionCodeSettings build()
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.Internal$ProtobufList emptyProtobufList()
io.grpc.okhttp.OkHttpProtocolNegotiator$AndroidNegotiator: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.protobuf.InvalidProtocolBufferException: boolean getThrownFromInputStream()
com.google.firebase.firestore.remote.RemoteStore: void handleWriteError(io.grpc.Status)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: long determineSize(com.google.firebase.encoders.ObjectEncoder,java.lang.Object)
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.Document getFirstDocument()
kotlinx.coroutines.Empty: Empty(boolean)
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zze(com.google.firebase.auth.ActionCodeSettings$Builder)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzd()
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzlm zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: com.google.android.gms.tasks.Task getToken()
com.google.firebase.auth.internal.zzam: zzam(com.google.firebase.FirebaseApp)
io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$102(io.grpc.internal.SharedResourceHolder,java.util.concurrent.ScheduledExecutorService)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
io.grpc.internal.RetriableStream$HedgingRunnable$1: RetriableStream$HedgingRunnable$1(io.grpc.internal.RetriableStream$HedgingRunnable)
androidx.fragment.app.Fragment$3: void run()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.grpc.Metadata: boolean isEmpty()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: com.google.protobuf.ByteString readBytes()
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.NameResolver$ResolutionResult$Builder setAddresses(java.util.List)
com.google.firebase.firestore.model.SnapshotVersion: int hashCode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
com.google.android.gms.internal.firebase-auth-api.zzjn: zzjn()
com.google.android.gms.internal.firebase-auth-api.zzbs: int compareTo(java.lang.Object)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.firebase-auth-api.zzyo: zzyo()
okio.SegmentPool: okio.Segment take()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: io.grpc.okhttp.internal.Platform$TlsExtensionType getTlsExtensionType()
com.google.android.gms.common.api.internal.zacv: zacv(com.google.android.gms.common.api.internal.TaskApiCall$Builder,com.google.android.gms.common.Feature[],boolean,int)
com.google.firestore.v1.StructuredQuery: boolean hasEndAt()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzaau zzf()
com.google.protobuf.UnknownFieldSetLiteSchema: void addLengthDelimited(java.lang.Object,int,com.google.protobuf.ByteString)
com.google.android.gms.maps.GoogleMap: void setOnPolylineClickListener(com.google.android.gms.maps.GoogleMap$OnPolylineClickListener)
com.google.android.gms.internal.firebase-auth-api.zziv: zziv()
com.google.android.gms.internal.firebase-auth-api.zzxo: java.lang.String zza(java.lang.String)
com.google.firebase.Timestamp: java.lang.String toString()
io.grpc.Deadline: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjc: com.google.android.gms.internal.firebase-auth-api.zzjc zzd()
com.google.android.gms.common.api.internal.zabq: void zaC(com.google.android.gms.common.ConnectionResult)
com.google.protobuf.RopeByteString$1: com.google.protobuf.ByteString$ByteIterator nextPiece()
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.protobuf.CodedInputStreamReader: void readSInt64List(java.util.List)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.google.firebase.components.LazySet: java.util.Set get()
com.google.protobuf.SchemaUtil: int computeSizeEnumList(int,java.util.List,boolean)
com.google.android.gms.internal.firebase-auth-api.zzcp: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzmd zzb()
com.google.protobuf.UnknownFieldSetLiteSchema: void setToMessage(java.lang.Object,com.google.protobuf.UnknownFieldSetLite)
io.grpc.internal.SerializingExecutor$SynchronizedAtomicHelper: boolean runStateCompareAndSet(io.grpc.internal.SerializingExecutor,int,int)
com.google.android.gms.internal.firebase-auth-api.zzwo: void zza(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.lang.Object[])
com.google.protobuf.LazyStringArrayList: java.lang.Object getRaw(int)
com.google.android.gms.common.internal.GetServiceRequest: GetServiceRequest(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.Feature[],com.google.android.gms.common.Feature[],boolean,int,boolean,java.lang.String)
com.squareup.okhttp.HttpUrl: java.lang.String toString()
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
io.grpc.internal.CompositeReadableBuffer$5: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)
io.flutter.view.AccessibilityBridge: int access$7100()
com.google.firestore.v1.ArrayValue: void access$400(com.google.firestore.v1.ArrayValue,java.lang.Iterable)
com.google.android.gms.internal.firebase-auth-api.zzqy: com.google.android.gms.internal.firebase-auth-api.zzzd zza()
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.google.firebase.firestore.FirebaseFirestoreSettings: int hashCode()
io.grpc.internal.InternalSubchannel$Callback: InternalSubchannel$Callback()
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentTransform getTransform()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.firestore.model.mutation.Precondition: Precondition(com.google.firebase.firestore.model.SnapshotVersion,java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzlt: com.google.android.gms.internal.firebase-auth-api.zzls zzb()
com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)
com.google.protobuf.UnknownFieldSetLiteSchema: java.lang.Object getFromMessage(java.lang.Object)
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel(kotlin.jvm.functions.Function1)
io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.ReadableBuffer readBytes(int)
com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)
com.google.android.gms.safetynet.zzh: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzku: int zzh()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.internal.firebase-auth-api.zzvq zzu(com.google.firebase.auth.FirebaseAuth)
com.google.android.gms.internal.firebase-auth-api.zznv: zznv()
com.google.firebase.firestore.core.SyncEngine: void updateTrackedLimboDocuments(java.util.List,int)
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmp zzb()
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzak: int zzb()
com.google.android.gms.internal.firebase-auth-api.zzqb: zzqb()
com.google.firebase.firestore.core.CompositeFilter: int hashCode()
io.grpc.internal.ManagedChannelImpl: long access$2100(io.grpc.internal.ManagedChannelImpl)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.core.content.ContextCompat: java.io.File createFilesDir(java.io.File)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
com.google.firebase.messaging.TopicsStore: void initStore()
com.google.protobuf.DoubleArrayList: boolean add(java.lang.Object)
com.google.common.util.concurrent.DirectExecutor: DirectExecutor(java.lang.String,int)
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.firebase.firestore.core.DocumentViewChange: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: boolean isRemoving()
io.grpc.okhttp.OkHttpClientTransport: java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzl addCircle(com.google.android.gms.maps.model.CircleOptions)
com.google.common.collect.SingletonImmutableSet: boolean isHashCodeFast()
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setHttpConnectProxiedSocketAddress(io.grpc.HttpConnectProxiedSocketAddress)
com.google.firebase.firestore.proto.WriteBatch: void access$400(com.google.firebase.firestore.proto.WriteBatch,com.google.firestore.v1.Write)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ClientTransport obtainActiveTransport()
com.google.android.datatransport.runtime.AutoValue_TransportContext: java.lang.String getBackendName()
com.google.common.collect.Iterators$9: boolean hasNext()
com.google.firebase.installations.remote.TokenResult$ResponseCode: TokenResult$ResponseCode(java.lang.String,int)
com.google.common.base.CharMatcher$FastMatcher: CharMatcher$FastMatcher()
com.google.firebase.firestore.local.MemoryMutationQueue: void setLastStreamToken(com.google.protobuf.ByteString)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: double readDouble(android.os.Parcel,int)
com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: AndroidClientInfo$Builder()
com.google.firebase.firestore.core.ListenerRegistrationImpl: void remove()
com.google.firebase.components.Dependency: boolean isSet()
io.grpc.internal.ReadableBuffers: io.grpc.internal.ReadableBuffer ignoreClose(io.grpc.internal.ReadableBuffer)
androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()
io.flutter.plugins.firebase.messaging.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent,boolean)
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: ManagedChannelImpl$ChannelStreamProvider(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzfp: byte[] zzd(byte[],byte[])
com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()
com.baseflow.geolocator.GeolocatorPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.common.internal.zzl: zzl()
com.google.firebase.firestore.remote.FirestoreChannel$1: void onClose(io.grpc.Status,io.grpc.Metadata)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzvu: com.google.firebase.FirebaseException zzb(com.google.android.gms.common.api.Status,com.google.firebase.auth.AuthCredential,java.lang.String,java.lang.String)
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.Map applyToLocalDocumentSet(java.util.Map,java.util.Set)
com.google.android.gms.maps.model.zzh: java.lang.Object[] newArray(int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
io.grpc.SynchronizationContext$ScheduledHandle: boolean isPending()
com.google.android.gms.location.LocationAvailability: java.lang.String toString()
com.google.protobuf.Utf8$SafeProcessor: int encodeUtf8(java.lang.CharSequence,byte[],int,int)
com.google.common.base.Joiner: java.lang.String join(java.util.Iterator)
com.google.firebase.firestore.model.mutation.Precondition: boolean equals(java.lang.Object)
io.grpc.okhttp.OkHttpProtocolNegotiator: OkHttpProtocolNegotiator(io.grpc.okhttp.internal.Platform)
io.flutter.plugins.androidintent.IntentSender: boolean canResolveActivity(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzdu: java.lang.Object initialValue()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String toString()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter inArray(com.google.firebase.firestore.FieldPath,java.lang.Object)
io.grpc.Metadata$2: java.lang.String parseAsciiString(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzn(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabg)
com.baseflow.geolocator.location.LocationManagerClient: LocationManagerClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: Http2$ContinuationSource(okio.BufferedSource)
io.flutter.plugins.googlemaps.MarkersController: void addMarkers(java.util.List)
io.grpc.internal.ManagedChannelImpl$IdleModeStateAggregator: ManagedChannelImpl$IdleModeStateAggregator(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
io.flutter.plugins.googlemaps.GoogleMapController: void setCompassEnabled(boolean)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
com.google.firebase.firestore.local.SQLiteSchema: void ensureTargetGlobal()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: java.lang.Object[] toArray(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: void processRowInBackground(com.google.firebase.firestore.util.BackgroundQueue,java.util.Map,android.database.Cursor)
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzi(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzadc,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzdi: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.Status: java.lang.String formatThrowableMessage(io.grpc.Status)
com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)
androidx.fragment.app.Fragment: void onStart()
kotlin.KotlinVersion$Companion: KotlinVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.core.Query$LimitType: Query$LimitType(java.lang.String,int)
com.google.firebase.firestore.proto.MaybeDocument: void access$1100(com.google.firebase.firestore.proto.MaybeDocument,boolean)
com.google.android.gms.cloudmessaging.CloudMessage: android.content.Intent getIntent()
io.flutter.plugins.googlemaps.CircleBuilder: boolean consumeTapEvents()
com.google.firebase.firestore.remote.Datastore$1: Datastore$1(com.google.firebase.firestore.remote.Datastore,java.util.List,java.util.List,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse$Builder setPluginConstants(java.util.Map)
com.google.android.gms.common.internal.zzab: zzab()
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
com.google.android.gms.internal.firebase-auth-api.zziz: int zza()
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType[] values()
kotlinx.coroutines.channels.AbstractSendChannel: void helpClose(kotlinx.coroutines.channels.Closed)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent build()
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zzb(com.google.android.gms.common.internal.BaseGmsClient)
com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zae(java.lang.String,java.lang.String)
com.google.firestore.v1.FirestoreGrpc$1: com.google.firestore.v1.FirestoreGrpc$FirestoreStub newStub(io.grpc.Channel,io.grpc.CallOptions)
com.google.firebase.firestore.model.DocumentCollections: com.google.firebase.database.collection.ImmutableSortedMap emptyMutableDocumentMap()
io.grpc.internal.SerializingExecutor: void execute(java.lang.Runnable)
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
com.google.android.gms.internal.firebase-auth-api.zzadf: java.lang.reflect.Field zzI(java.lang.Class,java.lang.String)
com.google.firebase.messaging.SharedPreferencesQueue: boolean add(java.lang.String)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: void handleRejectedWrite(int,io.grpc.Status)
androidx.core.view.WindowInsetsControllerCompat$Impl26: WindowInsetsControllerCompat$Impl26(android.view.Window,android.view.View)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void skipBytes(int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Throwable invoke(java.lang.Throwable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.firebase.firestore.remote.TargetState: boolean isCurrent()
com.google.firebase.messaging.ServiceStarter: boolean hasAccessNetworkStatePermission(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzaao: int zzd()
com.google.firebase.firestore.FirebaseFirestore: com.google.android.gms.tasks.Task enableNetwork()
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
com.google.firebase.database.collection.RBTreeSortedMap: int size()
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
com.google.firebase.auth.ActionCodeSettings: boolean getAndroidInstallApp()
com.google.android.gms.common.util.concurrent.HandlerExecutor: HandlerExecutor(android.os.Looper)
io.grpc.internal.ApplicationThreadDeframerListener: void deframeFailed(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzjb: com.google.android.gms.internal.firebase-auth-api.zzjb zza(int)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String packageName(android.content.Context)
com.google.firebase.database.collection.LLRBValueNode: void setLeft(com.google.firebase.database.collection.LLRBNode)
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.firebase.auth.zzj: zzj(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseAuth$IdTokenListener)
com.google.protobuf.ArrayDecoders: int decodeSInt32List(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: com.google.android.datatransport.cct.internal.ClientInfo$ClientType getClientType()
com.google.android.gms.internal.firebase-auth-api.zzdb: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
com.google.common.io.BaseEncoding$Base64Encoding: BaseEncoding$Base64Encoding(java.lang.String,java.lang.String,java.lang.Character)
com.google.firebase.firestore.remote.WatchChangeAggregator: java.util.Set ensureDocumentTargetMapping(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.internal.firebase-auth-api.zzadm: com.google.android.gms.internal.firebase-auth-api.zzadc zza()
com.google.android.gms.internal.firebase-auth-api.zzjr: com.google.android.gms.internal.firebase-auth-api.zzjr zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
com.google.android.gms.common.api.internal.zabq: int zab()
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
androidx.fragment.app.FragmentController: void dispatchPause()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseUser getCurrentUser()
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
com.google.protobuf.IntArrayList: java.lang.Object set(int,java.lang.Object)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider: int getDefaultPort()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.google.android.gms.common.api.internal.BasePendingResult: void zak()
com.google.protobuf.UnsafeUtil: UnsafeUtil()
com.google.protobuf.CodedInputStreamReader: void readFixed32List(java.util.List)
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
com.google.android.gms.internal.firebase-auth-api.zznb: void zze(com.google.android.gms.internal.firebase-auth-api.zznb,int)
com.google.rpc.Status: com.google.rpc.Status access$000()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.Object,java.lang.Object,com.google.android.datatransport.runtime.dagger.Lazy)
com.google.android.gms.internal.firebase-auth-api.zzfs: zzfs(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.maps.internal.zzau: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firestore.admin.v1.Index$Builder: Index$Builder()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setVisible(boolean)
com.squareup.okhttp.Request$Builder: Request$Builder()
com.google.firebase.auth.OAuthProvider: OAuthProvider(android.os.Bundle,com.google.firebase.auth.zzad)
io.grpc.internal.DnsNameResolver: io.grpc.internal.DnsNameResolver$InternalResolutionResult doResolve(boolean)
com.google.protobuf.UnmodifiableLazyStringList: UnmodifiableLazyStringList(com.google.protobuf.LazyStringList)
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.FirebaseFirestoreSettings getSettings()
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.firestore.model.SnapshotVersion getCommitVersion()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.google.firebase.firestore.local.IndexBackfiller: IndexBackfiller(com.google.firebase.firestore.local.Persistence,com.google.firebase.firestore.util.AsyncQueue,com.google.common.base.Supplier,com.google.common.base.Supplier)
com.google.firebase.firestore.local.LruGarbageCollector$Params: com.google.firebase.firestore.local.LruGarbageCollector$Params WithCacheSizeBytes(long)
com.google.android.gms.common.api.internal.zaf: void zag(com.google.android.gms.common.api.internal.zaad,boolean)
com.google.android.gms.stats.WakeLock: WakeLock(android.content.Context,int,java.lang.String)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult build()
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite forJavaName(java.lang.String)
com.google.android.gms.maps.model.PolygonOptions: int getStrokeColor()
kotlin.collections.EmptyList: void clear()
kotlin.collections.EmptyList: boolean isEmpty()
com.google.firebase.firestore.local.SQLiteTargetCache: SQLiteTargetCache(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer)
com.google.android.gms.common.api.Status: boolean hasResolution()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$Filter encodeFilter(com.google.firebase.firestore.core.Filter)
io.flutter.embedding.android.FlutterActivity: void onPause()
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzko zzc()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.lang.Object getInternalSubchannel()
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmw zzd()
com.google.firebase.iid.FirebaseInstanceIdReceiver: int onMessageReceive(android.content.Context,com.google.android.gms.cloudmessaging.CloudMessage)
io.flutter.plugins.googlemaps.TileOverlayController: java.util.Map getTileOverlayInfo()
com.google.android.gms.maps.model.TileOverlayOptions: TileOverlayOptions()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int getMaxBlobByteSizePerRow()
com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: ManagedChannelImpl$RealChannel$PendingCall$1(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)
io.grpc.internal.ManagedChannelImpl$1Shutdown: void run()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
com.google.protobuf.MessageSchema: void writeFieldsInAscendingOrderProto2(java.lang.Object,com.google.protobuf.Writer)
com.google.protobuf.CodedInputStreamReader: com.google.protobuf.CodedInputStreamReader forCodedInput(com.google.protobuf.CodedInputStream)
io.grpc.internal.InternalSubchannel$Index: void increment()
io.grpc.okhttp.OkHttpClientStream$Sink: OkHttpClientStream$Sink(io.grpc.okhttp.OkHttpClientStream)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setIsRedirect(java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zztu: void zzb(java.lang.Object)
com.google.android.gms.maps.internal.zzby: void setMapToolbarEnabled(boolean)
io.grpc.internal.ManagedChannelImpl$1ShutdownNow: void run()
com.google.gson.stream.JsonReader: void push(int)
com.google.android.gms.common.api.internal.zabm: void run()
com.google.android.gms.internal.firebase-auth-api.zzlc: zzlc()
com.google.android.gms.common.api.internal.zaq: zaq()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.google.firebase.firestore.bundle.NamedQuery: NamedQuery(java.lang.String,com.google.firebase.firestore.bundle.BundledQuery,com.google.firebase.firestore.model.SnapshotVersion)
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task update(com.google.firebase.firestore.core.UserData$ParsedUpdateData)
com.google.android.gms.common.util.DefaultClock: long elapsedRealtime()
com.google.protobuf.Protobuf: Protobuf()
io.grpc.internal.CompositeReadableBuffer: void close()
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzw(int,int)
com.google.protobuf.IntArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
io.grpc.internal.ManagedChannelImpl: boolean access$7602(io.grpc.internal.ManagedChannelImpl,boolean)
com.google.android.gms.internal.firebase-auth-api.zzep: int zzd(int)
com.tekartik.sqflite.SqflitePlugin: boolean access$400(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzJ(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zztn: zztn(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.internal.location.zzo)
com.google.android.gms.internal.firebase-auth-api.zzaaj: java.lang.Object set(int,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: java.lang.String toString()
io.grpc.okhttp.OkHttpClientStream: boolean access$100(io.grpc.okhttp.OkHttpClientStream)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getStartCap()
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
com.google.protobuf.ArrayDecoders: int decodeVarint64(byte[],int,com.google.protobuf.ArrayDecoders$Registers)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
com.google.firebase.firestore.LoadBundleTaskProgress: com.google.firebase.firestore.LoadBundleTaskProgress forSuccess(com.google.firebase.firestore.bundle.BundleMetadata)
com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
com.google.android.gms.maps.internal.zzby: void setScrollGesturesEnabled(boolean)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpFrameLogger access$500(io.grpc.okhttp.OkHttpClientTransport)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy: io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView createWebView(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zztv: void zza(java.lang.String)
com.google.protobuf.FloatArrayList: java.lang.Float get(int)
io.flutter.plugins.googlemaps.GoogleMapController: void setCameraTargetBounds(com.google.android.gms.maps.model.LatLngBounds)
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzal: java.util.ListIterator listIterator(int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzjz zzb(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: boolean isNetworkAvailable()
com.google.firebase.firestore.local.SQLiteSchema: void createFieldIndex()
com.google.firebase.auth.zzg: zzg()
com.google.android.gms.tasks.zzad: zzad(com.google.android.gms.tasks.zzac)
com.lyokone.location.NotificationOptions: boolean getOnTapBringToFront()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: AbstractChannel$RemoveReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
com.google.firebase.database.collection.RBTreeSortedMap: int indexOf(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzh(com.google.android.gms.common.api.Status)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.auth.zze: com.google.firebase.auth.zze zzc(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzm(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.android.gms.internal.firebase-auth-api.zzabk: com.google.android.gms.internal.firebase-auth-api.zzabv zzb(com.google.android.gms.internal.firebase-auth-api.zzadc,int)
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp getReadTime()
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.tasks.Task zzd(int,android.os.Bundle)
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
com.google.firestore.v1.BatchGetDocumentsResponse: BatchGetDocumentsResponse()
com.google.common.collect.ImmutableSet: boolean shouldTrim(int,int)
io.grpc.internal.MessageDeframer: java.io.InputStream getCompressedBody()
com.google.android.gms.cloudmessaging.zzj: void run()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseAuthCredential(com.google.firebase.auth.AuthCredential)
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.ViewSnapshot$SyncState getSyncState()
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDrag(java.lang.String,com.google.android.gms.maps.model.LatLng)
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])
com.google.firebase.installations.local.PersistedInstallation: java.io.File getDataFile()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: void runInContext()
com.google.firebase.firestore.core.Query: boolean matchesFilters(com.google.firebase.firestore.model.Document)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
io.flutter.plugins.googlemaps.PolygonBuilder: void setConsumeTapEvents(boolean)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setServiceConfigParser(io.grpc.NameResolver$ServiceConfigParser)
com.google.protobuf.FieldSet: com.google.protobuf.FieldSet clone()
com.google.protobuf.UnsafeUtil$1: java.lang.Object run()
com.google.android.gms.common.api.internal.zzb: void onActivityResult(int,int,android.content.Intent)
com.google.firebase.firestore.core.SyncEngine: void stopListening(com.google.firebase.firestore.core.Query)
com.google.protobuf.CodedInputStream$StreamDecoder: long readRawLittleEndian64()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.firebase.firestore.local.SQLiteSchema: void addSequenceNumber()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.grpc.internal.RetriableStream$Throttle: void onSuccess()
com.google.android.gms.common.api.internal.zaab: zaab(com.google.android.gms.common.api.internal.zaad,com.google.android.gms.common.api.internal.BasePendingResult)
com.google.firebase.firestore.core.SyncEngine: com.google.android.gms.tasks.Task transaction(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.TransactionOptions,com.google.firebase.firestore.util.Function)
com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,java.lang.Object,com.google.android.gms.tasks.TaskCompletionSource)
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: java.util.List resolveTxt(java.lang.String)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: boolean access$600(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder)
com.google.common.io.BaseEncoding$Base16Encoding: BaseEncoding$Base16Encoding(com.google.common.io.BaseEncoding$Alphabet)
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String,java.lang.String)
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
io.grpc.internal.ManagedChannelImpl$IdleModeTimer: ManagedChannelImpl$IdleModeTimer(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelImpl$1)
com.tekartik.sqflite.SqflitePlugin: boolean access$300(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task documentUpdate(java.util.Map)
com.tekartik.sqflite.Database$1: Database$1(com.tekartik.sqflite.Database)
com.google.firebase.firestore.proto.NoDocument: void access$100(com.google.firebase.firestore.proto.NoDocument,java.lang.String)
io.grpc.okhttp.internal.framed.Huffman: Huffman()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.grpc.StatusException: io.grpc.Status getStatus()
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzkg zzc()
com.google.android.gms.cloudmessaging.zzq: zzq(int,java.lang.String,java.lang.Throwable)
com.google.firebase.auth.EmailAuthProvider: com.google.firebase.auth.AuthCredential getCredentialWithLink(java.lang.String,java.lang.String)
com.google.android.gms.maps.zzag: void onStop()
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setAuthority(java.lang.String)
io.grpc.internal.DelayedStream$10: DelayedStream$10(io.grpc.internal.DelayedStream,int)
com.google.android.gms.internal.firebase-auth-api.zzrh: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
com.google.firebase.firestore.remote.TargetChange: TargetChange(com.google.protobuf.ByteString,boolean,com.google.firebase.database.collection.ImmutableSortedSet,com.google.firebase.database.collection.ImmutableSortedSet,com.google.firebase.database.collection.ImmutableSortedSet)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
com.google.protobuf.LazyFieldLite: LazyFieldLite()
io.grpc.CallOptions: java.lang.Integer getMaxInboundMessageSize()
androidx.window.core.Bounds: boolean isZero()
com.google.common.collect.RegularImmutableMap$KeySet: RegularImmutableMap$KeySet(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList)
com.google.firebase.messaging.reporting.MessagingClientEvent: long getBulkId()
com.google.android.gms.internal.firebase-auth-api.zzadq: com.google.android.gms.internal.firebase-auth-api.zzaef zzB()
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzkc zza(int)
io.grpc.internal.ManagedChannelImpl$RealChannel: java.lang.String access$4200(io.grpc.internal.ManagedChannelImpl$RealChannel)
com.google.android.gms.internal.firebase-auth-api.zzaec: com.google.android.gms.internal.firebase-auth-api.zzadc zza()
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.runtime.EventInternal decorate(com.google.android.datatransport.runtime.EventInternal)
io.grpc.internal.ServiceConfigUtil$PolicySelection: int hashCode()
io.grpc.okhttp.internal.framed.Hpack$Reader: boolean isStaticHeader(int)
com.google.firebase.firestore.index.DirectionalIndexByteEncoder: DirectionalIndexByteEncoder()
com.google.firestore.v1.Target$DocumentsTarget: void ensureDocumentsIsMutable()
io.grpc.NameResolver: void refresh()
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
com.google.protobuf.ArrayDecoders: long decodeFixed64(byte[],int)
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.firebase.firestore.core.CompositeFilter: java.lang.String getCanonicalId()
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
com.google.firebase.auth.internal.zzaz: java.util.Map zzd(org.json.JSONObject)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: void encode(java.lang.Object,java.lang.Object)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)
io.grpc.internal.RetriableStream: boolean access$600(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$State)
com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.maps.CameraUpdate: CameraUpdate(com.google.android.gms.dynamic.IObjectWrapper)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor build()
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzpo: byte[] zzb()
io.grpc.internal.GzipInflatingBuffer: boolean processHeader()
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: void access$1200(com.google.firebase.firestore.util.AsyncQueue$DelayedTask,long)
com.google.android.gms.maps.model.Cap: Cap(com.google.android.gms.maps.model.BitmapDescriptor,float)
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
com.google.firestore.v1.StructuredQuery$Filter: void setFieldFilter(com.google.firestore.v1.StructuredQuery$FieldFilter)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.firebase.auth.FirebaseAuth getAuth(java.util.Map)
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Order getOrderBy(int)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object get(java.lang.Object)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder setDescription(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzpq: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzadb zzA()
com.google.android.gms.internal.firebase-auth-api.zzqo: java.lang.String zzb()
com.google.android.gms.internal.firebase-auth-api.zzabf: void zzJ(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzaet)
com.google.protobuf.BooleanArrayList: com.google.protobuf.Internal$BooleanList mutableCopyWithCapacity(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.plugins.firebase.auth.AuthStateChannelStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firebase.firestore.remote.FirebaseClientGrpcMetadataProvider: void updateMetadata(io.grpc.Metadata)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
com.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)
com.google.protobuf.SchemaUtil: void writeBoolList(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,long)
com.google.android.gms.internal.firebase-auth-api.zztn: void zza(java.lang.String)
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody access$300(com.squareup.okhttp.Request$Builder)
com.google.firebase.firestore.model.mutation.Mutation: int keyAndPreconditionHashCode()
com.google.firebase.firestore.local.SQLitePersistence: void clearPersistence(android.content.Context,com.google.firebase.firestore.model.DatabaseId,java.lang.String)
com.google.protobuf.BooleanArrayList: boolean contains(java.lang.Object)
com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzxj: void onFailure(java.lang.Exception)
com.tekartik.sqflite.SqlCommand: java.lang.Object[] getSqlArguments(java.util.List)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setChannelLogger(io.grpc.ChannelLogger)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerCreator: DownloadListenerHostApiImpl$DownloadListenerCreator()
com.google.firebase.firestore.model.DatabaseId: int hashCode()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
com.google.android.gms.internal.firebase-auth-api.zzdk: void zzb(int[],int[])
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void onSetFailedResult(com.google.android.gms.common.api.Result)
io.grpc.NameResolverProvider: java.lang.String getScheme()
com.google.firebase.firestore.model.mutation.DeleteMutation: void applyToRemoteDocument(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.MutationResult)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.location.zzag: zzag()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object zzl(int)
com.google.android.gms.cloudmessaging.Rpc: Rpc(android.content.Context)
com.google.protobuf.DoubleArrayList: java.lang.Object remove(int)
com.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)
com.google.android.gms.maps.zzo: zzo(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolygonClickListener)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: void putFloat(java.lang.Object,long,float)
com.google.firestore.v1.CommitResponse: int getWriteResultsCount()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder: AutoBatchedLogRequestEncoder()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task documentDelete(java.util.Map)
com.google.protobuf.CodedInputStream$StreamDecoder: double readDouble()
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: AutoValue_FieldIndex_IndexState(long,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean zzc()
io.grpc.internal.RetriableStream: io.grpc.Status access$000()
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.Set entrySet()
com.google.protobuf.BinaryReader$SafeHeapReader: byte readByte()
io.grpc.internal.Rescheduler: Rescheduler(java.lang.Runnable,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,com.google.common.base.Stopwatch)
com.google.android.gms.maps.model.zzh: zzh()
com.google.android.gms.internal.firebase-auth-api.zzadk: com.google.android.gms.internal.firebase-auth-api.zzado zzb(java.lang.Class)
io.grpc.internal.Http2Ping$2: Http2Ping$2(io.grpc.internal.ClientTransport$PingCallback,java.lang.Throwable)
com.google.protobuf.CodedInputStream$ArrayDecoder: long readRawLittleEndian64()
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
com.google.firebase.auth.internal.zzt: java.lang.String zza()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object retryIfDbLocked(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task updateEmail(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException: FirebaseInstallationsException(com.google.firebase.installations.FirebaseInstallationsException$Status)
com.google.android.gms.internal.maps.zzai: zzai()
com.google.android.gms.internal.firebase-auth-api.zzcs: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readEnum()
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzadl: java.lang.String zzf(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
com.google.protobuf.SchemaUtil: void writeInt64List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.android.gms.internal.firebase-auth-api.zziq: int zza()
com.google.protobuf.UnknownFieldSetLite: void storeField(int,java.lang.Object)
com.google.type.LatLng: double getLongitude()
io.grpc.internal.InternalSubchannel$2: InternalSubchannel$2(io.grpc.internal.InternalSubchannel)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setBuildingsEnabled(boolean)
com.google.android.gms.common.api.zzb: zzb()
io.flutter.embedding.android.KeyboardManager: void destroy()
com.google.android.gms.common.logging.Logger: void wtf(java.lang.Throwable)
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.android.gms.common.internal.zzai: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzy(com.google.firebase.FirebaseApp,com.google.firebase.auth.AuthCredential,java.lang.String,com.google.firebase.auth.internal.zzg)
com.google.firebase.firestore.local.SQLiteMutationQueue: void writeMutationQueueMetadata()
com.google.firebase.firestore.WriteBatch: WriteBatch(com.google.firebase.firestore.FirebaseFirestore)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(java.lang.String,long)
com.google.android.gms.common.api.internal.zae: void zae(java.lang.Exception)
io.grpc.internal.ForwardingNameResolver: java.lang.String toString()
com.google.common.collect.ImmutableList: int hashCode()
com.google.android.gms.maps.GoogleMap: void setOnCameraIdleListener(com.google.android.gms.maps.GoogleMap$OnCameraIdleListener)
io.flutter.plugins.firebase.firestore.streamhandler.QuerySnapshotsStreamHandler: QuerySnapshotsStreamHandler()
com.google.firestore.v1.Value: Value()
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: AutoValue_LogRequest$Builder()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator encodeFieldFilterOperator(com.google.firebase.firestore.core.FieldFilter$Operator)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: int readUnsignedByte()
com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawBytesSlowPath(int)
com.tekartik.sqflite.operation.BatchOperation: java.util.Map getOperationSuccessResult()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzev: byte[] zzc()
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zzg()
com.google.firebase.firestore.SnapshotMetadata: boolean equals(java.lang.Object)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: int getPriority()
com.google.firebase.auth.ActionCodeEmailInfo: ActionCodeEmailInfo()
io.flutter.plugins.googlemaps.CirclesController: boolean onCircleTap(java.lang.String)
com.google.firebase.messaging.threads.PoolableExecutors$DefaultExecutorFactory: PoolableExecutors$DefaultExecutorFactory()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzly: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.dynamite.zza: void run()
com.google.firebase.installations.InstallationTokenResult$Builder: InstallationTokenResult$Builder()
com.google.android.gms.internal.firebase-auth-api.zzih: int zza()
io.grpc.CallOptions: java.util.concurrent.Executor getExecutor()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzO(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.android.gms.internal.firebase-auth-api.zzle: zzle()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: java.lang.String getSourceExtensionJsonProto3()
io.grpc.okhttp.internal.Platform$JettyNegoProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
com.google.android.gms.common.api.internal.zacf: void run()
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
io.grpc.MethodDescriptor$MethodType: boolean clientSendsOneMessage()
com.tekartik.sqflite.operation.BatchOperation: BatchOperation(java.util.Map,boolean)
com.squareup.okhttp.Request: java.lang.String toString()
com.google.firebase.encoders.proto.ProtobufEncoder: ProtobufEncoder(java.util.Map,java.util.Map,com.google.firebase.encoders.ObjectEncoder)
com.google.firebase.auth.UserProfileChangeRequest$Builder: com.google.firebase.auth.UserProfileChangeRequest$Builder setDisplayName(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.grpc.okhttp.ExceptionHandlingFrameWriter: ExceptionHandlingFrameWriter(io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler,io.grpc.okhttp.internal.framed.FrameWriter)
androidx.collection.SparseArrayCompat: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzap zza(com.google.android.gms.internal.firebase-auth-api.zzfm)
com.google.firebase.firestore.remote.RemoteStore: void access$100(com.google.firebase.firestore.remote.RemoteStore,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.remote.WatchChange)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
io.grpc.ClientStreamTracer$Factory: ClientStreamTracer$Factory()
io.grpc.internal.GrpcUtil: boolean isGrpcContentType(java.lang.String)
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: int tag()
io.grpc.Attributes$Builder: io.grpc.Attributes$Builder discard(io.grpc.Attributes$Key)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.google.firebase.messaging.NotificationParams: java.lang.Integer getNotificationCount()
com.google.firebase.firestore.model.DatabaseId: int compareTo(java.lang.Object)
com.google.firebase.components.EventBus: void subscribe(java.lang.Class,java.util.concurrent.Executor,com.google.firebase.events.EventHandler)
com.google.android.gms.internal.firebase-auth-api.zzpg: zzpg(java.lang.String,java.security.Key)
com.google.firebase.auth.internal.zzaa: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.internal.BaseGmsClient: boolean getUseDynamicLookup()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
io.flutter.plugins.webviewflutter.FlutterWebViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.TargetData allocateTarget(com.google.firebase.firestore.core.Target)
com.google.common.base.Platform: long systemNanoTime()
io.grpc.internal.GrpcUtil: java.net.URI authorityToUri(java.lang.String)
kotlinx.coroutines.internal.AtomicOp: long getOpSequence()
com.google.firebase.firestore.core.CompositeFilter: com.google.firebase.firestore.core.FieldFilter findFirstMatchingFilter(com.google.firebase.firestore.util.Function)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzE(com.google.android.gms.internal.firebase-auth-api.zzabl,java.lang.Object,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzzv: zzzv()
com.google.android.gms.internal.firebase-auth-api.zzxx: zzxx(java.lang.String)
com.google.firebase.firestore.local.SQLitePersistence: SQLitePersistence(android.content.Context,java.lang.String,com.google.firebase.firestore.model.DatabaseId,com.google.firebase.firestore.local.LocalSerializer,com.google.firebase.firestore.local.LruGarbageCollector$Params)
io.grpc.internal.RetriableStream: io.grpc.internal.RetriableStream$Substream access$400(io.grpc.internal.RetriableStream,int,boolean)
com.google.protobuf.ByteString$LiteralByteString: ByteString$LiteralByteString(byte[])
io.grpc.NameResolverRegistry: java.lang.String access$200(io.grpc.NameResolverRegistry)
com.google.android.gms.internal.firebase-auth-api.zzaar: void zzj(com.google.android.gms.internal.firebase-auth-api.zzaak)
com.google.protobuf.ByteString$2: ByteString$2()
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: DartMessenger$SerialTaskQueue(java.util.concurrent.ExecutorService)
androidx.fragment.app.FragmentManagerImpl: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
com.google.firebase.auth.ActionCodeMultiFactorInfo: ActionCodeMultiFactorInfo()
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
com.google.protobuf.CodedInputStream$ArrayDecoder: double readDouble()
com.google.firebase.installations.FirebaseInstallations: FirebaseInstallations(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)
io.grpc.internal.ClientCallImpl$1ClosedByContext: ClientCallImpl$1ClosedByContext(io.grpc.internal.ClientCallImpl,io.grpc.ClientCall$Listener)
io.grpc.LoadBalancer$PickSubchannelArgs: LoadBalancer$PickSubchannelArgs()
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
com.google.common.io.BaseEncoding$StandardBaseEncoding: BaseEncoding$StandardBaseEncoding(java.lang.String,java.lang.String,java.lang.Character)
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: com.google.firestore.v1.StructuredQuery$FieldFilter$Builder setOp(com.google.firestore.v1.StructuredQuery$FieldFilter$Operator)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task delete()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeLazy(byte[],int,int)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeUtf8Descending(java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzaco: zzaco(com.google.android.gms.internal.firebase-auth-api.zzacn)
io.grpc.ClientStreamTracer$StreamInfo: ClientStreamTracer$StreamInfo(io.grpc.CallOptions,int,boolean)
io.grpc.internal.DelayedClientCall$3: void run()
com.google.android.gms.dynamite.zzi: zzi()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.datatransport.AutoValue_Event: java.lang.Integer getCode()
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresGooglePlayServices()
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: int getSubqueriesPerformed()
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
com.tekartik.sqflite.SqflitePlugin$BgResult$3: SqflitePlugin$BgResult$3(com.tekartik.sqflite.SqflitePlugin$BgResult)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tekartik.sqflite.SqlCommand: SqlCommand(java.lang.String,java.util.List)
com.google.android.gms.cloudmessaging.zzs: com.google.android.gms.tasks.Task zzg(com.google.android.gms.cloudmessaging.zzp)
com.google.protobuf.UnknownFieldSetLite: boolean objectsEquals(java.lang.Object[],java.lang.Object[],int)
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zzd()
io.grpc.internal.RetriableStream$1CompressorEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.android.gms.internal.firebase-auth-api.zzyp: com.google.android.gms.internal.firebase-auth-api.zzyp zzb(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zzc(java.lang.String)
com.google.firebase.auth.OAuthProvider: void zzc(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzb(byte[],int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
com.google.firebase.encoders.proto.Protobuf$IntEncoding: Protobuf$IntEncoding(java.lang.String,int)
com.google.protobuf.DoubleArrayList: com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)
io.flutter.plugins.firebase.firestore.streamhandler.LoadBundleStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.protobuf.BinaryReader$SafeHeapReader: void readUInt64List(java.util.List)
io.grpc.internal.ManagedChannelImplBuilder: io.grpc.ManagedChannel build()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
io.grpc.okhttp.internal.framed.Settings: int getHeaderTableSize()
com.google.protobuf.LongArrayList: int indexOf(java.lang.Object)
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField access$000()
com.google.firebase.firestore.model.mutation.PatchMutation: com.google.firebase.firestore.model.ObjectValue getValue()
com.google.android.gms.internal.common.zzb: android.os.IBinder asBinder()
com.google.firebase.firestore.remote.RemoteStore: void handleWriteStreamClose(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzaao: byte zzb(int)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task waitForPendingWrites(java.util.Map)
com.google.android.gms.internal.common.zzc: void zzb(android.os.Parcel,boolean)
com.google.firebase.auth.internal.zzx: zzx(com.google.firebase.FirebaseApp,java.util.List)
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
io.flutter.plugins.googlemaps.Convert: android.graphics.Bitmap toBitmap(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzln: int zza()
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Object getKey()
com.google.android.gms.cloudmessaging.Rpc: void zzd(java.lang.String,java.util.concurrent.ScheduledFuture,com.google.android.gms.tasks.Task)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
com.google.protobuf.LazyStringArrayList: java.lang.String remove(int)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
com.google.android.gms.internal.safetynet.zzk$zzb: zzk$zzb(com.google.android.gms.common.api.GoogleApiClient)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams valueOf(java.lang.String)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
com.google.android.gms.maps.model.Cap: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzvb: void zzb()
com.google.firestore.v1.WriteRequest: void access$1300(com.google.firestore.v1.WriteRequest,com.google.protobuf.ByteString)
com.google.firebase.firestore.proto.MaybeDocument: void access$500(com.google.firebase.firestore.proto.MaybeDocument,com.google.firestore.v1.Document)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl: void exceptionThrown(io.grpc.Status)
com.google.firestore.v1.Cursor$Builder: Cursor$Builder()
com.google.android.gms.maps.model.CircleOptions: float getZIndex()
io.grpc.internal.PickFirstLoadBalancer$Picker: java.lang.String toString()
com.google.firebase.auth.internal.zzt: android.net.Uri getPhotoUrl()
com.google.protobuf.FieldSet: void writeElement(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzade: void zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)
io.flutter.plugins.googlemaps.PolygonBuilder: com.google.android.gms.maps.model.PolygonOptions build()
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: java.lang.Object get()
com.google.firebase.firestore.FirebaseFirestore: FirebaseFirestore(android.content.Context,com.google.firebase.firestore.model.DatabaseId,java.lang.String,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.auth.CredentialsProvider,com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.FirebaseApp,com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry,com.google.firebase.firestore.remote.GrpcMetadataProvider)
com.tekartik.sqflite.SqlCommand: java.lang.String[] getQuerySqlArguments(java.util.List)
com.tekartik.sqflite.SqflitePlugin: void onDebugCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.remote.AbstractStream: void writeRequest(java.lang.Object)
io.flutter.plugins.firebase.auth.IdTokenChannelStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firebase.firestore.model.BasePath: boolean isEmpty()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)
com.google.protobuf.RopeByteString$Balancer: com.google.protobuf.ByteString balance(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
io.flutter.view.VsyncWaiter: void init()
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: void onTrimMemory(int)
com.google.firebase.auth.OAuthProvider$CredentialBuilder: com.google.firebase.auth.OAuthProvider$CredentialBuilder setAccessToken(java.lang.String)
io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String getPolicyName()
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzj(java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.runtime.backends.BackendResponse send(com.google.android.datatransport.runtime.backends.BackendRequest)
com.google.android.gms.internal.firebase-auth-api.zzfg: byte[] zzb(byte[],byte[],byte[])
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzh()
io.flutter.plugins.googlemaps.PolylinesController: void addPolylines(java.util.List)
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: com.google.firestore.v1.Value getOperand()
io.grpc.okhttp.internal.OptionalMethod: boolean isSupported(java.lang.Object)
com.google.android.gms.maps.zzn: zzn(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCircleClickListener)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1802(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.ManagedChannelServiceConfig)
com.google.protobuf.MapFieldLite: int calculateHashCodeForObject(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.google.protobuf.CodedInputStreamReader: void verifyPackedFixed32Length(int)
io.grpc.CallOptions$Key: CallOptions$Key(java.lang.String,java.lang.Object)
io.grpc.LoadBalancer: LoadBalancer()
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
com.google.android.gms.internal.firebase-auth-api.zzlu: zzlu()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int hashCode()
io.grpc.InternalLogId: java.lang.String shortName()
io.flutter.plugins.googlemaps.PolygonsController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
okio.Okio$1: java.lang.String toString()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.util.Map parseTokenResult(com.google.firebase.auth.GetTokenResult)
com.google.android.gms.internal.firebase-auth-api.zzeq: zzeq(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: AutoValue_EventStoreConfig(long,int,int,long,int)
com.google.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKatWatch()
com.google.firebase.messaging.FcmBroadcastProcessor: com.google.android.gms.tasks.Task bindToMessagingService(android.content.Context,android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzjl: com.google.android.gms.internal.firebase-auth-api.zzjl zzc()
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.SortedSet getExistingIndexEntries(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.FieldIndex)
io.grpc.ManagedChannelBuilder: ManagedChannelBuilder()
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
com.google.android.gms.maps.zzo: void zzb(com.google.android.gms.internal.maps.zzaa)
com.google.common.math.LongMath: long checkedAdd(long,long)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
com.google.android.gms.internal.firebase-auth-api.zzin: void zze(com.google.android.gms.internal.firebase-auth-api.zzin,int)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzhf: java.lang.String toString()
com.google.firebase.firestore.local.LocalStore: com.google.protobuf.ByteString getLastStreamToken()
androidx.collection.ArraySet$1: void colClear()
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,android.content.Context,com.google.firebase.messaging.NotificationParams,java.lang.String,android.os.Bundle)
com.google.android.gms.maps.internal.zzca: android.content.Context zzb(java.lang.Exception,android.content.Context)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zaf(android.os.Bundle,com.google.android.gms.dynamic.zah)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzg(java.util.List)
com.google.protobuf.MapFieldLite: boolean isMutable()
androidx.window.R$attr: R$attr()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
com.google.firestore.admin.v1.Index$IndexField$Order$1: com.google.firestore.admin.v1.Index$IndexField$Order findValueByNumber(int)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException: FlutterFirebaseFirestoreException(com.google.firebase.firestore.FirebaseFirestoreException,java.lang.Throwable)
com.google.firestore.v1.Target$QueryTarget$Builder: Target$QueryTarget$Builder(com.google.firestore.v1.Target$1)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.model.SnapshotVersion getLastLimboFreeSnapshotVersion()
com.google.firebase.firestore.proto.WriteBatch: int getBaseWritesCount()
com.tekartik.sqflite.LogLevel: java.lang.Integer getLogLevel(io.flutter.plugin.common.MethodCall)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean isSupported()
com.google.android.gms.internal.firebase-auth-api.zzcj: java.util.Map zzc()
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: java.lang.Object next()
com.google.android.gms.internal.firebase-auth-api.zzki: zzki(com.google.android.gms.internal.firebase-auth-api.zzkh)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setZoomControlsEnabled(boolean)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
io.perfmark.Impl: io.perfmark.Link linkOut()
com.google.firebase.firestore.index.IndexByteEncoder: com.google.firebase.firestore.index.DirectionalIndexByteEncoder forKind(com.google.firebase.firestore.model.FieldIndex$Segment$Kind)
com.google.android.gms.internal.safetynet.zzk: zzk()
com.google.firebase.firestore.remote.RemoteStore: void stopListening(int)
com.google.android.gms.internal.firebase-auth-api.zzzs: java.util.List zzl()
com.google.common.collect.RegularImmutableMap$EntrySet: java.util.Iterator iterator()
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziz zzd()
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord: LocalBroadcastManager$BroadcastRecord(android.content.Intent,java.util.ArrayList)
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target$Builder newBuilder()
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
kotlinx.coroutines.NodeList: boolean isActive()
com.google.android.gms.internal.maps.zza: zza(android.os.IBinder,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaaw: long zzi()
com.google.firestore.v1.WriteRequest: void ensureWritesIsMutable()
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)
io.grpc.ForwardingClientCall: void request(int)
com.google.android.gms.internal.firebase-auth-api.zzrq: long zza()
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException: GooglePlayServicesIncorrectManifestValueException(int)
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferFixed64NoTag(long)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: boolean access$300(com.google.firebase.firestore.remote.AndroidConnectivityMonitor)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
com.google.android.gms.signin.SignInOptions: SignInOptions(boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,java.lang.Long,java.lang.Long,com.google.android.gms.signin.zaf)
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
io.grpc.internal.RetriableStream: void setDeadline(io.grpc.Deadline)
okio.RealBufferedSource: long read(okio.Buffer,long)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: AutoValue_EventStoreConfig$Builder()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
com.google.android.gms.internal.firebase-auth-api.zzpq: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.local.IndexBackfiller: long access$100()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$1: void afterExecute(java.lang.Runnable,java.lang.Throwable)
io.grpc.internal.ProxyDetectorImpl$1: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3700(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.FirebaseOptions: java.lang.String getApplicationId()
com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: long access$800(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
androidx.core.app.NotificationCompat$Action: boolean isContextual()
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest access$000()
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: void makeImmutableListAt(java.lang.Object,long)
com.google.android.gms.location.LocationSettingsResult: void writeToParcel(android.os.Parcel,int)
io.grpc.okhttp.OkHttpChannelProvider: io.grpc.okhttp.OkHttpChannelBuilder builderForTarget(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.protobuf.MapEntryLite: com.google.protobuf.MapEntryLite newDefaultInstance(com.google.protobuf.WireFormat$FieldType,java.lang.Object,com.google.protobuf.WireFormat$FieldType,java.lang.Object)
com.google.android.gms.signin.internal.zac: zac()
io.grpc.stub.ClientCalls: ClientCalls()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task getDocumentFromLocalCache(com.google.firebase.firestore.model.DocumentKey)
io.grpc.internal.JsonUtil: long saturatedAdd(long,long)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType valueOf(java.lang.String)
com.google.firebase.auth.GithubAuthCredential: java.lang.String getProvider()
com.google.android.gms.internal.firebase-auth-api.zzdg: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzei: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.DnsNameResolverProvider: io.grpc.NameResolver newNameResolver(java.net.URI,io.grpc.NameResolver$Args)
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance()
okio.Buffer: void write(okio.Buffer,long)
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Integer get()
io.flutter.plugins.googlemaps.PolylineBuilder: void setConsumeTapEvents(boolean)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: boolean isPinned(com.google.firebase.firestore.model.DocumentKey)
io.grpc.internal.RetriableStream$RetryPlan: RetriableStream$RetryPlan(boolean,long)
com.google.android.gms.internal.firebase-auth-api.zzlm: zzlm(com.google.android.gms.internal.firebase-auth-api.zzll)
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledFuture access$202(io.grpc.internal.KeepAliveManager,java.util.concurrent.ScheduledFuture)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.grpc.Metadata: void discardAll(io.grpc.Metadata$Key)
com.google.firebase.firestore.remote.RemoteStore: boolean shouldStartWriteStream()
com.google.common.collect.ImmutableList: java.util.List subList(int,int)
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange getDefaultInstance()
com.google.firebase.firestore.model.DocumentKey: java.lang.String getCollectionGroup()
com.google.android.gms.tasks.zzw: void zza(java.lang.Exception)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task updateProfile(java.util.Map)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
io.grpc.ForwardingChannelBuilder: io.grpc.ForwardingChannelBuilder thisT()
com.google.protobuf.ByteString$LiteralByteString: byte byteAt(int)
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics: GlobalMetrics(com.google.android.datatransport.runtime.firebase.transport.StorageMetrics)
androidx.browser.customtabs.CustomTabColorSchemeParams: android.os.Bundle toBundle()
com.google.protobuf.CodedOutputStream$OutOfSpaceException: CodedOutputStream$OutOfSpaceException(java.lang.Throwable)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)
com.google.android.gms.maps.internal.zze: void zzl(com.google.android.gms.dynamic.IObjectWrapper,int)
com.google.android.datatransport.cct.CctTransportBackend: int getNetTypeValue(android.net.NetworkInfo)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
com.google.android.gms.tasks.zze: void run()
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBNode buildBalancedTree(int,int)
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue$Builder newBuilder()
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzc()
com.google.android.datatransport.cct.CCTDestination: com.google.android.datatransport.cct.CCTDestination fromByteArray(byte[])
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.DocumentKey fromPath(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.internal.firebase-auth-api.zzno: zzno()
com.google.firebase.installations.RandomFidGenerator: java.lang.String encodeFidBase64UrlSafe(byte[])
com.google.android.gms.maps.model.zzi: zzi()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall access$4600(io.grpc.internal.ManagedChannelImpl$RealChannel,io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzih zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.bundle.BundleDocument: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: void run()
com.google.android.gms.internal.location.zzl: void checkConnected()
com.google.protobuf.Utf8$UnsafeProcessor: int partialIsValidUtf8(long,int)
io.grpc.okhttp.OkHttpClientStream: io.grpc.internal.TransportTracer access$1000(io.grpc.okhttp.OkHttpClientStream)
com.lyokone.location.FlutterLocation: void changeSettings(java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Float)
com.google.protobuf.CodedOutputStream: int computeByteArraySizeNoTag(byte[])
io.flutter.plugins.googlemaps.PolylineController: void setJointType(int)
com.google.android.gms.common.api.internal.TaskUtil: com.google.android.gms.tasks.Task toVoidTaskThatFailsOnFalse(com.google.android.gms.tasks.Task)
com.google.android.gms.safetynet.SafeBrowsingData: long getLastUpdateTimeMs()
com.baseflow.geolocator.location.GeolocationManager: boolean onActivityResult(int,int,android.content.Intent)
com.google.android.gms.maps.zzz: zzz(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapLongClickListener)
com.google.android.gms.internal.firebase-auth-api.zznf: zznf()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
com.google.firestore.v1.StructuredQuery$Direction: int getNumber()
com.google.android.gms.common.GoogleApiAvailability: boolean isUserResolvableError(int)
com.google.firebase.auth.internal.zzbi: zzbi(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(java.lang.Boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
com.google.protobuf.DoubleArrayList: void ensureIndexInRange(int)
io.grpc.internal.ReflectionLongAdderCounter: boolean isAvailable()
io.flutter.plugins.googlemaps.MarkersController: void addMarker(java.lang.Object)
io.grpc.InternalLogId: InternalLogId(java.lang.String,java.lang.String,long)
com.google.protobuf.ArrayDecoders: int decodeStringListRequireUtf8(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.internal.firebase-auth-api.zzbf: java.lang.String zzb()
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
com.tekartik.sqflite.SqflitePlugin$BgResult$3: void run()
com.tekartik.sqflite.SqflitePlugin: void closeDatabase(com.tekartik.sqflite.Database)
com.google.protobuf.IntArrayList: java.lang.Object remove(int)
com.lyokone.location.MethodCallHandlerImpl: void enableBackgroundMode(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.auth.zzz: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.Context$ExecutableListener: void run()
com.google.firebase.auth.FirebaseAuth: void addAuthStateListener(com.google.firebase.auth.FirebaseAuth$AuthStateListener)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.util.Map serialize(java.lang.Object,com.google.firebase.firestore.util.CustomClassMapper$ErrorPath)
com.google.protobuf.SmallSortedMap$Entry: java.lang.Object setValue(java.lang.Object)
okio.ByteString: int hashCode()
com.google.android.gms.maps.model.zzm: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzdw: boolean zza(int)
io.grpc.internal.RetryPolicy: boolean equals(java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabd: zzabd(java.io.OutputStream,int)
com.google.android.gms.common.internal.BaseGmsClient: boolean hasConnectionInfo()
com.google.firebase.firestore.remote.RemoteEvent: java.util.Set getTargetMismatches()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
io.grpc.internal.CallTracer: void reportCallEnded(boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.lang.String getPreferencesStringValue(java.lang.String,java.lang.String)
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.Document getLastDocument()
kotlin.collections.EmptySet: void clear()
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter arrayContainsAny(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.firebase.firestore.util.ExponentialBackoff: void setTemporaryMaxDelay(long)
com.google.firebase.messaging.threads.PoolableExecutors$DefaultExecutorFactory: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory,com.google.firebase.messaging.threads.ThreadPriority)
com.google.firebase.encoders.proto.LengthCountingOutputStream: long getLength()
com.google.android.gms.internal.firebase-auth-api.zzhj: zzhj()
com.google.android.gms.maps.model.Marker: com.google.android.gms.maps.model.LatLng getPosition()
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.android.gms.internal.firebase-auth-api.zzmk: com.google.android.gms.internal.firebase-auth-api.zzmk zzb()
com.google.android.gms.common.api.internal.ApiKey: int hashCode()
io.grpc.internal.InternalSubchannel: io.grpc.internal.BackoffPolicy access$2202(io.grpc.internal.InternalSubchannel,io.grpc.internal.BackoffPolicy)
kotlin.collections.EmptyIterator: int previousIndex()
com.tekartik.sqflite.Database: void openReadOnly()
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object zze(java.lang.Comparable,java.lang.Object)
com.tekartik.sqflite.SqflitePlugin: com.tekartik.sqflite.Database getDatabaseOrError(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.SimpleArrayMap: void allocArrays(int)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
com.google.firebase.firestore.local.MemoryMutationQueue: int indexOfExistingBatchId(int,java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: java.lang.String registerEventChannel(java.lang.String,java.lang.String,io.flutter.plugin.common.EventChannel$StreamHandler)
okio.Segment: Segment(byte[],int,int,boolean,boolean)
com.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)
com.google.firebase.auth.FirebaseUser: FirebaseUser()
io.grpc.okhttp.OkHttpClientTransport$5: void run()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: java.util.Map getAll(java.lang.String,com.google.firebase.firestore.model.FieldIndex$IndexOffset,int)
io.grpc.internal.RetriableStream: void delayOrExecute(io.grpc.internal.RetriableStream$BufferEntry)
com.google.android.gms.internal.firebase-auth-api.zznw: void zzf(com.google.android.gms.internal.firebase-auth-api.zznw,int)
com.google.common.base.Splitter: com.google.common.base.Splitter on(com.google.common.base.CharMatcher)
com.google.firebase.firestore.local.MemoryTargetCache: void removeTargetData(com.google.firebase.firestore.local.TargetData)
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwt zzh(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,android.app.Activity,java.util.concurrent.Executor,java.lang.String)
com.google.android.gms.common.internal.zzd: zzd(com.google.android.gms.common.internal.BaseGmsClient,int)
com.google.android.gms.internal.firebase-auth-api.zzaei: java.lang.Object previous()
com.google.android.gms.internal.firebase-auth-api.zzdy: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: void setChangeListener(com.google.firebase.firestore.util.Listener)
com.google.android.gms.internal.firebase-auth-api.zzne: com.google.android.gms.internal.firebase-auth-api.zzne zzb(int)
io.flutter.plugins.googlemaps.GoogleMapController: void onStart(androidx.lifecycle.LifecycleOwner)
com.google.firebase.firestore.local.ReferenceSet: com.google.firebase.database.collection.ImmutableSortedSet referencesForId(int)
com.google.firebase.firestore.util.Logger: void doLog(com.google.firebase.firestore.util.Logger$Level,java.lang.String,java.lang.String,java.lang.Object[])
com.google.android.gms.internal.maps.zzy: void zzq(int)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzU(int)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.internal.firebase-auth-api.zzvf: zzvf(com.google.firebase.auth.PhoneMultiFactorInfo,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean)
com.tekartik.sqflite.SqflitePlugin$BgResult: void notImplemented()
com.google.protobuf.NioByteString: java.nio.ByteBuffer slice(int,int)
com.google.android.gms.internal.firebase-auth-api.zztp: void zzb(java.lang.Object)
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.MessageInfoFactory getDescriptorMessageInfoFactory()
com.google.android.gms.internal.firebase-auth-api.zzvo: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.protobuf.MessageSchema: boolean isFieldPresent(java.lang.Object,int)
io.grpc.internal.DelayedClientTransport: void reprocess(io.grpc.LoadBalancer$SubchannelPicker)
com.google.firebase.firestore.proto.MaybeDocument$Builder: com.google.firebase.firestore.proto.MaybeDocument$Builder setNoDocument(com.google.firebase.firestore.proto.NoDocument)
com.google.protobuf.CodedInputStream$ArrayDecoder: byte[] readRawBytes(int)
com.google.firebase.auth.internal.zzbl: com.google.android.gms.common.api.Status zza(android.content.Intent)
io.grpc.okhttp.internal.ConnectionSpec: java.util.List cipherSuites()
com.google.firebase.database.collection.RBTreeSortedMap: boolean containsKey(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzhn: zzhn()
io.grpc.internal.ManagedChannelImpl: void panic(java.lang.Throwable)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()
io.grpc.internal.DnsNameResolverProvider: boolean isAvailable()
com.google.protobuf.SmallSortedMap$DescendingEntrySet: SmallSortedMap$DescendingEntrySet(com.google.protobuf.SmallSortedMap)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
com.google.firebase.firestore.Blob: int compareTo(java.lang.Object)
com.google.firestore.v1.MapValue: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.internal.zzby: boolean isCompassEnabled()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.google.protobuf.CodedInputStream$StreamDecoder: int readSFixed32()
com.google.common.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)
com.google.protobuf.CodedOutputStreamWriter: void writeUInt32List(int,java.util.List,boolean)
androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)
com.google.protobuf.GeneratedMessageLite: boolean equals(java.lang.Object)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zzb()
androidx.lifecycle.LiveData: boolean hasActiveObservers()
io.grpc.okhttp.internal.framed.Hpack$Reader: int evictToRecoverBytes(int)
com.google.firebase.firestore.core.NotInFilter: NotInFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.android.gms.maps.model.PolylineOptions: float getWidth()
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions clickable(boolean)
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zzd()
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
com.tekartik.sqflite.SqflitePlugin$1: void run()
com.google.protobuf.MessageSchema: void readString(java.lang.Object,int,com.google.protobuf.Reader)
io.grpc.internal.InternalSubchannel: void scheduleBackoff(io.grpc.Status)
com.google.firebase.auth.internal.zzbm: com.google.android.gms.tasks.Task zzb()
kotlinx.coroutines.CoroutineName: java.lang.String toString()
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol valueOf(java.lang.String)
io.grpc.internal.ManagedChannelImpl: long access$2000(io.grpc.internal.ManagedChannelImpl)
io.grpc.internal.ClientCallImpl: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
com.google.android.gms.common.internal.GmsLogger: java.lang.String zza(java.lang.String)
kotlinx.coroutines.JobNode: boolean isActive()
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
com.google.protobuf.UnknownFieldSetLiteSchema: java.lang.Object merge(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType valueOf(java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.gms.internal.firebase-auth-api.zzar: void zza(com.google.android.gms.internal.firebase-auth-api.zzbh,com.google.android.gms.internal.firebase-auth-api.zzbj)
com.google.firebase.database.collection.ArraySortedMap$1: java.lang.Object next()
com.google.firebase.firestore.core.View: boolean shouldWaitForSyncedDocument(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.model.Document)
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: ConnectionTelemetryConfiguration(com.google.android.gms.common.internal.RootTelemetryConfiguration,boolean,boolean,int[],int,int[])
com.google.firebase.auth.internal.RecaptchaActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzj(int,long)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getExternalStoragePaths(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: void access$800(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor)
com.google.firebase.messaging.reporting.MessagingClientEvent: java.lang.String getPackageName()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: CodedInputStream$UnsafeDirectNioDecoder(java.nio.ByteBuffer,boolean,com.google.protobuf.CodedInputStream$1)
com.google.android.gms.internal.firebase-auth-api.zzfy: java.lang.Class zza()
io.grpc.okhttp.internal.framed.Hpack$Writer: void writeHeaders(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzP(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.android.gms.internal.firebase-auth-api.zzga: zzga(java.lang.Class)
io.grpc.internal.NoopClientStream: void setAuthority(java.lang.String)
io.grpc.internal.PickFirstLoadBalancer: void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$Subchannel getSubchannel()
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzu(int,java.util.List)
com.google.firebase.firestore.proto.MaybeDocument: void setHasCommittedMutations(boolean)
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzin zzc()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.protobuf.MessageSchema: double doubleAt(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzabb: int zzb()
com.google.firebase.firestore.core.SyncEngine: com.google.firebase.firestore.core.ViewSnapshot initializeViewAndComputeSnapshot(com.google.firebase.firestore.core.Query,int)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator valueOf(java.lang.String)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getFingerprint()
com.google.firebase.firestore.bundle.BundledQuery: BundledQuery(com.google.firebase.firestore.core.Target,com.google.firebase.firestore.core.Query$LimitType)
com.google.protobuf.ArrayDecoders: int decodePackedSInt32List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.internal.ManagedChannelImpl$1RequestConnection: void run()
io.grpc.internal.AbstractClientStream: io.grpc.internal.TransportTracer getTransportTracer()
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
io.grpc.internal.KeepAliveManager: KeepAliveManager(io.grpc.internal.KeepAliveManager$KeepAlivePinger,java.util.concurrent.ScheduledExecutorService,com.google.common.base.Stopwatch,long,long,boolean)
com.google.protobuf.CodedInputStream$StreamDecoder: java.lang.String readString()
com.google.android.gms.internal.firebase-auth-api.zzaao: zzaao(byte[],int,int)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$1: AsyncQueue$SynchronizedShutdownAwareExecutor$1(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor,int,java.util.concurrent.ThreadFactory,com.google.firebase.firestore.util.AsyncQueue)
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)
io.grpc.internal.ScParser: io.grpc.NameResolver$ConfigOrError parseServiceConfig(java.util.Map)
androidx.core.os.LocaleListCompatWrapper: java.lang.Object getLocaleList()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCanLaunch(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.google.firebase.firestore.local.SQLiteSchema: void dropLastLimboFreeSnapshotVersion()
com.google.common.collect.ImmutableCollection: void clear()
com.google.android.gms.maps.model.zzu: zzu(com.google.android.gms.maps.model.TileOverlayOptions,com.google.android.gms.maps.model.TileProvider)
io.grpc.protobuf.lite.ProtoLiteUtils: long copy(java.io.InputStream,java.io.OutputStream)
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.core.Transaction createTransaction()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbi zzw()
com.google.android.gms.internal.firebase-auth-api.zzme: boolean zzk()
com.google.android.gms.maps.GoogleMap: float getMinZoomLevel()
com.google.protobuf.UnsafeUtil: double getDouble(java.lang.Object,long)
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: UnsafeUtil$Android32MemoryAccessor(sun.misc.Unsafe)
com.squareup.okhttp.Headers: java.lang.String toString()
okio.Okio$4: Okio$4(java.net.Socket)
io.grpc.internal.KeepAliveManager: java.util.concurrent.ScheduledFuture access$302(io.grpc.internal.KeepAliveManager,java.util.concurrent.ScheduledFuture)
com.google.firebase.firestore.local.SQLitePersistence$1: void onRollback()
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: void cancel(java.lang.String,java.lang.Throwable)
com.google.firebase.auth.zzg: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzun: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzsh: void zzb(java.lang.Object)
io.grpc.okhttp.internal.framed.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)
kotlin.collections.EmptyMap: java.util.Set getKeys()
com.google.protobuf.SchemaUtil: void mergeUnknownFields(com.google.protobuf.UnknownFieldSchema,java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.Api$ApiOptions$NoOptions: Api$ApiOptions$NoOptions()
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler$1: void onVerificationCompleted(com.google.firebase.auth.PhoneAuthCredential)
com.google.android.gms.internal.firebase-auth-api.zzbi: com.google.android.gms.internal.firebase-auth-api.zzmw zzj(com.google.android.gms.internal.firebase-auth-api.zzmk,int)
com.google.android.gms.internal.firebase-auth-api.zzib: java.lang.String toString()
com.google.android.gms.common.api.internal.zap: void onStop()
com.google.android.gms.common.internal.zzo: void zzf(android.content.ServiceConnection,java.lang.String)
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
com.google.protobuf.ListFieldSchema: com.google.protobuf.ListFieldSchema full()
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zzb()
com.google.firestore.v1.StructuredQuery$Projection: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.RetriableStream$Sublistener$3: RetriableStream$Sublistener$3(io.grpc.internal.RetriableStream$Sublistener,io.grpc.internal.RetriableStream$Substream)
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: WebViewFlutterPlugin()
io.flutter.embedding.android.FlutterView: void init()
com.google.firebase.messaging.TopicsStore: boolean addTopicOperation(com.google.firebase.messaging.TopicOperation)
com.google.android.gms.safetynet.zzg: zzg()
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzlc zzb(int)
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzka zzc()
io.flutter.plugins.googlemaps.CircleController: void setVisible(boolean)
com.google.firebase.auth.GoogleAuthCredential: GoogleAuthCredential(java.lang.String,java.lang.String)
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable$1: void run()
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: void setIndexManager(com.google.firebase.firestore.local.IndexManager)
com.google.protobuf.RopeByteString: int getTreeDepth()
io.grpc.internal.DnsNameResolver$InternalResolutionResult: io.grpc.Status access$202(io.grpc.internal.DnsNameResolver$InternalResolutionResult,io.grpc.Status)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.firebase.firestore.remote.Datastore: boolean isPermanentError(com.google.firebase.firestore.FirebaseFirestoreException$Code)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Attributes getAttributes()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int)
io.grpc.okhttp.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzgz: zzgz(com.google.android.gms.internal.firebase-auth-api.zzgt,com.google.android.gms.internal.firebase-auth-api.zzgy)
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzx()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType)
com.google.firebase.auth.FirebaseAuthUserCollisionException: com.google.firebase.auth.FirebaseAuthUserCollisionException zzc(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzry: zzry(com.google.firebase.auth.UserProfileChangeRequest,java.lang.String)
com.google.firebase.firestore.local.SQLitePersistence: android.database.sqlite.SQLiteStatement prepare(java.lang.String)
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)
com.google.common.io.BaseEncoding$StandardBaseEncoding: void encodeTo(java.lang.Appendable,byte[],int,int)
com.google.android.gms.common.api.internal.zaq: java.lang.Object initialValue()
com.google.android.gms.internal.firebase-auth-api.zzacr: java.lang.String zzg(int)
io.perfmark.PerfMark: PerfMark()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: long parseTokenExpirationTimestamp(java.lang.String)
io.grpc.okhttp.OkHttpSettingsUtil: boolean isSet(io.grpc.okhttp.internal.framed.Settings,int)
com.google.android.gms.signin.internal.zag: com.google.android.gms.common.api.Status getStatus()
com.google.android.datatransport.runtime.firebase.transport.TimeWindow: com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder newBuilder()
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: GrpcUtil$AcceptEncodingMarshaller(io.grpc.internal.GrpcUtil$1)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeInfinityAscending()
com.google.firebase.firestore.proto.WriteBatch: void addBaseWrites(com.google.firestore.v1.Write)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.Map$Entry zzg(int)
com.google.protobuf.Utf8$DecodeUtil: boolean access$800(byte)
io.flutter.plugins.googlemaps.CircleBuilder: CircleBuilder(float)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
io.flutter.plugins.webviewflutter.DisplayListenerProxy: void onPostWebViewInitialization(android.hardware.display.DisplayManager)
com.google.android.gms.common.api.Status: java.lang.String zza()
com.google.firebase.firestore.model.Values: int compareMaps(com.google.firestore.v1.MapValue,com.google.firestore.v1.MapValue)
androidx.fragment.app.FragmentManagerImpl: boolean isStateAtLeast(int)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
com.google.android.gms.internal.location.zzbm: android.os.Looper zzc()
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)
io.grpc.CallOptions: io.grpc.CallOptions withMaxOutboundMessageSize(int)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions rotation(float)
com.google.protobuf.LazyField$LazyEntry: com.google.protobuf.LazyField getField()
com.google.android.gms.internal.location.zzl: android.os.IInterface getService()
com.google.protobuf.CodedInputStream$StreamDecoder: long readFixed64()
com.google.firestore.v1.ArrayValue$Builder: com.google.firestore.v1.ArrayValue$Builder removeValues(int)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.protobuf.DoubleArrayList: double setDouble(int,double)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $values()
com.google.android.gms.dynamite.DynamiteModule: boolean zze(android.database.Cursor)
com.google.firebase.auth.internal.zzaj: zzaj(java.util.List)
com.google.android.gms.tasks.zzp: void onSuccess(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzea: com.google.android.gms.internal.firebase-auth-api.zzga zza()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabr: void zzg(int)
io.grpc.internal.ReadableBuffers$1: void close()
com.google.protobuf.CodedOutputStream: int computeEnumSize(int,int)
com.google.firebase.firestore.model.TargetIndexMatcher: TargetIndexMatcher(com.google.firebase.firestore.core.Target)
com.google.protobuf.MessageSchema: int numberAt(int)
com.google.android.gms.internal.firebase-auth-api.zzrk: zzrk(com.google.firebase.auth.EmailAuthCredential)
io.grpc.internal.AbstractClientStream$TransportState: boolean isOutboundClosed()
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.LocationSettingsRequest$Builder addLocationRequest(com.google.android.gms.location.LocationRequest)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder: AutoProtoEncoderDoNotUseEncoder$TimeWindowEncoder()
com.google.firestore.v1.Document$Builder: com.google.firestore.v1.Document$Builder putAllFields(java.util.Map)
com.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)
com.baseflow.geolocator.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzaau: zzaau()
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzf(com.google.android.gms.internal.firebase-auth-api.zzyf,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument$Builder newBuilder()
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.firebase.firestore.index.OrderedCodeWriter: void seed(byte[])
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzqm: java.lang.String zzc()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.firebase.auth.internal.zzp: zzp(java.lang.String,java.lang.String,boolean)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.FieldInfo[] getFields()
kotlin.collections.EmptyList: java.util.List subList(int,int)
okio.Buffer: boolean isOpen()
io.grpc.internal.AbstractClientStream: void setDeadline(io.grpc.Deadline)
io.grpc.internal.OobChannel: io.grpc.ManagedChannel shutdown()
com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder: AutoProtoEncoderDoNotUseEncoder$ClientMetricsEncoder()
com.google.android.gms.internal.firebase-auth-api.zzaeg: boolean equals(java.lang.Object)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeUnsignedLongDescending(long)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: boolean isDartBackgroundHandlerRegistered()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
com.google.firebase.auth.internal.zzh: com.google.android.gms.internal.firebase-auth-api.zzzq zza(com.google.firebase.auth.AuthCredential,java.lang.String)
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
io.flutter.plugins.googlemaps.Convert: java.util.List toHoles(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvh: zzvh()
com.google.firestore.v1.StructuredQuery$Order$Builder: com.google.firestore.v1.StructuredQuery$Order$Builder setField(com.google.firestore.v1.StructuredQuery$FieldReference)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.ChannelLogger getChannelLogger()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient asGoogleApiClient()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$CollectionSelector getFrom(int)
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder: androidx.browser.customtabs.CustomTabColorSchemeParams build()
com.google.firestore.v1.StructuredQuery$FieldFilter: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.GeneratedMessageLite: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object)
io.grpc.internal.DelayedStream$5: DelayedStream$5(io.grpc.internal.DelayedStream,java.lang.String)
io.grpc.internal.RetriableStream$1RequestEntry: RetriableStream$1RequestEntry(io.grpc.internal.RetriableStream,int)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$Client zab(android.os.Looper,com.google.android.gms.common.api.internal.zabq)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void onInputConnectionLocked()
io.grpc.okhttp.internal.framed.Http2: int access$300(okio.BufferedSource)
com.google.android.gms.internal.firebase-auth-api.zzcg: zzcg(com.google.android.gms.internal.firebase-auth-api.zzbw,com.google.android.gms.internal.firebase-auth-api.zzcf)
io.grpc.InternalChannelz: void removeSubchannel(io.grpc.InternalInstrumented)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
com.google.android.gms.internal.firebase-auth-api.zzmp: zzmp()
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: java.util.Map getAll(com.google.firebase.firestore.model.ResourcePath,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
com.google.firebase.firestore.core.ActivityScope: java.lang.Object castFragment(java.lang.Class,java.lang.Object,java.lang.String)
com.google.firebase.auth.FirebaseAuth: void removeIdTokenListener(com.google.firebase.auth.FirebaseAuth$IdTokenListener)
com.google.android.gms.internal.firebase-auth-api.zzsq: zzsq(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
okio.Util: void checkOffsetAndCount(long,long,long)
androidx.activity.ComponentActivity: ComponentActivity()
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newFileIOExecutor()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions width(float)
com.google.protobuf.CodedInputStream$ArrayDecoder: com.google.protobuf.ByteString readBytes()
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
com.google.protobuf.Utf8$DecodeUtil: boolean access$400(byte)
com.google.android.gms.common.api.internal.zaad: void zac(com.google.android.gms.common.api.internal.BasePendingResult,boolean)
io.grpc.Codec$Gzip: java.io.OutputStream compress(java.io.OutputStream)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.DocumentDelete getDocumentDelete()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: boolean readBytesUntilZero()
io.grpc.okhttp.internal.Platform$3: Platform$3()
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction forNumber(int)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: boolean access$700(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task signInAnonymously()
com.google.firestore.bundle.BundledQuery: com.google.firestore.v1.StructuredQuery getStructuredQuery()
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zze()
okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.google.firebase.firestore.remote.RemoteStore$1: void onOpen()
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzw(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zad(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: void checkAvailable()
com.google.firebase.components.Dependency: Dependency(java.lang.Class,int,int)
com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.Feature[] zab(com.google.android.gms.common.api.internal.zabq)
com.google.firebase.firestore.local.TargetData: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzpu: void writeToParcel(android.os.Parcel,int)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
com.google.android.gms.common.internal.Objects: boolean equal(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzam: java.lang.Object get(int)
com.google.android.gms.maps.model.Marker: void setTitle(java.lang.String)
com.google.android.gms.location.zzj: int hashCode()
com.google.protobuf.IntArrayList: int indexOf(java.lang.Object)
io.grpc.internal.TransportTracer: TransportTracer()
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.messaging.Metadata,com.google.firebase.messaging.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)
io.grpc.internal.DelayedClientCall: void cancel(io.grpc.Status,boolean)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
io.grpc.NameResolverRegistry: io.grpc.NameResolver$Factory asFactory()
com.google.firebase.firestore.remote.RemoteEvent: java.util.Map getDocumentUpdates()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
com.google.android.gms.common.GooglePlayServicesUtilLight: void ensurePlayServicesAvailable(android.content.Context,int)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: boolean access$400(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.protobuf.CodedInputStreamReader: com.google.protobuf.ByteString readBytes()
com.google.firebase.firestore.bundle.BundleSerializer: void verifyNoSelect(org.json.JSONObject)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$1800(io.grpc.internal.ManagedChannelImpl)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.flutter.plugins.webviewflutter.CookieManagerHostApiImpl: void clearCookies(io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$Result)
io.grpc.internal.PickFirstLoadBalancerProvider: int getPriority()
com.google.protobuf.WireFormat: int makeTag(int,int)
com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(byte[])
com.google.protobuf.BinaryReader$SafeHeapReader: boolean skipField()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
com.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task,long,java.util.concurrent.TimeUnit)
com.google.firebase.auth.PhoneAuthOptions: android.app.Activity zza()
okio.RealBufferedSource: byte[] readByteArray(long)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.google.firebase.auth.ActionCodeUrl: com.google.firebase.auth.ActionCodeUrl parseLink(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()
com.google.firebase.firestore.core.Bound: boolean isInclusive()
com.google.android.gms.maps.model.Polyline: void setEndCap(com.google.android.gms.maps.model.Cap)
com.google.android.gms.maps.model.Marker: void setPosition(com.google.android.gms.maps.model.LatLng)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void data(boolean,int,okio.BufferedSource,int)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.local.QueryPurpose getPurpose()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
com.tekartik.sqflite.Database$1: void onCorruption(android.database.sqlite.SQLiteDatabase)
io.grpc.internal.SharedResourceHolder: java.lang.Object releaseInternal(io.grpc.internal.SharedResourceHolder$Resource,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzb: boolean zzi()
com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: TimeModule_UptimeClockFactory()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.grpc.protobuf.lite.ProtoInputStream: int available()
okio.AsyncTimeout$2: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzacc zzy()
com.baseflow.geolocator.permission.PermissionManager: boolean hasBackgroundAccess(java.lang.String[],int[])
io.grpc.Context$ExecutableListener: Context$ExecutableListener(java.util.concurrent.Executor,io.grpc.Context$CancellationListener,io.grpc.Context)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
io.grpc.internal.SharedResourcePool: io.grpc.internal.SharedResourcePool forResource(io.grpc.internal.SharedResourceHolder$Resource)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setInstanceId(java.lang.String)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.gms.internal.firebase-auth-api.zzqt: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
kotlin.collections.EmptyMap: int size()
com.google.android.gms.internal.firebase-auth-api.zzads: zzads()
com.google.android.gms.internal.firebase-auth-api.zzaek: int size()
com.tekartik.sqflite.operation.ExecuteOperation: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] values()
androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()
kotlin.random.RandomKt: int takeUpperBits(int,int)
com.google.android.gms.internal.maps.zzy: void zzt(java.util.List)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
com.google.firebase.auth.internal.zzk: com.google.firebase.auth.internal.zzk zza(android.content.Context,java.lang.String)
com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
io.grpc.InternalChannelz: void add(java.util.Map,io.grpc.InternalInstrumented)
com.google.android.gms.internal.firebase-auth-api.zzaaw: byte zza()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setIsRedirect(java.lang.Boolean)
com.lyokone.location.MethodCallHandlerImpl: void onServiceEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.google.protobuf.BinaryReader$SafeHeapReader: void readStringListRequireUtf8(java.util.List)
com.google.android.gms.internal.maps.zzv: void zzB()
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean)
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzd(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzzs,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzwx)
com.google.android.gms.internal.firebase-auth-api.zzmb: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzof: byte[] zzb(byte[],byte[])
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int writableWindow()
com.google.android.gms.common.GooglePlayServicesUtil: android.content.res.Resources getRemoteResource(android.content.Context)
com.google.protobuf.CodedInputStreamReader: int getFieldNumber()
io.grpc.internal.DelayedClientCall: void drainPendingCalls()
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport(io.grpc.internal.CallCredentialsApplyingTransportFactory,io.grpc.internal.ConnectionClientTransport,java.lang.String)
io.flutter.plugins.googlemaps.TileOverlayBuilder: com.google.android.gms.maps.model.TileOverlayOptions build()
com.google.android.gms.internal.firebase-auth-api.zzlt: int zza()
com.google.android.gms.internal.firebase-auth-api.zzdc: java.lang.String zzc()
com.google.firebase.auth.EmailAuthCredential: boolean zzh()
androidx.collection.SimpleArrayMap: int indexOfNull()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
io.flutter.plugins.googlemaps.TileOverlaysController: void changeTileOverlay(java.util.Map)
com.lyokone.location.FlutterLocationService: FlutterLocationService()
com.google.protobuf.UnsafeUtil: boolean determineAndroidSupportByAddressSize(java.lang.Class)
io.grpc.HttpConnectProxiedSocketAddress: io.grpc.HttpConnectProxiedSocketAddress$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zzacw: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
com.google.firebase.firestore.local.SQLiteSchema: void runSchemaUpgrades(int,int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: java.lang.String getMessage()
com.google.android.gms.internal.firebase-auth-api.zzsr: zzsr(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzqa: zzqa(java.lang.String,java.lang.String,java.lang.String)
com.google.protobuf.NioByteString: com.google.protobuf.CodedInputStream newCodedInput()
okio.AsyncTimeout: long remainingNanos(long)
com.google.android.gms.internal.firebase-auth-api.zzaar: com.google.android.gms.internal.firebase-auth-api.zzaau zzg(int,int)
com.google.protobuf.GeneratedMessageLite: boolean isInitialized()
io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String access$000(io.grpc.internal.AutoConfiguredLoadBalancerFactory)
com.google.android.gms.internal.firebase-auth-api.zzpg: java.lang.String zzb(com.google.android.gms.internal.firebase-auth-api.zzpg)
com.baseflow.geolocator.MethodCallHandlerImpl: MethodCallHandlerImpl(com.baseflow.geolocator.permission.PermissionManager,com.baseflow.geolocator.location.GeolocationManager,com.baseflow.geolocator.location.LocationAccuracyManager)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
com.google.firestore.bundle.BundledQuery: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl: void dispose(io.flutter.plugins.webviewflutter.JavaScriptChannel,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi$Reply)
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.grpc.internal.CompositeReadableBuffer$4: CompositeReadableBuffer$4()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.google.protobuf.MessageSchema: void setFieldPresent(java.lang.Object,int)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzk(java.lang.Object,int,com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getMessagingSenderId()
com.google.android.gms.cloudmessaging.zzp: zzp(int,int,android.os.Bundle)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeByteArrayNoTag(byte[],int,int)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
com.google.firebase.components.CycleDetector$Dep: int hashCode()
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: int compareTo(com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor)
com.google.android.datatransport.runtime.EventInternal: java.util.Map getMetadata()
io.grpc.internal.ReadableBuffers$BufferInputStream: ReadableBuffers$BufferInputStream(io.grpc.internal.ReadableBuffer)
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.core.SyncEngine createSyncEngine(com.google.firebase.firestore.core.ComponentProvider$Configuration)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
com.google.firebase.firestore.local.SQLiteTargetCache$TargetDataHolder: SQLiteTargetCache$TargetDataHolder(com.google.firebase.firestore.local.SQLiteTargetCache$1)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int getValue()
com.google.protobuf.RopeByteString: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
com.google.protobuf.FloatArrayList: java.lang.Object set(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzf: zzzf()
com.google.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
com.google.firebase.firestore.core.Target: java.lang.String toString()
com.google.common.base.Throwables: java.lang.Object getJLA()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView)
com.google.android.gms.internal.firebase-auth-api.zzbs: int hashCode()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadh: zzadh()
com.google.android.gms.internal.firebase-auth-api.zztl: zztl(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)
com.google.android.gms.common.api.Status: Status(int,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
com.google.android.gms.internal.firebase-auth-api.zzzh: java.lang.String zze()
com.google.protobuf.MessageSchema: int getUnknownFieldsSerializedSize(com.google.protobuf.UnknownFieldSchema,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjl: zzjl()
com.google.android.gms.location.zzaj: zzaj(int,int,long,long)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzn(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjn zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.common.api.internal.zabq: boolean zaN(boolean)
com.google.firebase.firestore.util.ThrottledForwardingExecutor: void execute(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzrf: zzrf()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: java.lang.String getLogSource()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.common.internal.zah: void onConnectionSuspended(int)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean isSameDateUtc(long,long)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$ParsedSetData toMergeData(com.google.firebase.firestore.model.ObjectValue)
com.google.protobuf.MessageSetSchema: int hashCode(java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
com.google.protobuf.ExtensionSchemaLite: void parseLengthPrefixedMessageSetItem(com.google.protobuf.Reader,java.lang.Object,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.FieldSet)
com.google.protobuf.RopeByteString$PieceIterator: com.google.protobuf.ByteString$LeafByteString getNextNonEmptyLeaf()
com.google.android.gms.internal.firebase-auth-api.zzfd: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.core.MemoryComponentProvider: com.google.firebase.firestore.local.Scheduler createGarbageCollectionScheduler(com.google.firebase.firestore.core.ComponentProvider$Configuration)
com.google.android.gms.internal.firebase-auth-api.zzaz: zzaz(com.google.android.gms.internal.firebase-auth-api.zzgb,java.lang.Class)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getModel()
com.google.android.gms.common.api.internal.zabs: com.google.android.gms.common.api.internal.ApiKey zab(com.google.android.gms.common.api.internal.zabs)
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.List getMutations()
com.google.android.gms.stats.zza: zza(com.google.android.gms.stats.WakeLock)
io.flutter.plugins.googlemaps.MarkerBuilder: void setZIndex(float)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzep: java.lang.String zzb(int)
com.google.firestore.v1.WriteRequest$Builder: WriteRequest$Builder(com.google.firestore.v1.WriteRequest$1)
com.google.android.gms.internal.firebase-auth-api.zzzo: zzzo()
com.google.android.gms.common.api.internal.zzb: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.common.internal.zan: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzmb: com.google.android.gms.internal.firebase-auth-api.zzmb zzb()
com.google.protobuf.Utf8: java.lang.String decodeUtf8(byte[],int,int)
com.google.protobuf.MessageSchema: void mergeMap(java.lang.Object,int,java.lang.Object,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Reader)
io.grpc.CallOptions: io.grpc.CallOptions withMaxInboundMessageSize(int)
com.google.android.gms.internal.firebase-auth-api.zzjr: zzjr()
com.google.firebase.messaging.FirebaseMessaging: void invokeOnTokenRefresh(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
com.google.android.gms.common.internal.zzai: zzai()
com.google.android.gms.internal.firebase-auth-api.zzhi: zzhi()
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
com.google.android.gms.common.internal.zze: zze(com.google.android.gms.common.internal.BaseGmsClient,int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData build()
io.grpc.internal.AbstractClientStream: io.grpc.internal.Framer framer()
com.google.android.gms.internal.firebase-auth-api.zzld: int zzg()
com.google.android.gms.internal.firebase-auth-api.zzaaw: long zzh()
com.google.android.gms.common.api.internal.zaae: void onResume()
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
io.grpc.internal.DelayedStream$DelayedStreamListener: void headersRead(io.grpc.Metadata)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.local.LocalDocumentsResult getNextDocuments(java.lang.String,com.google.firebase.firestore.model.FieldIndex$IndexOffset,int)
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite internalGetMutableLabels()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
com.google.android.gms.location.zzp: void zza(com.google.android.gms.internal.location.zzad)
com.google.android.gms.maps.zzb: void zzb(com.google.android.gms.internal.maps.zzx)
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: java.util.Map getOverlays(com.google.firebase.firestore.model.ResourcePath,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$CookieManagerHostApi$1: void success(java.lang.Object)
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
com.google.firestore.v1.DocumentDelete$Builder: DocumentDelete$Builder()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.google.firebase.firestore.util.Util: java.util.Map firstNEntries(java.util.Map,int,java.util.Comparator)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
com.google.android.gms.internal.safetynet.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.accounts.Account getAccount()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry newInstance(android.content.Context,java.lang.Object)
com.google.protobuf.BooleanArrayList: boolean setBoolean(int,boolean)
androidx.fragment.app.BackStackRecord: java.lang.String toString()
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: com.google.firestore.v1.Value applyToLocalView(com.google.firestore.v1.Value,com.google.firebase.Timestamp)
io.grpc.Metadata: byte[] valueAsBytes(int)
kotlinx.coroutines.channels.Closed: java.lang.String toString()
com.google.android.gms.maps.model.zzs: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.android.gms.internal.firebase-auth-api.zzww: com.google.android.gms.tasks.Task zzP(com.google.android.gms.internal.firebase-auth-api.zzwv)
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest build()
com.tekartik.sqflite.SqflitePlugin: void onUpdateCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)
com.google.android.datatransport.runtime.AutoValue_SendRequest: boolean equals(java.lang.Object)
androidx.activity.ComponentActivity: void onBackPressed()
io.grpc.ChannelLogger: ChannelLogger()
com.google.common.collect.AbstractIndexedListIterator: int nextIndex()
com.google.firebase.firestore.proto.Target: com.google.firestore.v1.Target$DocumentsTarget getDocuments()
com.google.android.gms.cloudmessaging.zzh: void run()
com.tekartik.sqflite.Database: android.database.sqlite.SQLiteDatabase getReadableDatabase()
com.google.firebase.firestore.util.Util: void diffCollections(java.util.Iterator,java.util.Iterator,java.util.Comparator,com.google.firebase.firestore.util.Consumer,com.google.firebase.firestore.util.Consumer)
com.google.protobuf.UnmodifiableLazyStringList: void add(com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzdk: void zzc(int[])
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.firebase.auth.FirebaseAuth: void zzE(com.google.firebase.auth.FirebaseUser,com.google.android.gms.internal.firebase-auth-api.zzyq,boolean)
com.google.android.gms.internal.firebase-auth-api.zzal: com.google.android.gms.internal.firebase-auth-api.zzao zzh(int)
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
com.google.firebase.firestore.local.MemoryMutationQueue: java.util.List getAllMutationBatches()
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientStream access$100(io.grpc.internal.ClientCallImpl)
com.google.android.gms.internal.firebase-auth-api.zzul: java.lang.String zza()
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzt(java.lang.Object,byte[],int,int,int,long,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.android.gms.internal.firebase-auth-api.zzdm: byte[] zza(byte[],byte[],byte[])
com.lyokone.location.LocationPlugin: void onDetachedFromActivityForConfigChanges()
com.google.common.base.Strings: java.lang.String lenientToString(java.lang.Object)
com.google.firebase.firestore.model.Values: int compareNumbers(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzmh: com.google.android.gms.internal.firebase-auth-api.zzmh zze()
com.google.android.gms.internal.location.zzaz: void zza(com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzaj)
com.google.android.gms.cloudmessaging.zzg: zzg(com.google.android.gms.cloudmessaging.zzm)
io.grpc.internal.GrpcUtil$5: java.lang.Object get()
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder setUpdate(com.google.firestore.v1.Document)
com.google.protobuf.BooleanArrayList: java.lang.Object remove(int)
com.google.android.gms.internal.firebase-auth-api.zzpt: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzf(long[],long[],long)
com.google.firestore.v1.DocumentRemove$Builder: DocumentRemove$Builder()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: LogSourceMetrics(java.lang.String,java.util.List)
com.google.firestore.v1.ListenRequest: ListenRequest()
com.google.firebase.firestore.model.DocumentSet: boolean isEmpty()
com.baseflow.geolocator.GeolocatorPlugin: GeolocatorPlugin()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
com.google.android.gms.common.internal.zza: void zzc()
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
com.google.type.LatLng$Builder: LatLng$Builder(com.google.type.LatLng$1)
com.google.android.gms.internal.firebase-auth-api.zztb: zztb(com.google.android.gms.internal.firebase-auth-api.zztx,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
androidx.fragment.app.FragmentManagerImpl: void dispatchStop()
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedSet unionWith(com.google.firebase.database.collection.ImmutableSortedSet)
com.google.firebase.firestore.core.Target: java.util.List getArrayValues(com.google.firebase.firestore.model.FieldIndex)
com.google.firebase.messaging.CommonNotificationBuilder: android.content.Intent createTargetIntent(java.lang.String,com.google.firebase.messaging.NotificationParams,android.content.pm.PackageManager)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: void handleNameResolutionError(io.grpc.Status)
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zau(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzc()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent build()
com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.MessageLite)
com.lyokone.location.FlutterLocation$1: FlutterLocation$1(com.lyokone.location.FlutterLocation)
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
com.google.android.gms.internal.firebase-auth-api.zzpw: java.lang.String zza()
com.google.android.gms.location.zzj: zzj(boolean,long,float,long,int)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport: void maybeShutdown()
com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)
com.google.protobuf.ManifestSchemaFactory: ManifestSchemaFactory(com.google.protobuf.MessageInfoFactory)
com.google.firebase.firestore.core.UserData$ParseAccumulator: boolean contains(com.google.firebase.firestore.model.FieldPath)
com.google.firebase.auth.MultiFactorInfo: MultiFactorInfo()
com.google.android.gms.internal.firebase-auth-api.zzkd: com.google.android.gms.internal.firebase-auth-api.zzkd zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: FlutterToastPlugin()
com.google.common.collect.Maps$EntryFunction: Maps$EntryFunction(java.lang.String,int,com.google.common.collect.Maps$1)
com.google.android.gms.signin.internal.zal: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
com.google.protobuf.MessageSetSchema: void mergeFrom(java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider: void onIdTokenChanged()
com.google.protobuf.WireFormat$FieldType$4: WireFormat$FieldType$4(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)
com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks: void onCodeSent(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
com.google.android.gms.internal.firebase-auth-api.zzaaw: void zzm(int)
com.google.android.gms.internal.firebase-auth-api.zzaek: zzaek(com.google.android.gms.internal.firebase-auth-api.zzack)
com.google.firebase.auth.zzm: void run()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
com.google.android.gms.common.api.internal.zaae: void zad(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.ApiKey)
com.google.firebase.auth.internal.GenericIdpActivity: void onNewIntent(android.content.Intent)
com.google.common.collect.Sets: boolean equalsImpl(java.util.Set,java.lang.Object)
com.google.protobuf.MessageSchema: void writeFieldsInAscendingOrderProto3(java.lang.Object,com.google.protobuf.Writer)
okio.SegmentedByteString: int size()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
com.google.firestore.v1.DocumentChange: java.util.List getTargetIdsList()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzqb: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.safetynet.zza: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zzc(android.content.Context,android.content.Intent)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebSettingsHostApiCodec: GeneratedAndroidWebView$WebSettingsHostApiCodec()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.google.android.gms.tasks.zzm: void run()
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzkz zza(com.google.android.gms.internal.firebase-auth-api.zzku)
com.google.protobuf.ByteString$1: boolean hasNext()
com.google.protobuf.Timestamp$Builder: Timestamp$Builder(com.google.protobuf.Timestamp$1)
com.google.firebase.installations.AutoValue_InstallationTokenResult: AutoValue_InstallationTokenResult(java.lang.String,long,long)
io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall newClientCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.Map zzh(com.google.android.gms.internal.firebase-auth-api.zzaeb)
com.google.firebase.messaging.Store$Token: com.google.firebase.messaging.Store$Token parse(java.lang.String)
com.google.android.gms.maps.MapView: void onSaveInstanceState(android.os.Bundle)
com.google.protobuf.Protobuf: void mergeFrom(java.lang.Object,com.google.protobuf.Reader,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.internal.firebase-auth-api.zzzx: boolean zzg()
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String getPhoneNumber()
com.google.firebase.messaging.ProxyNotificationInitializer: boolean allowedToUse(android.content.Context)
com.google.android.gms.internal.location.zza: android.os.Parcel transactAndReadException(int,android.os.Parcel)
com.google.android.gms.common.internal.BaseGmsClient: void checkConnected()
com.google.android.gms.internal.firebase-auth-api.zzba: com.google.android.gms.internal.firebase-auth-api.zzax zza(java.lang.Class)
com.google.android.gms.common.internal.zzn: android.content.ComponentName zzb()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInWithCredential(java.util.Map)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.google.android.gms.internal.auth-api-phone.zzb: android.os.Parcel zza()
io.flutter.plugins.googlemaps.PolylineController: void setConsumeTapEvents(boolean)
com.google.android.gms.internal.firebase-auth-api.zzabh: int hashCode()
io.grpc.Context$CancellableContext$1: void cancelled(io.grpc.Context)
com.squareup.okhttp.internal.http.StatusLine: java.lang.String toString()
com.google.firestore.v1.Value: void setNullValue(com.google.protobuf.NullValue)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer slice(long,long)
io.grpc.internal.JndiResourceResolverFactory: JndiResourceResolverFactory()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzM(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
io.grpc.okhttp.internal.CipherSuite: CipherSuite(java.lang.String,int,java.lang.String,int,int,int,int)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.grpc.okhttp.OkHttpChannelBuilder$1: java.util.concurrent.Executor create()
com.google.android.gms.common.logging.Logger: void e(java.lang.String,java.lang.Throwable,java.lang.Object[])
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
com.google.android.gms.internal.firebase-auth-api.zzacs: boolean zzc(java.lang.Class)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerImpl: DownloadListenerHostApiImpl$DownloadListenerImpl(io.flutter.plugins.webviewflutter.DownloadListenerFlutterApiImpl)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setSupportZoom(java.lang.Long,java.lang.Boolean)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager access$100(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzA(int,int)
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzf()
io.grpc.internal.AbstractClientStream: io.grpc.internal.AbstractStream$TransportState transportState()
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzh(long[],long[],long[])
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(android.app.Activity)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
com.google.firebase.firestore.remote.AbstractStream: void access$200(com.google.firebase.firestore.remote.AbstractStream)
com.google.firebase.Timestamp: int hashCode()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext add(com.google.firebase.encoders.FieldDescriptor,boolean,boolean)
com.google.protobuf.DoubleArrayList: DoubleArrayList(double[],int)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzo(java.lang.Object,long,double)
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzq zzf(android.content.Context)
com.google.firebase.firestore.FirebaseFirestoreSettings$Builder: com.google.firebase.firestore.FirebaseFirestoreSettings$Builder setSslEnabled(boolean)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi: GeneratedAndroidWebView$JavaScriptChannelFlutterApi(io.flutter.plugin.common.BinaryMessenger)
com.google.firebase.firestore.model.mutation.MutationBatch: java.lang.String toString()
com.google.android.gms.tasks.zzj: void zzc()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.firebase.firestore.local.LocalStore: java.util.Set getKeysWithTransformResults(com.google.firebase.firestore.model.mutation.MutationBatchResult)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzO(byte)
com.google.android.gms.internal.location.zzbd: com.google.android.gms.internal.location.zzbd zza(com.google.android.gms.location.LocationRequest)
com.google.android.gms.internal.firebase-auth-api.zzgi: com.google.android.gms.internal.firebase-auth-api.zzgi zza()
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$FieldFilter getFieldFilter()
com.google.android.gms.internal.safetynet.zzk$zzb: com.google.android.gms.common.api.Result createFailedResult(com.google.android.gms.common.api.Status)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void onUserSignOut(com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onDetachedFromActivity()
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.internal.KeepAliveManager$2: void run()
io.grpc.internal.NoopClientStream: void setDeadline(io.grpc.Deadline)
com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)
io.grpc.PartialForwardingClientCall: java.lang.String toString()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.gms.internal.firebase-auth-api.zzyz: zzyz()
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziw zzd()
com.google.protobuf.UnsafeUtil: void putObject(java.lang.Object,long,java.lang.Object)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: java.lang.String readStringRequireUtf8()
com.google.protobuf.NioByteString: int size()
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzma zzb(int)
com.google.protobuf.SmallSortedMap$EntrySet: java.util.Iterator iterator()
io.grpc.internal.ContextRunnable: ContextRunnable(io.grpc.Context)
com.google.firebase.firestore.local.SQLitePersistence$Query: SQLitePersistence$Query(android.database.sqlite.SQLiteDatabase,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvm: zzvm(com.google.firebase.auth.UserProfileChangeRequest)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setReferenceValue(java.lang.String)
kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl: WebViewClientHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCreator,io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl)
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
com.google.android.gms.internal.firebase-auth-api.zzyp: zzyp()
androidx.fragment.app.FragmentManagerImpl: void dispatchPause()
io.flutter.plugins.webviewflutter.JavaScriptChannel: JavaScriptChannel(io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl,java.lang.String,android.os.Handler)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
com.google.android.gms.internal.firebase-auth-api.zzmu: com.google.android.gms.internal.firebase-auth-api.zzmu zzc(int)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
com.tekartik.sqflite.operation.BatchOperation: void handleSuccess(java.util.List)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: DownstreamExceptionElement(java.lang.Throwable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
io.grpc.okhttp.internal.framed.Http2$Writer: int maxDataLength()
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSeverity(io.grpc.InternalChannelz$ChannelTrace$Event$Severity)
io.grpc.internal.ManagedChannelImpl$5: void cancel(java.lang.String,java.lang.Throwable)
io.grpc.NameResolver$ResolutionResult$Builder: NameResolver$ResolutionResult$Builder()
com.google.firebase.database.collection.LLRBNode$Color: LLRBNode$Color(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzaaj: boolean contains(java.lang.Object)
io.grpc.internal.AbstractStream: void onSendingBytes(int)
io.grpc.okhttp.internal.framed.Settings: io.grpc.okhttp.internal.framed.Settings set(int,int,int)
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
com.google.android.gms.dynamite.zza: zza(java.lang.ThreadGroup,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzt(java.lang.Object,long)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$UnaryFilter: StructuredQuery$UnaryFilter()
io.grpc.internal.ForwardingDeframerListener: void deframeFailed(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzz(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzs(int,java.util.List,boolean)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
io.grpc.internal.ManagedChannelImpl$RealChannel: void shutdownNow()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzh(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean access$200(com.google.firebase.firestore.FirebaseFirestoreSettings)
kotlin.KotlinVersion: KotlinVersion(int,int,int)
io.perfmark.Tag: Tag(java.lang.String,long)
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzacb zzE(int)
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase getTransformTypeCase()
com.google.android.gms.internal.firebase-auth-api.zzaeq: boolean zzd(byte)
com.google.firebase.firestore.bundle.BundledDocumentMetadata: BundledDocumentMetadata(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.SnapshotVersion,boolean,java.util.List)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] values()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzka: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.protobuf.CodedOutputStreamWriter: void writeBytes(int,com.google.protobuf.ByteString)
com.google.android.gms.maps.internal.zzas: zzas()
com.google.firebase.firestore.model.mutation.SetMutation: void applyToRemoteDocument(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.MutationResult)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
io.flutter.plugins.googlemaps.PolygonController: void setStrokeColor(int)
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder: com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String)
com.google.android.gms.internal.safetynet.zzl: zzl(com.google.android.gms.common.api.GoogleApiClient,byte[],java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: FlutterFirebaseMessagingStore()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.google.android.gms.internal.firebase-auth-api.zzmb: int zzd()
io.grpc.Status$Code: int value()
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
com.google.protobuf.MapFieldSchemaLite: MapFieldSchemaLite()
io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$100(io.grpc.internal.SharedResourceHolder)
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzin zze()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityStateInfo access$100(io.grpc.internal.InternalSubchannel)
okio.SegmentedByteString: int hashCode()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object runCriticalSection(com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection)
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzld zze()
com.google.firebase.firestore.local.MemoryPersistence: java.lang.Object runTransaction(java.lang.String,com.google.firebase.firestore.util.Supplier)
com.google.common.base.Stopwatch: com.google.common.base.Stopwatch reset()
com.google.firebase.auth.FirebaseAuthException: FirebaseAuthException(java.lang.String,java.lang.String)
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleElement decodeBundleElement(java.lang.String)
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task subscribeToTopic(java.lang.String)
com.google.android.gms.maps.model.Marker: void setZIndex(float)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: void onNewToken(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: AutoValue_ClientInfo(com.google.android.datatransport.cct.internal.ClientInfo$ClientType,com.google.android.datatransport.cct.internal.AndroidClientInfo)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.String createString(android.os.Parcel,int)
com.google.firebase.firestore.LoadBundleTask: java.lang.Object getResult()
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzgt zzb(com.google.android.gms.internal.firebase-auth-api.zzfy)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.model.SnapshotVersion decodeSnapshotVersion(java.lang.Object)
io.flutter.plugins.googlemaps.PolylineController: void setZIndex(float)
com.google.protobuf.ByteString: java.util.Iterator iterator()
com.google.firebase.firestore.local.SQLiteBundleCache: void saveNamedQuery(com.google.firebase.firestore.bundle.NamedQuery)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzf(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzacc,com.google.android.gms.internal.firebase-auth-api.zzaah)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.grpc.okhttp.AsyncSink$2: AsyncSink$2(io.grpc.okhttp.AsyncSink)
com.google.android.datatransport.runtime.AutoValue_EventInternal: boolean equals(java.lang.Object)
io.grpc.okhttp.OkHttpChannelProvider: boolean isAvailable()
io.grpc.InternalLogId: long getNextId()
com.google.android.gms.internal.firebase-auth-api.zzacd: int zzd(int,byte[],int,int)
com.google.protobuf.UnknownFieldSetLiteSchema: void writeAsMessageSetTo(com.google.protobuf.UnknownFieldSetLite,com.google.protobuf.Writer)
com.google.android.gms.maps.internal.zzg: void setMinZoomPreference(float)
com.google.android.gms.maps.internal.zzca: java.lang.Object zzd(java.lang.Class)
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
io.grpc.internal.InternalSubchannel$CallTracingTransport$1: InternalSubchannel$CallTracingTransport$1(io.grpc.internal.InternalSubchannel$CallTracingTransport,io.grpc.internal.ClientStream)
com.google.firebase.firestore.model.ServerTimestamps: boolean isServerTimestamp(com.google.firestore.v1.Value)
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: void resetToast$lambda-1(io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl)
com.google.firebase.firestore.local.IndexBackfiller: long access$000()
com.google.android.gms.internal.firebase-auth-api.zznp: zznp()
androidx.window.embedding.ActivityStack: java.lang.String toString()
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setContext(android.content.Context)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
com.google.android.gms.internal.firebase-auth-api.zzuz: void zzb()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.android.gms.common.api.internal.zact: void zae(com.google.android.gms.common.api.internal.zacs)
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaau: int zzl(int,int,int)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext internalAdd(java.lang.String,java.lang.Object)
io.grpc.Metadata: int len()
io.grpc.internal.ServiceConfigUtil: java.lang.Double getBackoffMultiplierFromRetryPolicy(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzmd: zzmd(com.google.android.gms.internal.firebase-auth-api.zzmc)
com.google.firebase.firestore.remote.Datastore: com.google.firebase.firestore.remote.RemoteSerializer access$000(com.google.firebase.firestore.remote.Datastore)
com.google.android.gms.location.LocationSettingsResponse: com.google.android.gms.location.LocationSettingsStates getLocationSettingsStates()
io.grpc.internal.Rescheduler: java.util.concurrent.Executor access$200(io.grpc.internal.Rescheduler)
com.google.firebase.auth.internal.zzu: java.lang.Object createFromParcel(android.os.Parcel)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.android.gms.internal.auth-api-phone.zzk: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
io.grpc.Metadata$TrustedAsciiKey: java.lang.Object parseBytes(byte[])
androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)
com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()
com.google.android.gms.cloudmessaging.zzv: zzv()
com.google.firebase.firestore.proto.WriteBatch: void setBatchId(int)
io.grpc.internal.DelayedStream$7: DelayedStream$7(io.grpc.internal.DelayedStream)
com.google.android.gms.signin.SignInOptions: boolean equals(java.lang.Object)
io.grpc.internal.GrpcUtil$Http2Error: GrpcUtil$Http2Error(java.lang.String,int,int,io.grpc.Status)
com.google.firebase.heartbeatinfo.DefaultHeartBeatController: com.google.firebase.components.Component component()
com.google.android.gms.internal.maps.zzj: void zzq(int)
com.google.android.gms.common.logging.Logger: void v(java.lang.String,java.lang.Object[])
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] values()
com.google.android.gms.internal.firebase-auth-api.zzact: com.google.android.gms.internal.firebase-auth-api.zzacz zzb(java.lang.Class)
com.google.firebase.firestore.remote.WatchChangeAggregator: void recordPendingTargetRequest(int)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setRequestTimeMs(long)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse$ResponseTypeCase getResponseTypeCase()
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzd(com.google.firebase.auth.ActionCodeSettings$Builder)
com.google.firebase.auth.MultiFactorSession: MultiFactorSession()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarint()
com.google.android.datatransport.runtime.TransportContext$Builder: TransportContext$Builder()
com.google.firebase.firestore.core.View$DocumentChanges: View$DocumentChanges(com.google.firebase.firestore.model.DocumentSet,com.google.firebase.firestore.core.DocumentViewChangeSet,com.google.firebase.database.collection.ImmutableSortedSet,boolean,com.google.firebase.firestore.core.View$1)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
com.google.android.gms.common.util.Base64Utils: byte[] decodeUrlSafe(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: WebViewHostApiImpl$WebViewPlatformView(android.content.Context)
io.grpc.internal.RetriableStream$1DecompressorRegistryEntry: RetriableStream$1DecompressorRegistryEntry(io.grpc.internal.RetriableStream,io.grpc.DecompressorRegistry)
com.google.android.gms.internal.firebase-auth-api.zzaba: zzaba(int)
com.google.firebase.firestore.local.TargetData: TargetData(com.google.firebase.firestore.core.Target,int,long,com.google.firebase.firestore.local.QueryPurpose,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.SnapshotVersion,com.google.protobuf.ByteString)
androidx.fragment.app.Fragment: void performPause()
io.grpc.LoadBalancer$ResolvedAddresses: java.lang.String toString()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse fromMap(java.util.Map)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()
com.google.android.gms.internal.firebase-auth-api.zzou: java.lang.Object zza(java.lang.String,java.security.Provider)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode rotateRight()
io.perfmark.Impl: void stopTask(java.lang.String,io.perfmark.Tag)
androidx.fragment.app.Fragment: void callStartTransitionListener()
com.google.android.gms.maps.model.Polygon: void setGeodesic(boolean)
com.google.firebase.firestore.remote.GrpcCallProvider: com.google.android.gms.tasks.Task createClientCall(io.grpc.MethodDescriptor)
com.google.android.gms.internal.firebase-auth-api.zzdg: com.google.android.gms.internal.firebase-auth-api.zzga zza()
androidx.fragment.app.FragmentManagerImpl: boolean checkForMenus()
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.WriteResult getWriteResults(int)
com.google.firebase.auth.internal.zzw: java.lang.String zzb()
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int spaceLeft()
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: AutoValue_LogResponse(long)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.RemoteDocumentCache getRemoteDocumentCache()
com.google.protobuf.BooleanArrayList: void add(int,java.lang.Object)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
com.google.android.gms.internal.firebase-auth-api.zzaeh: java.lang.Object zzc(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaby: int zze(int)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String)
kotlin.coroutines.CombinedContext: int hashCode()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: void setErrorCode(java.lang.Long)
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzn(java.lang.String)
com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader getUploader()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.gms.internal.firebase-auth-api.zzyq: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getWriteMethod()
io.grpc.okhttp.internal.framed.Hpack$Writer: void writeInt(int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzc(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.remote.RemoteStore$1: void onClose(io.grpc.Status)
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
com.google.android.gms.internal.firebase-auth-api.zzabx: java.lang.String toString()
com.google.firebase.messaging.ByteStreams: java.io.InputStream limit(java.io.InputStream,long)
io.flutter.plugins.googlemaps.PolygonController: void setVisible(boolean)
com.google.common.base.Java8Usage: java.lang.String performCheck()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
com.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)
com.google.firebase.firestore.model.mutation.PatchMutation: boolean equals(java.lang.Object)
io.github.ponnamkarthik.toast.fluttertoast.FlutterToastPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.common.internal.zzb: void zza(android.os.Message)
io.grpc.internal.DnsNameResolver$InternalResolutionResult: DnsNameResolver$InternalResolutionResult()
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: java.util.Map getOverlays(java.lang.String,int,int)
com.google.android.gms.common.api.internal.zzd: void onCreate(android.os.Bundle)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.google.firebase.firestore.local.EncodedPath: void encodeSegment(java.lang.String,java.lang.StringBuilder)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task getAccessToken(boolean)
com.google.firebase.firestore.local.TargetData: int getTargetId()
com.google.firebase.firestore.util.FileUtil$LegacyFileDeleter: void delete(java.io.File)
com.google.android.gms.internal.firebase-auth-api.zzbh: zzbh(com.google.android.gms.internal.firebase-auth-api.zzmx)
com.google.android.gms.internal.firebase-auth-api.zzzw: zzzw(java.lang.String,java.lang.String,java.lang.String)
kotlin.collections.EmptyIterator: boolean hasNext()
com.google.firebase.firestore.local.MemoryTargetCache: MemoryTargetCache(com.google.firebase.firestore.local.MemoryPersistence)
com.google.android.gms.internal.firebase-auth-api.zzbq: java.lang.Object zzc()
com.google.android.gms.common.api.internal.BasePendingResult: void zab(com.google.android.gms.common.api.Result)
io.grpc.StreamTracer: void outboundMessage(int)
com.google.android.gms.internal.maps.zzab: int zzh()
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean getMethodInvocationTelemetryEnabled()
io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer access$200()
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzb(com.google.android.gms.internal.firebase-auth-api.zzxx,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzit zzb()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwt zzf(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.model.ObjectValue: com.google.firebase.firestore.model.ObjectValue clone()
com.google.android.gms.internal.firebase-auth-api.zzgi: void zzc(com.google.android.gms.internal.firebase-auth-api.zzfy)
com.google.firebase.firestore.local.LocalDocumentsView: java.util.Map recalculateAndSaveOverlays(java.util.Map)
com.google.android.gms.dynamite.DynamiteModule: android.content.Context getModuleContext()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.google.firebase.messaging.TopicsSyncTask: boolean isDeviceConnected()
com.google.protobuf.ArrayDecoders: int decodePackedFloatList(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int)
kotlinx.coroutines.NodeList: NodeList()
com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap newFieldMap(int)
com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.UserDataReader getUserDataReader()
com.google.firebase.auth.zzai: zzai()
com.google.firebase.auth.GoogleAuthCredential: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(com.google.firebase.auth.GoogleAuthCredential,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzcr: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.InternalLogId: java.lang.String toString()
com.google.android.gms.common.api.internal.BackgroundDetector: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.internal.auth-api-phone.zzv: zzv(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.protobuf.UnsafeUtil$MemoryAccessor: long getLong(java.lang.Object,long)
com.google.protobuf.LongArrayList: java.lang.Object get(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void setCallbackDispatcher(long)
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannel build()
com.google.protobuf.LazyField$LazyIterator: java.util.Map$Entry next()
com.google.android.gms.internal.firebase-auth-api.zzli: void zze(com.google.android.gms.internal.firebase-auth-api.zzli,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageSetExtension(int,com.google.protobuf.MessageLite)
io.grpc.InternalConfigSelector$Result: java.lang.Object getConfig()
io.grpc.internal.DelayedStream: void drainPendingCalls()
io.grpc.internal.ManagedChannelImpl$RealChannel$3: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher()
com.google.common.math.MathPreconditions: void checkNoOverflow(boolean,java.lang.String,long,long)
com.google.protobuf.UnsafeUtil: boolean access$700(java.lang.Object,long)
io.grpc.internal.PickFirstLoadBalancer: void handleNameResolutionError(io.grpc.Status)
com.google.android.gms.common.internal.zzb: void handleMessage(android.os.Message)
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.firebase.firestore.core.Query: boolean hasLimit()
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzh()
com.google.android.gms.internal.firebase-auth-api.zzzi: zzzi(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.grpc.Status$StatusMessageMarshaller: boolean isEscapingChar(byte)
com.google.android.gms.common.api.internal.zap: void zad()
com.google.protobuf.CodedInputStream$ArrayDecoder: long readSFixed64()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
com.google.android.gms.tasks.zzh: java.lang.Object zzb(com.google.android.gms.tasks.zzh)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver: AndroidConnectivityMonitor$NetworkReceiver(com.google.firebase.firestore.remote.AndroidConnectivityMonitor,com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1)
io.grpc.internal.ContextRunnable: void run()
io.grpc.internal.TransportTracer: TransportTracer(io.grpc.internal.TimeProvider)
com.google.firebase.firestore.model.DatabaseId: int compareTo(com.google.firebase.firestore.model.DatabaseId)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.google.android.gms.maps.model.MarkerOptions: float getAlpha()
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.os.Handler getHandler()
io.flutter.plugins.googlemaps.GoogleMapController: void destroyMapViewIfNecessary()
com.google.firebase.messaging.RemoteMessage: int getTtl()
com.google.common.primitives.Ints: int saturatedCast(long)
com.google.android.gms.common.api.zad: void run()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.firebase.auth.internal.zzx zzN(com.google.firebase.FirebaseApp,com.google.android.gms.internal.firebase-auth-api.zzyj)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8(int,byte[],int,int)
com.google.android.gms.maps.model.Polyline: java.lang.String getId()
com.google.android.gms.internal.firebase-auth-api.zzaaz: boolean zzN()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.google.android.gms.common.SupportErrorDialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.google.android.gms.internal.firebase-auth-api.zzmw: void zze(com.google.android.gms.internal.firebase-auth-api.zzmw,com.google.android.gms.internal.firebase-auth-api.zzmk)
com.google.firebase.messaging.TopicOperation: java.lang.String getOperation()
com.google.firebase.firestore.model.mutation.Precondition: java.lang.Boolean getExists()
com.google.firebase.auth.zzaj: java.lang.Object[] newArray(int)
com.google.firebase.firestore.model.mutation.MutationResult: MutationResult(com.google.firebase.firestore.model.SnapshotVersion,java.util.List)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.lyokone.location.BackgroundNotification: int getDrawableId(java.lang.String)
com.google.android.gms.common.api.internal.zabs: com.google.android.gms.common.Feature zaa(com.google.android.gms.common.api.internal.zabs)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: com.google.android.gms.tasks.Task getToken()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: LoadBundleTaskProgress$TaskState(java.lang.String,int)
com.google.android.gms.internal.maps.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
com.google.android.gms.maps.zzy: zzy(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapClickListener)
com.google.android.gms.internal.firebase-auth-api.zzoa: zzoa()
io.grpc.LoadBalancer$PickResult: java.lang.String toString()
com.google.firebase.firestore.SetOptions: com.google.firebase.firestore.SetOptions merge()
com.google.firebase.messaging.RemoteMessage$Notification: RemoteMessage$Notification(com.google.firebase.messaging.NotificationParams,com.google.firebase.messaging.RemoteMessage$1)
com.google.protobuf.CodedInputStream$ArrayDecoder: void skipMessage()
io.flutter.plugins.googlemaps.TileOverlaysController: void changeTileOverlays(java.util.List)
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable: RetriableStream$Sublistener$1RetryBackoffRunnable(io.grpc.internal.RetriableStream$Sublistener)
com.google.android.gms.internal.firebase-auth-api.zzls: zzls()
com.google.android.gms.internal.firebase-auth-api.zzacq: zzacq(com.google.android.gms.internal.firebase-auth-api.zzacp)
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmp zzc()
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
com.google.firebase.firestore.local.SQLitePersistence: long getPageSize()
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzfm zzd(com.google.android.gms.internal.firebase-auth-api.zzmp)
com.google.firebase.firestore.local.MemoryMutationQueue: com.google.firebase.firestore.model.mutation.MutationBatch getNextMutationBatchAfterBatchId(int)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
com.google.firebase.firestore.model.mutation.DeleteMutation: java.lang.String toString()
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
io.grpc.Deadline$Ticker: Deadline$Ticker()
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
com.google.android.gms.common.api.internal.zah: com.google.android.gms.common.Feature[] zab(com.google.android.gms.common.api.internal.zabq)
com.google.firebase.auth.ActionCodeSettings: com.google.firebase.auth.ActionCodeSettings$Builder newBuilder()
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void mark()
com.google.android.gms.common.internal.BaseGmsClient: java.util.Set getScopes()
com.google.firebase.auth.PhoneAuthOptions: java.lang.Long zzg()
com.google.firebase.firestore.core.Target: java.util.List getFieldFiltersForPath(com.google.firebase.firestore.model.FieldPath)
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NamesResolved: ManagedChannelImpl$NameResolverListener$1NamesResolved(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.NameResolver$ResolutionResult)
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
com.google.android.gms.internal.firebase-auth-api.zzun: java.lang.String zza()
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidTag()
io.grpc.internal.InternalSubchannel: void handleTransportInUseState(io.grpc.internal.ConnectionClientTransport,boolean)
com.google.android.gms.internal.firebase-auth-api.zzadf: zzadf(int[],java.lang.Object[],int,int,com.google.android.gms.internal.firebase-auth-api.zzadc,boolean,boolean,int[],int,int,com.google.android.gms.internal.firebase-auth-api.zzadh,com.google.android.gms.internal.firebase-auth-api.zzacq,com.google.android.gms.internal.firebase-auth-api.zzaef,com.google.android.gms.internal.firebase-auth-api.zzabl,com.google.android.gms.internal.firebase-auth-api.zzacx,byte[])
com.google.android.gms.internal.location.zzp: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.model.DocumentKey: DocumentKey(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.common.stats.ConnectionTracker: ConnectionTracker()
com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,java.lang.String)
com.google.firebase.messaging.EnhancedIntentService$1: EnhancedIntentService$1(com.google.firebase.messaging.EnhancedIntentService)
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
com.google.firebase.auth.FirebaseAuthWeakPasswordException: java.lang.String getReason()
com.google.protobuf.CodedInputStream$ArrayDecoder: long readInt64()
io.grpc.okhttp.AsyncSink$3: void run()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: FlutterFirebaseAuthRegistrar()
com.google.android.gms.internal.firebase-auth-api.zzxh: void zzb(java.lang.String)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: void saveOverlay(int,com.google.firebase.firestore.model.mutation.Mutation)
com.google.protobuf.UnknownFieldSetLiteSchema: com.google.protobuf.UnknownFieldSetLite newBuilder()
kotlinx.coroutines.channels.AbstractSendChannel: int countQueueSize()
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.Transaction update(com.google.firebase.firestore.DocumentReference,java.util.Map)
com.google.firebase.provider.FirebaseInitProvider: boolean onCreate()
com.google.firebase.firestore.local.ReferenceSet: ReferenceSet()
io.grpc.NameResolver: void start(io.grpc.NameResolver$Listener2)
com.google.android.gms.internal.firebase-auth-api.zzpr: zzpr()
com.squareup.okhttp.HttpUrl$Builder: java.lang.String inet6AddressToAscii(byte[])
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: void start(io.grpc.LoadBalancer$SubchannelStateListener)
com.google.protobuf.ByteString$AbstractByteIterator: java.lang.Object next()
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
com.google.common.io.BaseEncoding$StandardBaseEncoding: int maxEncodedSize(int)
com.google.firebase.firestore.core.SyncEngine: void assertCallback(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlaysController: void removeTileOverlays(java.util.List)
com.google.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)
com.google.android.datatransport.runtime.AutoValue_SendRequest: java.lang.String getTransportName()
kotlin.collections.EmptyMap: java.util.Collection getValues()
com.google.protobuf.SmallSortedMap: SmallSortedMap(int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.location.zzbk: zzbk()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: void putFloat(java.lang.Object,long,float)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: WebViewClientHostApiImpl$WebViewClientCompatImpl(io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl,boolean)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: boolean shouldIncludeGetter(java.lang.reflect.Method)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
io.grpc.okhttp.OkHttpClientTransport: void maybeClearInUse(io.grpc.okhttp.OkHttpClientStream)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaz(com.google.android.gms.common.ConnectionResult,int)
com.google.protobuf.ByteString$AbstractByteIterator: java.lang.Byte next()
com.google.firebase.firestore.core.Query$QueryComparator: int compare(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.model.Document)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.grpc.internal.RetriableStream$1MaxInboundMessageSizeEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarintSlowPath()
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.internal.firebase-auth-api.zznf: int zza()
com.google.protobuf.LongArrayList: int hashCode()
com.google.protobuf.DoubleArrayList: boolean add(java.lang.Double)
com.google.android.gms.common.internal.GmsClientSupervisor: GmsClientSupervisor()
io.grpc.MethodDescriptor$Builder: MethodDescriptor$Builder()
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
com.google.android.gms.internal.firebase-auth-api.zzabj: int hashCode()
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zae(java.lang.String)
io.grpc.internal.RetriableStream: long access$2300(io.grpc.internal.RetriableStream)
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)
com.google.gson.stream.JsonReader: java.lang.String nextString()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Iterable loadBatch(com.google.android.datatransport.runtime.TransportContext)
io.grpc.internal.InternalSubchannel$Index: void updateGroups(java.util.List)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
okio.Buffer: okio.Buffer write(okio.ByteString)
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.core.Query getQuery()
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue getSetToServerValue()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApiCodec: GeneratedAndroidWebView$WebViewHostApiCodec()
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider: OkHttpChannelBuilder$OkHttpChannelDefaultPortProvider(io.grpc.okhttp.OkHttpChannelBuilder)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
com.google.android.gms.common.api.internal.zabx: void zab()
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzld zzb()
io.grpc.Metadata$2: Metadata$2()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.maps.model.PolylineOptions: boolean isClickable()
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ImmutableSortedMap insert(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
com.google.firebase.messaging.TopicsSubscriber: void startSync()
com.google.android.gms.internal.firebase-auth-api.zzaaj: void add(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzik: void zzg(com.google.android.gms.internal.firebase-auth-api.zzik,com.google.android.gms.internal.firebase-auth-api.zzin)
com.google.android.gms.maps.model.PolygonOptions: java.util.List getPoints()
com.google.firebase.messaging.RemoteMessage: java.lang.String getMessageId()
com.google.common.base.CharMatcher$Whitespace: CharMatcher$Whitespace()
com.google.android.gms.internal.firebase-auth-api.zzjo: void zzf(com.google.android.gms.internal.firebase-auth-api.zzjo,int)
io.grpc.internal.ClientCallImpl: io.grpc.internal.ClientCallImpl setCompressorRegistry(io.grpc.CompressorRegistry)
com.google.android.gms.common.api.internal.zacx: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.firestore.LoadBundleTaskProgress addElement(com.google.firebase.firestore.bundle.BundleElement,long)
io.grpc.ServiceProviders: boolean isAndroid(java.lang.ClassLoader)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.firestore.core.QueryListener: com.google.firebase.firestore.core.Query getQuery()
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,boolean)
io.grpc.internal.KeepAliveManager$ClientKeepAlivePinger$1: void onSuccess(long)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStart()
com.google.android.gms.internal.common.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzqi: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.core.EventManager: void raiseSnapshotsInSyncEvent()
com.google.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(com.google.protobuf.LazyFieldLite)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
com.google.android.gms.internal.firebase-auth-api.zzvt: boolean zzG(long,boolean)
io.grpc.ClientInterceptors$2: void sendMessage(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzT(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,com.google.android.gms.internal.firebase-auth-api.zzado)
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
com.google.firebase.firestore.local.SQLiteMutationQueue: SQLiteMutationQueue(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer,com.google.firebase.firestore.auth.User,com.google.firebase.firestore.local.IndexManager)
io.grpc.internal.MessageDeframer: void setListener(io.grpc.internal.MessageDeframer$Listener)
io.grpc.internal.Http2Ping: java.lang.Runnable asRunnable(io.grpc.internal.ClientTransport$PingCallback,long)
com.google.common.collect.ImmutableCollection: int copyIntoArray(java.lang.Object[],int)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zza(android.content.Context,java.lang.String)
com.google.firebase.FirebaseApp$UiExecutor: void execute(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzmh: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmh,com.google.android.gms.internal.firebase-auth-api.zzmb)
com.google.android.gms.common.internal.TelemetryData: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.internal.GmsClientSupervisor: com.google.android.gms.common.internal.GmsClientSupervisor getInstance(android.content.Context)
io.grpc.internal.MessageFramer$BufferChainOutputStream: int access$200(io.grpc.internal.MessageFramer$BufferChainOutputStream)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64(int,long)
com.google.firebase.firestore.remote.RemoteStore$2: void onWriteResponse(com.google.firebase.firestore.model.SnapshotVersion,java.util.List)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: com.google.android.gms.common.Feature[] getAvailableFeatures()
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getByteSize()
com.google.android.datatransport.runtime.SafeLoggingExecutor: void execute(java.lang.Runnable)
io.grpc.Status$StatusMessageMarshaller: byte[] toAsciiString(java.lang.Object)
io.grpc.internal.ReadableBuffers$BufferInputStream: int read(byte[],int,int)
com.google.firebase.firestore.core.SyncEngine: void handleRemoteEvent(com.google.firebase.firestore.remote.RemoteEvent)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzju zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.protobuf.UnsafeUtil: int arrayBaseOffset(java.lang.Class)
androidx.fragment.app.DialogFragment: void onDetach()
com.google.android.gms.internal.firebase-auth-api.zzvw: void onCancelled(java.lang.Object)
androidx.core.os.LocaleListCompatWrapper: java.lang.String toString()
io.flutter.plugins.webviewflutter.FlutterAssetManager$PluginBindingFlutterAssetManager: java.lang.String getAssetFilePathByName(java.lang.String)
io.grpc.internal.SerializingExecutor$FieldUpdaterAtomicHelper: SerializingExecutor$FieldUpdaterAtomicHelper(java.util.concurrent.atomic.AtomicIntegerFieldUpdater)
com.google.android.gms.internal.firebase-auth-api.zzhs: zzhs(com.google.android.gms.internal.firebase-auth-api.zzbw,com.google.android.gms.internal.firebase-auth-api.zzhr)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
com.google.firebase.auth.zzaa: java.lang.Object[] newArray(int)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
com.google.firebase.firestore.FirebaseFirestore: void validateReference(com.google.firebase.firestore.DocumentReference)
com.google.firebase.firestore.core.QueryListener: boolean shouldRaiseInitialEvent(com.google.firebase.firestore.core.ViewSnapshot,com.google.firebase.firestore.core.OnlineState)
com.google.android.gms.internal.firebase-auth-api.zzacr: void zzh(int)
com.google.firebase.firestore.core.FieldFilter: java.util.List getFilters()
com.google.android.gms.internal.firebase-auth-api.zzih: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions alpha(float)
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzaau zzd()
com.google.firebase.firestore.core.QueryView: QueryView(com.google.firebase.firestore.core.Query,int,com.google.firebase.firestore.core.View)
io.flutter.plugins.urllauncher.WebViewActivity: java.util.Map extractHeaders(android.os.Bundle)
io.grpc.internal.Http2ClientStreamTransportState$1: byte[] toAsciiString(java.lang.Integer)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.List getCollectionParents(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzwt: void zzj(com.google.android.gms.internal.firebase-auth-api.zzwt)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
com.google.android.gms.internal.firebase-auth-api.zzpw: java.lang.String zzb()
com.google.android.gms.internal.firebase-auth-api.zzyz: java.lang.Object[] newArray(int)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: io.grpc.Attributes getAttributes()
io.grpc.internal.RetriableStream$1AuthorityEntry: RetriableStream$1AuthorityEntry(io.grpc.internal.RetriableStream,java.lang.String)
com.google.firebase.auth.internal.zzx: android.net.Uri getPhotoUrl()
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: ProtobufEncoder$Builder()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onCreate(android.database.sqlite.SQLiteDatabase,int)
io.grpc.LoadBalancerRegistry: LoadBalancerRegistry()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase getDocumentTypeCase()
com.google.android.gms.internal.firebase-auth-api.zzet: int zza()
com.google.common.collect.SingletonImmutableSet: java.util.Iterator iterator()
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue forNumber(int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.firebase.firestore.model.FieldPath: java.lang.String canonicalString()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
com.google.android.gms.internal.firebase-auth-api.zzabm: void zze(java.lang.Object)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior valueOf(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
com.google.android.gms.internal.firebase-auth-api.zzpw: zzpw(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgg: zzgg(com.google.android.gms.internal.firebase-auth-api.zzgf)
com.google.android.gms.internal.firebase-auth-api.zzfo: com.google.android.gms.internal.firebase-auth-api.zzbh zza()
io.flutter.plugins.googlemaps.GoogleMapController: void setRotateGesturesEnabled(boolean)
com.google.firebase.auth.EmailAuthCredential: boolean zzi(java.lang.String)
io.perfmark.PerfMark: void startTask(java.lang.String)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTitle()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
com.google.android.gms.internal.safetynet.zza: android.os.Parcel obtainAndWriteInterfaceToken()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebViewProviderFactory getFactory()
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: void onClose(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzbh zza(com.google.android.gms.internal.firebase-auth-api.zzmx)
io.grpc.NameResolver$ResolutionResult: java.util.List getAddresses()
com.google.android.gms.internal.base.zab: zab(java.lang.String)
com.google.firestore.v1.CommitResponse$Builder: CommitResponse$Builder()
com.google.android.gms.location.zzaf: java.lang.Object[] newArray(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.protobuf.CodedOutputStream: boolean isSerializationDeterministic()
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
com.google.android.gms.location.zzt: zzt(android.os.IBinder)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApiCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.firestore.proto.Target: void setSnapshotVersion(com.google.protobuf.Timestamp)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkItem: void complete()
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: SmallSortedMap$DescendingEntryIterator(com.google.protobuf.SmallSortedMap)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: WebViewActivity$FlutterWebChromeClient$1(io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient)
com.google.firebase.messaging.RemoteMessage: java.lang.String getFrom()
io.grpc.internal.ManagedChannelImpl: boolean access$5200(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: int access$000(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
com.google.firebase.messaging.TopicsSubscriber: void startTopicsSyncIfNecessary()
com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zze(long[])
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zznf: void zzf(com.google.android.gms.internal.firebase-auth-api.zznf,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
com.google.android.gms.internal.firebase-auth-api.zzjz: zzjz()
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
com.google.android.gms.common.util.zza: int zza(int)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomBy(float)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.android.gms.internal.firebase-auth-api.zzyn zze(java.lang.String)
com.google.firebase.auth.internal.zzf: java.lang.String zzc()
io.grpc.internal.ForwardingClientStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.android.gms.internal.firebase-auth-api.zzuv: zzuv(java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.squareup.okhttp.HttpUrl$Builder: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
com.google.android.gms.cloudmessaging.zzm: void onServiceDisconnected(android.content.ComponentName)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
com.google.firebase.firestore.model.mutation.ArrayTransformOperation$Remove: com.google.firestore.v1.Value apply(com.google.firestore.v1.Value)
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set getDependencies()
com.google.firebase.firestore.util.CustomClassMapper: java.lang.Object serialize(java.lang.Object,com.google.firebase.firestore.util.CustomClassMapper$ErrorPath)
com.google.firebase.firestore.bundle.BundleSerializer: int parseNanos(java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zzc(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firebase.firestore.local.ReferenceSet: void removeReference(com.google.firebase.firestore.local.DocumentReference)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.TileOverlay addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions)
com.google.protobuf.NioByteString: void copyToInternal(byte[],int,int,int)
io.grpc.LoadBalancerProvider: int hashCode()
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
com.google.android.gms.tasks.zzw: boolean zze(java.lang.Object)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: int getPriority(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setJavaScriptEnabled(java.lang.Long,java.lang.Boolean)
com.google.firebase.firestore.Transaction: com.google.firebase.firestore.DocumentSnapshot get(com.google.firebase.firestore.DocumentReference)
com.google.android.gms.internal.firebase-auth-api.zzac: java.util.Iterator zza(com.google.android.gms.internal.firebase-auth-api.zzaf,java.lang.CharSequence)
com.google.android.gms.common.internal.service.zap: java.lang.String getStartServiceAction()
com.google.android.gms.internal.firebase-auth-api.zzes: byte[] zzc(byte[],byte[],byte[],byte[])
io.flutter.plugins.firebase.firestore.streamhandler.DocumentSnapshotsStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.firestore.v1.TransactionOptions: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzy: java.lang.String zza()
io.grpc.Metadata: Metadata(int,byte[][])
androidx.window.embedding.ActivityFilter: int hashCode()
kotlin.Unit: Unit()
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: com.google.android.datatransport.runtime.backends.TransportBackend get(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: java.lang.Object get()
com.google.protobuf.LazyStringArrayList: boolean isModifiable()
com.google.android.gms.maps.zzz: void zzb(com.google.android.gms.maps.model.LatLng)
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zza()
com.google.android.gms.safetynet.zzg: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
com.google.android.gms.location.zzv: zzv()
com.lyokone.location.FlutterLocationService$LocalBinder: FlutterLocationService$LocalBinder(com.lyokone.location.FlutterLocationService)
com.google.android.gms.maps.Projection: android.graphics.Point toScreenLocation(com.google.android.gms.maps.model.LatLng)
androidx.fragment.app.FragmentManagerImpl: void dispatchPrimaryNavigationFragmentChanged()
com.google.common.collect.Maps$EntryFunction: Maps$EntryFunction(java.lang.String,int)
io.grpc.internal.InternalSubchannel$4: InternalSubchannel$4(io.grpc.internal.InternalSubchannel,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzrm: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setZIndex(float)
com.google.android.gms.internal.firebase-auth-api.zzhn: com.google.android.gms.internal.firebase-auth-api.zzga zza()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onReceive(android.content.Context,android.content.Intent)
androidx.window.core.Bounds: int getWidth()
com.lyokone.location.FlutterLocationService: void disableBackgroundMode()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
com.google.android.gms.common.api.internal.zacd: com.google.android.gms.common.api.internal.zacd zaa(com.google.android.gms.common.api.internal.GoogleApiManager,int,com.google.android.gms.common.api.internal.ApiKey)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task registerIdTokenListener(java.util.Map)
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value convertAndParseFieldData(java.lang.Object,com.google.firebase.firestore.core.UserData$ParseContext)
com.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()
com.google.android.gms.internal.firebase-auth-api.zzacg: com.google.android.gms.internal.firebase-auth-api.zzacg[] values()
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.SnapshotMetadata getMetadata()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: android.view.View getView()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
io.grpc.internal.RetriableStream: long access$2600(io.grpc.internal.RetriableStream)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] values()
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zaE(com.google.android.gms.common.api.internal.GoogleApiManager)
io.grpc.internal.InternalSubchannel$Index: io.grpc.Attributes getCurrentEagAttributes()
com.google.android.gms.internal.location.zza: android.os.Parcel obtainAndWriteInterfaceToken()
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete getDefaultInstance()
com.tekartik.sqflite.SqflitePlugin$7: SqflitePlugin$7(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,com.tekartik.sqflite.SqflitePlugin$BgResult)
com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: long getSequenceNumber()
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int streamableBytes()
com.google.firebase.messaging.WakeLockHolder: void completeWakefulIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.android.gms.common.api.internal.zad: zad(int,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.internal.location.zzn: zzn()
io.grpc.internal.ManagedChannelImpl: void access$6000(io.grpc.internal.ManagedChannelImpl)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setMeasurementId(java.lang.String)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
io.grpc.okhttp.internal.framed.Settings: Settings()
com.google.android.gms.maps.internal.zze: int zzd()
com.google.android.gms.internal.location.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.android.datatransport.runtime.EventInternal: EventInternal()
io.grpc.okhttp.OkHttpProtocolNegotiator: io.grpc.okhttp.OkHttpProtocolNegotiator createNegotiator(java.lang.ClassLoader)
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.tekartik.sqflite.SqflitePlugin$BgResult$2: SqflitePlugin$BgResult$2(com.tekartik.sqflite.SqflitePlugin$BgResult,java.lang.String,java.lang.String,java.lang.Object)
io.grpc.internal.ConnectivityStateManager$Listener: ConnectivityStateManager$Listener(java.lang.Runnable,java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzm(int,long)
com.google.firebase.firestore.core.Transaction: com.google.firebase.firestore.model.mutation.Precondition precondition(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)
com.google.firebase.firestore.model.AutoValue_FieldIndex: java.lang.String toString()
com.google.firebase.firestore.remote.RemoteStore: void raiseWatchSnapshot(com.google.firebase.firestore.model.SnapshotVersion)
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzdk: void zza(int[],int,int,int,int)
com.google.protobuf.CodedInputStream$ArrayDecoder: boolean isAtEnd()
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter access$000()
com.google.android.gms.internal.maps.zzj: int zzi()
com.google.android.gms.internal.firebase-auth-api.zzacu: com.google.android.gms.internal.firebase-auth-api.zzado zza(java.lang.Class)
com.google.firebase.firestore.remote.RemoteEvent: java.util.Set getResolvedLimboDocuments()
io.flutter.plugins.webviewflutter.JavaScriptChannelFlutterApiImpl: JavaScriptChannelFlutterApiImpl(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.webviewflutter.InstanceManager)
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zab(android.app.Activity,android.content.DialogInterface$OnCancelListener)
com.google.protobuf.CodedOutputStream$ArrayEncoder: CodedOutputStream$ArrayEncoder(byte[],int,int)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)
com.google.firebase.firestore.proto.NoDocument: java.lang.String getName()
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder: AutoProtoEncoderDoNotUseEncoder$MessagingClientEventEncoder()
com.google.android.gms.internal.firebase-auth-api.zzaar: int zzd()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String)
com.google.protobuf.LazyStringArrayList: LazyStringArrayList()
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzi()
com.google.firebase.firestore.index.OrderedCodeWriter: void writeSignedLongDescending(long)
com.google.firebase.auth.FirebaseAuth: void setTenantId(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void storeHeartBeat(long,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzF(int,java.lang.String)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode removeMin()
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: java.io.InputStream stream(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzwh: com.google.android.gms.internal.firebase-auth-api.zzwi zzv()
androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)
com.google.firebase.firestore.local.TargetData: TargetData(com.google.firebase.firestore.core.Target,int,long,com.google.firebase.firestore.local.QueryPurpose)
com.google.android.gms.internal.firebase-auth-api.zzkd: com.google.android.gms.internal.firebase-auth-api.zzkc zzb()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zzjl: com.google.android.gms.internal.firebase-auth-api.zzjl zzd()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder()
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabf: zzabf(com.google.android.gms.internal.firebase-auth-api.zzabe)
com.google.protobuf.MessageSchema: com.google.protobuf.MessageSchema newSchemaForRawMessageInfo(com.google.protobuf.RawMessageInfo,com.google.protobuf.NewInstanceSchema,com.google.protobuf.ListFieldSchema,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MapFieldSchema)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApiCodec: GeneratedAndroidWebView$JavaScriptChannelFlutterApiCodec()
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.MessageLite getDefaultInstanceForType()
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: java.util.List getLogRequests()
com.tekartik.sqflite.SqflitePlugin: boolean update(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.firebase.auth.ActionCodeSettings: java.lang.String getIOSBundle()
com.google.android.gms.internal.firebase-auth-api.zzk: java.lang.String toString()
io.grpc.Attributes: boolean equals(java.lang.Object)
io.grpc.LoadBalancer$Subchannel: void start(io.grpc.LoadBalancer$SubchannelStateListener)
com.google.android.gms.internal.firebase-auth-api.zzoq: java.security.spec.ECParameterSpec zzk(int)
com.google.firebase.messaging.ServiceStarter: int startMessagingService(android.content.Context,android.content.Intent)
com.google.protobuf.CodedInputStreamReader: long readUInt64()
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.core.FieldFilter$Operator getOperator()
com.google.protobuf.CodedInputStreamReader: java.lang.Object readMessage(java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
io.grpc.okhttp.OkHttpClientTransport: int access$702(io.grpc.okhttp.OkHttpClientTransport,int)
com.google.android.gms.internal.firebase-auth-api.zzaaw: java.lang.String zzl()
com.google.android.gms.internal.firebase-auth-api.zzsy: zzsy(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzzq,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setClientInfo(com.google.android.datatransport.cct.internal.ClientInfo)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.firebase.auth.zzg: java.lang.Object[] newArray(int)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
com.google.android.gms.dynamic.zag: void zab(com.google.android.gms.dynamic.LifecycleDelegate)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: long getEventsDroppedCount()
io.grpc.okhttp.internal.DistinguishedNameParser: java.lang.String findMostSpecific(java.lang.String)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: AutoValue_BackendRequest(java.lang.Iterable,byte[],com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$1)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String getUserAgent()
androidx.fragment.app.FragmentManagerImpl: void makeActive(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzadc zzH()
io.grpc.internal.MessageDeframer: void closeWhenComplete()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeRawMessageSetExtension(int,com.google.protobuf.ByteString)
com.google.android.gms.internal.firebase-auth-api.zzaal: byte zza()
com.google.android.gms.location.zzj: java.lang.String toString()
com.google.android.gms.common.api.internal.LifecycleCallback: void onStart()
com.google.android.gms.internal.firebase-auth-api.zzhn: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexMap(com.google.firestore.v1.MapValue,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzkc: zzkc(com.google.android.gms.internal.firebase-auth-api.zzkb)
com.google.android.gms.internal.firebase-auth-api.zzcn: void zzi(com.google.android.gms.internal.firebase-auth-api.zzjc)
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
com.google.firebase.firestore.model.DatabaseId: java.lang.String getDatabaseId()
androidx.webkit.WebViewClientCompat: java.lang.String[] getSupportedFeatures()
com.google.android.gms.common.internal.zzab: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.common.internal.GmsLogger: void v(java.lang.String,java.lang.String)
com.google.android.gms.internal.maps.zzj: java.lang.String zzl()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzJ(int,long)
io.grpc.okhttp.internal.OkHostnameVerifier: OkHostnameVerifier()
io.grpc.internal.ForwardingManagedChannel: io.grpc.ManagedChannel shutdownNow()
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] getMethodInvocationMethodKeyDisallowlist()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzB(com.google.android.gms.internal.firebase-auth-api.zzzt,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.components.Component: java.util.Set getPublishedEvents()
com.google.android.gms.internal.firebase-auth-api.zzsa: com.google.firebase.auth.ActionCodeSettings zza()
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
com.google.protobuf.LazyStringArrayList: void clear()
com.google.protobuf.UnsafeUtil: long getLong(java.lang.Object,long)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
io.grpc.internal.DelayedClientCall$7: void cancel(java.lang.String,java.lang.Throwable)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$1: void run()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()
com.google.android.gms.internal.firebase-auth-api.zzadu: java.util.Iterator zzb()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: void close()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task signInWithEmailLink(java.lang.String,java.lang.String)
com.baseflow.geolocator.location.LocationManagerClient: void onProviderDisabled(java.lang.String)
com.google.firebase.messaging.SharedPreferencesQueue: void syncState()
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzl(int,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzacc,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
com.google.firebase.firestore.core.SyncEngine: void addUserCallback(int,com.google.android.gms.tasks.TaskCompletionSource)
androidx.core.os.LocaleListCompat: LocaleListCompat(androidx.core.os.LocaleListInterface)
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: TransactionStreamHandler(io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler$OnTransactionStartedListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.bundle.BundledDocumentMetadata decodeBundledDocumentMetadata(org.json.JSONObject)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.firestore.local.LocalViewChanges: LocalViewChanges(int,boolean,com.google.firebase.database.collection.ImmutableSortedSet,com.google.firebase.database.collection.ImmutableSortedSet)
com.google.android.gms.internal.firebase-auth-api.zzal: java.util.ListIterator listIterator()
com.google.gson.stream.JsonReader: void beginObject()
com.google.android.gms.internal.maps.zzj: void zzr(double)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()
io.grpc.internal.ApplicationThreadDeframer$CloseableInitializingMessageProducer: void close()
com.google.android.gms.internal.firebase-auth-api.zzib: boolean equals(java.lang.Object)
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzsp: void zza(java.lang.String)
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: com.google.protobuf.MessageLite parseFrom(com.google.protobuf.CodedInputStream)
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.android.gms.internal.location.zzbl: void doExecute(com.google.android.gms.common.api.Api$AnyClient)
com.google.android.gms.internal.firebase-auth-api.zzaep: boolean zzy()
com.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withFisError(java.lang.String)
com.google.firebase.auth.internal.zzaq: zzaq(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
okio.Buffer: boolean equals(java.lang.Object)
io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List access$300(io.grpc.internal.MessageFramer$BufferChainOutputStream)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: GeneratedAndroidWebView$WebResourceRequestData()
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider of(com.google.firebase.inject.Provider)
com.google.firebase.encoders.proto.ProtobufEncoder$Builder: com.google.firebase.encoders.proto.ProtobufEncoder build()
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet getModifiedDocuments()
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzb()
com.google.firestore.v1.Target$QueryTarget: void setParent(java.lang.String)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzvv: zzvv()
com.google.android.gms.internal.firebase-auth-api.zzqw: java.lang.String zzc()
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: boolean equals(java.lang.Object)
io.grpc.okhttp.OkHttpClientStream$TransportState: java.lang.Object access$300(io.grpc.okhttp.OkHttpClientStream$TransportState)
com.google.firebase.auth.internal.zzbj: void execute(java.lang.Runnable)
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse access$000()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.google.android.gms.internal.firebase-auth-api.zziy: zziy()
com.google.android.gms.internal.firebase-auth-api.zzabf: com.google.android.gms.internal.firebase-auth-api.zzabf zzG(byte[])
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: void processOverlaysInBackground(com.google.firebase.firestore.util.BackgroundQueue,java.util.Map,android.database.Cursor)
com.tekartik.sqflite.SqflitePlugin: boolean access$200(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzku zzb()
com.google.common.collect.ImmutableMap: void putAll(java.util.Map)
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
io.grpc.internal.MessageDeframer: void request(int)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentController: void dispatchDestroy()
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zzjc zzf()
com.google.android.gms.internal.firebase-auth-api.zzyl: com.google.android.gms.internal.firebase-auth-api.zzyl zza(com.google.android.gms.internal.firebase-auth-api.zzyl)
com.google.firebase.auth.MultiFactor: MultiFactor()
io.flutter.plugins.firebase.messaging.JobIntentService: int onStartCommand(android.content.Intent,int,int)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: EventStoreModule_DbNameFactory()
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setDefaultPort(int)
com.google.protobuf.ByteString$ArraysByteArrayCopier: byte[] copyFrom(byte[],int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzvx: java.lang.String zza(com.google.android.gms.internal.firebase-auth-api.zzvy,java.lang.String)
com.google.firebase.firestore.index.AutoValue_IndexEntry: AutoValue_IndexEntry(int,com.google.firebase.firestore.model.DocumentKey,byte[],byte[])
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: int getNumber()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.google.android.gms.internal.firebase-auth-api.zzabr: boolean contains(java.lang.Object)
io.grpc.Metadata$AsciiKey: Metadata$AsciiKey(java.lang.String,boolean,io.grpc.Metadata$AsciiMarshaller,io.grpc.Metadata$1)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: boolean supportsUnsafeByteBufferOperations()
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String access$000(java.lang.String,java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzR(int)
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zaF()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
com.google.protobuf.Int32Value: int getValue()
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: long getRequestUptimeMs()
com.google.firebase.messaging.TopicsSubscriber: void setSyncScheduledOrRunning(boolean)
com.google.android.gms.internal.firebase-auth-api.zzrx: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.internal.location.zzbf)
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$1)
com.google.android.datatransport.runtime.EncodedPayload: int hashCode()
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder internalMergeFrom(com.google.protobuf.AbstractMessageLite)
io.grpc.Status: java.lang.Throwable getCause()
io.grpc.internal.ManagedChannelImpl: io.grpc.InternalConfigSelector access$3600()
io.flutter.plugins.googlemaps.GoogleMapController: void setTiltGesturesEnabled(boolean)
com.google.firebase.FirebaseApp: java.lang.String normalize(java.lang.String)
com.squareup.okhttp.Headers: java.lang.String name(int)
com.google.firebase.firestore.local.LocalStore: void initializeUserComponents(com.google.firebase.firestore.auth.User)
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec$Builder tlsVersions(io.grpc.okhttp.internal.TlsVersion[])
com.google.firebase.firestore.proto.UnknownDocument: void setName(java.lang.String)
io.grpc.internal.ManagedChannelImpl$ExecutorHolder: ManagedChannelImpl$ExecutorHolder(io.grpc.internal.ObjectPool)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
io.grpc.internal.ServiceConfigUtil: java.lang.String getServiceFromName(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzsc: com.google.firebase.auth.zze zzb()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
com.google.android.gms.internal.firebase-auth-api.zzal: com.google.android.gms.internal.firebase-auth-api.zzal zzg()
com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()
com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean getMethodInvocationTelemetryEnabled()
kotlin.collections.EmptySet: boolean isEmpty()
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: AutoValue_EventInternal$Builder()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPool()
io.flutter.plugins.googlemaps.PolygonsController: void removePolygons(java.util.List)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
com.google.android.gms.common.api.internal.zabq: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
com.google.firebase.firestore.model.mutation.VerifyMutation: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: InstallationResponse$ResponseCode(java.lang.String,int)
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.EnhancedIntentService: boolean stopSelfResultHook(int)
com.google.android.gms.cloudmessaging.zzd: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLitePersistence$1: void onBegin()
com.google.protobuf.ArrayDecoders: int decodeMessageList(com.google.protobuf.Schema,int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomBy(float)
com.google.firebase.messaging.NotificationParams: java.lang.Long getLong(java.lang.String)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent create(long,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)
com.google.android.gms.internal.firebase-auth-api.zzba: com.google.android.gms.internal.firebase-auth-api.zzax zzb()
io.flutter.embedding.android.FlutterActivity: void onStart()
com.google.firebase.firestore.local.SQLiteSchema: boolean tableContainsColumn(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaaw: void zzo(int)
com.google.firebase.provider.FirebaseInitProvider: java.lang.String getType(android.net.Uri)
com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder: com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder setCollectionId(java.lang.String)
com.google.firebase.components.EventBus: EventBus(java.util.concurrent.Executor)
io.grpc.internal.InternalSubchannel: io.grpc.ConnectivityState getState()
io.grpc.CallOptions$Key: java.lang.Object access$000(io.grpc.CallOptions$Key)
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zaa(java.lang.String)
com.google.protobuf.CodedOutputStreamWriter: void writeUInt32(int,int)
com.google.android.gms.safetynet.zzb: zzb()
io.flutter.plugins.firebase.auth.PhoneNumberVerificationStreamHandler: void onCancel(java.lang.Object)
com.google.protobuf.FloatArrayList: int size()
com.google.protobuf.SchemaUtil: int computeSizeUInt32List(int,java.util.List,boolean)
io.grpc.ClientInterceptors$InterceptorChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.android.gms.common.internal.zzg: boolean zzd()
com.google.firestore.v1.StructuredQuery: void setStartAt(com.google.firestore.v1.Cursor)
com.google.common.io.BaseEncoding$Base64Encoding: BaseEncoding$Base64Encoding(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)
io.grpc.internal.ChannelLoggerImpl: void trace(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void transportShutdown(io.grpc.Status)
io.grpc.internal.RetriableStream$HedgingRunnable$1: void run()
io.grpc.okhttp.internal.framed.Hpack$Reader: okio.ByteString getName(int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getTrackingId()
io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.LoadBalancer$ResolvedAddresses$Builder newBuilder()
io.grpc.internal.RetriableStream$HedgingPlan: RetriableStream$HedgingPlan(boolean,java.lang.Integer)
com.google.android.gms.internal.firebase-auth-api.zzue: zzue(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaf: com.google.android.gms.internal.firebase-auth-api.zzn zza(com.google.android.gms.internal.firebase-auth-api.zzaf)
com.google.android.gms.internal.firebase-auth-api.zzaa: java.util.Iterator zza(com.google.android.gms.internal.firebase-auth-api.zzaf,java.lang.CharSequence)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.android.gms.common.api.internal.zabq: void zai(com.google.android.gms.common.api.internal.zabq,com.google.android.gms.common.api.Status)
com.google.firebase.auth.internal.zzn: zzn(java.lang.String,com.google.firebase.auth.MultiFactorInfo)
com.google.android.gms.common.ConnectionResult: java.lang.String getErrorMessage()
io.grpc.internal.CompositeReadableBuffer$3: int read(io.grpc.internal.ReadableBuffer,int,byte[],int)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
com.baseflow.geolocator.location.LocationManagerClient: void onLocationChanged(android.location.Location)
com.google.firebase.Timestamp: boolean equals(java.lang.Object)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLngZoom(com.google.android.gms.maps.model.LatLng,float)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.core.Bound decodeEndAtBound(org.json.JSONObject)
io.grpc.NameResolver$Listener2: void onAddresses(java.util.List,io.grpc.Attributes)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task namedQueryGet(java.util.Map)
com.google.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)
com.google.firebase.FirebaseOptions: java.lang.String getProjectId()
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
com.google.common.base.Ticker: com.google.common.base.Ticker systemTicker()
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void transportInUse(boolean)
androidx.collection.ArraySet: boolean contains(java.lang.Object)
com.google.protobuf.StructuralMessageInfo: com.google.protobuf.ProtoSyntax getSyntax()
com.google.android.gms.internal.maps.zzab: boolean zzB(com.google.android.gms.internal.maps.zzad)
com.google.android.gms.internal.firebase-auth-api.zznt: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder eagerInDefaultApp()
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
io.grpc.internal.ApplicationThreadDeframer: void deframe(io.grpc.internal.ReadableBuffer)
com.tekartik.sqflite.Database: void deleteDatabase(java.lang.String)
com.google.android.gms.common.internal.zzac: void getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest)
com.google.android.gms.internal.firebase-auth-api.zzoi: void zza(java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,int)
com.google.android.gms.location.LocationAvailability: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzds: com.google.android.gms.internal.firebase-auth-api.zzdo zza(byte[],int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzd(android.os.Parcel,android.os.Parcelable,int)
com.google.android.gms.internal.firebase-auth-api.zzea: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask getUpdateMask()
com.tekartik.sqflite.SqflitePlugin: java.lang.Object access$800()
com.google.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
com.google.firebase.firestore.model.FieldIndex: java.util.List getDirectionalSegments()
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: java.util.Map getOverlays(com.google.firebase.firestore.model.ResourcePath,int)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setScrollGesturesEnabled(boolean)
com.google.android.gms.maps.UiSettings: boolean isScrollGesturesEnabled()
com.google.firebase.firestore.proto.Target: void setDocuments(com.google.firestore.v1.Target$DocumentsTarget)
okio.SegmentedByteString: java.lang.String base64()
com.google.firebase.firestore.GeoPoint: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzoy: zzoy()
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: java.lang.String toString()
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.bundle.BundledQuery decodeBundledQuery(com.google.firestore.bundle.BundledQuery)
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
com.google.android.gms.dynamite.zzo: int zza(android.content.Context,java.lang.String)
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task getToken()
io.grpc.internal.ManagedChannelImpl$RealChannel$4: void run()
com.google.protobuf.LazyField: java.lang.String toString()
com.google.firestore.v1.StructuredQuery$FieldFilter: void setField(com.google.firestore.v1.StructuredQuery$FieldReference)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzkf zzb(int)
com.google.firebase.auth.PhoneAuthCredential: com.google.firebase.auth.PhoneAuthCredential zzd(java.lang.String,java.lang.String)
com.google.protobuf.BinaryReader$SafeHeapReader: void readMessageList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.protobuf.DoubleArrayList: int indexOf(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvw: zzvw(java.lang.String,java.lang.String,android.content.Intent,com.google.firebase.FirebaseApp,com.google.android.gms.internal.firebase-auth-api.zzvy)
com.google.android.gms.internal.location.zzaf: zzaf()
com.google.android.gms.common.internal.zaab: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzpg: java.security.Key zzc(com.google.android.gms.internal.firebase-auth-api.zzpg)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
com.google.common.io.BaseEncoding$Alphabet: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzyf: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzacr: zzacr(long[],int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
com.google.protobuf.Utf8$UnsafeProcessor: int partialIsValidUtf8(byte[],long,int)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()
com.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)
io.grpc.internal.PickFirstLoadBalancerProvider: io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)
com.google.android.gms.location.LocationSettingsResponse: LocationSettingsResponse()
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void transportTerminated()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
com.google.android.gms.common.api.zza: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzgx: boolean equals(java.lang.Object)
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: int hashCode()
io.grpc.internal.CompositeReadableBuffer$5: CompositeReadableBuffer$5()
io.grpc.internal.RetriableStream$3: void run()
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.WireFormat$FieldType getLiteType()
com.google.android.gms.internal.firebase-auth-api.zzzx: java.util.List zzf()
com.google.protobuf.BooleanArrayList: BooleanArrayList(boolean[],int)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzvs: zzvs(com.google.android.gms.internal.firebase-auth-api.zzvr,com.google.android.gms.common.logging.Logger)
io.flutter.plugins.firebase.firestore.streamhandler.SnapshotsInSyncStreamHandler: SnapshotsInSyncStreamHandler()
io.perfmark.Impl: void stopTask(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: int reverseTransit(int)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity valueOf(java.lang.String)
io.flutter.plugins.firebase.auth.AuthStateChannelStreamHandler: void onCancel(java.lang.Object)
com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLongObject(android.os.Parcel,int,java.lang.Long,boolean)
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: void close()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
io.grpc.internal.RetriableStream: void drain(io.grpc.internal.RetriableStream$Substream)
com.google.android.gms.maps.model.zzj: java.lang.Object[] newArray(int)
androidx.core.view.ViewCompat$1: ViewCompat$1()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement artificialFrame(java.lang.String)
com.google.protobuf.RopeByteString: int minLength(int)
com.google.firebase.auth.PhoneMultiFactorInfo: long getEnrollmentTimestamp()
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzb(com.google.firebase.auth.ActionCodeSettings$Builder)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin)
com.google.firestore.v1.WriteRequest: void access$100(com.google.firestore.v1.WriteRequest,java.lang.String)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: AutoConfiguredLoadBalancerFactory$NoopLoadBalancer(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
com.google.android.gms.internal.firebase-auth-api.zziv: zziv(com.google.android.gms.internal.firebase-auth-api.zziu)
com.lyokone.location.MethodCallHandlerImpl: void onChangeNotificationOptions(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions pattern(java.util.List)
androidx.fragment.app.FragmentActivity: FragmentActivity()
io.grpc.internal.TransportTracer: TransportTracer(io.grpc.internal.TimeProvider,io.grpc.internal.TransportTracer$1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.grpc.Status$StatusMessageMarshaller: byte[] toAsciiStringSlow(byte[],int)
com.google.firebase.firestore.remote.RemoteStore: void shutdown()
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzid: boolean equals(java.lang.Object)
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
com.google.android.gms.internal.firebase-auth-api.zzabr: int indexOf(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzay: zzay(com.google.android.gms.internal.firebase-auth-api.zzga)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
com.google.protobuf.MessageSchema: com.google.protobuf.MessageSchema newSchema(java.lang.Class,com.google.protobuf.MessageInfo,com.google.protobuf.NewInstanceSchema,com.google.protobuf.ListFieldSchema,com.google.protobuf.UnknownFieldSchema,com.google.protobuf.ExtensionSchema,com.google.protobuf.MapFieldSchema)
com.google.protobuf.SchemaUtil: void writeStringList(int,java.util.List,com.google.protobuf.Writer)
com.google.protobuf.MessageSchema: java.lang.Object newInstance()
com.google.android.gms.tasks.zzaf: void onSuccess(java.lang.Object)
com.google.firebase.auth.TwitterAuthCredential: com.google.firebase.auth.AuthCredential zza()
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder setCurrentDocument(com.google.firestore.v1.Precondition)
com.google.protobuf.AbstractMessageLite: byte[] toByteArray()
kotlin.Pair: int hashCode()
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument access$000()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.firebase.firestore.util.LogicUtils: com.google.firebase.firestore.core.Filter computeDistributedNormalForm(com.google.firebase.firestore.core.Filter)
com.google.firestore.v1.ArrayValue$Builder: ArrayValue$Builder(com.google.firestore.v1.ArrayValue$1)
com.google.android.gms.internal.firebase-auth-api.zzsr: void zzb(java.lang.Object)
com.google.android.gms.cloudmessaging.zzk: void run()
io.grpc.internal.ClientCallImpl: void cancel(java.lang.String,java.lang.Throwable)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zza(long[],long[],long[])
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: long safeIncrement(long,long)
io.grpc.okhttp.OkHttpTlsUpgrader: java.lang.String canonicalizeHost(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setVisible(boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void addJavascriptInterface(java.lang.Object,java.lang.String)
androidx.fragment.app.FragmentTransition$2: void run()
com.google.firebase.messaging.ByteStreams: byte[] toByteArray(java.io.InputStream)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: void reset()
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator$1: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator findValueByNumber(int)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: AutoValue_BackendRequest$Builder()
com.google.firebase.firestore.model.mutation.VerifyMutation: VerifyMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
com.google.protobuf.MessageSchema: java.util.List listAt(java.lang.Object,long)
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult access$000()
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase valueOf(java.lang.String)
com.google.protobuf.IntArrayList: int hashCode()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzm(int)
com.google.android.gms.internal.firebase-auth-api.zzmb: int zze()
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
com.google.android.gms.common.api.internal.zae: void zad(com.google.android.gms.common.api.Status)
okio.AsyncTimeout: okio.Source source(okio.Source)
com.google.firebase.messaging.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,com.google.firebase.messaging.RequestDeduplicator$GetTokenRequest)
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.Value getIncrement()
io.grpc.internal.ManagedChannelImpl: java.lang.String authority()
com.google.android.gms.internal.firebase-auth-api.zzai: boolean retainAll(java.util.Collection)
com.google.firestore.v1.Value: void access$1400(com.google.firestore.v1.Value,java.lang.String)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl$WebSettingsCreator: android.webkit.WebSettings createWebSettings(android.webkit.WebView)
com.google.firestore.admin.v1.Index$IndexField$Builder: Index$IndexField$Builder(com.google.firestore.admin.v1.Index$1)
com.google.android.gms.internal.firebase-auth-api.zzyk: zzyk()
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzy(java.util.List)
androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zzmz zza()
com.google.firebase.auth.FirebaseAuthUserCollisionException: java.lang.String getEmail()
com.google.firebase.messaging.NotificationParams: boolean isNotification(android.os.Bundle)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setSynchronizationContext(io.grpc.SynchronizationContext)
com.google.android.gms.location.zzk: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.runtime.AutoValue_EventInternal: AutoValue_EventInternal(java.lang.String,java.lang.Integer,com.google.android.datatransport.runtime.EncodedPayload,long,long,java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.gms.internal.base.zac: void zac(android.os.Parcel,android.os.Parcelable)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: boolean isAvailable(io.grpc.ManagedChannelProvider)
com.google.android.gms.internal.firebase-auth-api.zzeg: byte[] zzh()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6600(io.flutter.view.AccessibilityBridge,int)
com.google.android.gms.common.internal.zaw: java.lang.Object createFromParcel(android.os.Parcel)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzfi: com.google.android.gms.internal.firebase-auth-api.zzfi zzc(byte[],byte[],int)
com.google.android.gms.common.internal.zaq: java.lang.Object convert(com.google.android.gms.common.api.Result)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMyLocationEnabled(boolean)
io.grpc.internal.GrpcUtil$4: java.lang.Object create()
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzzg: java.lang.String zzk()
io.grpc.stub.AbstractStub: AbstractStub(io.grpc.Channel,io.grpc.CallOptions)
com.google.protobuf.UnknownFieldSetLiteSchema: void setBuilderToMessage(java.lang.Object,com.google.protobuf.UnknownFieldSetLite)
com.google.firebase.firestore.SnapshotMetadata: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzjo: zzjo()
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder newBuilder()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64NoTag(long)
com.google.android.gms.common.util.concurrent.NamedThreadFactory: NamedThreadFactory(java.lang.String)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument convertToUnknownDocument(com.google.firebase.firestore.model.SnapshotVersion)
com.google.protobuf.UnknownFieldSetLiteSchema: void addFixed64(com.google.protobuf.UnknownFieldSetLite,int,long)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
io.grpc.internal.ManagedChannelImpl$ExecutorHolder: void release()
com.google.android.gms.internal.firebase-auth-api.zznw: zznw()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzV(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabg)
com.google.android.gms.common.internal.zzy: zzy()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: EventStoreConfig$Builder()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor valueOf(java.lang.String)
com.google.firebase.database.collection.ArraySortedMap: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzex: zzex(com.google.android.gms.internal.firebase-auth-api.zzmh,com.google.android.gms.internal.firebase-auth-api.zzey,com.google.android.gms.internal.firebase-auth-api.zzet,com.google.android.gms.internal.firebase-auth-api.zzeu,byte[])
com.google.firebase.firestore.Filter$UnaryFilter: Filter$UnaryFilter(com.google.firebase.firestore.FieldPath,com.google.firebase.firestore.core.FieldFilter$Operator,java.lang.Object)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void initInstance(io.flutter.plugin.common.BinaryMessenger)
io.grpc.okhttp.internal.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
io.grpc.internal.DelayedClientCall$7: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
kotlin.Result: boolean isFailure-impl(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void setPreferencesStringValue(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions geodesic(boolean)
com.google.firebase.firestore.remote.RemoteSerializer: boolean isLocalResourceName(com.google.firebase.firestore.model.ResourcePath)
com.google.firebase.firestore.QueryDocumentSnapshot: java.util.Map getData()
io.grpc.internal.ReadableBuffers: java.io.InputStream openStream(io.grpc.internal.ReadableBuffer,boolean)
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform access$2400()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
com.google.firebase.firestore.model.mutation.Overlay: com.google.firebase.firestore.model.mutation.Overlay create(int,com.google.firebase.firestore.model.mutation.Mutation)
com.google.firebase.internal.DataCollectionConfigStorage: boolean readAutoDataCollectionEnabled()
com.google.protobuf.Utf8: int encodedLengthGeneral(java.lang.CharSequence,int)
io.grpc.internal.InternalSubchannel: InternalSubchannel(java.util.List,java.lang.String,java.lang.String,io.grpc.internal.BackoffPolicy$Provider,io.grpc.internal.ClientTransportFactory,java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier,io.grpc.SynchronizationContext,io.grpc.internal.InternalSubchannel$Callback,io.grpc.InternalChannelz,io.grpc.internal.CallTracer,io.grpc.internal.ChannelTracer,io.grpc.InternalLogId,io.grpc.ChannelLogger)
com.google.firebase.messaging.ServiceStarter: android.content.Intent getMessagingEvent()
com.google.firebase.messaging.ImageDownload: com.google.firebase.messaging.ImageDownload create(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfq: zzfq()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.firebase.firestore.local.QueryResult: QueryResult(com.google.firebase.database.collection.ImmutableSortedMap,com.google.firebase.database.collection.ImmutableSortedSet)
com.google.android.gms.internal.firebase-auth-api.zzcr: zzcr(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzta: void zza(java.lang.String)
io.grpc.okhttp.OkHttpWritableBuffer: void write(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzju: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzon: zzon(java.security.interfaces.ECPublicKey,byte[],java.lang.String,int,com.google.android.gms.internal.firebase-auth-api.zzol)
com.google.firebase.FirebaseApp: java.util.List getApps(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzN(com.google.android.gms.internal.firebase-auth-api.zzxy,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexValue(com.google.firestore.v1.Value,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
okio.ByteString: java.lang.String hex()
com.google.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64()
com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
io.grpc.ManagedChannelRegistry: java.util.List getHardCodedClasses()
io.grpc.okhttp.AsyncSink: okio.Sink access$400(io.grpc.okhttp.AsyncSink)
com.google.protobuf.FieldSet: void makeImmutable()
com.google.firestore.v1.StructuredQuery$Direction$1: com.google.firestore.v1.StructuredQuery$Direction findValueByNumber(int)
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator[] values()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next()
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState[] values()
com.google.android.gms.common.internal.TelemetryLoggingOptions: boolean equals(java.lang.Object)
com.google.firebase.messaging.GmsRpc: java.lang.String base64UrlSafe(byte[])
com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawVarint()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
com.google.android.gms.maps.model.PolylineOptions: java.util.List getPattern()
com.google.firestore.v1.MapValue: java.util.Map getFieldsMap()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: void onCancel(java.lang.Object)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.Set getKeys()
com.google.android.gms.internal.firebase-auth-api.zzcq: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytesNoTag(com.google.protobuf.ByteString)
com.google.android.gms.maps.model.Polyline: int hashCode()
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase getResultCase()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
io.flutter.plugins.googlemaps.PolylinesController: void changePolylines(java.util.List)
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.util.AsyncQueue access$000(com.google.firebase.firestore.remote.FirestoreChannel)
com.google.android.gms.internal.firebase-auth-api.zzqn: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions strokeColor(int)
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzJ(java.lang.Object,java.lang.Object,int)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzC(int)
com.google.android.gms.internal.firebase-auth-api.zzkj: com.google.android.gms.internal.firebase-auth-api.zzkj zzb()
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.ReferenceDelegate getReferenceDelegate()
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
com.google.firestore.v1.DocumentMask: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.safetynet.zze: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.safetynet.zzf: zzf(com.google.android.gms.common.api.GoogleApiClient)
androidx.fragment.app.Fragment: int getStateAfterAnimating()
com.google.firebase.encoders.EncodingException: EncodingException(java.lang.String,java.lang.Exception)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeStringNoTag(java.lang.String)
com.google.firebase.firestore.core.CompositeFilter: java.util.List getFilters()
androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzbz: zzbz(com.google.android.gms.internal.firebase-auth-api.zzgq,com.google.android.gms.internal.firebase-auth-api.zzgb,java.lang.Class)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void priority(int,int,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzny: zzny(com.google.android.gms.internal.firebase-auth-api.zznx)
io.grpc.internal.InUseStateAggregator: void updateObjectInUse(java.lang.Object,boolean)
com.google.android.gms.common.api.ApiException: com.google.android.gms.common.api.Status getStatus()
com.google.common.io.BaseEncoding$StandardBaseEncoding: int decodeTo(byte[],java.lang.CharSequence)
com.google.android.gms.cloudmessaging.zza: java.lang.Object[] newArray(int)
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()
com.google.android.gms.internal.firebase-auth-api.zzaeg: void zzg(java.lang.StringBuilder,int)
com.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)
com.google.firebase.installations.remote.RequestLimiter: boolean isRetryableError(int)
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
com.google.protobuf.ArrayDecoders: int decodeVarint32(int,byte[],int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.tasks.zzh: void zzd(com.google.android.gms.tasks.Task)
com.google.firebase.messaging.FirebaseMessaging: boolean isGmsCorePresent()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.google.firebase.auth.PhoneAuthCredential: void writeToParcel(android.os.Parcel,int)
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: LoadBalancer$CreateSubchannelArgs$Builder()
com.google.android.gms.common.internal.zan: zan()
io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: AutoConfiguredLoadBalancerFactory$PolicyException(java.lang.String,io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
com.google.firebase.database.collection.LLRBEmptyNode: int size()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.model.TargetIndexMatcher: boolean servedByIndex(com.google.firebase.firestore.model.FieldIndex)
com.baseflow.geolocator.location.GeolocationManager: void startPositionUpdates(android.content.Context,android.app.Activity,com.baseflow.geolocator.location.LocationClient,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.grpc.Metadata: void name(int,byte[])
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzl(java.lang.Object,long,byte)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.common.api.internal.GoogleApiManager: GoogleApiManager(android.content.Context,android.os.Looper,com.google.android.gms.common.GoogleApiAvailability)
com.google.android.gms.common.internal.BaseGmsClient: void onPostInitHandler(int,android.os.IBinder,android.os.Bundle,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
io.grpc.internal.CallTracer$1: io.grpc.internal.CallTracer create()
com.google.android.gms.internal.firebase-auth-api.zzgd: zzgd(com.google.android.gms.internal.firebase-auth-api.zzgc)
com.google.firebase.messaging.SharedPreferencesQueue: void syncStateAsync()
com.google.firebase.installations.remote.AutoValue_InstallationResponse: java.lang.String getFid()
com.google.firebase.auth.ActionCodeUrl: java.lang.String zza()
com.google.firebase.firestore.TransactionOptions: TransactionOptions(int)
com.google.common.base.Stopwatch: long elapsed(java.util.concurrent.TimeUnit)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setAppId(java.lang.String)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setSmallestDisplacement(float)
io.grpc.internal.RetriableStream: io.grpc.Metadata updateHeaders(io.grpc.Metadata,int)
com.google.android.datatransport.AutoValue_Event: java.lang.Object getPayload()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)
com.google.protobuf.CodedOutputStream: int computeSInt32Size(int,int)
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.grpc.internal.DelayedClientCall$7: void sendMessage(java.lang.Object)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback: void onAvailable(android.net.Network)
com.google.firebase.firestore.remote.WatchChangeAggregator: void handleExistenceFilter(com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange)
com.google.android.gms.internal.location.zzas: void zza(boolean)
com.google.firebase.firestore.Blob: com.google.firebase.firestore.Blob fromByteString(com.google.protobuf.ByteString)
com.google.firebase.auth.internal.zzbe: com.google.firebase.auth.internal.zzbe zza(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onHandleWork(android.content.Intent)
com.google.firebase.installations.remote.AutoValue_TokenResult: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.core.Target getTarget()
com.google.android.gms.internal.safetynet.zze: void zza(com.google.android.gms.common.api.Status)
io.grpc.ForwardingClientCall: void halfClose()
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse getDefaultInstance()
com.google.firebase.firestore.core.UserData$ParseContext: void validatePathSegment(java.lang.String)
io.grpc.okhttp.internal.framed.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
com.google.android.gms.common.stats.ConnectionTracker: boolean zzd(android.content.ServiceConnection)
androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)
io.perfmark.Impl: void linkIn(io.perfmark.Link)
com.google.firestore.v1.StructuredQuery$UnaryFilter: void access$4600(com.google.firestore.v1.StructuredQuery$UnaryFilter,com.google.firestore.v1.StructuredQuery$FieldReference)
com.baseflow.geolocator.location.GeolocationManager: GeolocationManager(com.baseflow.geolocator.permission.PermissionManager)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.internal.firebase-auth-api.zzoc: javax.crypto.Cipher zza()
com.google.firebase.firestore.auth.FirebaseAppCheckTokenProvider: void invalidateToken()
com.google.android.gms.internal.firebase-auth-api.zzmp: void zzf(com.google.android.gms.internal.firebase-auth-api.zzmp,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzx: boolean zzc(java.lang.String)
io.perfmark.PerfMark: io.perfmark.Link linkOut()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getNotificationCount()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
com.google.protobuf.GeneratedMessageLite$Builder: void copyOnWriteInternal()
com.google.android.gms.internal.firebase-auth-api.zzte: void zzb(java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder setWindow(com.google.android.datatransport.runtime.firebase.transport.TimeWindow)
com.google.firebase.firestore.index.IndexByteEncoder: void seed(byte[])
com.google.firestore.v1.DocumentChange: java.util.List getRemovedTargetIdsList()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIntegerObject(android.os.Parcel,int,java.lang.Integer,boolean)
com.google.firebase.firestore.core.OrderBy: OrderBy(com.google.firebase.firestore.core.OrderBy$Direction,com.google.firebase.firestore.model.FieldPath)
okio.Okio$2: java.lang.String toString()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzi(long[],long[],long[])
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: com.google.android.datatransport.runtime.backends.BackendFactory get(java.lang.String)
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
com.google.android.gms.internal.firebase-auth-api.zzabf: zzabf()
com.google.android.gms.internal.firebase-auth-api.zzck: int zzf()
com.google.android.gms.signin.SignInOptions: int hashCode()
com.google.firebase.FirebaseException: FirebaseException()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List loadEvents(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)
com.google.android.gms.common.internal.ClientIdentity: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaaz: long zzn()
io.grpc.SynchronizationContext: SynchronizationContext(java.lang.Thread$UncaughtExceptionHandler)
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zzg()
com.google.protobuf.AbstractMessageLite: com.google.protobuf.ByteString toByteString()
com.google.android.gms.maps.GoogleMap: void resetMinMaxZoomPreference()
com.google.protobuf.FieldSet: FieldSet(com.google.protobuf.SmallSortedMap)
androidx.core.app.Person: boolean isBot()
com.google.android.gms.common.api.internal.GoogleApiManager: void zax(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType valueOf(java.lang.String)
com.google.protobuf.AbstractProtobufList: boolean remove(java.lang.Object)
com.google.protobuf.UnknownFieldSetLiteSchema: com.google.protobuf.UnknownFieldSetLite getFromMessage(java.lang.Object)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
com.google.firebase.messaging.WithinAppServiceConnection: WithinAppServiceConnection(android.content.Context,java.lang.String,java.util.concurrent.ScheduledExecutorService)
io.grpc.internal.ForwardingDeframerListener: ForwardingDeframerListener()
com.google.android.gms.internal.firebase-auth-api.zzzp: zzzp()
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zaa(java.util.Collection)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabg: com.google.android.gms.internal.firebase-auth-api.zzabg zza(com.google.android.gms.internal.firebase-auth-api.zzabf)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.RBTreeSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzz(int)
io.grpc.CallCredentials$MetadataApplier: CallCredentials$MetadataApplier()
io.flutter.plugins.googlemaps.GoogleMapController$3: void onSnapshotReady(android.graphics.Bitmap)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.google.firebase.auth.PlayGamesAuthCredential: java.lang.String getSignInMethod()
com.google.android.gms.internal.firebase-auth-api.zznk: com.google.android.gms.internal.firebase-auth-api.zznk zzb(int)
io.grpc.internal.ExponentialBackoffPolicy$Provider: ExponentialBackoffPolicy$Provider()
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.auth.internal.zzbg: void zze(com.google.firebase.auth.FirebaseUser,com.google.android.gms.internal.firebase-auth-api.zzyq)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
io.flutter.plugins.googlemaps.PolylineController: void setStartCap(com.google.android.gms.maps.model.Cap)
com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()
com.google.firebase.firestore.local.SQLiteMutationQueue: void removeMutationBatch(com.google.firebase.firestore.model.mutation.MutationBatch)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.google.firebase.firestore.FirebaseFirestoreSettings: boolean isPersistenceEnabled()
androidx.fragment.app.DialogFragment$1: void run()
com.google.android.gms.internal.firebase-auth-api.zzhn: void zzg(com.google.android.gms.internal.firebase-auth-api.zzlt)
io.grpc.internal.InternalSubchannel$TransportListener$2: InternalSubchannel$TransportListener$2(io.grpc.internal.InternalSubchannel$TransportListener,io.grpc.Status)
com.google.firestore.v1.Document: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivityForConfigChanges()
com.google.firestore.admin.v1.Index$IndexField$Order$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.LatLng toLatLng(java.lang.Object)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] values()
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzua: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzfd: java.lang.String zzc()
com.google.android.gms.common.api.internal.zaae: void onStart()
com.google.firebase.firestore.core.Target: long getLimit()
com.google.firebase.firestore.core.View: int changeTypeOrder(com.google.firebase.firestore.core.DocumentViewChange)
com.google.android.gms.internal.firebase-auth-api.zzaeg: void zzi(com.google.android.gms.internal.firebase-auth-api.zzabg)
io.grpc.internal.RetriableStream$1FlushEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.google.firebase.messaging.CommonNotificationBuilder: int getSmallIcon(android.content.pm.PackageManager,android.content.res.Resources,java.lang.String,java.lang.String,android.os.Bundle)
androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()
com.google.firebase.iid.FirebaseInstanceIdReceiver: android.content.Intent createServiceIntent(android.content.Context,java.lang.String,android.os.Bundle)
com.tekartik.sqflite.SqflitePlugin: void onExecuteCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
io.grpc.LoadBalancerRegistry: java.util.List getHardCodedClasses()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
com.google.protobuf.NioByteString: NioByteString(java.nio.ByteBuffer)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
io.grpc.okhttp.OkHttpClientTransport: void enableKeepAlive(boolean,long,long,boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialPolygons(java.lang.Object)
com.lyokone.location.FlutterLocation$2: FlutterLocation$2(com.lyokone.location.FlutterLocation)
com.google.common.collect.RegularImmutableMap$KeySet: boolean contains(java.lang.Object)
com.google.android.gms.cloudmessaging.zzt: zzt(android.content.Context)
io.grpc.internal.DelayedStream: void optimizeForDirectExecutor()
com.google.firebase.FirebaseOptions: int hashCode()
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component getComponent()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: JobInfoScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivity()
com.google.firestore.v1.WriteRequest: void setDatabase(java.lang.String)
com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)
io.grpc.internal.DelayedStream$DelayedStreamListener: void delayOrExecute(java.lang.Runnable)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.firebase.firestore.local.LocalDocumentsView: void recalculateAndSaveOverlays(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzsi: void zza(java.lang.String)
com.google.firebase.firestore.remote.Datastore$1: void onClose(io.grpc.Status)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
io.grpc.internal.ApplicationThreadDeframerListener$1: ApplicationThreadDeframerListener$1(io.grpc.internal.ApplicationThreadDeframerListener,int)
com.google.android.gms.internal.firebase-auth-api.zzik: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzho: void zza()
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
com.google.protobuf.LongArrayList: java.lang.Long remove(int)
io.grpc.internal.RetriableStream$Sublistener$2: void run()
com.google.android.gms.location.zzv: com.google.android.gms.location.zzu zzb(android.os.IBinder)
com.google.firebase.installations.local.PersistedInstallationEntry$Builder: PersistedInstallationEntry$Builder()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void headers(boolean,boolean,int,int,java.util.List,io.grpc.okhttp.internal.framed.HeadersMode)
com.google.android.gms.internal.firebase-auth-api.zzcy: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.tasks.zzf: zzf(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzw)
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery access$000()
com.google.protobuf.LazyStringArrayList: java.lang.String asString(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: int hashCode()
io.grpc.ServiceProviders$1: ServiceProviders$1(io.grpc.ServiceProviders$PriorityAccessor)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzk()
com.google.protobuf.ByteString: int access$200(byte)
com.google.protobuf.SmallSortedMap: boolean isImmutable()
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: SQLitePersistence$LongQuery(com.google.firebase.firestore.local.SQLitePersistence,java.lang.String,java.util.List,java.util.List,java.lang.String)
com.google.android.gms.common.api.internal.zzd: int zza(com.google.android.gms.common.api.internal.zzd)
io.grpc.okhttp.OkHttpClientStream$TransportState: io.perfmark.Tag tag()
com.google.android.gms.maps.model.Gap: java.lang.String toString()
io.grpc.util.RoundRobinLoadBalancer$EmptyPicker: boolean isEquivalentTo(io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker)
io.flutter.plugins.googlemaps.PolygonBuilder: void setStrokeWidth(float)
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: RegularImmutableMap$KeysOrValuesAsList(java.lang.Object[],int,int)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void removeReference(com.google.firebase.firestore.model.DocumentKey)
com.tekartik.sqflite.SqlCommand: java.util.List getRawSqlArguments()
com.google.android.gms.common.api.GoogleApiClient: GoogleApiClient()
com.baseflow.geolocator.utils.Utils: boolean openAppSettings(android.content.Context)
com.google.android.gms.common.zze: byte[] zzb()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: java.lang.String parsePhotoUrl(android.net.Uri)
com.google.android.gms.internal.firebase-auth-api.zzry: com.google.firebase.auth.UserProfileChangeRequest zza()
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.google.firebase.firestore.model.Values: void canonifyObject(java.lang.StringBuilder,com.google.firestore.v1.MapValue)
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
com.google.protobuf.SchemaUtil: int computeSizeSInt64List(int,java.util.List,boolean)
com.google.protobuf.FloatArrayList: java.lang.Object remove(int)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: long getLong(long)
com.google.android.gms.internal.firebase-auth-api.zzvj: java.lang.String zza()
com.google.android.gms.safetynet.zzc: zzc()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: boolean isShutdown()
com.google.firebase.auth.internal.zzy: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzmp: void zzg(com.google.android.gms.internal.firebase-auth-api.zzmp,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzacs: zzacs()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase forNumber(int)
com.google.android.gms.safetynet.SafetyNetClient: com.google.android.gms.tasks.Task attest(byte[],java.lang.String)
com.google.android.gms.location.zzv: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void updateLimboDocument(com.google.firebase.firestore.model.DocumentKey)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken zza()
okio.ByteString: java.lang.String utf8()
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setToken(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaej: java.lang.Object next()
io.grpc.NameResolver: void start(io.grpc.NameResolver$Listener)
io.grpc.internal.MessageFramer$OutputStreamAdapter: void write(int)
com.google.firestore.v1.TransactionOptions: TransactionOptions()
io.grpc.okhttp.OkHttpClientStream$Sink: void writeHeaders(io.grpc.Metadata,byte[])
com.google.android.gms.internal.firebase-auth-api.zzyh: zzyh(com.google.android.gms.internal.firebase-auth-api.zzyl)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzpo zza()
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
io.flutter.plugins.googlemaps.Convert: java.lang.String toString(java.lang.Object)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzl(com.google.android.gms.internal.firebase-auth-api.zzzg,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.android.gms.internal.firebase-auth-api.zzbw: java.util.List zze(byte[])
com.squareup.okhttp.Request: Request(com.squareup.okhttp.Request$Builder,com.squareup.okhttp.Request$1)
com.google.firestore.v1.ListenRequest$Builder: ListenRequest$Builder(com.google.firestore.v1.ListenRequest$1)
com.google.android.gms.common.internal.zzl: java.lang.Object[] newArray(int)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: void writeString(java.lang.String)
com.google.firebase.firestore.model.DocumentSet: boolean equals(java.lang.Object)
com.google.firestore.v1.Precondition: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.MessageLite$Builder toBuilder()
com.google.firebase.firestore.model.mutation.VerifyMutation: int hashCode()
com.google.firebase.firestore.local.MemoryPersistence: void setReferenceDelegate(com.google.firebase.firestore.local.ReferenceDelegate)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLng(com.google.android.gms.maps.model.LatLng)
androidx.browser.customtabs.CustomTabsIntent$Builder: androidx.browser.customtabs.CustomTabsIntent build()
com.google.protobuf.MessageSchema: boolean equals(java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void postFrameCallback(java.lang.Runnable)
com.google.android.gms.common.api.internal.zao: zao(com.google.android.gms.common.api.internal.zap,com.google.android.gms.common.api.internal.zam)
com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)
com.google.android.gms.common.internal.RootTelemetryConfigManager: RootTelemetryConfigManager()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnFailureListener(android.app.Activity,com.google.android.gms.tasks.OnFailureListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.lyokone.location.FlutterLocation: boolean checkServiceEnabled()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getServerAuthCode()
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
com.google.android.gms.internal.firebase-auth-api.zzaar: boolean zzk()
io.grpc.internal.SharedResourceHolder$Instance: SharedResourceHolder$Instance(java.lang.Object)
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: void deframerClosed(boolean)
com.google.firestore.v1.StructuredQuery: void addFrom(com.google.firestore.v1.StructuredQuery$CollectionSelector)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzj(int,long)
com.tekartik.sqflite.SqflitePlugin$5: void run()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
com.google.protobuf.CodedInputStream$ArrayDecoder: float readFloat()
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.view.animation.Animation)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Float readFloatObject(android.os.Parcel,int)
io.grpc.internal.KeepAliveManager: void onTransportIdle()
io.grpc.internal.ManagedChannelImplBuilder: ManagedChannelImplBuilder(java.lang.String,io.grpc.ChannelCredentials,io.grpc.CallCredentials,io.grpc.internal.ManagedChannelImplBuilder$ClientTransportFactoryBuilder,io.grpc.internal.ManagedChannelImplBuilder$ChannelBuilderDefaultPortProvider)
kotlinx.coroutines.CommonPool: void isGoodCommonPool$lambda-9()
com.google.android.gms.maps.model.Polygon: int hashCode()
androidx.collection.ArrayMap: ArrayMap(int)
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: int numChunks()
io.grpc.okhttp.internal.framed.Hpack: okio.ByteString checkLowercase(okio.ByteString)
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransportName(java.lang.String)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
com.google.android.gms.common.api.internal.zabk: void execute(java.lang.Runnable)
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] values()
com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getOrCreateChannel(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzxb: void zzb(java.net.HttpURLConnection,com.google.android.gms.internal.firebase-auth-api.zzwy,java.lang.reflect.Type)
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzln zzf()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzk(int,java.util.List,boolean)
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback: AndroidConnectivityMonitor$DefaultNetworkCallback(com.google.firebase.firestore.remote.AndroidConnectivityMonitor)
com.google.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
io.grpc.LoadBalancer$CreateSubchannelArgs: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder toBuilder()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.google.android.gms.common.api.internal.zap: int zae(com.google.android.gms.common.api.internal.zam)
com.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: java.lang.Object get()
com.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()
com.google.android.gms.common.GoogleSignatureVerifier: boolean zzb(android.content.pm.PackageInfo,boolean)
com.google.firestore.admin.v1.Index: java.util.List getFieldsList()
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.Object[] getEncodedBytes(java.util.List)
com.google.protobuf.MapFieldLite: MapFieldLite(java.util.Map)
com.google.firebase.firestore.core.ComponentProvider$Configuration: com.google.firebase.firestore.auth.User getInitialUser()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel shutdown()
io.grpc.InternalConfigSelector$Result: InternalConfigSelector$Result(io.grpc.Status,java.lang.Object,io.grpc.ClientInterceptor,io.grpc.InternalConfigSelector$1)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void forEachTarget(com.google.firebase.firestore.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzef: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.NameResolverRegistry: void refreshProviders()
com.google.firestore.v1.MapValue: com.google.firestore.v1.Value getFieldsOrDefault(java.lang.String,com.google.firestore.v1.Value)
com.google.protobuf.UnmodifiableLazyStringList$1: UnmodifiableLazyStringList$1(com.google.protobuf.UnmodifiableLazyStringList,int)
io.grpc.internal.RetriableStream$1AuthorityEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
com.google.firebase.firestore.model.MutableDocument$DocumentState: MutableDocument$DocumentState(java.lang.String,int)
io.grpc.internal.RetriableStream$Sublistener$6: RetriableStream$Sublistener$6(io.grpc.internal.RetriableStream$Sublistener)
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzbi zzi()
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
com.google.android.gms.internal.firebase-auth-api.zzadf: long zzD(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzadv: boolean zzb(java.lang.Object,java.lang.Object)
com.google.android.gms.location.zzak: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.location.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: boolean hasNext()
com.google.firebase.auth.internal.zzx: void zzr(com.google.firebase.auth.internal.zzz)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$900(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
com.google.android.gms.common.api.internal.zai: zai(int)
io.grpc.okhttp.OkHttpClientTransport: void onException(java.lang.Throwable)
com.google.firebase.auth.TwitterAuthCredential: TwitterAuthCredential(java.lang.String,java.lang.String)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeIndexArray(com.google.firestore.v1.ArrayValue,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
io.grpc.internal.CallCredentialsApplyingTransportFactory: java.util.concurrent.Executor access$500(io.grpc.internal.CallCredentialsApplyingTransportFactory)
okio.Buffer$1: java.lang.String toString()
com.google.firebase.firestore.SnapshotMetadata: boolean hasPendingWrites()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: java.lang.Object get()
com.google.android.gms.common.internal.service.zap: boolean getUseDynamicLookup()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.google.firebase.firestore.model.mutation.MutationBatch: boolean equals(java.lang.Object)
com.google.android.gms.location.zzj: zzj()
com.google.android.gms.maps.GoogleMap: void setBuildingsEnabled(boolean)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: java.util.List resolveAddress(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
com.google.firebase.firestore.local.SQLiteSchema: boolean hasReadTime()
com.google.android.gms.internal.firebase-auth-api.zzhn: int zze()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
com.lyokone.location.LocationPlugin: LocationPlugin()
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.OrderBy decodeOrderBy(com.google.firestore.v1.StructuredQuery$Order)
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzacc zzz(com.google.android.gms.internal.firebase-auth-api.zzacc)
com.google.android.gms.internal.firebase-auth-api.zzly: zzly()
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: java.util.List mutableListAt(java.lang.Object,long)
kotlin.jvm.internal.CallableReference: CallableReference()
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzf(com.google.android.gms.internal.firebase-auth-api.zzxn,java.lang.String)
com.google.common.io.BaseEncoding$Alphabet: char encode(int)
com.google.protobuf.MapEntryLite: MapEntryLite(com.google.protobuf.WireFormat$FieldType,java.lang.Object,com.google.protobuf.WireFormat$FieldType,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaae: void zzq(java.io.OutputStream)
com.google.android.gms.internal.firebase-auth-api.zzqo: com.google.android.gms.internal.firebase-auth-api.zzzq zza()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)
io.grpc.internal.DelayedStream$DelayedStreamListener: void drainPendingCallbacks()
io.grpc.internal.ApplicationThreadDeframer$InitializingMessageProducer: void initialize()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzhe: zzhe()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzqw: java.lang.String zzb()
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.model.FieldIndex$IndexOffset getMinOffset(java.lang.String)
com.google.android.gms.dynamite.zzf: zzf()
com.google.android.gms.location.zzad: zzad()
com.google.android.gms.internal.location.zzas: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzmh: void zzh(com.google.android.gms.internal.firebase-auth-api.zzmh,int)
com.google.firebase.auth.zzz: java.lang.Object[] newArray(int)
com.google.android.gms.safetynet.SafeBrowsingData: void zza(java.io.Closeable)
com.google.android.gms.internal.firebase-auth-api.zzaf: com.google.android.gms.internal.firebase-auth-api.zzaf zzc(java.lang.String)
io.flutter.plugins.firebase.messaging.JobIntentService: io.flutter.plugins.firebase.messaging.JobIntentService$GenericWorkItem dequeueWork()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
com.google.android.gms.internal.firebase-auth-api.zzgt: zzgt(com.google.android.gms.internal.firebase-auth-api.zzgz)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: com.google.firebase.installations.InstallationTokenResult$Builder setTokenExpirationTimestamp(long)
com.google.firebase.firestore.DocumentChange: DocumentChange(com.google.firebase.firestore.QueryDocumentSnapshot,com.google.firebase.firestore.DocumentChange$Type,int,int)
com.google.android.gms.tasks.TaskCompletionSource: void setException(java.lang.Exception)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task createUserWithEmailAndPassword(java.util.Map)
kotlin.collections.EmptyMap: int getSize()
com.google.android.gms.internal.firebase-auth-api.zzadv: int compareTo(java.lang.Object)
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[])
com.google.android.gms.signin.internal.zai: zai(int,com.google.android.gms.common.internal.zat)
com.google.protobuf.MapFieldLite: void ensureMutable()
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setTransportName(java.lang.String)
com.google.firestore.v1.Target$Builder: Target$Builder(com.google.firestore.v1.Target$1)
com.google.android.gms.location.zzs: com.google.android.gms.location.zzr zza(android.os.IBinder)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.WriteBatch set(com.google.firebase.firestore.DocumentReference,java.lang.Object)
io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer access$300(io.grpc.internal.GzipInflatingBuffer)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
com.google.firebase.firestore.bundle.BundleReader: boolean pullMoreData()
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zae(int)
com.google.android.gms.common.api.internal.zacv: void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.DataCollectionDefaultChange: DataCollectionDefaultChange(boolean)
com.google.protobuf.Utf8: int access$200(java.nio.ByteBuffer,int,int)
com.google.firebase.firestore.model.mutation.MutationBatchResult: com.google.firebase.database.collection.ImmutableSortedMap getDocVersions()
io.grpc.okhttp.OkHttpClientTransport$3: void run()
com.tekartik.sqflite.SqflitePlugin$7: void run()
com.google.android.gms.internal.firebase-auth-api.zzub: zzub(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.zaad: zaad()
com.google.android.gms.common.api.internal.LifecycleCallback: void onCreate(android.os.Bundle)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
io.grpc.ClientStreamTracer$StreamInfo$Builder: io.grpc.ClientStreamTracer$StreamInfo build()
androidx.fragment.app.FragmentState: int describeContents()
com.google.android.gms.internal.firebase-auth-api.zzpm: byte[] zza(byte[],byte[])
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
com.google.firestore.v1.TransactionOptions$ReadOnly$Builder: TransactionOptions$ReadOnly$Builder()
io.grpc.internal.ForwardingClientStream: void cancel(io.grpc.Status)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzro: void writeToParcel(android.os.Parcel,int)
com.google.firebase.encoders.FieldDescriptor: java.lang.String getName()
io.grpc.internal.DnsNameResolver: boolean cacheRefreshRequired()
com.tekartik.sqflite.operation.BaseReadOperation: java.lang.Boolean getBoolean(java.lang.String)
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.Object[] encodeValues(com.google.firebase.firestore.model.FieldIndex,com.google.firebase.firestore.core.Target,java.util.Collection)
com.google.firebase.auth.PhoneMultiFactorInfo: PhoneMultiFactorInfo(java.lang.String,java.lang.String,long,java.lang.String)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomIn()
okio.Buffer: int write(java.nio.ByteBuffer)
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation subscribe(java.lang.String)
com.google.android.gms.maps.model.CameraPosition: boolean equals(java.lang.Object)
com.baseflow.geolocator.location.LocationManagerClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.android.gms.internal.firebase-auth-api.zzbw: java.lang.Class zzc()
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: long skip(long)
io.grpc.okhttp.OkHttpReadableBuffer: int readUnsignedByte()
com.lyokone.location.BackgroundNotification: BackgroundNotification(android.content.Context,java.lang.String,int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException alreadyLinkedProvider()
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzq(com.google.android.gms.internal.firebase-auth-api.zzzq,com.google.android.gms.internal.firebase-auth-api.zzwy)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
io.flutter.plugins.googlemaps.PolygonController: void setConsumeTapEvents(boolean)
com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8NonAscii(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object put(java.lang.Object,java.lang.Object)
io.grpc.internal.TransportTracer$Factory: TransportTracer$Factory(io.grpc.internal.TimeProvider)
com.google.protobuf.ByteString$2: int compare(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
com.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.firestore.bundle.BundleReader: void close()
com.google.android.gms.maps.model.MapStyleOptions: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.maps.GoogleMap: void setOnCameraMoveStartedListener(com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener)
com.google.android.gms.common.zzf: byte[] zzb()
com.google.firebase.firestore.remote.AbstractStream: void cancelIdleCheck()
com.google.android.gms.internal.firebase-auth-api.zzom: zzom(java.security.interfaces.ECPrivateKey,byte[],java.lang.String,int,com.google.android.gms.internal.firebase-auth-api.zzol)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1202(io.flutter.plugin.platform.PlatformViewsController,boolean)
io.grpc.Codec$Gzip: java.lang.String getMessageEncoding()
com.google.protobuf.ListFieldSchema: ListFieldSchema()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzi(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setFadeIn(boolean)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.FirebaseAuth zzb()
com.google.android.gms.internal.firebase-auth-api.zzyq: java.lang.String zzh()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: AutoValue_PersistedInstallationEntry(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)
com.lyokone.location.FlutterLocation$2: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.common.collect.ImmutableMap: ImmutableMap()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: long getEventTimeMs()
com.google.android.gms.internal.firebase-auth-api.zzaaj: void zze(boolean)
io.grpc.NameResolverRegistry: void addProvider(io.grpc.NameResolverProvider)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: long getCurrentSequenceNumber()
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: java.util.Map access$200(com.google.firebase.firestore.local.LocalStore$DocumentChangeResult)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzt(com.google.android.gms.internal.firebase-auth-api.zzzy,com.google.android.gms.internal.firebase-auth-api.zzwy)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
com.google.android.gms.internal.firebase-auth-api.zzyj: java.util.List zzr()
io.grpc.okhttp.internal.framed.Hpack: okio.ByteString access$100(okio.ByteString)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long getEventCleanUpAge()
com.google.android.gms.internal.firebase-auth-api.zzpu: java.lang.String zza()
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: void publish(com.google.firebase.events.Event)
com.google.protobuf.UnsafeUtil: void putByteBigEndian(java.lang.Object,long,byte)
com.google.common.util.concurrent.DirectExecutor: void execute(java.lang.Runnable)
com.google.protobuf.Utf8: int incompleteStateFor(java.nio.ByteBuffer,int,int,int)
okio.AsyncTimeout: void enter()
com.google.android.gms.maps.internal.zzg: void setOnCircleClickListener(com.google.android.gms.maps.internal.zzx)
com.google.android.gms.internal.firebase-auth-api.zzadl: zzadl(java.lang.Object[],int)
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
io.grpc.okhttp.OkHttpFrameLogger: OkHttpFrameLogger(java.util.logging.Level,java.util.logging.Logger)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ExistenceFilter getFilter()
androidx.fragment.app.Fragment: void setNextAnim(int)
com.google.android.gms.common.api.zzb: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.auth.internal.zzac: zzac(com.google.firebase.auth.internal.zzx)
com.google.protobuf.UnsafeUtil: boolean supportsUnsafeArrayOperations()
com.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)
com.google.android.datatransport.runtime.TransportImpl: TransportImpl(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer,com.google.android.datatransport.runtime.TransportInternal)
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.String access$000(java.lang.reflect.Field)
io.flutter.plugins.googlemaps.PolylineController: boolean consumeTapEvents()
io.grpc.internal.ApplicationThreadDeframer: void close()
com.google.android.gms.internal.firebase-auth-api.zzbu: java.lang.String toString()
io.grpc.internal.DnsNameResolver$InternalResolutionResult: DnsNameResolver$InternalResolutionResult(io.grpc.internal.DnsNameResolver$1)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: java.lang.String toString()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.safetynet.zzd: void writeToParcel(android.os.Parcel,int)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions jointType(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
com.google.protobuf.RopeByteString: com.google.protobuf.ByteString concatenate(com.google.protobuf.ByteString,com.google.protobuf.ByteString)
io.grpc.HttpConnectProxiedSocketAddress$Builder: io.grpc.HttpConnectProxiedSocketAddress$Builder setProxyAddress(java.net.SocketAddress)
io.grpc.Attributes: java.util.Map access$100(io.grpc.Attributes)
com.google.firestore.v1.StructuredQuery: void setLimit(com.google.protobuf.Int32Value)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest getDefaultInstance()
okio.Buffer: byte readByte()
com.google.firebase.firestore.model.BasePath: com.google.firebase.firestore.model.BasePath popLast()
io.grpc.Metadata: void put(io.grpc.Metadata$Key,java.lang.Object)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
com.google.android.gms.internal.location.zzc: zzc()
com.google.firebase.firestore.remote.RemoteStore: void sendUnwatchRequest(int)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
androidx.fragment.app.FragmentTransitionImpl$1: void run()
com.google.android.gms.tasks.zzl: zzl(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int)
io.grpc.StatusRuntimeException: StatusRuntimeException(io.grpc.Status,io.grpc.Metadata)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
com.google.android.gms.signin.internal.zag: void writeToParcel(android.os.Parcel,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzfd: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: long getId()
io.grpc.internal.SquelchLateMessagesAvailableDeframerListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.firestore.local.SQLiteSchema: void removeAcknowledgedMutations()
kotlinx.coroutines.channels.AbstractSendChannel: void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.gms.internal.firebase-auth-api.zzwt: void zzm(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.List getDocumentsMatchingTarget(com.google.firebase.firestore.core.Target)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder run(com.google.android.gms.common.api.internal.RemoteCall)
io.grpc.internal.CompositeReadableBuffer$3: CompositeReadableBuffer$3()
kotlin.collections.IntIterator: void remove()
io.grpc.NameResolver$ConfigOrError: java.lang.String toString()
com.google.firebase.firestore.model.ObjectValue: ObjectValue()
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter access$4100()
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.grpc.internal.Http2ClientStreamTransportState: void transportHeadersReceived(io.grpc.Metadata)
androidx.fragment.app.Fragment: void performLowMemory()
io.grpc.internal.DelayedClientCall$DelayedListener$4: void run()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.CompositeFilter decodeCompositeFilter(com.google.firestore.v1.StructuredQuery$CompositeFilter)
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedMap appendRemainingResults(java.lang.Iterable,com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.FieldIndex$IndexOffset)
io.grpc.Status: Status(io.grpc.Status$Code)
androidx.fragment.app.FragmentManagerImpl: void popBackStack(int,int)
com.google.android.gms.internal.firebase-auth-api.zzzv: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter lessThan(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.android.gms.internal.maps.zzv: void zzu(com.google.android.gms.maps.model.LatLng)
com.google.firebase.firestore.local.SQLiteTargetCache: void saveTargetData(com.google.firebase.firestore.local.TargetData)
com.google.protobuf.ByteString$BoundedByteString: byte byteAt(int)
androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zzme: com.google.android.gms.internal.firebase-auth-api.zzaau zzf()
io.flutter.plugins.webviewflutter.FlutterAssetManager: FlutterAssetManager(android.content.res.AssetManager)
com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: long getNextRequestWaitMillis()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,double,boolean)
com.google.protobuf.RopeByteString$1: RopeByteString$1(com.google.protobuf.RopeByteString)
com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzadf zzl(java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzacz,com.google.android.gms.internal.firebase-auth-api.zzadh,com.google.android.gms.internal.firebase-auth-api.zzacq,com.google.android.gms.internal.firebase-auth-api.zzaef,com.google.android.gms.internal.firebase-auth-api.zzabl,com.google.android.gms.internal.firebase-auth-api.zzacx)
com.google.android.gms.internal.firebase-auth-api.zzacw: void zzd(com.google.android.gms.internal.firebase-auth-api.zzacw)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase forNumber(int)
com.google.android.gms.maps.internal.zzg: void snapshot(com.google.android.gms.maps.internal.zzbu,com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.common.ConnectionResult: int hashCode()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
com.tekartik.sqflite.operation.MethodCallOperation: com.tekartik.sqflite.operation.OperationResult getOperationResult()
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getTag()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeQuerySnapshot(java.io.ByteArrayOutputStream,com.google.firebase.firestore.QuerySnapshot)
com.google.android.gms.dynamic.IObjectWrapper$Stub: IObjectWrapper$Stub()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.android.gms.internal.firebase-auth-api.zzadl: int size()
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.String getServiceDescriptor()
com.google.android.gms.maps.model.LatLngBounds: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.grpc.ServiceProviders: java.lang.Iterable getCandidatesViaHardCoded(java.lang.Class,java.lang.Iterable)
io.grpc.internal.GrpcUtil$2: GrpcUtil$2()
io.grpc.okhttp.internal.Platform: io.grpc.okhttp.internal.Platform findPlatform()
com.google.protobuf.MapFieldLite: void makeImmutable()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziw zze(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.database.collection.ImmutableSortedSet: ImmutableSortedSet(com.google.firebase.database.collection.ImmutableSortedMap)
com.google.android.gms.internal.firebase-auth-api.zzlq: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)
com.google.firebase.firestore.remote.AbstractStream: boolean isOpen()
com.google.firebase.firestore.util.Util: int compareDoubles(double,double)
com.google.firebase.firestore.UserDataReader: java.util.List parseArrayTransformElements(java.util.List)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.LocalStore$DocumentChangeResult populateDocumentChanges(java.util.Map)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6700(io.flutter.view.AccessibilityBridge,int)
io.grpc.internal.GzipInflatingBuffer: boolean processHeaderComment()
com.google.android.gms.internal.firebase-auth-api.zzmk: void zzi(com.google.android.gms.internal.firebase-auth-api.zzmk,int)
com.google.protobuf.MessageSchema: void readMessageList(java.lang.Object,int,com.google.protobuf.Reader,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.grpc.internal.InternalSubchannel$7: void run()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task reauthenticateAndRetrieveData(com.google.firebase.auth.AuthCredential)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzc(com.google.android.gms.internal.firebase-auth-api.zzxy,com.google.android.gms.internal.firebase-auth-api.zzwy)
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.util.ArrayList createStringList(android.os.Parcel,int)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
com.google.firebase.auth.internal.zzaf: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firestore.v1.TransactionOptions$ReadWrite$Builder: TransactionOptions$ReadWrite$Builder(com.google.firestore.v1.TransactionOptions$1)
com.google.firebase.firestore.core.TargetIdGenerator: void seek(int)
com.google.android.gms.internal.firebase-auth-api.zzpe: byte[] zza(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzh(int,int)
com.lyokone.location.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.google.firebase.auth.FacebookAuthCredential: com.google.android.gms.internal.firebase-auth-api.zzzq zzb(com.google.firebase.auth.FacebookAuthCredential,java.lang.String)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.FieldFilter$Operator decodeFieldFilterOperator(com.google.firestore.v1.StructuredQuery$FieldFilter$Operator)
com.google.protobuf.LazyField$LazyIterator: java.lang.Object next()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder scheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
com.google.android.gms.internal.firebase-auth-api.zznb: void zzf(com.google.android.gms.internal.firebase-auth-api.zznb,int)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: long getMaxCacheSizeBytes()
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
com.google.firebase.installations.CrossProcessLock: void releaseAndClose()
com.google.android.gms.internal.firebase-auth-api.zzyy: com.google.android.gms.internal.firebase-auth-api.zzyy zzb(com.google.android.gms.internal.firebase-auth-api.zzyy)
com.google.android.gms.safetynet.zze: java.lang.Object[] newArray(int)
com.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)
com.google.protobuf.DoubleArrayList: java.lang.Double remove(int)
com.google.android.gms.common.api.internal.zabq: void zar(com.google.android.gms.common.ConnectionResult,java.lang.Exception)
com.google.firebase.firestore.remote.TargetChange: boolean equals(java.lang.Object)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType[] values()
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)
com.google.firebase.messaging.reporting.MessagingClientEventExtension: byte[] toByteArray()
com.google.android.gms.internal.maps.zzv: void zzy(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setMessageId(java.lang.String)
com.google.android.gms.common.util.Strings: java.lang.String emptyToNull(java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzh(com.google.android.gms.internal.firebase-auth-api.zzyn,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.android.gms.internal.firebase-auth-api.zzje: zzje(com.google.android.gms.internal.firebase-auth-api.zzjd)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2120(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: long skip(long)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)
com.google.android.gms.common.wrappers.PackageManagerWrapper: PackageManagerWrapper(android.content.Context)
androidx.collection.ArraySet$1: java.util.Map colGetMap()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setBuiltInZoomControls(java.lang.Long,java.lang.Boolean)
com.google.android.gms.internal.cloudmessaging.zzd: zzd(com.google.android.gms.internal.cloudmessaging.zzc)
com.google.android.gms.internal.firebase-auth-api.zztv: void zzb(java.lang.Object)
com.google.protobuf.LazyStringArrayList: java.util.List getUnderlyingElements()
com.google.android.gms.internal.firebase-auth-api.zzabj: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaco: void zzb(java.lang.Object,long)
com.google.firebase.firestore.util.CustomClassMapper: java.lang.Object access$400(java.lang.Object,com.google.firebase.firestore.util.CustomClassMapper$ErrorPath)
com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite getEmptyRegistry()
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzG(int,java.util.List)
com.google.protobuf.UnknownFieldSchema: UnknownFieldSchema()
com.google.firebase.messaging.RemoteMessageCreator: java.lang.Object[] newArray(int)
com.google.firebase.messaging.NotificationParams: java.lang.Integer getNotificationPriority()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
okio.Okio: okio.Source source(java.io.InputStream,okio.Timeout)
com.google.firestore.v1.FirestoreGrpc: io.grpc.MethodDescriptor getListenMethod()
com.google.firestore.v1.Document$Builder: com.google.firestore.v1.Document$Builder setUpdateTime(com.google.protobuf.Timestamp)
com.google.protobuf.AbstractProtobufList: boolean removeAll(java.util.Collection)
io.grpc.util.RoundRobinLoadBalancer$EmptyPicker: RoundRobinLoadBalancer$EmptyPicker(io.grpc.Status)
com.tekartik.sqflite.operation.BaseReadOperation: java.util.List getSqlArguments()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzuj: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
com.google.firebase.auth.EmailAuthCredential: com.google.firebase.auth.AuthCredential zza()
com.google.firebase.firestore.bundle.BundledDocumentMetadata: com.google.firebase.firestore.model.SnapshotVersion getReadTime()
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
io.grpc.okhttp.internal.ConnectionSpec: java.lang.String[] access$400(io.grpc.okhttp.internal.ConnectionSpec)
io.grpc.internal.MessageFramer: boolean isClosed()
com.google.android.gms.internal.location.zzau: void notifyListener(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.google.protobuf.ProtobufArrayList: void ensureIndexInRange(int)
com.google.firebase.auth.EmailAuthCredential: java.lang.String zzd()
com.google.firebase.messaging.WithinAppServiceConnection: void onServiceDisconnected(android.content.ComponentName)
com.google.android.gms.dynamite.zzo: int zzb(android.content.Context,java.lang.String,boolean)
com.google.firebase.auth.GoogleAuthCredential: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialPolygons(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzuv: void zzb()
io.grpc.LoadBalancer$Subchannel: java.util.List getAllAddresses()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List join(java.util.List,java.util.Map)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.google.firebase.firestore.QueryDocumentSnapshot: QueryDocumentSnapshot(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.Document,boolean,boolean)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: EventStoreConfig()
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task startActivityForSignInWithProvider(android.app.Activity,com.google.firebase.auth.FederatedAuthProvider)
com.google.firestore.v1.Document: void access$800(com.google.firestore.v1.Document,com.google.protobuf.Timestamp)
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
com.google.firebase.components.Component: boolean isEagerInDefaultApp()
com.google.protobuf.MessageSchema: void mergeSingleField(java.lang.Object,java.lang.Object,int)
com.google.android.gms.maps.internal.zzs: zzs()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setProjectId(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
io.grpc.internal.GrpcUtil: GrpcUtil()
com.google.android.gms.location.LocationRequest: long getMaxWaitTime()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
com.google.firebase.encoders.proto.LengthCountingOutputStream: void write(byte[])
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder newBuilder()
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: void run()
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.firebase.firestore.model.ObjectValue: com.google.firebase.firestore.model.ObjectValue fromMap(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzsb: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.EventLoop: long delta(boolean)
io.grpc.internal.ForwardingManagedChannel: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: com.google.firestore.v1.ArrayValue$Builder coercedFieldValuesArray(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zzbh zzb()
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse getDefaultInstance()
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.Integer getVisibility()
com.google.android.gms.internal.firebase-auth-api.zzbq: com.google.android.gms.internal.firebase-auth-api.zzbn zzb()
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator getOverflowIterator()
com.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)
com.google.firebase.messaging.MessagingAnalytics: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType getMessageTypeForFirelog(android.os.Bundle)
com.google.android.gms.location.LocationSettingsRequest: LocationSettingsRequest(java.util.List,boolean,boolean,com.google.android.gms.location.zzae)
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
com.google.protobuf.ProtobufArrayList: java.lang.Object remove(int)
com.google.android.gms.internal.firebase-auth-api.zzzs: boolean zzp()
io.grpc.CallOptions: io.grpc.CallOptions withDeadline(io.grpc.Deadline)
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: void add(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.SnapshotVersion)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
com.google.firebase.auth.internal.zzz: int describeContents()
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzkz zzc()
com.tekartik.sqflite.SqflitePlugin: boolean insert(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.android.gms.common.internal.zal: int zab(android.content.Context,com.google.android.gms.common.api.Api$Client)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onInputConnectionUnlocked()
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
com.google.firebase.firestore.local.MemoryPersistence: MemoryPersistence()
com.google.android.gms.dynamite.zzh: zzh()
io.grpc.internal.SharedResourcePool: java.lang.Object returnObject(java.lang.Object)
okio.AsyncTimeout$Watchdog: AsyncTimeout$Watchdog()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
com.google.firestore.v1.Value: com.google.firestore.v1.Value$ValueTypeCase getValueTypeCase()
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
com.google.android.gms.tasks.zzv: zzv(com.google.android.gms.common.api.internal.LifecycleFragment)
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zze()
com.google.android.gms.internal.firebase-auth-api.zznw: int zza()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.google.protobuf.NioByteString: byte byteAt(int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzij zzb()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setMethod(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmv: com.google.android.gms.internal.firebase-auth-api.zzmv zzd(int)
com.google.protobuf.CodedOutputStream: void writeSFixed64NoTag(long)
okio.SegmentedByteString: java.lang.String toString()
com.google.firebase.firestore.local.SQLiteBundleCache: SQLiteBundleCache(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.MapValue getMapValue()
io.grpc.LoadBalancer$ResolvedAddresses: LoadBalancer$ResolvedAddresses(java.util.List,io.grpc.Attributes,java.lang.Object,io.grpc.LoadBalancer$1)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzL(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.firebase.firestore.remote.FirestoreChannel: com.google.firebase.firestore.FirebaseFirestoreException exceptionFromStatus(io.grpc.Status)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
com.google.android.gms.maps.model.Marker: void setFlat(boolean)
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
io.flutter.plugins.firebase.firestore.streamhandler.DocumentSnapshotsStreamHandler: DocumentSnapshotsStreamHandler()
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
okio.Okio: okio.BufferedSource buffer(okio.Source)
io.grpc.internal.MessageFramer: void flush()
com.google.firebase.firestore.model.FieldIndex: com.google.firebase.firestore.model.FieldIndex create(int,java.lang.String,java.util.List,com.google.firebase.firestore.model.FieldIndex$IndexState)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzn(byte[],long,byte)
com.google.firebase.encoders.FieldDescriptor$Builder: FieldDescriptor$Builder(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznv: com.google.android.gms.internal.firebase-auth-api.zznv zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State addActiveHedge(io.grpc.internal.RetriableStream$Substream)
io.grpc.internal.InternalSubchannel: void updateAddresses(java.util.List)
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: com.google.firebase.firestore.core.ViewSnapshot access$100(com.google.firebase.firestore.core.EventManager$QueryListenersInfo)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
com.google.android.datatransport.cct.internal.ClientInfo: ClientInfo()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder()
io.grpc.okhttp.OkHttpClientTransport$3: OkHttpClientTransport$3(io.grpc.okhttp.OkHttpClientTransport)
io.grpc.okhttp.internal.Platform$3: java.lang.reflect.Method run()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
com.google.common.collect.RegularImmutableList: int internalArrayStart()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
com.google.firebase.database.collection.ArraySortedMap: int findKeyOrInsertPosition(java.lang.Object)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: java.lang.String toString()
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzo(java.lang.Object,java.lang.Object)
io.grpc.internal.ManagedChannelImpl: boolean access$1700(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.firestore.model.mutation.VerifyMutation: boolean equals(java.lang.Object)
com.google.android.gms.internal.maps.zzv: void zzA(float)
io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1200(io.grpc.internal.ManagedChannelImpl)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: AutoValue_LogEvent(long,java.lang.Integer,long,byte[],java.lang.String,long,com.google.android.datatransport.cct.internal.NetworkConnectionInfo)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
io.grpc.okhttp.AsyncSink: void close()
com.google.protobuf.WireFormat$FieldType$1: WireFormat$FieldType$1(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getEndCap()
io.grpc.okhttp.OkHttpClientTransport: void initTransportTracer()
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzO(java.lang.Object,java.lang.Object,int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType forNumber(int)
com.google.firestore.v1.TransactionOptions$ReadWrite: TransactionOptions$ReadWrite()
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzmo zza(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)
com.google.android.gms.maps.model.Polygon: void setStrokeWidth(float)
com.google.android.gms.internal.firebase-auth-api.zzadl: void zzg(int)
io.grpc.okhttp.OkHttpClientTransport$4$1: OkHttpClientTransport$4$1(io.grpc.okhttp.OkHttpClientTransport$4)
com.google.firebase.messaging.FirebaseMessaging: FirebaseMessaging(com.google.firebase.FirebaseApp,com.google.firebase.iid.internal.FirebaseInstanceIdInternal,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber,com.google.firebase.messaging.Metadata,com.google.firebase.messaging.GmsRpc,java.util.concurrent.Executor,java.util.concurrent.Executor,java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzal: int indexOf(java.lang.Object)
io.grpc.internal.AbstractReadableBuffer: int readInt()
com.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task getInitialMessage(java.util.Map)
com.google.firebase.auth.internal.zzf: void zzd(com.google.firebase.auth.internal.zzf,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.internal.zzbm,android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference getDefaultInstance()
okio.ByteString: void write(okio.Buffer)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
io.grpc.internal.RetriableStream$4: RetriableStream$4(io.grpc.internal.RetriableStream,io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzfz: zzfz(java.lang.Object,int)
com.google.android.gms.common.api.internal.zaad: void zaf()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzlt: zzlt()
androidx.fragment.app.FragmentManagerImpl$6: FragmentManagerImpl$6(androidx.fragment.app.FragmentManagerImpl)
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
com.google.protobuf.TextFormatEscaper$1: int size()
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment: ActivityScope$StopListenerSupportFragment()
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: void onMethodCall$lambda-0(io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl)
com.google.firebase.firestore.model.ObjectValue: java.lang.String toString()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.gms.common.api.internal.zap: void zag(com.google.android.gms.common.api.internal.zap)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.model.FieldPath getFirstOrderByField()
com.google.android.gms.internal.firebase-auth-api.zzadg: boolean zzj(java.lang.Object,java.lang.Object)
io.grpc.internal.GrpcUtil$6: io.grpc.InternalLogId getLogId()
com.google.android.gms.maps.GoogleMap: void setOnPolygonClickListener(com.google.android.gms.maps.GoogleMap$OnPolygonClickListener)
com.google.android.gms.internal.firebase-auth-api.zzyu: com.google.android.gms.internal.firebase-auth-api.zzyu zzb(org.json.JSONObject)
io.flutter.plugins.googlemaps.TileOverlayController: void remove()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: UnsafeUtil$Android64MemoryAccessor(sun.misc.Unsafe)
com.google.android.gms.internal.firebase-auth-api.zzcv: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.IntArrayList: boolean add(java.lang.Object)
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
com.google.android.gms.common.api.internal.zan: zan(com.google.android.gms.common.api.internal.zao,android.app.Dialog)
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
com.google.android.gms.internal.firebase-auth-api.zzzt: java.lang.String zza()
com.squareup.okhttp.HttpUrl$Builder: HttpUrl$Builder()
com.google.firebase.firestore.proto.Target: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void onReceivedRequestError(java.lang.Long,java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex: boolean add(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.common.internal.GmsLogger: boolean canLog(int)
io.grpc.LoadBalancerRegistry: void refreshProviderMap()
com.google.firebase.firestore.model.mutation.Precondition: int hashCode()
com.google.firebase.messaging.Metadata: Metadata(android.content.Context)
io.grpc.internal.DelayedClientCall$1: DelayedClientCall$1(io.grpc.internal.DelayedClientCall,io.grpc.ClientCall$Listener,io.grpc.Metadata)
io.grpc.util.RoundRobinLoadBalancer: boolean isReady(io.grpc.LoadBalancer$Subchannel)
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newCachedSingleThreadExecutor(java.lang.String)
io.grpc.NameResolver: NameResolver()
com.google.firebase.auth.internal.zzz: void writeToParcel(android.os.Parcel,int)
com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzh(com.google.android.gms.internal.firebase-auth-api.zzgt)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingService: void handleMessageIntent(android.content.Intent)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.TargetCache getTargetCache()
com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFromUtf8(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlaysController: void clearTileCache(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzoe: zzoe(byte[],int)
com.google.android.gms.maps.MapsInitializer: int initialize(android.content.Context,com.google.android.gms.maps.MapsInitializer$Renderer,com.google.android.gms.maps.OnMapsSdkInitializedCallback)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: io.grpc.Status getCause()
io.grpc.okhttp.internal.framed.Huffman: io.grpc.okhttp.internal.framed.Huffman get()
com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicIntegerMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)
androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.protobuf.DoubleArrayList: DoubleArrayList()
com.google.firebase.firestore.core.Target: Target(com.google.firebase.firestore.model.ResourcePath,java.lang.String,java.util.List,java.util.List,long,com.google.firebase.firestore.core.Bound,com.google.firebase.firestore.core.Bound)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void setWebViewClient(java.lang.Long,java.lang.Long)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzabx: com.google.android.gms.internal.firebase-auth-api.zzabt zzu()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.lang.String getStoredUserAgentString(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
com.google.protobuf.UnsafeUtil: void access$900(java.lang.Object,long,boolean)
com.google.android.gms.internal.firebase-auth-api.zzaci: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.fragment.app.Fragment: boolean isHideReplaced()
io.grpc.internal.InternalSubchannel: io.grpc.ChannelLogger access$200(io.grpc.internal.InternalSubchannel)
io.grpc.okhttp.Utils: Utils()
com.google.android.gms.internal.firebase-auth-api.zzvk: zzvk(java.lang.String)
com.google.protobuf.ByteString$BoundedByteString: int getOffsetIntoBytes()
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
com.google.android.gms.maps.zzag: void onResume()
io.grpc.internal.ServiceConfigUtil: java.util.List unwrapLoadBalancingConfigList(java.util.List)
com.google.firestore.v1.StructuredQuery: void access$9800(com.google.firestore.v1.StructuredQuery,com.google.protobuf.Int32Value)
io.grpc.internal.OobChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.firestore.v1.WriteRequest: void setStreamToken(com.google.protobuf.ByteString)
io.grpc.HttpConnectProxiedSocketAddress: boolean equals(java.lang.Object)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.firebase-auth-api.zznc: zznc()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int pushLimit(int)
androidx.collection.ArraySet$1: int colGetSize()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore: java.util.Map access$200(java.lang.Throwable)
com.google.android.gms.internal.auth-api-phone.zzx: zzx(com.google.android.gms.internal.auth-api-phone.zzu)
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString getResumeToken()
com.google.firebase.installations.local.PersistedInstallation: org.json.JSONObject readJSONFromFile()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: AutoValue_AndroidClientInfo$Builder()
io.grpc.internal.NoopClientStream: void setMaxOutboundMessageSize(int)
com.google.protobuf.MapEntryLite: void writeTo(com.google.protobuf.CodedOutputStream,com.google.protobuf.MapEntryLite$Metadata,java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse access$000()
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
com.google.android.gms.cloudmessaging.zzo: boolean zzb()
com.google.firebase.firestore.local.LruGarbageCollector$RollingSequenceNumberBuffer: void addElement(java.lang.Long)
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: AutoValue_BatchedLogRequest(java.util.List)
com.google.android.gms.maps.model.CameraPosition$Builder: CameraPosition$Builder()
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter$Builder newBuilder()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedMap getDocumentsMatchingQuery(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.database.collection.ImmutableSortedSet)
io.grpc.ForwardingChannelBuilder: io.grpc.ManagedChannelBuilder keepAliveTime(long,java.util.concurrent.TimeUnit)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.maps.internal.zza: byte zza(java.lang.Boolean)
io.flutter.plugins.googlemaps.MarkerBuilder: void setPosition(com.google.android.gms.maps.model.LatLng)
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzjh: com.google.android.gms.internal.firebase-auth-api.zzjh zzb(com.google.android.gms.internal.firebase-auth-api.zzjl)
io.flutter.embedding.android.FlutterTextureView: void init()
com.google.firestore.v1.DocumentRemove: java.util.List getRemovedTargetIdsList()
com.google.android.gms.internal.firebase-auth-api.zzoq: void zze(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)
io.grpc.internal.DnsNameResolver: boolean shouldUseJndi(boolean,boolean,java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task sendEmailVerification(java.util.Map)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.SynchronizationContext getSynchronizationContext()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.common.internal.zzj: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzwi: void zzc(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: java.util.Set getFlags()
com.google.firebase.firestore.core.Query: long getLimit()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: com.google.android.datatransport.runtime.EventInternal getEvent()
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder setIncrement(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzaaz: long zzk()
com.google.firebase.firestore.core.KeyFieldNotInFilter: KeyFieldNotInFilter(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
com.google.firestore.v1.StructuredQuery$Order$Builder: com.google.firestore.v1.StructuredQuery$Order$Builder setDirection(com.google.firestore.v1.StructuredQuery$Direction)
com.google.firebase.auth.ActionCodeSettings: ActionCodeSettings(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,int,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: boolean zzU(java.lang.Object,long)
io.grpc.CallOptions: io.grpc.CallOptions withWaitForReady()
com.google.android.gms.common.internal.BaseGmsClient: void triggerConnectionSuspended(int)
com.google.android.gms.tasks.zzp: void zzc()
io.grpc.internal.ClientCallImpl$ContextCancellationListener: void cancelled(io.grpc.Context)
com.google.firebase.auth.internal.zzt: java.lang.String getDisplayName()
com.google.android.gms.location.LocationSettingsRequest: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void write(java.nio.ByteBuffer)
com.google.android.gms.maps.model.CircleOptions: double getRadius()
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabx: java.lang.Object zzC(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
com.google.protobuf.RawMessageInfo: RawMessageInfo(com.google.protobuf.MessageLite,java.lang.String,java.lang.Object[])
io.grpc.internal.TransportFrameUtil: byte[][] toRawSerializedHeaders(byte[][])
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceError(com.baseflow.geolocator.errors.ErrorCodes)
com.google.firebase.messaging.NotificationParams: java.lang.String getLocalizationResourceForKey(java.lang.String)
io.grpc.internal.PickFirstLoadBalancerProvider: boolean isAvailable()
io.github.ponnamkarthik.toast.fluttertoast.MethodCallHandlerImpl: void resetToast()
com.google.android.gms.internal.firebase-auth-api.zzaao: int zzc()
com.lyokone.location.FlutterLocation: void createLocationRequest()
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$FieldReference getField()
com.google.android.gms.internal.firebase-auth-api.zzacw: zzacw(java.util.Map)
com.google.firebase.firestore.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.android.gms.auth.api.phone.zza: zza()
com.google.android.gms.internal.firebase-auth-api.zzfy: java.lang.Class zzb()
com.google.android.gms.internal.firebase-auth-api.zzzg: com.google.android.gms.internal.firebase-auth-api.zzzg zze(java.lang.String)
io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval: ManagedChannelImpl$RealChannel$PendingCall$PendingCallRemoval(io.grpc.internal.ManagedChannelImpl$RealChannel$PendingCall)
io.grpc.internal.AbstractClientStream: void halfClose()
com.google.firebase.FirebaseApp: boolean isDataCollectionDefaultEnabled()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task reloadUser(java.util.Map)
com.google.android.gms.common.api.Scope: int hashCode()
io.grpc.okhttp.OkHttpChannelProvider: int priority()
com.google.android.gms.internal.firebase-auth-api.zzor: byte[] zzb(byte[],byte[])
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.SnapshotVersion decodeVersion(com.google.protobuf.Timestamp)
com.google.android.gms.maps.model.CircleOptions: boolean isVisible()
com.google.firestore.v1.Target$QueryTarget: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: int getLargestBatchId()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.common.collect.ImmutableSet: int chooseTableSize(int)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Write encodeMutation(com.google.firebase.firestore.model.mutation.Mutation)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
com.google.common.base.Splitter$1: Splitter$1(com.google.common.base.CharMatcher)
io.grpc.internal.RetriableStream$BufferSizeTracer: void outboundWireSize(long)
com.google.protobuf.MessageSchema: void writeTo(java.lang.Object,com.google.protobuf.Writer)
com.google.android.gms.internal.firebase-auth-api.zznw: com.google.android.gms.internal.firebase-auth-api.zznv zzb()
com.google.protobuf.CodedOutputStreamWriter: void writeSInt64(int,long)
kotlinx.coroutines.Active: java.lang.String toString()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)
com.google.protobuf.ExtensionRegistryLite: ExtensionRegistryLite(boolean)
io.grpc.internal.MessageFramer: void releaseBuffer()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: int writeBytes(int,io.grpc.okhttp.OutboundFlowController$WriteStatus)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
com.google.android.gms.maps.internal.zzao: zzao()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.grpc.LoadBalancer$ResolvedAddresses: boolean equals(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: java.lang.Object get()
com.google.android.gms.maps.zzu: void zzb(int)
io.grpc.internal.JndiResourceResolverFactory$JndiResourceResolver: JndiResourceResolverFactory$JndiResourceResolver(io.grpc.internal.JndiResourceResolverFactory$RecordFetcher)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String getSound()
com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)
com.google.android.gms.internal.firebase-auth-api.zzxc: java.lang.String zzb()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readSInt32()
io.grpc.Deadline: int compareTo(io.grpc.Deadline)
com.google.android.gms.internal.firebase-auth-api.zznq: int zzb(int)
com.google.android.gms.internal.firebase-auth-api.zzzm: zzzm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxs: org.json.JSONObject zza()
com.google.firebase.firestore.model.Values: int compareTimestamps(com.google.protobuf.Timestamp,com.google.protobuf.Timestamp)
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel(kotlin.jvm.functions.Function1)
com.google.protobuf.ByteString$LeafByteString: boolean isBalanced()
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: void removeAll(java.util.Collection)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
com.google.firebase.database.collection.LLRBBlackValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setApiKey(java.lang.String)
io.flutter.plugins.webviewflutter.InstanceManager: InstanceManager()
com.squareup.okhttp.Protocol: java.lang.String toString()
com.google.android.gms.internal.maps.zzy: void zzA(float)
com.google.android.gms.internal.firebase-auth-api.zzij: zzij(com.google.android.gms.internal.firebase-auth-api.zzii)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzJ(java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.common.io.BaseEncoding$StandardBaseEncoding: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)
com.google.android.gms.internal.firebase-auth-api.zzrn: java.lang.Object createFromParcel(android.os.Parcel)
io.grpc.internal.ManagedChannelImpl: io.grpc.LoadBalancer$SubchannelPicker access$1400(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.firestore.proto.MaybeDocument$Builder: MaybeDocument$Builder()
com.google.firebase.database.collection.LLRBEmptyNode: boolean isEmpty()
com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)
com.google.firebase.firestore.local.MemoryIndexManager: void addToCollectionParentIndex(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.location.LocationSettingsStates: boolean isBleUsable()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void settings(io.grpc.okhttp.internal.framed.Settings)
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferTag(int,int)
com.google.firebase.messaging.TopicsSubscriber: boolean isSyncScheduledOrRunning()
com.google.firebase.firestore.remote.TargetChange: boolean isCurrent()
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.model.DatabaseId getDatabaseId()
io.flutter.embedding.android.FlutterSurfaceView: void init()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
io.flutter.plugins.webviewflutter.InputAwareWebView: boolean checkInputConnectionProxy(android.view.View)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: com.google.firebase.firestore.model.MutableDocument get(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.common.GoogleApiAvailability: void zaf(android.content.Context)
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: com.google.firebase.firestore.QueryDocumentSnapshot next()
io.grpc.InternalChannelz: java.util.logging.Logger access$400()
com.google.firebase.installations.FirebaseInstallations: void updateCacheFid(java.lang.String)
com.google.firebase.firestore.model.mutation.PatchMutation: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzad: zzad(com.google.android.gms.internal.firebase-auth-api.zzaf,java.lang.CharSequence)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: android.os.IBinder getWindowToken()
com.google.android.gms.internal.firebase-auth-api.zzxy: zzxy(com.google.firebase.auth.EmailAuthCredential,java.lang.String)
androidx.lifecycle.LiveData$1: void run()
com.google.firebase.auth.zzt: zzt(com.google.firebase.auth.FirebaseAuth)
com.google.firebase.firestore.model.mutation.DeleteMutation: com.google.firebase.firestore.model.mutation.FieldMask applyToLocalView(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask,com.google.firebase.Timestamp)
com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)
com.google.android.gms.tasks.zzj: zzj(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
com.google.android.gms.internal.firebase-auth-api.zzcn: java.lang.String zzc()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
io.grpc.okhttp.internal.framed.Hpack: java.util.Map access$200()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: java.util.List getComponents()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialPolylines(java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.internal.firebase-auth-api.zzgi: void zze(com.google.android.gms.internal.firebase-auth-api.zzgo)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse readCreateResponse(java.net.HttpURLConnection)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: AutoValue_LogRequest(long,long,com.google.android.datatransport.cct.internal.ClientInfo,java.lang.Integer,java.lang.String,java.util.List,com.google.android.datatransport.cct.internal.QosTier)
com.google.android.gms.internal.firebase-auth-api.zzrg: zzrg(java.lang.String,java.lang.String)
com.google.protobuf.ArrayDecoders: int decodePackedBoolList(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void addReference(com.google.firebase.firestore.model.DocumentKey)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
io.grpc.okhttp.internal.framed.Hpack$Reader: void headerTableSizeSetting(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: void dispose(java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.protobuf.Utf8$Processor: boolean isValidUtf8(byte[],int,int)
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(com.squareup.okhttp.HttpUrl)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.CompositeFilter$Operator decodeCompositeFilterOperator(com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator)
com.google.android.gms.internal.firebase-auth-api.zziz: void zzg(com.google.android.gms.internal.firebase-auth-api.zziz,com.google.android.gms.internal.firebase-auth-api.zzjc)
com.google.firebase.firestore.core.LimboDocumentChange: LimboDocumentChange(com.google.firebase.firestore.core.LimboDocumentChange$Type,com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.local.SQLiteMutationQueue: java.util.List getAllMutationBatchesAffectingDocumentKeys(java.lang.Iterable)
io.grpc.okhttp.AsyncSink: AsyncSink(io.grpc.internal.SerializingExecutor,io.grpc.okhttp.ExceptionHandlingFrameWriter$TransportExceptionHandler)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void onServiceDisconnected(android.content.ComponentName)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: ProtobufDataEncoderContext(java.io.OutputStream,java.util.Map,java.util.Map,com.google.firebase.encoders.ObjectEncoder)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean requiresSignIn()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder: void writeInfinity()
com.google.android.gms.internal.firebase-auth-api.zzaem: boolean zzg(java.lang.Object,long)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: boolean hasNext()
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.database.collection.LLRBBlackValueNode: boolean isRed()
io.grpc.okhttp.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.gms.signin.zab: zab()
com.google.firestore.v1.CommitRequest: void access$500(com.google.firestore.v1.CommitRequest,com.google.firestore.v1.Write)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions fillColor(int)
com.google.android.gms.common.api.zad: zad()
io.grpc.internal.AbstractClientStream: void setMaxOutboundMessageSize(int)
okio.Okio$4: void timedOut()
com.google.protobuf.LongArrayList: void addLong(int,long)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zza(int,java.util.List,boolean)
com.google.firestore.v1.TargetChange$TargetChangeType$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.String zzu()
com.google.firebase.firestore.core.Target: com.google.firebase.firestore.core.Bound getEndAt()
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: ThreadedInputConnectionProxyAdapterView(android.view.View,android.view.View,android.os.Handler)
com.google.firebase.installations.AutoValue_InstallationTokenResult: int hashCode()
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
com.google.protobuf.UnknownFieldSetLite: void printWithIndent(java.lang.StringBuilder,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: boolean isConnected()
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
io.grpc.internal.CompositeReadableBuffer$1: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin$1: FlutterFirebaseAuthPlugin$1(io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin,com.google.firebase.auth.FirebaseAuth)
com.google.android.gms.stats.zzc: zzc(com.google.android.gms.stats.zzb)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Object[] createTypedArray(android.os.Parcel,int,android.os.Parcelable$Creator)
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zzc(com.google.firebase.auth.ActionCodeSettings$Builder)
com.google.android.datatransport.runtime.logging.Logging: void i(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.auth.internal.zzbf: zzbf()
com.google.firebase.messaging.NotificationParams: java.lang.Integer getInteger(java.lang.String)
com.google.firestore.v1.ListenRequest: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzzb: com.google.android.gms.internal.firebase-auth-api.zzyu zzb()
com.google.android.gms.internal.firebase-auth-api.zznw: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.Projection getProjection()
com.google.android.gms.internal.common.zzb: zzb(java.lang.String)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer getDelegate()
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.baseflow.geolocator.GeolocatorPlugin: void deregisterListeners()
com.google.android.gms.common.internal.BaseGmsClient: boolean zzo(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query orderBy(com.google.firebase.firestore.FieldPath,com.google.firebase.firestore.Query$Direction)
com.google.firebase.firestore.FirebaseFirestoreSettings: java.lang.String toString()
com.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)
kotlin.collections.EmptyList: int getSize()
com.google.firebase.firestore.FirebaseFirestoreSettings: FirebaseFirestoreSettings(com.google.firebase.firestore.FirebaseFirestoreSettings$Builder)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTiltGesturesEnabled(boolean)
com.google.android.datatransport.cct.internal.LogRequest$Builder: LogRequest$Builder()
androidx.window.core.Version$Companion: Version$Companion()
com.squareup.okhttp.HttpUrl: int defaultPort(java.lang.String)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getEndpointPackageName()
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] values()
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
com.google.firebase.firestore.remote.ExistenceFilter: java.lang.String toString()
com.google.protobuf.IntArrayList: java.lang.Integer set(int,java.lang.Integer)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
com.tekartik.sqflite.SqflitePlugin$2: SqflitePlugin$2(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.SqflitePlugin$BgResult,com.tekartik.sqflite.Database)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zah()
com.google.android.gms.safetynet.zzf: void writeToParcel(android.os.Parcel,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
io.grpc.internal.SerializingExecutor: void run()
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzxh: boolean zzd(java.lang.String,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,android.app.Activity,java.util.concurrent.Executor)
okio.Buffer: int read(java.nio.ByteBuffer)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: void putBoolean(java.lang.Object,long,boolean)
com.google.common.io.BaseEncoding$Base16Encoding: int decodeTo(byte[],java.lang.CharSequence)
com.google.type.LatLng: com.google.type.LatLng access$000()
com.google.common.base.Throwables: java.lang.reflect.Method getGetMethod()
kotlinx.coroutines.JobSupport: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzku: void zzg(com.google.android.gms.internal.firebase-auth-api.zzku,com.google.android.gms.internal.firebase-auth-api.zzko)
com.google.protobuf.Android: java.lang.Class getClassForName(java.lang.String)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: boolean equals(java.lang.Object)
com.google.firebase.Timestamp: int getNanoseconds()
com.google.android.gms.maps.internal.zzac: zzac()
com.google.android.gms.tasks.zzf: void onSuccess(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyy: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
com.google.android.gms.internal.location.zza: zza(android.os.IBinder,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zztr: void zzb(java.lang.Object)
com.baseflow.geolocator.permission.PermissionUtils: boolean hasPermissionInManifest(android.content.Context,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean)
com.google.firebase.firestore.remote.WatchStream: void watchQuery(com.google.firebase.firestore.local.TargetData)
com.google.android.gms.internal.maps.zzh: com.google.android.gms.internal.maps.zzi zzb(android.os.IBinder)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.lang.String toString()
io.grpc.internal.RetriableStream$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.google.firebase.installations.local.IidStore: java.lang.String createTokenKey(java.lang.String,java.lang.String)
com.google.android.gms.maps.model.CircleOptions: CircleOptions()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
com.google.android.gms.internal.maps.zzae: java.lang.String zzg()
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
androidx.core.util.LogWriter: void flushBuilder()
com.google.android.gms.internal.firebase-auth-api.zzde: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.BackoffPolicy access$7102(io.grpc.internal.ManagedChannelImpl,io.grpc.internal.BackoffPolicy)
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zzi zza(android.content.pm.PackageInfo,com.google.android.gms.common.zzi[])
com.google.android.gms.internal.firebase-auth-api.zzaaj: zzaaj(boolean[],int)
com.google.firebase.firestore.remote.FirestoreChannel: java.lang.String getGoogApiClientValue()
com.google.android.gms.maps.internal.zzam: zzam()
io.grpc.internal.ServiceConfigUtil: java.lang.Integer getMaxResponseMessageBytesFromMethodConfig(java.util.Map)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
com.google.firestore.v1.DocumentDelete$Builder: DocumentDelete$Builder(com.google.firestore.v1.DocumentDelete$1)
com.google.common.collect.RegularImmutableSet: boolean isHashCodeFast()
com.google.firebase.firestore.DocumentReference: boolean equals(java.lang.Object)
io.grpc.ClientInterceptors: io.grpc.Channel intercept(io.grpc.Channel,java.util.List)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: int getNumber()
io.grpc.okhttp.internal.ConnectionSpec$Builder: ConnectionSpec$Builder(io.grpc.okhttp.internal.ConnectionSpec)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tekartik.sqflite.operation.BaseReadOperation: java.lang.Boolean getInTransaction()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder setUrl(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyn: java.lang.String zza()
com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context,int)
com.google.android.gms.common.internal.GmsLogger: void d(java.lang.String,java.lang.String)
com.google.firebase.auth.internal.zzb: zzb(com.google.firebase.auth.internal.zzf,com.google.android.gms.tasks.TaskCompletionSource,com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.internal.zzbm,android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzri: zzri(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.tasks.zzf: void onCanceled()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzT(int)
com.google.android.gms.internal.firebase-auth-api.zzaaw: com.google.android.gms.internal.firebase-auth-api.zzaau zzj()
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: MoreObjects$ToStringHelper$ValueHolder()
io.grpc.internal.ManagedChannelImpl: void enterIdle()
com.google.android.gms.maps.model.PolylineOptions: int getColor()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcelable(android.os.Parcel,int,android.os.Parcelable,int,boolean)
com.google.android.gms.internal.firebase-auth-api.zzen: java.lang.Class zzb()
com.google.android.gms.internal.firebase-auth-api.zzkx: zzkx()
io.grpc.okhttp.internal.framed.Http2$Reader: void readPing(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite$Builder createBuilder(com.google.protobuf.GeneratedMessageLite)
com.google.firebase.firestore.core.View: com.google.firebase.firestore.core.View$DocumentChanges computeDocChanges(com.google.firebase.database.collection.ImmutableSortedMap,com.google.firebase.firestore.core.View$DocumentChanges)
com.google.android.gms.internal.location.zzq: zzq()
com.google.android.gms.internal.firebase-auth-api.zztj: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzhn: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzdt: byte[] zza(byte[],byte[])
com.google.protobuf.BinaryReader$SafeHeapReader: void readSInt64List(java.util.List)
okio.Buffer$1: Buffer$1(okio.Buffer)
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzmd zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
com.google.android.gms.common.api.internal.zabq: void zaq()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.firestore.core.ViewSnapshot fromInitialDocuments(com.google.firebase.firestore.core.Query,com.google.firebase.firestore.model.DocumentSet,com.google.firebase.database.collection.ImmutableSortedSet,boolean,boolean)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zaae zaj(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.android.gms.common.api.Status: java.lang.String toString()
io.grpc.InternalChannelz: void addSubchannel(io.grpc.InternalInstrumented)
com.google.protobuf.RawMessageInfo: com.google.protobuf.MessageLite getDefaultInstance()
com.google.firebase.messaging.MessagingAnalytics: com.google.firebase.messaging.reporting.MessagingClientEvent eventToProto(com.google.firebase.messaging.reporting.MessagingClientEvent$Event,android.content.Intent)
io.flutter.plugins.webviewflutter.InputAwareWebView: void resetInputConnection()
com.google.protobuf.UnsafeUtil: java.lang.Object getObject(java.lang.Object,long)
com.google.firestore.v1.Document: void setUpdateTime(com.google.protobuf.Timestamp)
io.flutter.plugins.googlemaps.MarkerBuilder: void setInfoWindowText(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzqs: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzf(java.lang.Object)
com.google.firestore.v1.FirestoreGrpc: com.google.firestore.v1.FirestoreGrpc$FirestoreStub newStub(io.grpc.Channel)
io.grpc.internal.ChannelLoggerImpl: java.util.logging.Level toJavaLogLevel(io.grpc.ChannelLogger$ChannelLogLevel)
com.google.firebase.firestore.core.SyncEngine: void removeAndCleanupTarget(int,io.grpc.Status)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64SlowPath()
com.google.android.gms.internal.firebase-auth-api.zzjf: int zza()
io.grpc.ConnectivityStateInfo: io.grpc.ConnectivityStateInfo forTransientFailure(io.grpc.Status)
io.grpc.CompositeCallCredentials: io.grpc.CallCredentials access$000(io.grpc.CompositeCallCredentials)
com.google.firebase.firestore.model.BasePath: int compareTo(java.lang.Object)
com.tekartik.sqflite.operation.BatchOperation: void handleErrorContinue(java.util.List)
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
com.google.firestore.v1.Target$QueryTarget$Builder: Target$QueryTarget$Builder()
com.google.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()
io.grpc.okhttp.internal.framed.Http2: okio.ByteString access$000()
io.grpc.okhttp.OkHttpClientStream: java.lang.String access$1400(io.grpc.okhttp.OkHttpClientStream)
io.flutter.plugins.firebase.messaging.JobIntentService: boolean doStopCurrentWork()
io.grpc.okhttp.OkHttpReadableBuffer: void close()
com.google.common.base.Throwables: java.lang.reflect.Method getSizeMethod()
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabt zzj(com.google.android.gms.internal.firebase-auth-api.zzabx)
com.google.gson.stream.JsonReader: int doPeek()
io.grpc.internal.AbstractStream$TransportState: void optimizeForDirectExecutor()
com.google.protobuf.CodedOutputStreamWriter: void writeBoolList(int,java.util.List,boolean)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
io.grpc.okhttp.OkHttpClientTransport$2: OkHttpClientTransport$2(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.maps.GoogleMap: boolean setMapStyle(com.google.android.gms.maps.model.MapStyleOptions)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onDestroy()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzD(com.google.android.gms.internal.firebase-auth-api.zzrw,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.protobuf.UnknownFieldSetLite: void ensureCapacity()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.firebase.messaging.FirebaseMessaging: void startSyncIfNecessary()
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setMapper(com.google.android.gms.common.api.internal.StatusExceptionMapper)
com.google.android.gms.internal.firebase-auth-api.zzbe: java.lang.String toString()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
com.lyokone.location.NotificationOptions: java.lang.String getTitle()
com.google.android.gms.maps.internal.zzby: zzby(android.os.IBinder)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query limitToLast(long)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeEscapedByteDescending(byte)
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType[] values()
io.grpc.internal.CompositeReadableBuffer: CompositeReadableBuffer()
com.google.firebase.auth.internal.zzj: android.content.SharedPreferences zzg(android.content.Context,java.lang.String)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: int read(byte[],int,int)
com.google.android.gms.common.api.internal.zaf: void zac(com.google.android.gms.common.api.internal.zabq)
com.google.protobuf.UnknownFieldSetLiteSchema: void writeAsMessageSetTo(java.lang.Object,com.google.protobuf.Writer)
com.tekartik.sqflite.operation.BaseReadOperation: com.tekartik.sqflite.SqlCommand getSqlCommand()
io.flutter.plugins.googlemaps.GoogleMapController: void dispose()
com.google.android.gms.internal.firebase-auth-api.zzabr: void removeRange(int,int)
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl$WebStorageCreator: android.webkit.WebStorage createWebStorage()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: void runInternal()
com.google.firebase.firestore.GeoPoint: java.lang.String toString()
com.google.firebase.firestore.local.SQLitePersistence: boolean isStarted()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zaq(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: boolean markSupported()
com.google.android.gms.common.data.zaf: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.channels.AbstractChannel$Itr: boolean hasNextResult(java.lang.Object)
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
com.google.firebase.firestore.core.UserData$ParseContext: com.google.firebase.firestore.core.UserData$Source getDataSource()
io.grpc.okhttp.OkHttpClientTransport: void startStream(io.grpc.okhttp.OkHttpClientStream)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzla: void zzi(com.google.android.gms.internal.firebase-auth-api.zzla,int)
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
com.google.firebase.firestore.local.SQLiteSchema: void addReadTime()
com.google.protobuf.RopeByteString$PieceIterator: com.google.protobuf.ByteString$LeafByteString getLeafByLeft(com.google.protobuf.ByteString)
com.google.firestore.v1.Write$Builder: Write$Builder(com.google.firestore.v1.Write$1)
com.google.firebase.messaging.FirebaseMessagingService: android.content.Intent getStartCommandIntent(android.content.Intent)
io.grpc.okhttp.OkHttpClientTransport: java.util.Map buildErrorCodeToStatusMap()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
com.google.android.gms.internal.firebase-auth-api.zzcs: java.util.Map zzc()
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$ActivityResultListener getLocationActivityResultListener()
com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getGetServiceRequestExtraArgs()
com.google.android.gms.common.api.GoogleApiActivity: android.content.Intent zaa(android.content.Context,android.app.PendingIntent,int,boolean)
io.grpc.internal.RetriableStream$Throttle: boolean onQualifiedFailureThenCheckIsAboveThreshold()
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: byte[] readPayload(long)
io.grpc.Metadata$Key: java.util.BitSet generateValidTChars()
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()
com.google.protobuf.CodedOutputStreamWriter: void writeDouble(int,double)
io.grpc.internal.InternalSubchannel$TransportListener$1: void run()
com.google.android.gms.internal.maps.zzc: zzc()
com.google.firebase.auth.zzf: zzf()
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: void run()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)
com.google.android.gms.internal.firebase-auth-api.zzqd: zzqd()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3502(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.protobuf.NullValue$1: NullValue$1()
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.FirebaseUserMetadata getMetadata()
androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()
io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerRegistry getDefaultRegistry()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseCoreHostApi$2: void success(java.util.List)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzf(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.AuthCredential)
com.google.android.gms.dynamite.zze: int zzb(android.content.Context,java.lang.String,boolean)
io.grpc.internal.ForwardingClientStream: void flush()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void raiseCallbacks(boolean)
com.google.firebase.firestore.core.EventManager: int addQueryListener(com.google.firebase.firestore.core.QueryListener)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
com.tekartik.sqflite.operation.BatchOperation: com.tekartik.sqflite.operation.OperationResult getOperationResult()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzk(com.google.android.gms.internal.firebase-auth-api.zzzd,com.google.android.gms.internal.firebase-auth-api.zzwy)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.IndexManager getIndexManagerForCurrentUser()
com.google.firebase.firestore.model.mutation.SetMutation: int hashCode()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void run()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
io.grpc.internal.KeepAliveManager: io.grpc.internal.KeepAliveManager$State access$000(io.grpc.internal.KeepAliveManager)
com.google.android.gms.common.api.internal.ApiExceptionMapper: ApiExceptionMapper()
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
com.google.firebase.auth.FacebookAuthCredential: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.AbstractMessageLite: void writeTo(java.io.OutputStream)
com.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,java.util.concurrent.Executor)
com.google.android.gms.maps.model.zzh: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase forNumber(int)
com.google.android.gms.internal.firebase-auth-api.zzhw: java.util.Map zza()
io.grpc.internal.AbstractManagedChannelImplBuilder: java.lang.String toString()
io.grpc.internal.ReadableBuffers: io.grpc.internal.ReadableBuffer wrap(byte[],int,int)
kotlin.random.Random: int nextInt()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void removeStoredDate(java.lang.String)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: void onTerminated(io.grpc.internal.InternalSubchannel)
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
com.google.protobuf.NioByteString: int partialHash(int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzhf: int hashCode()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: java.lang.String toString()
androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)
com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(java.lang.Iterable,boolean)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void requestConnection()
io.grpc.okhttp.OkHttpWritableBuffer: int readableBytes()
com.google.android.gms.internal.firebase-auth-api.zzzd: zzzd(java.lang.String,long,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)
com.google.android.gms.common.api.internal.zact: void zaf()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
com.google.firebase.firestore.util.Logger: boolean isDebugEnabled()
com.google.firebase.Timestamp: int compareTo(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzla zze()
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zzno zze()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
io.grpc.NameResolver$Factory: NameResolver$Factory()
com.google.firebase.messaging.WakeLockHolder: boolean isWakefulIntent(android.content.Intent)
com.google.common.collect.RegularImmutableSet: com.google.common.collect.ImmutableList createAsList()
io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry getDefaultInstance()
androidx.window.java.R: R()
com.google.firebase.messaging.MessagingAnalytics: void logToScion(java.lang.String,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.google.firebase.firestore.remote.AbstractStream: void performBackoff()
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLitePersistence$Query query(java.lang.String)
com.google.android.gms.maps.Projection: Projection(com.google.android.gms.maps.internal.IProjectionDelegate)
com.google.firebase.firestore.model.mutation.ServerTimestampOperation: ServerTimestampOperation()
com.squareup.okhttp.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)
io.flutter.plugins.googlemaps.MarkerBuilder: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte[] createByteArray(android.os.Parcel,int)
com.google.firebase.firestore.core.FirestoreClient: void verifyNotTerminated()
com.google.android.gms.common.internal.zaa: java.lang.Object[] newArray(int)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
io.flutter.plugins.firebase.messaging.JobIntentService: void processorFinished()
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.flutter.plugins.googlemaps.CircleController: void setRadius(double)
io.grpc.internal.DnsNameResolver: io.grpc.NameResolver$ConfigOrError parseServiceConfig(java.util.List,java.util.Random,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.firebase.firestore.proto.WriteBatch: int getBatchId()
io.grpc.internal.DelayedClientTransport: void shutdownNow(io.grpc.Status)
com.google.protobuf.ByteString$CodedBuilder: ByteString$CodedBuilder(int)
androidx.lifecycle.LiveData: void onActive()
com.google.android.gms.internal.firebase-auth-api.zzacr: zzacr()
com.google.android.gms.internal.firebase-auth-api.zzwj: void zzb(java.lang.StringBuilder,java.util.Locale)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate scrollBy(float,float)
com.google.android.datatransport.cct.CCTDestination: java.lang.String getAPIKey()
com.baseflow.geolocator.location.LocationManagerClient: void stopPositionUpdates()
com.google.firebase.firestore.proto.WriteBatch$Builder: WriteBatch$Builder()
com.google.android.gms.internal.firebase-auth-api.zztw: void zza(java.lang.String)
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzg: zzg(android.os.Looper)
com.google.android.gms.common.internal.zap: void onComplete(com.google.android.gms.common.api.Status)
com.google.protobuf.Timestamp: void setNanos(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int,boolean)
com.google.android.gms.internal.maps.zzae: boolean zzo()
io.grpc.internal.ChannelTracer: io.grpc.InternalLogId getLogId()
io.grpc.okhttp.OkHttpFrameLogger: void logData(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,okio.Buffer,int,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder: com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder setOp(com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator)
com.google.android.gms.internal.firebase-auth-api.zzsu: zzsu(com.google.android.gms.internal.firebase-auth-api.zztx,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firestore.v1.FirestoreGrpc$1: FirestoreGrpc$1()
com.google.protobuf.CodedOutputStreamWriter: void writeInt64(int,long)
com.google.android.gms.common.api.internal.GoogleApiManager: void zay(com.google.android.gms.common.internal.MethodInvocation,int,long,int)
com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.NonBlockingContext: int getTaskMode()
io.grpc.internal.AbstractClientStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzv(java.util.List)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery access$7100()
com.google.android.datatransport.cct.CctTransportBackend: long getTzOffset()
com.google.firebase.messaging.FirebaseMessaging$AutoInit: FirebaseMessaging$AutoInit(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.events.Subscriber)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setAllowFileAccess(java.lang.Long,java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzin: zzin()
com.google.protobuf.CodedOutputStream: int computeMessageSetExtensionSize(int,com.google.protobuf.MessageLite)
com.google.android.gms.internal.firebase-auth-api.zzdy: zzdy(java.lang.Class)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.Http2Ping access$2800(io.grpc.okhttp.OkHttpClientTransport)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase valueOf(java.lang.String)
io.grpc.internal.MessageFramer: int writeCompressed(java.io.InputStream,int)
com.google.protobuf.MapFieldSchemaLite: boolean isImmutable(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.firebase.firestore.LoadBundleTaskProgress: long getBytesLoaded()
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
com.google.android.gms.tasks.zzn: void zzd(com.google.android.gms.tasks.Task)
com.google.android.gms.internal.firebase-auth-api.zzoo: zzoo(java.security.interfaces.ECPrivateKey)
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzg(com.google.android.gms.internal.firebase-auth-api.zzgt)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: boolean supportsUnsafeArrayOperations()
com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
com.google.android.gms.common.api.internal.LifecycleActivity: LifecycleActivity(android.app.Activity)
com.google.firebase.firestore.LoadBundleTaskProgress: LoadBundleTaskProgress(int,int,long,long,java.lang.Exception,com.google.firebase.firestore.LoadBundleTaskProgress$TaskState)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: android.os.Bundle convertArguments(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzacr: boolean equals(java.lang.Object)
com.google.firebase.firestore.util.Util: java.util.Comparator comparator()
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()
com.google.android.gms.internal.location.zzat: zzat(com.google.android.gms.common.api.internal.ListenerHolder)
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: com.google.firebase.firestore.core.ViewSnapshot access$102(com.google.firebase.firestore.core.EventManager$QueryListenersInfo,com.google.firebase.firestore.core.ViewSnapshot)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.DocumentOverlayCache getDocumentOverlayCache(com.google.firebase.firestore.auth.User)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl$1: WebChromeClientHostApiImpl$WebChromeClientImpl$1(io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl,android.webkit.WebView)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
com.google.firebase.firestore.model.FieldIndex$IndexOffset: int compareTo(java.lang.Object)
com.google.android.gms.internal.maps.zzc: void zzd(android.os.Parcel,android.os.Parcelable)
com.google.android.gms.internal.maps.zzai: com.google.android.gms.internal.maps.zzaj zzc(android.os.IBinder)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: java.lang.Object next()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.google.android.gms.internal.firebase-auth-api.zzba: java.lang.Class zzc()
com.baseflow.geolocator.StreamHandlerImpl: void onCancel(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziy zzb()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
com.google.android.gms.internal.maps.zzae: float zze()
io.grpc.internal.ManagedChannelImpl: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.ManagedChannelImpl,io.grpc.SynchronizationContext$ScheduledHandle)
com.google.android.gms.common.zzh: byte[] zzb()
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch parseFrom(byte[])
com.google.protobuf.BinaryReader$SafeHeapReader: void skipVarintSlowPath()
com.google.firebase.firestore.core.CompositeFilter: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.TileOverlay: void setFadeIn(boolean)
com.google.firestore.v1.CommitResponse$Builder: CommitResponse$Builder(com.google.firestore.v1.CommitResponse$1)
com.google.firebase.internal.InternalTokenResult: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.internal.maps.zzi zzb()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task verifyPhoneNumber(java.util.Map)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: MetadataBackendRegistry(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider,com.google.android.datatransport.runtime.backends.CreationContextFactory)
com.google.android.gms.internal.firebase-auth-api.zzvp: java.lang.String zza()
com.google.firebase.messaging.NotificationParams: org.json.JSONArray getJSONArray(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzb: android.content.Intent zza(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)
com.google.android.gms.location.FusedLocationProviderClient$zza: void zza(com.google.android.gms.internal.location.zzad)
com.google.firebase.messaging.TopicsSubscriber: void awaitTask(com.google.android.gms.tasks.Task)
io.grpc.internal.InternalSubchannel$4: void run()
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
com.google.android.gms.internal.firebase-auth-api.zzabh: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
com.google.android.datatransport.runtime.TransportFactoryImpl: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer)
com.google.android.gms.common.internal.BaseGmsClient: void zzj(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.zzj)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
com.google.android.gms.internal.firebase-auth-api.zzal: boolean equals(java.lang.Object)
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter()
com.google.android.gms.internal.maps.zzy: void zzx(float)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument newFoundDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.ObjectValue)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.google.android.gms.internal.firebase-auth-api.zzpe: zzpe(byte[])
com.google.firebase.firestore.bundle.BundledDocumentMetadata: int hashCode()
com.google.android.gms.maps.model.Polygon: void setPoints(java.util.List)
com.google.firebase.internal.DataCollectionConfigStorage: void updateDataCollectionDefaultEnabled(boolean)
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.ApiKey zag(com.google.android.gms.common.api.internal.zabq)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.baseflow.geolocator.StreamHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.grpc.internal.AbstractStream$TransportState: void requestMessagesFromDeframer(int)
com.google.android.gms.internal.firebase-auth-api.zzfj: byte[] zza(byte[],com.google.android.gms.internal.firebase-auth-api.zzez)
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.Deframer access$300(io.grpc.internal.AbstractStream$TransportState)
io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor: boolean isAvailable(io.grpc.LoadBalancerProvider)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.lang.Integer getLogSource()
io.grpc.internal.ForwardingReadableBuffer: int readUnsignedByte()
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
com.google.firebase.encoders.json.JsonDataEncoderBuilder$1: JsonDataEncoderBuilder$1(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: double getDouble(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzwa: zzwa(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzwi)
com.google.android.datatransport.runtime.backends.BackendRequest: BackendRequest()
io.grpc.Status$Code: io.grpc.Status toStatus()
okio.RealBufferedSource: okio.Buffer getBuffer()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.plugins.googlemaps.TileOverlaysController: java.lang.String getTileOverlayId(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzvk: void zzb()
com.google.android.gms.internal.firebase-auth-api.zzcs: zzcs(com.google.android.gms.internal.firebase-auth-api.zzct,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzjl: void zze(com.google.android.gms.internal.firebase-auth-api.zzjl,int)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
com.google.android.gms.internal.safetynet.zzs: zzs(com.google.android.gms.internal.safetynet.zzk$zzb)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
com.google.android.gms.internal.location.zzax: void onLocationChanged(android.location.Location)
io.grpc.internal.OobChannel: java.lang.String toString()
com.google.firebase.components.LazySet: LazySet(java.util.Collection)
com.google.protobuf.UnknownFieldSetLiteSchema: void writeTo(com.google.protobuf.UnknownFieldSetLite,com.google.protobuf.Writer)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: boolean access$700(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor)
io.flutter.plugins.urllauncher.UrlLauncher: void closeWebView()
io.grpc.okhttp.OkHttpChannelProvider: OkHttpChannelProvider()
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.zact zac(android.content.Context,android.os.Handler)
com.google.firebase.firestore.core.SyncEngine: void handleCredentialChange(com.google.firebase.firestore.auth.User)
com.google.android.gms.maps.CameraUpdate: com.google.android.gms.dynamic.IObjectWrapper zza()
com.google.android.datatransport.runtime.EventInternal: long getLong(java.lang.String)
io.grpc.internal.ManagedChannelImpl$RealChannel$1: ManagedChannelImpl$RealChannel$1(io.grpc.internal.ManagedChannelImpl$RealChannel)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zznb: void zzg(com.google.android.gms.internal.firebase-auth-api.zznb,int)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: boolean isShuttingDown()
androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)
io.grpc.internal.NoopClientStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)
com.google.firebase.auth.internal.zzaz: java.util.Map zzb(java.lang.String)
io.flutter.plugins.webviewflutter.InputAwareWebView: InputAwareWebView(android.content.Context,android.view.View)
io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
io.flutter.plugins.googlemaps.PolylineBuilder: void setPoints(java.util.List)
com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: java.lang.Object get()
com.google.android.gms.internal.firebase-auth-api.zzaeg: int zza()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.google.android.gms.internal.firebase-auth-api.zzaeq: boolean zze(byte)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.internal.firebase-auth-api.zzab: zzab(com.google.android.gms.internal.firebase-auth-api.zzac,com.google.android.gms.internal.firebase-auth-api.zzaf,java.lang.CharSequence,com.google.android.gms.internal.firebase-auth-api.zzp)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.tracing.TraceApi18Impl: void endSection()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.grpc.okhttp.internal.framed.Http2$Reader: void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getAvailableFeatures()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzx(com.google.firebase.FirebaseApp,com.google.firebase.auth.internal.zzg,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzj(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.AuthCredential,com.google.firebase.auth.internal.zzbk)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.BundleCache getBundleCache()
com.google.android.gms.internal.firebase-auth-api.zzyv: java.lang.Object[] newArray(int)
com.google.protobuf.SchemaUtil: void writeSFixed64List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.firebase.auth.internal.RecaptchaActivity: void zzf(android.net.Uri,java.lang.String)
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
okio.RealBufferedSource: short readShort()
io.grpc.internal.DelayedStream$12: void run()
okio.Buffer: java.io.OutputStream outputStream()
com.google.protobuf.ByteString$LeafByteString: ByteString$LeafByteString()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzabx: void zzp(int)
com.google.android.gms.common.internal.zac: java.lang.String zai(android.content.Context,java.lang.String)
com.google.android.gms.maps.internal.zzs: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.firestore.model.DocumentKey: com.google.firebase.firestore.model.DocumentKey empty()
com.google.protobuf.Android: java.lang.Class getMemoryClass()
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: PhoneAuthProvider$ForceResendingToken()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions addAll(java.lang.Iterable)
com.google.firebase.firestore.bundle.BundleMetadata: BundleMetadata(java.lang.String,int,com.google.firebase.firestore.model.SnapshotVersion,int,long)
com.google.android.gms.internal.firebase-auth-api.zzbh: com.google.android.gms.internal.firebase-auth-api.zznc zzd()
com.google.firebase.components.Component: boolean isAlwaysEager()
com.google.android.gms.maps.model.LatLngBounds: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.google.android.gms.maps.GoogleMap: void setOnCameraMoveListener(com.google.android.gms.maps.GoogleMap$OnCameraMoveListener)
com.google.firebase.firestore.remote.TargetChange: int hashCode()
io.grpc.internal.ManagedChannelOrphanWrapper: ManagedChannelOrphanWrapper(io.grpc.ManagedChannel,java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap)
com.google.firebase.messaging.DisplayNotification: void waitForAndApplyImageDownload(androidx.core.app.NotificationCompat$Builder,com.google.firebase.messaging.ImageDownload)
com.google.firebase.firestore.local.MemoryEagerReferenceDelegate: void onTransactionStarted()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.MessageLite$Builder newBuilderForType()
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkq zza()
com.google.firebase.firestore.model.DocumentCollections: com.google.firebase.database.collection.ImmutableSortedMap emptyDocumentMap()
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjn zzb()
com.google.firebase.firestore.FirebaseFirestore: void setClientLanguage(java.lang.String)
androidx.arch.core.internal.SafeIterableMap: int size()
com.google.firebase.database.collection.LLRBRedValueNode: int size()
com.google.protobuf.Utf8$Processor: java.lang.String decodeUtf8Default(java.nio.ByteBuffer,int,int)
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.internal.location.zzaq,java.lang.String)
com.google.android.gms.maps.zzx: void zzb()
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: long operandAsLong()
io.grpc.internal.RetriableStream$1: RetriableStream$1(io.grpc.internal.RetriableStream)
com.google.firebase.firestore.local.QueryEngine: com.google.firebase.database.collection.ImmutableSortedMap performQueryUsingRemoteKeys(com.google.firebase.firestore.core.Query,com.google.firebase.database.collection.ImmutableSortedSet,com.google.firebase.firestore.model.SnapshotVersion)
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.Document getFound()
com.google.protobuf.FieldSet: boolean isInitialized()
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
com.google.firebase.messaging.CommonNotificationBuilder: android.app.PendingIntent createMessagingPendingIntent(android.content.Context,android.content.Context,android.content.Intent)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
com.google.firebase.auth.internal.zzc: zzc(com.google.firebase.auth.internal.zzf,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.internal.firebase-auth-api.zzmk: zzmk()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: LogEventDropped$Builder()
io.grpc.internal.RetriableStream$Sublistener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
com.google.android.gms.internal.firebase-auth-api.zztb: void zzb(java.lang.Object)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument newUnknownDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.SnapshotVersion)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzcz: int zzf()
com.google.firebase.internal.api.FirebaseNoSignedInUserException: FirebaseNoSignedInUserException(java.lang.String)
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: void markDone()
com.google.android.gms.internal.maps.zzac: com.google.android.gms.internal.maps.zzad zzb(android.os.IBinder)
io.flutter.plugins.googlemaps.PolygonsController: void addPolygon(java.lang.String,com.google.android.gms.maps.model.PolygonOptions,boolean)
com.google.android.gms.internal.firebase-auth-api.zzacr: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)
androidx.lifecycle.ViewModel: ViewModel()
com.google.firebase.messaging.MessagingAnalytics: void logNotificationDismiss(android.content.Intent)
okio.Okio$2: void close()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgl: com.google.android.gms.internal.firebase-auth-api.zzpo zza()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean addAll(java.util.Collection)
com.google.firebase.firestore.util.ThrottledForwardingExecutor: ThrottledForwardingExecutor(int,java.util.concurrent.Executor)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
com.google.android.gms.internal.firebase-auth-api.zznt: zznt()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
io.flutter.plugins.googlemaps.GoogleMapController$2: void doFrame(long)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.grpc.Deadline: Deadline(io.grpc.Deadline$Ticker,long,boolean)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: int getCriticalSectionEnterTimeoutMs()
kotlin.ranges.IntProgression: IntProgression(int,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzma zzc(int)
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: int hashCode()
com.google.protobuf.LongArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getTokenCreationEpochInSecs()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzacg: zzacg(java.lang.String,int,java.lang.Class,java.lang.Class,java.lang.Object)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
com.google.firebase.firestore.local.IndexBackfiller$Scheduler: void scheduleBackfill(long)
com.google.android.gms.internal.firebase-auth-api.zzaat: zzaat(com.google.android.gms.internal.firebase-auth-api.zzaas)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
com.google.firebase.firestore.remote.Datastore$1: void onMessage(com.google.firestore.v1.BatchGetDocumentsResponse)
com.google.android.gms.internal.maps.zzae: void zzl(boolean)
com.google.firebase.firestore.FieldValue: com.google.firebase.firestore.FieldValue increment(double)
com.google.android.gms.internal.firebase-auth-api.zzp: zzp()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzt(java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzzy,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzc(android.content.Context,java.lang.String)
io.grpc.protobuf.lite.ProtoInputStream: com.google.protobuf.MessageLite message()
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse build()
com.google.android.gms.maps.internal.zzak: zzak()
io.flutter.plugins.googlemaps.GoogleMapController$3: GoogleMapController$3(io.flutter.plugins.googlemaps.GoogleMapController,io.flutter.plugin.common.MethodChannel$Result)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()
com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: com.google.android.datatransport.runtime.dagger.Lazy lazy(javax.inject.Provider)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
io.grpc.internal.ServiceConfigUtil: java.util.List getNameListFromMethodConfig(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzs: zzs(java.util.regex.Matcher)
io.grpc.internal.ApplicationThreadDeframerListener: ApplicationThreadDeframerListener(io.grpc.internal.MessageDeframer$Listener,io.grpc.internal.ApplicationThreadDeframerListener$TransportExecutor)
io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector: ManagedChannelServiceConfig$ServiceConfigConvertedSelector(io.grpc.internal.ManagedChannelServiceConfig,io.grpc.internal.ManagedChannelServiceConfig$1)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype getMobileSubtype()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics getGlobalMetrics()
com.google.firebase.firestore.core.SyncEngine$LimboResolution: boolean access$000(com.google.firebase.firestore.core.SyncEngine$LimboResolution)
com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzu(long)
io.grpc.okhttp.internal.Platform$JettyNegoProvider: boolean access$100(io.grpc.okhttp.internal.Platform$JettyNegoProvider)
io.grpc.internal.AbstractClientStream$TransportState: void transportReportStatus(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,boolean,io.grpc.Metadata)
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor getStartAt()
com.google.android.gms.internal.firebase-auth-api.zzsl: void zzb(java.lang.Object)
com.google.android.gms.common.api.internal.zabq: boolean zaL(com.google.android.gms.common.api.internal.zai)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryPersistence createEagerGcMemoryPersistence()
com.google.android.gms.internal.firebase-auth-api.zzzb: zzzb(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzyu)
com.google.type.LatLng: double getLatitude()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.Tile interpretTile(java.util.Map)
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
androidx.collection.SparseArrayCompat: int keyAt(int)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void removeSentinel(com.google.firebase.firestore.model.DocumentKey)
io.grpc.internal.GrpcUtil$3: void close(java.util.concurrent.Executor)
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder copyCustomOptions(java.lang.Object[][])
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: void setDescription(java.lang.String)
io.grpc.okhttp.internal.Platform$2: Platform$2()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void start(long)
com.google.common.io.BaseEncoding$Alphabet: boolean isValidPaddingStartPosition(int)
com.google.firebase.firestore.core.Query: boolean matchesOrderBy(com.google.firebase.firestore.model.Document)
com.lyokone.location.FlutterLocationService: void onCreate()
io.grpc.okhttp.OkHttpClientTransport: void access$1600(io.grpc.okhttp.OkHttpClientTransport,int,io.grpc.okhttp.internal.framed.ErrorCode,io.grpc.Status)
kotlin.collections.EmptyList: void add(int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.android.gms.tasks.zzg: void run()
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: CompositeCallCredentials$WrappingMetadataApplier(io.grpc.CompositeCallCredentials,io.grpc.CallCredentials$RequestInfo,java.util.concurrent.Executor,io.grpc.CallCredentials$MetadataApplier,io.grpc.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzr(com.google.android.gms.internal.firebase-auth-api.zzzt,com.google.android.gms.internal.firebase-auth-api.zzwy)
io.grpc.internal.SharedResourceHolder: java.lang.Object getInternal(io.grpc.internal.SharedResourceHolder$Resource)
com.google.firebase.firestore.model.mutation.SetMutation: com.google.firebase.firestore.model.mutation.FieldMask getFieldMask()
com.google.android.gms.internal.firebase-auth-api.zzaep: int zzc(java.lang.Object,long)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzgt zzd(com.google.android.gms.internal.firebase-auth-api.zzgo)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zze(int,java.util.List)
io.grpc.okhttp.internal.framed.Http2$Writer: void goAway(int,io.grpc.okhttp.internal.framed.ErrorCode,byte[])
com.google.android.gms.internal.firebase-auth-api.zzet: zzet(java.lang.String)
com.google.android.gms.maps.model.PolylineOptions: java.util.List getPoints()
io.grpc.LoadBalancer$ResolvedAddresses: java.util.List getAddresses()
androidx.fragment.app.DialogFragment: void onStart()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi: GeneratedAndroidWebView$WebChromeClientFlutterApi(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
com.google.android.gms.tasks.zzj: void zzd(com.google.android.gms.tasks.Task)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.MapView access$200(io.flutter.plugins.googlemaps.GoogleMapController)
androidx.fragment.app.Fragment: int getNextAnim()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
com.google.android.gms.internal.location.zzm: boolean equals(java.lang.Object)
com.google.firestore.v1.Value: void access$1700(com.google.firestore.v1.Value,com.google.protobuf.ByteString)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.FirebaseApp getApp()
com.google.android.gms.maps.model.Circle: void setStrokeColor(int)
com.google.android.gms.maps.zzp: void zzb(com.google.android.gms.internal.maps.zzad)
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest$Builder newBuilder()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzdp: com.google.android.gms.internal.firebase-auth-api.zzdo zza(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzpv: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzmz: com.google.android.gms.internal.firebase-auth-api.zzmz zzb(int)
com.google.firebase.firestore.model.ServerTimestamps: com.google.protobuf.Timestamp getLocalWriteTime(com.google.firestore.v1.Value)
com.google.android.gms.maps.model.Circle: java.lang.String getId()
com.google.protobuf.BinaryReader: BinaryReader()
com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)
com.google.android.gms.maps.model.Cap: java.lang.String toString()
com.google.android.gms.internal.location.zzae: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
com.google.protobuf.MessageSetSchema: java.lang.Object newInstance()
com.google.firebase.firestore.bundle.BundleDocument: boolean equals(java.lang.Object)
com.google.firebase.firestore.proto.UnknownDocument: UnknownDocument()
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.gms.common.internal.LibraryVersion: LibraryVersion()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)
androidx.fragment.app.FragmentManagerImpl: void showFragment(androidx.fragment.app.Fragment)
com.google.firebase.database.collection.LLRBEmptyNode: java.lang.Object getValue()
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzgb: java.lang.Class zzk()
com.google.android.gms.internal.firebase-auth-api.zzqj: zzqj()
com.google.android.gms.internal.firebase-auth-api.zzku: zzku()
com.google.protobuf.CodedInputStream$ArrayDecoder: int readRawLittleEndian32()
io.grpc.okhttp.OkHttpFrameLogger$Direction: OkHttpFrameLogger$Direction(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zziv: com.google.android.gms.internal.firebase-auth-api.zziv zzb(com.google.android.gms.internal.firebase-auth-api.zzjc)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
com.google.firebase.auth.zzai: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.googlemaps.MarkerBuilder: void setAlpha(float)
com.google.firebase.firestore.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.common.internal.zaf: zaf(android.content.Intent,com.google.android.gms.common.api.internal.LifecycleFragment,int)
com.google.android.gms.common.GoogleApiAvailability: void zad(android.app.Activity,android.app.Dialog,java.lang.String,android.content.DialogInterface$OnCancelListener)
com.google.firebase.messaging.NotificationParams: java.lang.Integer getVisibility()
com.google.protobuf.MessageSchema: float oneofFloatAt(java.lang.Object,long)
com.google.android.gms.maps.zzj: zzj(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzf(com.google.android.gms.internal.firebase-auth-api.zzse)
com.google.android.gms.common.internal.GmsClient: java.util.Set validateScopes(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzcm: com.google.android.gms.internal.firebase-auth-api.zziw zzf(com.google.android.gms.internal.firebase-auth-api.zziz)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: StorageMetrics(long,long)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
com.google.android.gms.internal.firebase-auth-api.zzabg: zzabg(com.google.android.gms.internal.firebase-auth-api.zzabf)
com.google.firebase.auth.internal.zzbj: com.google.firebase.auth.internal.zzbj zza()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions endCap(com.google.android.gms.maps.model.Cap)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder setInstantiation(int)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
com.google.android.gms.cloudmessaging.zzm: zzm(com.google.android.gms.cloudmessaging.zzs,com.google.android.gms.cloudmessaging.zzl)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
com.google.firestore.v1.CommitRequest: void addWrites(com.google.firestore.v1.Write)
androidx.fragment.app.FragmentManagerState: int describeContents()
io.flutter.plugins.googlemaps.PolygonBuilder: void setZIndex(float)
com.google.android.gms.signin.internal.zad: boolean zaa(int,android.os.Parcel,android.os.Parcel,int)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.location.LocationSettingsStates: boolean isGpsUsable()
com.google.firebase.auth.zzq: void onCodeAutoRetrievalTimeOut(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzve: java.lang.String zza()
com.google.protobuf.CodedInputStreamReader: long readFixed64()
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.grpc.okhttp.OkHttpClientTransport: void streamReadyToStart(io.grpc.okhttp.OkHttpClientStream)
com.google.android.gms.internal.firebase-auth-api.zzjb: zzjb(com.google.android.gms.internal.firebase-auth-api.zzja)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.Status tryHandleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
io.grpc.internal.DelayedClientTransport$4: void run()
com.google.firebase.firestore.local.MemoryIndexManager: java.util.List getDocumentsMatchingTarget(com.google.firebase.firestore.core.Target)
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzc(long[],long[])
com.google.firebase.auth.internal.zzbe: java.lang.String zzb()
com.google.protobuf.UnmodifiableLazyStringList: java.util.Iterator iterator()
com.google.firebase.firestore.FieldValue$ArrayUnionFieldValue: java.util.List getElements()
com.google.android.gms.internal.firebase-auth-api.zzan: zzan()
com.google.android.gms.safetynet.SafetyNetApi$AttestationResponse: java.lang.String getJwsResult()
com.google.android.gms.internal.firebase-auth-api.zzadm: java.lang.String zzd()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: void executeNextSubquery()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$Filter encodeFilters(java.util.List)
com.google.firebase.messaging.RemoteMessage: java.util.Map getData()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
io.grpc.internal.InternalSubchannel$TransportLogger: InternalSubchannel$TransportLogger()
com.google.android.gms.internal.firebase-auth-api.zzim: zzim(com.google.android.gms.internal.firebase-auth-api.zzil)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
androidx.fragment.app.FragmentManagerImpl$2: FragmentManagerImpl$2(androidx.fragment.app.FragmentManagerImpl)
com.google.protobuf.BooleanArrayList: void addBoolean(boolean)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.Boolean canGoBack(java.lang.Long)
com.google.android.gms.common.internal.BaseGmsClient: void zzg(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.ConnectionResult)
com.google.android.gms.internal.firebase-auth-api.zzdn: zzdn(byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzff: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.UnsafeUtil: void putInt(java.lang.Object,long,int)
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjf zzc()
io.grpc.internal.DnsNameResolver: void refresh()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
com.google.protobuf.BinaryReader: BinaryReader(com.google.protobuf.BinaryReader$1)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
com.google.firebase.messaging.ByteStreams$LimitedInputStream: void mark(int)
io.grpc.internal.InternalSubchannel$TransportListener: void transportShutdown(io.grpc.Status)
com.google.firebase.components.CycleDetector$Dep: boolean access$100(com.google.firebase.components.CycleDetector$Dep)
com.google.android.gms.common.internal.zzo: boolean zzh(android.content.ServiceConnection)
com.google.firebase.messaging.reporting.MessagingClientEventExtension$Builder: com.google.firebase.messaging.reporting.MessagingClientEventExtension build()
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: void mark(int)
com.google.common.io.BaseEncoding$DecodingException: BaseEncoding$DecodingException(java.lang.String)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapType(int)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: java.lang.String toString()
com.google.common.util.concurrent.ThreadFactoryBuilder: ThreadFactoryBuilder()
com.google.firebase.auth.internal.zzx: java.lang.String getTenantId()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.StructuredQuery$FieldReference encodeFieldPath(com.google.firebase.firestore.model.FieldPath)
io.grpc.internal.JsonUtil: java.util.List getListOfStrings(java.util.Map,java.lang.String)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.android.gms.internal.firebase-auth-api.zzis: zzis()
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String getMessageId(android.content.Intent)
com.google.android.gms.tasks.zzt: zzt()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
io.grpc.internal.ManagedChannelImplBuilder: int getDefaultPort()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.grpc.internal.DelayedClientCall: void request(int)
com.google.android.gms.internal.firebase-auth-api.zztj: zztj(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
com.google.firebase.messaging.Metadata: int getIidImplementation()
io.grpc.internal.DnsNameResolver: com.google.common.base.Stopwatch access$800(io.grpc.internal.DnsNameResolver)
com.google.firebase.firestore.util.AsyncQueue: com.google.android.gms.tasks.Task callTask(java.util.concurrent.Executor,java.util.concurrent.Callable)
com.google.android.gms.internal.firebase-auth-api.zzvu: java.lang.String zzf(int)
com.google.android.gms.internal.firebase-auth-api.zzcw: int zzf()
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
com.google.android.gms.common.api.internal.TaskApiCall: TaskApiCall()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.grpc.internal.RetriableStream$Sublistener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.firestore.proto.UnknownDocument$Builder: UnknownDocument$Builder()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Target$QueryTarget encodeQueryTarget(com.google.firebase.firestore.core.Target)
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider: io.grpc.internal.ClientStream newStream(io.grpc.MethodDescriptor,io.grpc.CallOptions,io.grpc.Metadata,io.grpc.Context)
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
com.google.firebase.firestore.core.EventManager: void removeQueryListener(com.google.firebase.firestore.core.QueryListener)
com.google.android.gms.internal.firebase-auth-api.zzqa: java.lang.String zzc()
com.google.android.gms.internal.firebase-auth-api.zzmx: com.google.android.gms.internal.firebase-auth-api.zzmx zzf(byte[],com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order access$5000()
com.google.protobuf.CodedInputStream$ArrayDecoder: int readFixed32()
com.google.android.gms.internal.maps.zzae: void zzi()
io.grpc.Status$StatusCodeMarshaller: java.lang.Object parseAsciiString(byte[])
com.google.android.gms.internal.firebase-auth-api.zzjf: void zzi(com.google.android.gms.internal.firebase-auth-api.zzjf,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.internal.firebase-auth-api.zzbn: zzbn()
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.maps.zzj: void zzx(float)
com.google.android.gms.common.internal.zza: void zza(java.lang.Object)
androidx.collection.MapCollections$KeySet: boolean isEmpty()
io.grpc.internal.AbstractClientStream$GetFramer: AbstractClientStream$GetFramer(io.grpc.internal.AbstractClientStream,io.grpc.Metadata,io.grpc.internal.StatsTraceContext)
com.google.firebase.firestore.local.LocalSerializer: com.google.firestore.v1.Write encodeMutation(com.google.firebase.firestore.model.mutation.Mutation)
com.google.gson.stream.JsonReader: void checkLenient()
com.google.android.gms.maps.model.MarkerOptions: MarkerOptions()
com.google.firebase.firestore.core.CompositeFilter: com.google.firebase.firestore.model.FieldPath getFirstInequalityField()
com.google.firebase.firestore.local.LocalStore: boolean hasNewerBundle(com.google.firebase.firestore.bundle.BundleMetadata)
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: java.util.Map getBackendProviders()
com.tekartik.sqflite.SqflitePlugin: com.tekartik.sqflite.Database executeOrError(com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
com.google.protobuf.DoubleArrayList: void addDouble(double)
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable$1: RetriableStream$Sublistener$1RetryBackoffRunnable$1(io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable)
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase forNumber(int)
com.google.firebase.firestore.remote.AbstractStream$IdleTimeoutRunnable: void run()
okio.ByteString: okio.ByteString substring(int,int)
com.google.firebase.auth.FirebaseAuth: void zzG(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.FirebaseUser)
com.google.firebase.firestore.proto.MaybeDocument$Builder: MaybeDocument$Builder(com.google.firebase.firestore.proto.MaybeDocument$1)
com.google.android.gms.internal.firebase-auth-api.zzcp: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.messaging.Store$Token: Store$Token(java.lang.String,java.lang.String,long)
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.Object get(int)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.firebase.firestore.model.MutableDocument: MutableDocument(com.google.firebase.firestore.model.DocumentKey)
com.google.protobuf.MapFieldSchemaLite: java.lang.Object mergeFrom(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: int hashCode()
io.grpc.internal.ApplicationThreadDeframerListener$3: void run()
io.grpc.internal.DelayedClientTransport$2: void run()
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
com.google.android.gms.common.internal.TelemetryLoggingOptions: com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder builder()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.internal.firebase-auth-api.zzvb: zzvb(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadg: int zza(java.lang.Object)
com.google.firebase.installations.remote.RequestLimiter: boolean isSuccessfulOrRequiresNewFidCreation(int)
io.grpc.internal.MessageFramer$OutputStreamAdapter: MessageFramer$OutputStreamAdapter(io.grpc.internal.MessageFramer,io.grpc.internal.MessageFramer$1)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzo(com.google.firebase.auth.PhoneAuthCredential)
com.google.android.gms.internal.firebase-auth-api.zzxf: void onVerificationFailed(com.google.firebase.FirebaseException)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)
io.grpc.MethodDescriptor: java.lang.String generateFullMethodName(java.lang.String,java.lang.String)
com.google.common.collect.ImmutableMap$Builder: void sortEntries()
com.google.firebase.firestore.util.AsyncQueue$TimerId: AsyncQueue$TimerId(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzdc: int zzf()
com.google.android.gms.internal.firebase-auth-api.zzrj: java.lang.Object[] newArray(int)
com.google.firestore.v1.Write: java.lang.String getDelete()
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setRequestUptimeMs(long)
com.google.android.gms.common.internal.BaseGmsClient: void onUserSignOut(com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks)
com.google.android.gms.internal.firebase-auth-api.zzjw: zzjw()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
io.grpc.internal.ApplicationThreadDeframer: ApplicationThreadDeframer(io.grpc.internal.MessageDeframer$Listener,io.grpc.internal.ApplicationThreadDeframer$TransportExecutor,io.grpc.internal.MessageDeframer)
io.grpc.internal.ManagedChannelServiceConfig: io.grpc.internal.ManagedChannelServiceConfig fromServiceConfig(java.util.Map,boolean,int,int,java.lang.Object)
com.google.firestore.v1.Document: Document()
com.google.android.gms.internal.firebase-auth-api.zzacd: java.lang.Object zzg(java.lang.Object,java.lang.Object)
com.google.firebase.auth.internal.zzbm: void zzg(android.content.Context,com.google.firebase.auth.FirebaseAuth)
com.google.firebase.auth.internal.zzbg: com.google.android.gms.internal.firebase-auth-api.zzyq zzb(com.google.firebase.auth.FirebaseUser)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
com.google.android.gms.common.internal.zzb: boolean zzb(android.os.Message)
com.google.android.gms.internal.firebase-auth-api.zzbq: int zza()
io.grpc.okhttp.OkHttpReadableBuffer: OkHttpReadableBuffer(okio.Buffer)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
androidx.fragment.app.FragmentActivity: void onResume()
com.google.firebase.firestore.proto.MaybeDocument: MaybeDocument()
io.flutter.plugins.googlemaps.CirclesController: java.lang.String getCircleId(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzpl: java.lang.String zza(java.lang.String,java.lang.String)
io.grpc.NameResolverProvider: NameResolverProvider()
com.google.firebase.auth.internal.zzx: com.google.firebase.auth.internal.zzx zzl(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzadf zzm(com.google.android.gms.internal.firebase-auth-api.zzadm,com.google.android.gms.internal.firebase-auth-api.zzadh,com.google.android.gms.internal.firebase-auth-api.zzacq,com.google.android.gms.internal.firebase-auth-api.zzaef,com.google.android.gms.internal.firebase-auth-api.zzabl,com.google.android.gms.internal.firebase-auth-api.zzacx)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
com.google.firebase.auth.PhoneAuthCredential: java.lang.String zzh()
com.google.android.gms.common.internal.zzt: android.content.Intent zza()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData$Builder: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData build()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.firebase.firestore.WriteBatch: void verifyNotCommitted()
com.google.firebase.database.collection.ImmutableSortedSet: boolean equals(java.lang.Object)
com.google.firebase.firestore.bundle.BundleSerializer: void decodeMapValue(com.google.firestore.v1.Value$Builder,org.json.JSONObject)
com.google.protobuf.ByteString: int checkRange(int,int,int)
com.google.firebase.firestore.local.SQLiteIndexManager: java.lang.Object[] encodeBound(com.google.firebase.firestore.model.FieldIndex,com.google.firebase.firestore.core.Target,com.google.firebase.firestore.core.Bound)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.google.android.datatransport.AutoValue_Event: boolean equals(java.lang.Object)
com.google.firebase.auth.FacebookAuthProvider: com.google.firebase.auth.AuthCredential getCredential(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzr(java.lang.Object,long,long)
com.google.firebase.messaging.DisplayNotification: com.google.firebase.messaging.ImageDownload startImageDownloadInBackground()
com.google.android.gms.internal.firebase-auth-api.zzdx: boolean zzb()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setUrl(java.lang.String)
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setUserAgentString(java.lang.Long,java.lang.String)
io.grpc.internal.AbstractClientStream$TransportState: void closeListener(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.grpc.internal.ApplicationThreadDeframerListener: io.grpc.internal.MessageDeframer$Listener access$000(io.grpc.internal.ApplicationThreadDeframerListener)
io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$1: CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport$1(io.grpc.internal.CallCredentialsApplyingTransportFactory$CallCredentialsApplyingTransport)
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result getResult()
com.google.android.gms.internal.firebase-auth-api.zzna: com.google.android.gms.internal.firebase-auth-api.zzna zza(int)
com.google.firebase.firestore.model.MutableDocument: com.google.firestore.v1.Value getField(com.google.firebase.firestore.model.FieldPath)
androidx.window.core.Version: int getPatch()
com.google.android.gms.maps.model.zzw: java.lang.Object[] newArray(int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzgt zzc(com.google.android.gms.internal.firebase-auth-api.zzgl)
com.google.firebase.firestore.local.EncodedPath: void encodeSeparator(java.lang.StringBuilder)
io.grpc.StatusRuntimeException: StatusRuntimeException(io.grpc.Status,io.grpc.Metadata,boolean)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: com.google.firebase.encoders.proto.Protobuf$IntEncoding intEncoding()
com.google.android.gms.internal.firebase-auth-api.zzaeh: int zzb(java.lang.Object)
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder: AutoValue_InstallationTokenResult$Builder()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: AutoValue_LogEvent$Builder()
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
com.google.firebase.auth.internal.zzbg: zzbg(android.content.Context,java.lang.String)
io.grpc.Metadata: java.lang.String toString()
com.google.firebase.firestore.index.AutoValue_IndexEntry: byte[] getArrayValue()
com.google.android.gms.maps.zzc: zzc(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener)
com.google.firebase.messaging.FirebaseMessaging: FirebaseMessaging(com.google.firebase.FirebaseApp,com.google.firebase.iid.internal.FirebaseInstanceIdInternal,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber,com.google.firebase.messaging.Metadata)
com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite parsePartialFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.common.ConnectionResult: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.model.Values: com.google.firestore.v1.Value getLowerBound(com.google.firestore.v1.Value$ValueTypeCase)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
io.grpc.internal.RetriableStream: java.lang.Object access$500(io.grpc.internal.RetriableStream)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.OkHttpClientStream getStream(int)
io.flutter.plugins.webviewflutter.InstanceManager: void addInstance(java.lang.Object,long)
io.grpc.internal.PickSubchannelArgsImpl: PickSubchannelArgsImpl(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getMax()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readField(com.google.protobuf.WireFormat$FieldType,java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State replaceActiveHedge(io.grpc.internal.RetriableStream$Substream,io.grpc.internal.RetriableStream$Substream)
io.grpc.internal.InternalSubchannel$4$1: InternalSubchannel$4$1(io.grpc.internal.InternalSubchannel$4)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query limitToLast(long)
com.google.firestore.v1.ArrayValue: int getValuesCount()
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.internal.ClientTransportFactory$ClientTransportOptions setUserAgent(java.lang.String)
io.grpc.internal.AbstractStream$TransportState: io.grpc.internal.TransportTracer getTransportTracer()
com.google.firebase.firestore.bundle.BundleReader: int indexOfOpenBracket()
io.flutter.plugins.googlemaps.TileProviderController: java.lang.String access$100(io.flutter.plugins.googlemaps.TileProviderController)
com.google.protobuf.Utf8$UnsafeProcessor: int encodeUtf8(java.lang.CharSequence,byte[],int,int)
com.google.android.gms.common.logging.Logger: void e(java.lang.String,java.lang.Object[])
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
com.google.firebase.auth.internal.zzag: boolean zze()
io.grpc.LoadBalancer$Helper: void refreshNameResolution()
io.grpc.EquivalentAddressGroup: EquivalentAddressGroup(java.net.SocketAddress,io.grpc.Attributes)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions color(int)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue$1: com.google.protobuf.Internal$EnumLite findValueByNumber(int)
com.google.android.gms.internal.firebase-auth-api.zzve: zzve(com.google.firebase.auth.internal.zzag,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean)
com.google.protobuf.SmallSortedMap$Entry: int compareTo(com.google.protobuf.SmallSortedMap$Entry)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialTileOverlays()
com.google.protobuf.SchemaUtil: java.lang.Class getUnknownFieldSetSchemaClass()
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
com.google.protobuf.Int32Value$Builder: Int32Value$Builder(com.google.protobuf.Int32Value$1)
io.grpc.internal.GrpcUtil: io.grpc.ClientStreamTracer[] getClientStreamTracers(io.grpc.CallOptions,io.grpc.Metadata,int,boolean)
io.grpc.LoadBalancer$Helper: io.grpc.ChannelLogger getChannelLogger()
com.google.android.gms.common.api.internal.zabq: void zaJ(com.google.android.gms.common.api.internal.zai)
io.grpc.okhttp.OkHttpClientStream: OkHttpClientStream(io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.okhttp.ExceptionHandlingFrameWriter,io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.OutboundFlowController,java.lang.Object,int,int,java.lang.String,java.lang.String,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer,io.grpc.CallOptions,boolean)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readUInt32()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: FlutterFirebaseAuthPluginException(java.lang.String,java.lang.String)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.lang.Object invokeAny(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzew: zzew(com.google.android.gms.internal.firebase-auth-api.zzez,com.google.android.gms.internal.firebase-auth-api.zzey,com.google.android.gms.internal.firebase-auth-api.zzet,com.google.android.gms.internal.firebase-auth-api.zzeu,int,byte[])
com.lyokone.location.MethodCallHandlerImpl: void setLocationService(com.lyokone.location.FlutterLocationService)
com.google.android.gms.internal.firebase-auth-api.zzqq: zzqq(java.lang.String,com.google.firebase.auth.PhoneAuthCredential)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: void maybeUnNest()
io.grpc.CallOptions: io.grpc.CallCredentials getCredentials()
com.google.common.collect.SingletonImmutableSet: int copyIntoArray(java.lang.Object[],int)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
com.google.firebase.firestore.LoadBundleTask: boolean isCanceled()
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
com.google.firebase.firestore.QuerySnapshot: QuerySnapshot(com.google.firebase.firestore.Query,com.google.firebase.firestore.core.ViewSnapshot,com.google.firebase.firestore.FirebaseFirestore)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
kotlinx.coroutines.channels.ConflatedChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaaw: void zzv()
com.google.firestore.v1.StructuredQuery$Filter: void access$1500(com.google.firestore.v1.StructuredQuery$Filter,com.google.firestore.v1.StructuredQuery$UnaryFilter)
com.google.android.gms.internal.firebase-auth-api.zzkx: void zzg(com.google.android.gms.internal.firebase-auth-api.zzkx,int)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: void shutdown()
androidx.collection.MapCollections$MapIterator: boolean hasNext()
com.google.android.gms.internal.firebase-auth-api.zzbd: com.google.android.gms.internal.firebase-auth-api.zzax zzb(java.lang.String,java.lang.Class)
com.google.firebase.firestore.model.Values: boolean isMapValue(com.google.firestore.v1.Value)
com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)
com.google.android.gms.internal.firebase-auth-api.zzdl: zzdl()
com.google.protobuf.UnsafeUtil: java.lang.reflect.Field access$100()
com.google.firebase.firestore.proto.NoDocument: NoDocument()
com.google.firebase.firestore.local.LocalStore: com.google.firebase.firestore.local.LocalDocumentsView getLocalDocumentsForCurrentUser()
io.grpc.internal.PickFirstLoadBalancer$1: PickFirstLoadBalancer$1(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)
com.google.android.gms.common.api.internal.BasePendingResult: void forceFailureUnlessReady(com.google.android.gms.common.api.Status)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
com.google.firebase.auth.internal.zzr: zzr(com.google.firebase.auth.internal.zzx,com.google.firebase.auth.internal.zzp,com.google.firebase.auth.zze)
com.google.android.gms.maps.model.zzm: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzqa: void writeToParcel(android.os.Parcel,int)
com.google.android.datatransport.cct.CctTransportBackend: java.net.URL parseUrlOrThrow(java.lang.String)
com.google.android.gms.common.api.internal.zad: void zae(java.lang.Exception)
io.grpc.ClientCall$Listener: void onReady()
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setDocuments(com.google.firestore.v1.Target$DocumentsTarget)
io.grpc.internal.DnsNameResolver: long getNetworkAddressCacheTtlNanos(boolean)
com.google.protobuf.AbstractMessageLite: int getMemoizedSerializedSize()
com.google.firebase.firestore.core.QueryListener: void onError(com.google.firebase.firestore.FirebaseFirestoreException)
io.grpc.CallOptions: java.util.List getStreamTracerFactories()
com.google.android.gms.common.internal.zau: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.model.Cap: Cap(int)
io.flutter.plugins.googlemaps.Convert: java.util.List toList(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void rstStream(int,io.grpc.okhttp.internal.framed.ErrorCode)
io.grpc.okhttp.OkHttpProtocolNegotiator: java.util.logging.Logger access$000()
io.grpc.ManagedChannelRegistry$1: int compare(java.lang.Object,java.lang.Object)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter greaterThan(com.google.firebase.firestore.FieldPath,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
com.google.android.gms.maps.model.Polyline: void setColor(int)
com.google.protobuf.FieldSet: int getSerializedSize()
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMaxZoomPreference()
io.flutter.plugins.googlemaps.PolygonController: void setHoles(java.util.List)
com.google.android.gms.common.data.DataHolder: void zad()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.android.gms.common.GoogleApiAvailability: void zae(android.content.Context,int,java.lang.String,android.app.PendingIntent)
com.google.firebase.firestore.core.CompositeFilter: java.util.List getFlattenedFilters()
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: int hashCode()
io.flutter.plugin.platform.PlatformPlugin: void destroy()
com.google.android.datatransport.Priority: Priority(java.lang.String,int)
com.google.firebase.messaging.WithinAppServiceConnection: void finishAllInQueue()
com.tekartik.sqflite.operation.BatchOperation: void handleError(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.core.FieldFilter: java.lang.String getCanonicalId()
com.google.android.gms.internal.firebase-auth-api.zzxp: java.lang.String zzb()
com.google.firebase.components.CycleDetector$Dep: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.Target: boolean hasLimit()
com.google.firebase.messaging.ImageDownload: void close()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()
io.grpc.okhttp.OkHttpClientStream$TransportState: void bytesRead(int)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
com.google.firebase.auth.OAuthCredential: OAuthCredential()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.google.common.collect.ImmutableList: ImmutableList()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: java.lang.String getType(android.net.Uri)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse: com.google.firebase.installations.remote.InstallationResponse$Builder builder()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuthSettings getFirebaseAuthSettings()
com.google.firebase.installations.remote.RequestLimiter: RequestLimiter()
com.google.firebase.firestore.core.ViewSnapshot: com.google.firebase.database.collection.ImmutableSortedSet getMutatedKeys()
com.google.android.gms.internal.firebase-auth-api.zzfd: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.firebase.firestore.local.LocalDocumentsResult: LocalDocumentsResult(int,com.google.firebase.database.collection.ImmutableSortedMap)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
com.google.protobuf.UnknownFieldSchema: boolean mergeOneFieldFrom(java.lang.Object,com.google.protobuf.Reader)
io.grpc.internal.NoopClientStream: void start(io.grpc.internal.ClientStreamListener)
com.google.android.gms.internal.firebase-auth-api.zzue: java.lang.String zza()
io.grpc.internal.PickFirstLoadBalancer$1: void onSubchannelState(io.grpc.ConnectivityStateInfo)
com.google.firebase.encoders.proto.AtProtobuf: com.google.firebase.encoders.proto.Protobuf build()
com.google.firebase.firestore.remote.WriteStream: void setLastStreamToken(com.google.protobuf.ByteString)
io.flutter.plugins.googlemaps.CirclesController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.protobuf.CodedOutputStream: void inefficientWriteStringNoTag(java.lang.String,com.google.protobuf.Utf8$UnpairedSurrogateException)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.grpc.internal.GzipInflatingBuffer: int inflateBytes(byte[],int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.internal.firebase-auth-api.zzadu: java.lang.Iterable zza()
com.google.android.gms.common.api.internal.zach: zach(com.google.android.gms.common.api.internal.zai,int,com.google.android.gms.common.api.GoogleApi)
com.google.firebase.installations.FirebaseInstallations: void updateFidListener(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.firebase.Timestamp: Timestamp(java.util.Date)
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.google.firebase.firestore.FieldValue$ArrayRemoveFieldValue: java.util.List getElements()
com.google.android.gms.internal.firebase-auth-api.zzei: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void loadUrl(java.lang.Long,java.lang.String,java.util.Map)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.gms.common.internal.ClientSettings$Builder: ClientSettings$Builder()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: long getByteSize()
com.google.firestore.v1.Target$QueryTarget: void setStructuredQuery(com.google.firestore.v1.StructuredQuery)
com.google.android.gms.common.internal.zzo: boolean zzj()
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.internal.auth-api-phone.zzd: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.common.collect.ImmutableMap: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
io.grpc.internal.CallCredentialsApplyingTransportFactory: io.grpc.CallCredentials access$200(io.grpc.internal.CallCredentialsApplyingTransportFactory)
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
com.google.android.gms.maps.zzag: void onStart()
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: long getNextRequestWaitMillis()
com.google.common.collect.ImmutableCollection: boolean addAll(java.util.Collection)
io.grpc.internal.AbstractReadableBuffer: void close()
com.google.firebase.firestore.core.ListenerRegistrationImpl: ListenerRegistrationImpl(com.google.firebase.firestore.core.FirestoreClient,com.google.firebase.firestore.core.QueryListener,com.google.firebase.firestore.core.AsyncEventListener)
com.baseflow.geolocator.LocationServiceHandlerImpl: void onCancel(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$900(io.flutter.plugin.platform.PlatformViewsController)
com.google.protobuf.CodedInputStreamReader: java.lang.Object readField(com.google.protobuf.WireFormat$FieldType,java.lang.Class,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.internal.firebase-auth-api.zzsv: void zza(java.lang.String)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)
com.google.firebase.firestore.local.LocalStore: void releaseTarget(int)
com.google.protobuf.Utf8$DecodeUtil: boolean isTwoBytes(byte)
io.flutter.plugins.googlemaps.PolygonController: boolean consumeTapEvents()
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite internalGetFields()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] values()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzw(java.lang.String,com.google.firebase.auth.ActionCodeSettings,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.model.mutation.Precondition: com.google.firebase.firestore.model.SnapshotVersion getUpdateTime()
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.internal.framed.FrameWriter access$200(io.grpc.okhttp.OutboundFlowController)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzd(int,com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)
com.google.protobuf.Internal: int hashBoolean(boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readInt32()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: java.util.List jsonArrayToList(org.json.JSONArray)
com.google.android.gms.internal.firebase-auth-api.zzhm: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zze()
kotlinx.coroutines.scheduling.TaskImpl: void run()
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: io.grpc.internal.ReadableBuffer readBytes(int)
io.grpc.internal.ManagedChannelImpl: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.android.gms.internal.firebase-auth-api.zztb: void zza(java.lang.String)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)
com.google.firestore.v1.Cursor: java.util.List getValuesList()
com.google.android.gms.internal.firebase-auth-api.zzxv: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzP(int,boolean)
androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzh()
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder intoSet()
io.grpc.internal.AbstractStream$TransportState: void setDecompressor(io.grpc.Decompressor)
com.google.firebase.auth.PhoneMultiFactorInfo: java.lang.String getUid()
com.google.android.gms.common.GoogleApiAvailability: boolean zag(android.app.Activity,com.google.android.gms.common.api.internal.LifecycleFragment,int,int,android.content.DialogInterface$OnCancelListener)
com.google.protobuf.FloatArrayList: float getFloat(int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.google.android.gms.internal.firebase-auth-api.zzfd: com.google.android.gms.internal.firebase-auth-api.zzfz zzh(int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzji: void zzg(com.google.android.gms.internal.firebase-auth-api.zzji,int)
com.google.firebase.auth.internal.zzbh: zzbh(com.google.firebase.auth.internal.zzbi)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzc(com.google.android.gms.internal.firebase-auth-api.zzxv)
io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromError(io.grpc.Status)
io.grpc.internal.Rescheduler: boolean access$300(io.grpc.internal.Rescheduler)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getLibraryName()
com.google.android.gms.internal.firebase-auth-api.zzij: zzij()
com.google.android.gms.maps.model.Marker: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Object setValue(java.lang.Object)
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
io.grpc.okhttp.internal.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)
io.grpc.NameResolver$Args: NameResolver$Args(java.lang.Integer,io.grpc.ProxyDetector,io.grpc.SynchronizationContext,io.grpc.NameResolver$ServiceConfigParser,java.util.concurrent.ScheduledExecutorService,io.grpc.ChannelLogger,java.util.concurrent.Executor)
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
com.google.android.gms.internal.firebase-auth-api.zznq: int zza(int)
io.grpc.okhttp.ExceptionHandlingFrameWriter: void ping(boolean,int,int)
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
com.google.android.gms.maps.model.zzc: zzc()
androidx.fragment.app.FragmentManager: void setFragmentFactory(androidx.fragment.app.FragmentFactory)
com.tekartik.sqflite.Database: java.lang.String getThreadLogPrefix()
com.google.firebase.auth.internal.zzx: com.google.firebase.FirebaseApp zza()
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setEvent(com.google.android.datatransport.Event)
com.google.android.gms.common.data.DataHolder: boolean isClosed()
com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.Object remove(int)
com.google.android.gms.internal.common.zza: zza(android.os.IBinder,java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
com.lyokone.location.MethodCallHandlerImpl: void stopListening()
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: com.google.firebase.firestore.model.FieldIndex$IndexOffset getOffset()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int getValue()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zzd()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void onFlutterViewAttached(android.view.View)
com.google.android.gms.common.api.GoogleApi: int zaa()
io.grpc.internal.DnsNameResolver: io.grpc.SynchronizationContext access$1000(io.grpc.internal.DnsNameResolver)
com.google.firebase.firestore.proto.MaybeDocument$Builder: com.google.firebase.firestore.proto.MaybeDocument$Builder setHasCommittedMutations(boolean)
com.google.android.gms.common.api.internal.BackgroundDetector: BackgroundDetector()
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzyv: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzjt zzb()
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.maps.internal.zzg: void setOnCameraMoveListener(com.google.android.gms.maps.internal.zzt)
com.tekartik.sqflite.SqflitePlugin$BgResult: SqflitePlugin$BgResult(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.index.OrderedCodeWriter: void writeUtf8Ascending(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder: void configure(com.google.firebase.encoders.config.EncoderConfig)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$ParsedUpdateData toUpdateData(com.google.firebase.firestore.model.ObjectValue)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
com.google.firestore.v1.ArrayValue$Builder: ArrayValue$Builder()
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.DocumentSet add(com.google.firebase.firestore.model.Document)
com.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)
io.grpc.okhttp.internal.framed.Http2$Reader: boolean nextFrame(io.grpc.okhttp.internal.framed.FrameReader$Handler)
io.grpc.okhttp.OkHttpClientStream$Sink: void writeFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)
com.google.common.io.BaseEncoding$Base64Encoding: com.google.common.io.BaseEncoding newInstance(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
com.google.firebase.auth.internal.zzp: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastR()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zza(byte[],int,int)
com.google.android.gms.internal.location.zzas: zzas(android.content.Context,com.google.android.gms.internal.location.zzbj)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderStorageDirectory()
com.google.firebase.firestore.model.TargetIndexMatcher: boolean hasMatchingEqualityFilter(com.google.firebase.firestore.model.FieldIndex$Segment)
com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder: StructuredQuery$CollectionSelector$Builder(com.google.firestore.v1.StructuredQuery$1)
com.google.firebase.auth.zzaa: java.lang.Object createFromParcel(android.os.Parcel)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.firebase.firestore.bundle.BundleLoader: com.google.firebase.database.collection.ImmutableSortedMap applyChanges()
com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,int)
com.google.firebase.firestore.local.LocalDocumentsResult: com.google.firebase.database.collection.ImmutableSortedMap getDocuments()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
com.google.firestore.v1.Target$Builder: Target$Builder()
io.grpc.okhttp.AsyncSink: java.lang.Object access$100(io.grpc.okhttp.AsyncSink)
com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64SlowPath()
com.google.firebase.firestore.local.SQLiteDocumentOverlayCache: void removeOverlaysForBatchId(int)
com.google.firebase.auth.internal.zzt: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.MessageSchema: int parseRepeatedField(java.lang.Object,byte[],int,int,int,int,int,int,long,int,long,com.google.protobuf.ArrayDecoders$Registers)
com.google.firebase.auth.internal.zzx: void zzh(com.google.android.gms.internal.firebase-auth-api.zzyq)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
com.google.android.gms.maps.GoogleMap: void setTrafficEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzpq: zzpq(java.lang.String,java.lang.String)
io.grpc.okhttp.internal.Platform$JettyNegoProvider: java.lang.String access$200(io.grpc.okhttp.internal.Platform$JettyNegoProvider)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zznf zzc()
io.grpc.okhttp.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
com.google.firebase.firestore.model.FieldPath: com.google.firebase.firestore.model.FieldPath fromServerFormat(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.common.api.internal.zap: void onCancel(android.content.DialogInterface)
com.google.firebase.auth.FirebaseAuthWeakPasswordException: FirebaseAuthWeakPasswordException(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzkg: void zzg(com.google.android.gms.internal.firebase-auth-api.zzkg,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.core.SyncEngine: void writeMutations(java.util.List,com.google.android.gms.tasks.TaskCompletionSource)
com.google.protobuf.UnmodifiableLazyStringList$1: boolean hasPrevious()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzB(int)
com.google.protobuf.ByteString$ArraysByteArrayCopier: ByteString$ArraysByteArrayCopier(com.google.protobuf.ByteString$1)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.google.firebase.installations.time.SystemClock: long currentTimeMillis()
io.grpc.Context: void addListener(io.grpc.Context$CancellationListener,java.util.concurrent.Executor)
androidx.fragment.app.FragmentTransitionImpl$2: void run()
com.google.protobuf.BooleanArrayList: void add(int,java.lang.Boolean)
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges valueOf(java.lang.String)
com.google.protobuf.SmallSortedMap$Entry: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzah: zzah(int,int)
io.grpc.ConnectivityStateInfo: int hashCode()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.googlemaps.PolylineBuilder: com.google.android.gms.maps.model.PolylineOptions build()
okio.AsyncTimeout$1: void close()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
okio.Buffer: okio.Buffer writeByte(int)
io.grpc.okhttp.internal.framed.Http2$Writer: void dataFrame(int,byte,okio.Buffer,int)
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String toString()
com.google.protobuf.UnmodifiableLazyStringList$1: void remove()
com.google.firebase.auth.internal.GenericIdpActivity: android.net.Uri$Builder zzb(android.content.Intent,java.lang.String,java.lang.String)
io.flutter.plugins.googlemaps.CirclesController: void changeCircles(java.util.List)
com.google.firebase.firestore.local.SQLiteIndexManager: void addIndexEntry(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.index.IndexEntry)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args$Builder setOffloadExecutor(java.util.concurrent.Executor)
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.internal.zaa: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretMarkerOptions(java.lang.Object,io.flutter.plugins.googlemaps.MarkerOptionsSink)
io.flutter.plugins.googlemaps.MarkerBuilder: void setConsumeTapEvents(boolean)
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator[] values()
com.google.protobuf.UnknownFieldSetLiteSchema: java.lang.Object getBuilderFromMessage(java.lang.Object)
io.grpc.protobuf.lite.ProtoLiteUtils$MessageMarshaller: java.io.InputStream stream(com.google.protobuf.MessageLite)
io.grpc.internal.Http2ClientStreamTransportState: void transportTrailersReceived(io.grpc.Metadata)
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
com.google.rpc.Status: int getCode()
com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: MetadataBackendRegistry$BackendFactoryProvider(android.content.Context)
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.location.LocationClient createLocationClient(android.content.Context,boolean,com.baseflow.geolocator.location.LocationOptions)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.Target decodeQueryTarget(com.google.firestore.v1.Target$QueryTarget)
com.google.protobuf.CodedInputStreamReader: void verifyPackedFixed64Length(int)
com.google.android.gms.maps.model.CircleOptions: int getFillColor()
io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()
io.grpc.okhttp.ExceptionHandlingFrameWriter: void close()
io.grpc.okhttp.internal.framed.Hpack$Writer: void writeByteString(okio.ByteString)
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zze()
com.google.android.gms.common.api.internal.zzb: int zza(com.google.android.gms.common.api.internal.zzb)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdg: zzdg()
com.google.android.gms.internal.firebase-auth-api.zzna: com.google.android.gms.internal.firebase-auth-api.zzna zzd(int)
com.google.firebase.auth.zzw: zzw(com.google.firebase.auth.FirebaseUser)
com.google.android.gms.internal.firebase-auth-api.zzmw: int zza()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzc(int,java.util.List,boolean)
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder: com.google.firebase.installations.remote.InstallationResponse$Builder setUri(java.lang.String)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions zIndex(float)
com.baseflow.geolocator.location.LocationManagerClient: boolean onActivityResult(int,int)
io.grpc.internal.DnsNameResolver: io.grpc.EquivalentAddressGroup access$600(io.grpc.internal.DnsNameResolver)
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.NameResolver$ResolutionResult$Builder setServiceConfig(io.grpc.NameResolver$ConfigOrError)
com.google.android.gms.internal.firebase-auth-api.zzkd: int zza()
com.google.firebase.messaging.TopicsSubscriber: void addToPendingOperations(com.google.firebase.messaging.TopicOperation,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask$Builder newBuilder()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.google.android.gms.location.zzz: zzz(android.os.IBinder)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$JavaType getJavaType()
com.google.protobuf.MapFieldSchemaLite: java.util.Map forMapData(java.lang.Object)
io.grpc.HttpConnectProxiedSocketAddress: java.net.SocketAddress getProxyAddress()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onDetachedFromActivity()
com.google.protobuf.ArrayDecoders: int decodeGroupField(com.google.protobuf.Schema,byte[],int,int,int,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getGivenName()
io.grpc.internal.JndiResourceResolverFactory: java.lang.Throwable initJndi()
io.flutter.plugins.androidintent.MethodCallHandlerImpl: java.util.ArrayList isStringArrayList(java.lang.Object)
com.google.firebase.firestore.core.AsyncEventListener: void onEvent(java.lang.Object,com.google.firebase.firestore.FirebaseFirestoreException)
com.google.firebase.firestore.model.mutation.Mutation: void verifyKeyMatches(com.google.firebase.firestore.model.MutableDocument)
com.google.protobuf.CodedInputStream$StreamDecoder: long readSFixed64()
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void onDestroy()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: void setIsAutomaticDataCollectionEnabled(java.lang.Boolean)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics: long getCurrentCacheSizeBytes()
io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: AutoConfiguredLoadBalancerFactory$EmptyPicker(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
com.google.protobuf.FieldSet: void writeElementNoTag(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,java.lang.Object)
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp getLastLimboFreeSnapshotVersion()
com.google.firebase.database.collection.ImmutableSortedSet: java.lang.Object getMinEntry()
com.google.android.gms.location.LocationSettingsResult: LocationSettingsResult(com.google.android.gms.common.api.Status,com.google.android.gms.location.LocationSettingsStates)
com.google.android.gms.common.api.internal.zzd: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
com.google.firebase.firestore.core.DocumentViewChange$Type: DocumentViewChange$Type(java.lang.String,int)
com.google.protobuf.RopeByteString$PieceIterator: boolean hasNext()
com.google.firebase.auth.PhoneAuthOptions$Builder: com.google.firebase.auth.PhoneAuthOptions$Builder setForceResendingToken(com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
com.google.android.gms.internal.firebase-auth-api.zzul: zzul(com.google.firebase.auth.EmailAuthCredential)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
com.google.firestore.v1.DocumentMask$Builder: DocumentMask$Builder()
com.google.protobuf.CodedOutputStream: void writeInt64(int,long)
io.flutter.plugins.googlemaps.MarkerController: void setRotation(float)
com.google.android.gms.internal.firebase-auth-api.zzer: int zza()
com.google.firestore.v1.StructuredQuery$Direction: StructuredQuery$Direction(java.lang.String,int,int)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzg(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.internal.zzbk)
com.google.android.gms.internal.firebase-auth-api.zzjc: void zze(com.google.android.gms.internal.firebase-auth-api.zzjc,int)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: void run()
com.google.firebase.messaging.reporting.MessagingClientEvent: long getCampaignId()
com.google.firebase.messaging.FirebaseMessaging: void startSync()
com.google.android.gms.common.internal.zzc: void zzf()
com.google.android.gms.internal.location.zzbe: java.lang.Object[] newArray(int)
com.google.firestore.bundle.BundledQuery: void setLimitType(com.google.firestore.bundle.BundledQuery$LimitType)
com.google.android.gms.tasks.zzaf: zzaf(int,com.google.android.gms.tasks.zzw)
com.google.firestore.v1.Target: void setDocuments(com.google.firestore.v1.Target$DocumentsTarget)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationStart(android.view.animation.Animation)
com.google.android.gms.internal.maps.zzae: boolean zzp()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: SafeParcelReader$ParseException(java.lang.String,android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzaeh: void zzr(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabg)
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzi()
com.google.android.gms.internal.firebase-auth-api.zzyw: java.lang.String zze()
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
com.google.protobuf.MessageSetSchema: void writeTo(java.lang.Object,com.google.protobuf.Writer)
com.google.protobuf.MapEntryLite: com.google.protobuf.MapEntryLite$Metadata getMetadata()
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: void onNext(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzacj: void add(int,java.lang.Object)
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition$Builder newBuilder()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getProjectId()
com.google.firestore.v1.WriteResponse$Builder: WriteResponse$Builder()
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.TargetChange getTargetChange()
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzfj: zzfj(com.google.android.gms.internal.firebase-auth-api.zzet)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.String getBufferDebugString()
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzmb zzd()
io.grpc.internal.ServiceConfigUtil: java.lang.Long getTimeoutFromMethodConfig(java.util.Map)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setProjectNumber(long)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: byte[] maybeBase64Decode(java.lang.String)
com.google.firestore.v1.ListenResponse: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite$Builder createBuilder()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
com.google.firebase.firestore.local.MemoryTargetCache: void addTargetData(com.google.firebase.firestore.local.TargetData)
com.google.firestore.v1.BatchGetDocumentsRequest$Builder: com.google.firestore.v1.BatchGetDocumentsRequest$Builder addDocuments(java.lang.String)
io.grpc.okhttp.OkHttpClientTransport: void sendConnectionPrefaceAndSettings()
com.google.android.gms.internal.firebase-auth-api.zzmw: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder setMobileSubtype(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype)
com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzqr: java.lang.Object[] newArray(int)
com.google.protobuf.AbstractProtobufList: void makeImmutable()
com.google.firebase.firestore.core.ActivityScope: void onFragmentActivityStopCallOnce(androidx.fragment.app.FragmentActivity,java.lang.Runnable)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.google.firebase.firestore.core.UserData$ParsedSetData: com.google.firebase.firestore.model.mutation.Mutation toMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition)
com.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: NetworkConnectionInfo()
io.flutter.plugins.androidintent.IntentSender: void setApplicationContext(android.content.Context)
com.google.protobuf.CodedOutputStream: int computeFloatSize(int,float)
com.google.android.gms.maps.internal.zzac: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.android.gms.internal.firebase-auth-api.zzaay: long zzt(long)
io.grpc.internal.RetriableStream: void optimizeForDirectExecutor()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
com.google.android.gms.location.FusedLocationProviderClient: FusedLocationProviderClient(android.content.Context)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
io.grpc.okhttp.internal.Platform: Platform(java.security.Provider)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void ensureReceiverRegistered(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzsn: void zza(java.lang.String)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: WebChromeClientHostApiImpl$WebChromeClientImpl(io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl,android.webkit.WebViewClient)
com.google.firebase.firestore.proto.UnknownDocument: void access$100(com.google.firebase.firestore.proto.UnknownDocument,java.lang.String)
com.google.protobuf.FieldSet: java.util.Iterator descendingIterator()
com.google.android.gms.common.internal.zau: java.lang.Object[] newArray(int)
com.google.android.gms.common.util.concurrent.HandlerExecutor: void execute(java.lang.Runnable)
androidx.core.util.LogWriter: void close()
com.google.common.collect.ByFunctionOrdering: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialCameraPosition(com.google.android.gms.maps.model.CameraPosition)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewHostApi$1: void success(java.lang.Object)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)
io.grpc.ForwardingChannelBuilder: ForwardingChannelBuilder()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: int hashCode()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwich()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.CameraPosition toCameraPosition(java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
com.google.android.gms.internal.firebase-auth-api.zzot: java.lang.Object zza(java.lang.String,java.security.Provider)
io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall: io.grpc.Context access$4900(io.grpc.internal.ManagedChannelImpl$ConfigSelectingClientCall)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.firebase-auth-api.zzwn: zzwn(com.google.android.gms.internal.firebase-auth-api.zzwq,java.lang.String)
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocation getLocation()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: boolean onStartJob(android.app.job.JobParameters)
io.grpc.internal.ClientCallImpl: void request(int)
com.google.android.gms.internal.firebase-auth-api.zzkt: com.google.android.gms.internal.firebase-auth-api.zzkt zzb(com.google.android.gms.internal.firebase-auth-api.zzld)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.local.TargetData withSequenceNumber(long)
com.google.android.gms.cloudmessaging.zzo: void zza(android.os.Bundle)
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet ensureExtensionsAreMutable()
androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
com.google.firebase.messaging.SyncTask: boolean isDebugLogEnabled()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: WebViewHostApiImpl(io.flutter.plugins.webviewflutter.InstanceManager,io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy,android.content.Context,android.view.View)
io.grpc.internal.GrpcUtil: io.grpc.Status$Code httpStatusToGrpcCode(int)
com.google.firebase.firestore.util.AsyncQueue: java.util.concurrent.Executor getExecutor()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: java.util.List getAllRecords(java.lang.String,java.lang.String)
com.google.firebase.firestore.core.Query: java.lang.String getCollectionGroup()
com.google.android.gms.maps.model.MarkerOptions: float getAnchorU()
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.google.firebase.firestore.core.SyncEngine: void logErrorIfInteresting(io.grpc.Status,java.lang.String,java.lang.Object[])
io.grpc.okhttp.OkHttpClientTransport: io.grpc.okhttp.internal.ConnectionSpec access$1400(io.grpc.okhttp.OkHttpClientTransport)
io.grpc.internal.DelayedStream$DelayedStreamListener$3: DelayedStream$DelayedStreamListener$3(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.Metadata)
io.grpc.okhttp.OkHttpClientTransport: void access$2300(io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.internal.framed.ErrorCode,java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder setRemoveAllFromArray(com.google.firestore.v1.ArrayValue$Builder)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Bundle createBundle(android.os.Parcel,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzaa addPolygon(com.google.android.gms.maps.model.PolygonOptions)
com.google.firebase.firestore.core.ComponentProvider: ComponentProvider()
io.grpc.internal.StatsTraceContext: void outboundWireSize(long)
io.grpc.internal.ForwardingReadableBuffer: int readableBytes()
com.google.android.gms.internal.firebase-auth-api.zzaek: com.google.android.gms.internal.firebase-auth-api.zzack zza(com.google.android.gms.internal.firebase-auth-api.zzaek)
com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.common.internal.zag: void onClick(android.content.DialogInterface,int)
com.google.android.gms.auth.api.phone.SmsRetrieverClient: SmsRetrieverClient(android.content.Context)
com.google.android.gms.auth.api.phone.SmsRetriever: com.google.android.gms.auth.api.phone.SmsRetrieverClient getClient(android.content.Context)
com.smartersvision.food_delivery_app_2.MainActivity: MainActivity()
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzI(java.util.List)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
com.google.android.gms.dynamic.zae: zae(android.content.Context,android.content.Intent)
com.google.firebase.firestore.remote.RemoteStore: void handleWatchStreamOpen()
com.google.firebase.firestore.util.Util: void crashMainThread(java.lang.RuntimeException)
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
io.grpc.internal.MessageFramer: void access$400(io.grpc.internal.MessageFramer,byte[],int,int)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.google.android.gms.internal.location.zzk: int getMinApkVersion()
io.grpc.okhttp.OkHttpClientStream$TransportState: void access$700(io.grpc.okhttp.OkHttpClientStream$TransportState,okio.Buffer,boolean,boolean)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setMessagingSenderId(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzdb: zzdb(com.google.android.gms.internal.firebase-auth-api.zzdc,java.lang.Class)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean childHasFocus(android.view.View)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
com.google.android.gms.cloudmessaging.zzi: zzi(com.google.android.gms.cloudmessaging.zzm)
io.grpc.okhttp.OkHttpWritableBuffer: void write(byte)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.google.android.gms.maps.model.zzw: zzw()
io.grpc.internal.JndiResourceResolverFactory$JndiRecordFetcher: void closeThenThrow(javax.naming.directory.DirContext,javax.naming.NamingException)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
io.grpc.Status$StatusCodeMarshaller: Status$StatusCodeMarshaller()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.grpc.internal.DnsNameResolver: java.lang.Double getPercentageFromChoice(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzyj: java.lang.String zzp()
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
io.grpc.okhttp.internal.DistinguishedNameParser: char getUTF8()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: void encode(com.google.android.datatransport.cct.internal.BatchedLogRequest,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretTileOverlayOptions(java.util.Map,io.flutter.plugins.googlemaps.TileOverlaySink)
com.google.firestore.v1.Target: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaeh: zzaeh()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzgo: zzgo(java.lang.Class,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzgn)
com.google.android.gms.internal.auth-api-phone.zza: zza(java.lang.String)
com.google.firestore.v1.MapValue$Builder: com.google.firestore.v1.MapValue$Builder putFields(java.lang.String,com.google.firestore.v1.Value)
com.google.firestore.v1.Document$Builder: Document$Builder()
io.grpc.internal.AbstractClientStream$TransportState: void access$000(io.grpc.internal.AbstractClientStream$TransportState,boolean)
com.google.android.gms.safetynet.zzh: zzh(int,boolean)
com.google.android.gms.location.SettingsClient: SettingsClient(android.app.Activity)
io.grpc.internal.GzipInflatingBuffer: int access$112(io.grpc.internal.GzipInflatingBuffer,int)
com.google.firebase.auth.FirebaseAuth: void zzI(com.google.firebase.auth.PhoneAuthOptions)
com.google.android.gms.internal.firebase-auth-api.zzgt: java.util.Map zzf(com.google.android.gms.internal.firebase-auth-api.zzgt)
com.google.android.gms.maps.model.PatternItem: void writeToParcel(android.os.Parcel,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
com.google.android.gms.internal.firebase-auth-api.zzyq: zzyq(java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Long)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions icon(com.google.android.gms.maps.model.BitmapDescriptor)
com.baseflow.geolocator.location.LocationServiceStatusReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.internal.firebase-auth-api.zzet: byte[] zzb(byte[],byte[],java.lang.String,byte[],java.lang.String,byte[],int)
com.google.android.gms.internal.firebase-auth-api.zzjr: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzuh: void zzb()
io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl: void dispose(android.webkit.WebChromeClient,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi$Reply)
com.google.firebase.firestore.model.SnapshotVersion: com.google.firebase.Timestamp getTimestamp()
com.google.android.gms.internal.firebase-auth-api.zzzs: java.lang.String zzg()
com.google.android.gms.maps.model.Marker: java.lang.String getId()
com.google.protobuf.BinaryReader$SafeHeapReader: void readGroupList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
io.grpc.internal.GrpcUtil: io.grpc.internal.ClientTransport getTransportFromPickResult(io.grpc.LoadBalancer$PickResult,boolean)
com.google.firebase.firestore.local.SQLitePersistence: void bind(android.database.sqlite.SQLiteProgram,java.lang.Object[])
com.google.firebase.firestore.local.MemoryPersistence: java.lang.Iterable getMutationQueues()
com.google.firebase.auth.internal.zzx: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzabp: com.google.android.gms.internal.firebase-auth-api.zzabp zza()
io.grpc.internal.DelayedStream$DelayedStreamListener$1: DelayedStream$DelayedStreamListener$1(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.internal.StreamListener$MessageProducer)
com.google.android.gms.internal.firebase-auth-api.zzss: void zzb(java.lang.Object)
com.google.firebase.auth.internal.zzk: java.lang.String zzc()
com.google.firebase.messaging.Store: boolean isEmpty()
com.google.android.gms.common.internal.BaseGmsClient: void zzl(int,android.os.Bundle,int)
com.google.android.gms.internal.firebase-auth-api.zzob: byte[] zza(byte[])
com.google.firebase.firestore.core.TransactionRunner: TransactionRunner(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.remote.RemoteStore,com.google.firebase.firestore.TransactionOptions,com.google.firebase.firestore.util.Function)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()
com.google.protobuf.CodedOutputStreamWriter: void writeFixed64List(int,java.util.List,boolean)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
com.google.android.gms.internal.firebase-auth-api.zzzw: java.lang.String zza()
com.google.android.gms.maps.zzy: void zzb(com.google.android.gms.maps.model.LatLng)
com.google.firebase.auth.FirebaseAuth: boolean zzK()
io.grpc.internal.DelayedStream: void setAuthority(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznf: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStream$ArrayDecoder: long readSInt64()
com.google.firebase.components.CycleDetector$ComponentNode: void addDependent(com.google.firebase.components.CycleDetector$ComponentNode)
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.MessageLite build()
com.google.android.gms.location.zzab: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder newBuilder()
com.baseflow.geolocator.permission.PermissionManager: void requestPermission(android.app.Activity,com.baseflow.geolocator.permission.PermissionResultCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void startBackgroundIsolate(long,io.flutter.embedding.engine.FlutterShellArgs)
com.google.firebase.firestore.core.FieldFilter: FieldFilter(com.google.firebase.firestore.model.FieldPath,com.google.firebase.firestore.core.FieldFilter$Operator,com.google.firestore.v1.Value)
com.humazed.google_map_location_picker.GoogleMapLocationPickerPlugin: void onDetachedFromActivity()
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.browser.customtabs.CustomTabsIntent: void launchUrl(android.content.Context,android.net.Uri)
com.google.android.gms.common.internal.RootTelemetryConfiguration: RootTelemetryConfiguration(int,boolean,boolean,int,int)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: AsyncQueue$SynchronizedShutdownAwareExecutor(com.google.firebase.firestore.util.AsyncQueue)
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] values()
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzacr: java.lang.Object remove(int)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)
com.google.common.collect.RegularImmutableSet: boolean isPartialView()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void listenToResponse(com.google.android.gms.tasks.TaskCompletionSource,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
com.google.android.gms.internal.firebase-auth-api.zzhs: void zza(byte[],byte[])
io.grpc.Metadata: void value(int,byte[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
kotlinx.coroutines.internal.ScopeCoroutine: kotlinx.coroutines.Job getParent$kotlinx_coroutines_core()
io.grpc.internal.Rescheduler: boolean access$302(io.grpc.internal.Rescheduler,boolean)
io.grpc.internal.DnsNameResolver: java.util.List getClientLanguagesFromChoice(java.util.Map)
com.google.firebase.FirebaseOptions: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: void addChunk(byte[])
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String serialize()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: io.grpc.Status prestart()
com.google.android.gms.internal.firebase-auth-api.zzfq: boolean zzb(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task verifyBeforeUpdateEmail(java.lang.String)
io.grpc.internal.KeepAliveManager: void onTransportTermination()
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzx(java.util.List)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeStringArray(android.os.Parcel,int,java.lang.String[],boolean)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: boolean readBoolean(android.os.Parcel,int)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()
com.google.android.gms.internal.firebase-auth-api.zzabp: void zzb()
com.google.firebase.firestore.local.MemoryIndexManager: java.util.List getCollectionParents(java.lang.String)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl: io.grpc.internal.AbstractSubchannel createSubchannel(io.grpc.LoadBalancer$CreateSubchannelArgs)
com.google.firebase.firestore.TransactionOptions: java.lang.String toString()
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayServicesPossiblyUpdating(android.content.Context,int)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings build()
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzcp: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setQosTier(com.google.android.datatransport.cct.internal.QosTier)
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: AsyncQueue$DelayedTask(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$TimerId,long,java.lang.Runnable)
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.String getMissing()
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.database.collection.ImmutableSortedMap getLocalViewOfDocuments(java.util.Map,java.util.Set)
com.google.firebase.firestore.core.TransactionRunner: void handleTransactionError(com.google.android.gms.tasks.Task)
com.google.android.gms.internal.firebase-auth-api.zzadv: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.EventManager: void onError(com.google.firebase.firestore.core.Query,io.grpc.Status)
com.tekartik.sqflite.SqlCommand: java.lang.String getSql()
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: OkHttpChannelBuilder$OkHttpTransportFactory(java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,io.grpc.okhttp.internal.ConnectionSpec,int,boolean,long,long,int,boolean,int,io.grpc.internal.TransportTracer$Factory,boolean,io.grpc.okhttp.OkHttpChannelBuilder$1)
com.google.android.gms.internal.firebase-auth-api.zzhn: void zzn(com.google.android.gms.internal.firebase-auth-api.zzlt)
com.google.android.gms.internal.firebase-auth-api.zzge: com.google.android.gms.internal.firebase-auth-api.zzid zza(com.google.android.gms.internal.firebase-auth-api.zzbw)
com.google.android.gms.internal.firebase-auth-api.zzyu: long zza()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics$Builder newBuilder()
com.google.protobuf.CodedOutputStream: int computeTagSize(int)
com.google.firestore.v1.Write: void setUpdate(com.google.firestore.v1.Document)
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: void serviceProcessingFinished()
com.google.firebase.firestore.FirestoreRegistrar: FirestoreRegistrar()
com.google.android.gms.internal.stats.zzb: void close()
com.google.android.gms.maps.internal.zzby: void setTiltGesturesEnabled(boolean)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2: GeneratedAndroidFirebaseCore$FirebaseAppHostApi$2(java.util.Map,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.firebase.firestore.proto.Target: void setQuery(com.google.firestore.v1.Target$QueryTarget)
com.google.firebase.auth.internal.zzat: zzat(com.google.firebase.auth.internal.zzax,com.google.android.gms.tasks.TaskCompletionSource,android.content.Context)
io.grpc.NameResolverRegistry$NameResolverFactory: java.lang.String getDefaultScheme()
com.google.android.gms.stats.WakeLock: void setReferenceCounted(boolean)
com.google.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: BoundaryInterfaceReflectionUtil()
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: int read()
com.google.android.gms.common.internal.ClientIdentity: ClientIdentity(int,java.lang.String)
com.google.firebase.provider.FirebaseInitProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.google.android.gms.common.internal.service.zap: android.os.Bundle getGetServiceRequestExtraArgs()
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.grpc.okhttp.internal.framed.Http2$Writer: void windowUpdate(int,long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zza(byte[],byte[])
com.google.android.gms.internal.firebase-auth-api.zzzu: boolean zze()
io.grpc.internal.ManagedChannelImpl$RealChannel$3: void request(int)
com.google.firestore.v1.StructuredQuery$FieldReference$Builder: com.google.firestore.v1.StructuredQuery$FieldReference$Builder setFieldPath(java.lang.String)
com.google.android.gms.internal.maps.zzc: void zzc(android.os.Parcel,boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: void loadDataWithBaseUrl(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.grpc.internal.ChannelLoggerImpl: ChannelLoggerImpl(io.grpc.internal.ChannelTracer,io.grpc.internal.TimeProvider)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
io.grpc.Status: io.grpc.Status fromCodeValue(int)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void readBytes(java.nio.ByteBuffer)
com.google.firestore.v1.Write: void access$500(com.google.firestore.v1.Write,java.lang.String)
androidx.core.app.NotificationCompatBuilder: android.content.Context getContext()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: long getSequenceNumberCount()
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] values()
com.google.android.gms.internal.firebase-auth-api.zztz: zztz(java.lang.String,java.lang.String)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: WatchChange$WatchTargetChange(com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType,java.util.List,com.google.protobuf.ByteString,io.grpc.Status)
kotlinx.coroutines.scheduling.Task: Task()
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
com.google.android.gms.internal.firebase-auth-api.zztx: zztx(com.google.android.gms.internal.firebase-auth-api.zzwz)
io.grpc.DecompressorRegistry: io.grpc.DecompressorRegistry with(io.grpc.Decompressor,boolean)
com.google.protobuf.MapFieldSchemaLite: java.lang.Object toImmutable(java.lang.Object)
com.google.firebase.auth.ActionCodeSettings$Builder: java.lang.String zza(com.google.firebase.auth.ActionCodeSettings$Builder)
com.google.android.gms.internal.firebase-auth-api.zzal: int lastIndexOf(java.lang.Object)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
com.google.android.gms.internal.firebase-auth-api.zzacw: zzacw()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task setLanguageCode(java.util.Map)
io.grpc.okhttp.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
com.google.protobuf.MessageLiteToString: java.lang.String toString(com.google.protobuf.MessageLite,java.lang.String)
com.google.firebase.messaging.ImageDownload: android.graphics.Bitmap blockingDownload()
com.google.firestore.v1.DocumentTransform$FieldTransform: void setIncrement(com.google.firestore.v1.Value)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] values()
io.grpc.okhttp.internal.framed.Http2$ContinuationSource: long read(okio.Buffer,long)
com.google.protobuf.UnsafeUtil: void logMissingMethod(java.lang.Throwable)
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withSubchannel(io.grpc.LoadBalancer$Subchannel,io.grpc.ClientStreamTracer$Factory)
io.grpc.ManagedChannelRegistry$ManagedChannelPriorityAccessor: boolean isAvailable(java.lang.Object)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setAnalyticsLabel(java.lang.String)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void access$1000(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader,int)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$900(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzM(java.lang.Object,int)
com.google.protobuf.Utf8$DecodeUtil: void access$500(byte,char[],int)
com.google.firebase.firestore.model.mutation.MutationBatch: void applyToRemoteDocument(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.MutationBatchResult)
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: GzipInflatingBuffer$GzipMetadataReader(io.grpc.internal.GzipInflatingBuffer,io.grpc.internal.GzipInflatingBuffer$1)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: WebViewHostApiImpl$ReleasableValue()
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder setAddresses(io.grpc.EquivalentAddressGroup)
io.grpc.okhttp.OkHttpClientStream: void setAuthority(java.lang.String)
io.grpc.internal.DelayedStream: void cancel(io.grpc.Status)
io.grpc.internal.DelayedStream$DelayedStreamListener$2: DelayedStream$DelayedStreamListener$2(io.grpc.internal.DelayedStream$DelayedStreamListener)
com.google.android.gms.common.internal.TelemetryLoggingOptions: int hashCode()
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind[] values()
com.google.firebase.firestore.remote.FirestoreChannel: io.grpc.ClientCall runBidiStreamingRpc(io.grpc.MethodDescriptor,com.google.firebase.firestore.remote.IncomingStreamObserver)
com.google.android.gms.internal.firebase-auth-api.zzoy: java.lang.Object zza(java.lang.String,java.security.Provider)
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzij zza(int)
com.google.android.gms.common.util.concurrent.zza: void run()
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.Target encodeTarget(com.google.firebase.firestore.local.TargetData)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzI(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,java.lang.String,com.google.firebase.auth.internal.zzbk)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
com.baseflow.geolocator.MethodCallHandlerImpl: void onCheckPermission(io.flutter.plugin.common.MethodChannel$Result)
io.grpc.internal.OobChannel: io.grpc.InternalLogId getLogId()
io.grpc.internal.ManagedChannelImpl: io.grpc.NameResolver getNameResolver(java.lang.String,java.lang.String,io.grpc.NameResolver$Factory,io.grpc.NameResolver$Args)
io.flutter.plugins.googlemaps.GoogleMapController: void setTrafficEnabled(boolean)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: void setIosBundleId(java.lang.String)
com.google.android.gms.tasks.zzn: zzn(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getConnectionHint()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.android.gms.location.LocationRequest: void zza(long)
io.grpc.okhttp.AsyncSink$WriteRunnable: void run()
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics$Builder: GlobalMetrics$Builder()
com.google.android.gms.internal.firebase-auth-api.zzvq: zzvq(com.google.firebase.FirebaseApp)
com.google.firebase.firestore.local.SQLiteIndexManager: void deleteIndexEntry(com.google.firebase.firestore.model.Document,com.google.firebase.firestore.index.IndexEntry)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
com.google.firestore.v1.CommitRequest$Builder: CommitRequest$Builder()
com.google.android.gms.maps.zzab: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.maps.zzab: void zzs(boolean)
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.grpc.NameResolver$ServiceConfigParser: NameResolver$ServiceConfigParser()
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo$Builder setClientType(com.google.android.datatransport.cct.internal.ClientInfo$ClientType)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
com.google.protobuf.AbstractParser: com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite)
io.grpc.internal.SharedResourcePool: java.lang.Object getObject()
com.google.rpc.Status: com.google.rpc.Status getDefaultInstance()
io.flutter.plugins.webviewflutter.DisplayListenerProxy: DisplayListenerProxy()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.cloudmessaging.CloudMessage: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.util.CustomClassMapper: java.lang.Object convertToPlainJavaTypes(java.lang.Object)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady: ClientCallImpl$ClientStreamListenerImpl$1StreamOnReady(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl,io.perfmark.Link)
androidx.collection.MapCollections$KeySet: void clear()
io.grpc.internal.DelayedClientTransport$PendingStream: java.lang.Runnable access$400(io.grpc.internal.DelayedClientTransport$PendingStream,io.grpc.internal.ClientTransport)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder: void configure(com.google.firebase.encoders.config.EncoderConfig)
com.lyokone.location.NotificationOptions: java.lang.String getChannelName()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: SQLitePersistence$LongQuery(com.google.firebase.firestore.local.SQLitePersistence,java.lang.String,java.util.List,java.lang.String)
io.grpc.Metadata: byte[][] serialize()
com.google.firebase.firestore.DocumentChange: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzaf: java.util.List zzd(java.lang.CharSequence)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.firebase.encoders.FieldDescriptor: int hashCode()
io.grpc.internal.DelayedStream: void setCompressor(io.grpc.Compressor)
com.google.firebase.firestore.local.SQLitePersistence$Query: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzabr: java.lang.Object set(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zzc(com.google.android.gms.internal.firebase-auth-api.zzado,byte[],int,int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.firebase.firestore.core.SyncEngine: void loadBundle(com.google.firebase.firestore.bundle.BundleReader,com.google.firebase.firestore.LoadBundleTask)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()
com.google.common.collect.ImmutableList: java.util.ListIterator listIterator()
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: void allocateBytes(int)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.SQLiteLruReferenceDelegate access$000(com.google.firebase.firestore.local.SQLitePersistence)
io.grpc.internal.ServiceConfigUtil: java.lang.Long getHedgingDelayNanosFromHedgingPolicy(java.util.Map)
com.google.android.gms.internal.maps.zza: android.os.Parcel zzH(int,android.os.Parcel)
com.google.firebase.firestore.model.ObjectValue: void delete(com.google.firebase.firestore.model.FieldPath)
io.grpc.StreamTracer: void outboundWireSize(long)
com.google.android.gms.internal.firebase-auth-api.zzzh: long zzb()
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
com.google.firebase.auth.internal.zzj: void zzf(android.content.SharedPreferences)
com.google.android.gms.internal.firebase-auth-api.zzwt: zzwt(int)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: AutoValue_ClientInfo(com.google.android.datatransport.cct.internal.ClientInfo$ClientType,com.google.android.datatransport.cct.internal.AndroidClientInfo,com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$1)
androidx.webkit.internal.WebViewGlueCommunicator: java.lang.reflect.InvocationHandler fetchGlueProviderFactoryImpl()
com.google.android.gms.internal.firebase-auth-api.zzqt: java.lang.Object[] newArray(int)
io.flutter.plugins.googlemaps.MarkerController: void showInfoWindow()
kotlinx.coroutines.CoroutineId: CoroutineId(long)
com.google.android.gms.maps.model.Polyline: void setPattern(java.util.List)
com.google.protobuf.GeneratedMessageLite: void registerDefaultInstance(java.lang.Class,com.google.protobuf.GeneratedMessageLite)
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
com.google.android.datatransport.cct.internal.LogEvent: LogEvent()
com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)
com.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)
com.google.firebase.firestore.local.SQLiteOverlayMigrationManager: boolean hasPendingOverlayMigration()
com.google.firebase.firestore.bundle.BundleMetadata: int hashCode()
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readEnum()
com.google.firebase.auth.internal.zzp: java.util.Map getProfile()
io.grpc.Status: java.util.List buildStatusList()
com.google.android.datatransport.runtime.time.WallTimeClock: long getTime()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
com.google.firebase.auth.TwitterAuthCredential: java.lang.String getProvider()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresAccount()
io.grpc.internal.ChannelTracer: void reportEvent(io.grpc.InternalChannelz$ChannelTrace$Event)
com.google.firebase.messaging.EnhancedIntentService: android.os.IBinder onBind(android.content.Intent)
com.google.protobuf.UnknownFieldSetLiteSchema: com.google.protobuf.UnknownFieldSetLite merge(com.google.protobuf.UnknownFieldSetLite,com.google.protobuf.UnknownFieldSetLite)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeLazy(java.nio.ByteBuffer)
com.google.android.gms.internal.safetynet.zzx: android.os.IInterface createServiceInterface(android.os.IBinder)
com.google.android.gms.internal.maps.zzv: boolean zzF()
com.google.android.gms.internal.firebase-auth-api.zzib: int zza()
com.tekartik.sqflite.SqflitePlugin: boolean executeOrError(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation)
com.google.firebase.messaging.GmsRpc: GmsRpc(com.google.firebase.FirebaseApp,com.google.firebase.messaging.Metadata,com.google.android.gms.cloudmessaging.Rpc,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)
androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
com.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()
com.google.firestore.v1.StructuredQuery: void access$8100(com.google.firestore.v1.StructuredQuery,com.google.firestore.v1.StructuredQuery$Filter)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
com.google.firebase.heartbeatinfo.AutoValue_HeartBeatResult: java.lang.String toString()
com.google.firebase.components.LazySet: void add(com.google.firebase.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzyv: zzyv()
io.grpc.internal.CallCredentialsApplyingTransportFactory: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()
io.grpc.okhttp.ExceptionHandlingFrameWriter: java.util.logging.Level getLogLevel(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zznf: com.google.android.gms.internal.firebase-auth-api.zznf zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: void encode(java.lang.Object,java.lang.Object)
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.StructuredQuery getStructuredQuery()
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzj(com.google.android.gms.internal.firebase-auth-api.zzzb)
io.grpc.LoadBalancer$CreateSubchannelArgs$Builder: io.grpc.LoadBalancer$CreateSubchannelArgs$Builder setAddresses(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzts: zzts(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.firebase.auth.UserProfileChangeRequest,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzaq: void zzc(com.google.android.gms.internal.firebase-auth-api.zzmx)
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzd()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBool(int,boolean)
com.google.protobuf.DoubleArrayList: com.google.protobuf.Internal$DoubleList mutableCopyWithCapacity(int)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
com.google.protobuf.SmallSortedMap: java.util.List access$600(com.google.protobuf.SmallSortedMap)
io.grpc.HttpConnectProxiedSocketAddress: java.lang.String getPassword()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions startCap(com.google.android.gms.maps.model.Cap)
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziq zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
com.google.protobuf.ExtensionRegistryFactory: com.google.protobuf.ExtensionRegistryLite invokeSubclassFactory(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void ensureBeginTransaction(android.database.sqlite.SQLiteDatabase)
com.google.android.gms.internal.location.zzm: int hashCode()
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()
com.google.protobuf.IntArrayList: IntArrayList()
io.grpc.internal.DelayedClientCall: void setRealCall(io.grpc.ClientCall)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void close()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions visible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzfm zze(java.lang.String)
kotlin.internal.PlatformImplementations: PlatformImplementations()
com.google.common.collect.ImmutableMap: void clear()
com.google.firebase.auth.EmailAuthCredential: java.lang.String getProvider()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.google.protobuf.Timestamp: Timestamp()
com.lyokone.location.FlutterLocationService$Companion: FlutterLocationService$Companion()
androidx.core.app.Person: java.lang.String resolveToLegacyUri()
com.google.android.gms.internal.firebase-auth-api.zzzd: long zzb()
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzh(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzadn,com.google.android.gms.internal.firebase-auth-api.zzabk)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleElement readNextElement()
com.google.android.gms.maps.UiSettings: UiSettings(com.google.android.gms.maps.internal.IUiSettingsDelegate)
com.google.android.gms.internal.auth-api-phone.zzu: com.google.android.gms.tasks.Task startSmsRetriever()
io.grpc.internal.ForwardingClientStream: void writeMessage(java.io.InputStream)
com.google.protobuf.CodedInputStream$StreamDecoder: long skip(java.io.InputStream,long)
com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)
io.flutter.plugins.googlemaps.MarkerBuilder: void setAnchor(float,float)
com.google.firebase.messaging.ImageDownload: ImageDownload(java.net.URL)
com.google.android.datatransport.runtime.TransportContext: boolean shouldUploadClientHealthMetrics()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityResumed(android.app.Activity)
com.google.common.collect.Hashing: int smearedHash(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
com.google.android.gms.common.internal.zzq: zzq(com.google.android.gms.common.internal.zzr,com.google.android.gms.common.internal.zzp)
com.google.android.gms.internal.firebase-auth-api.zzaeq: void zzc(byte,byte,char[],int)
kotlin.KotlinVersionCurrentValue: KotlinVersionCurrentValue()
com.google.android.gms.common.api.internal.zabx: void onReceive(android.content.Context,android.content.Intent)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()
com.google.android.gms.internal.firebase-auth-api.zzaj: zzaj(com.google.android.gms.internal.firebase-auth-api.zzal,int)
io.grpc.ThreadLocalContextStorage: ThreadLocalContextStorage()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.firestore.v1.DocumentChange: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.location.zzbd: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzfo zzg()
com.google.android.gms.internal.firebase-auth-api.zzod: zzod()
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
io.grpc.internal.MessageFramer$BufferChainOutputStream: MessageFramer$BufferChainOutputStream(io.grpc.internal.MessageFramer)
com.lyokone.location.LocationPlugin: void access$000(com.lyokone.location.LocationPlugin,com.lyokone.location.FlutterLocationService)
com.lyokone.location.FlutterLocationService: boolean checkBackgroundPermissions()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.google.android.gms.maps.model.VisibleRegion: void writeToParcel(android.os.Parcel,int)
io.grpc.MethodDescriptor: MethodDescriptor(io.grpc.MethodDescriptor$MethodType,java.lang.String,io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller,java.lang.Object,boolean,boolean,boolean,io.grpc.MethodDescriptor$1)
io.grpc.internal.ManagedChannelServiceConfig: ManagedChannelServiceConfig(io.grpc.internal.ManagedChannelServiceConfig$MethodInfo,java.util.Map,java.util.Map,io.grpc.internal.RetriableStream$Throttle,java.lang.Object,java.util.Map)
com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse ok(long)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.Internal$IntList emptyIntList()
com.google.android.gms.internal.firebase-auth-api.zzqu: void writeToParcel(android.os.Parcel,int)
com.google.protobuf.CodedOutputStream: void writeFloat(int,float)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: SQLiteRemoteDocumentCache(com.google.firebase.firestore.local.SQLitePersistence,com.google.firebase.firestore.local.LocalSerializer)
com.google.firestore.v1.Target$DocumentsTarget: void access$200(com.google.firestore.v1.Target$DocumentsTarget,java.lang.String)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.gms.internal.firebase-auth-api.zzcq: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzna: zzna()
com.google.firestore.v1.Target$QueryTarget$Builder: com.google.firestore.v1.Target$QueryTarget$Builder setParent(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlq zzc()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zabq zak(com.google.android.gms.common.api.internal.ApiKey)
com.tekartik.sqflite.operation.ExecuteOperation: java.lang.Boolean getInTransaction()
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64(int,long)
com.google.android.gms.internal.firebase-auth-api.zzaek: com.google.android.gms.internal.firebase-auth-api.zzack zze()
com.google.firebase.firestore.core.FieldFilter: com.google.firebase.firestore.model.FieldPath getFirstInequalityField()
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder: AutoProtoEncoderDoNotUseEncoder$LogEventDroppedEncoder()
androidx.fragment.app.FragmentContainer: FragmentContainer()
com.google.android.gms.internal.firebase-auth-api.zzgz: java.util.Map zza(com.google.android.gms.internal.firebase-auth-api.zzgz)
com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.UnmodifiableIterator iterator()
com.google.android.gms.internal.firebase-auth-api.zzrq: java.lang.String zze()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
io.grpc.TlsChannelCredentials$Feature: TlsChannelCredentials$Feature(java.lang.String,int)
com.google.firestore.v1.DocumentMask: java.lang.String getFieldPaths(int)
com.google.android.gms.maps.model.PolylineOptions: boolean isGeodesic()
com.google.protobuf.ListFieldSchema$ListFieldSchemaLite: ListFieldSchema$ListFieldSchemaLite()
com.google.android.gms.internal.firebase-auth-api.zzxu: zzxu(java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
com.google.android.gms.maps.model.RoundCap: RoundCap()
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzg(com.google.android.gms.internal.firebase-auth-api.zzyg,com.google.android.gms.internal.firebase-auth-api.zzwy)
io.grpc.internal.RetriableStream: boolean hasPotentialHedging(io.grpc.internal.RetriableStream$State)
io.grpc.internal.Http2Ping$1: Http2Ping$1(io.grpc.internal.ClientTransport$PingCallback,long)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec$Builder cipherSuites(io.grpc.okhttp.internal.CipherSuite[])
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
com.google.firebase.messaging.FirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
com.google.android.gms.maps.model.TileOverlay: int hashCode()
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.google.firebase.firestore.remote.Datastore: boolean isPermanentError(io.grpc.Status)
com.google.android.gms.maps.internal.zzbz: zzbz()
com.google.protobuf.CodedOutputStreamWriter: void writeEnum(int,int)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
com.google.android.gms.internal.firebase-auth-api.zzvf: java.lang.String zza()
com.google.android.gms.maps.MapView: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzq(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.UserProfileChangeRequest)
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.grpc.ForwardingClientCall: ForwardingClientCall()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.grpc.internal.JsonUtil: java.lang.Integer getNumberAsInteger(java.util.Map,java.lang.String)
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: MemoryDocumentOverlayCache()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task updatePhoneNumber(java.util.Map)
com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)
io.flutter.plugins.googlemaps.Convert: java.lang.Object polylineIdToJson(java.lang.String)
com.google.firebase.messaging.TopicOperation: java.lang.String serialize()
com.google.android.datatransport.cct.internal.LogResponse: LogResponse()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.protobuf.SmallSortedMap$EntrySet: int size()
io.grpc.Context$CancellableContext: void removeListenerInternal(io.grpc.Context$CancellationListener,io.grpc.Context)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$ProtoEncoderDoNotUseEncoder: void encode(com.google.firebase.messaging.ProtoEncoderDoNotUse,com.google.firebase.encoders.ObjectEncoderContext)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.firebase.firestore.model.mutation.MutationResult: java.util.List getTransformResults()
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
com.google.protobuf.ByteString$LiteralByteString: void copyToInternal(byte[],int,int,int)
io.grpc.internal.RetriableStream$1SendMessageEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
io.grpc.internal.ManagedChannelImpl: io.grpc.ManagedChannel shutdown()
com.google.firebase.firestore.remote.WatchStream: void onNext(com.google.firestore.v1.ListenResponse)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeFixed32(int,int)
com.google.protobuf.NullValue$1: com.google.protobuf.NullValue findValueByNumber(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData fromMap(java.util.Map)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.google.android.gms.dynamic.DeferredLifecycleHelper: DeferredLifecycleHelper()
com.google.protobuf.UnsafeUtil: byte getByteLittleEndian(java.lang.Object,long)
io.grpc.internal.JndiResourceResolverFactory: java.lang.Throwable access$000()
com.google.firebase.internal.InternalTokenResult: java.lang.String toString()
com.google.firestore.v1.Value: com.google.firestore.v1.MapValue getMapValue()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.Window,android.view.View)
com.google.common.io.ByteStreams: byte[] combineBuffers(java.util.Queue,int)
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics: com.google.android.datatransport.runtime.firebase.transport.TimeWindow getWindowInternal()
com.google.firebase.messaging.SyncTask$ConnectivityChangeReceiver: SyncTask$ConnectivityChangeReceiver(com.google.firebase.messaging.SyncTask)
com.google.firebase.database.collection.RBTreeSortedMap: RBTreeSortedMap(com.google.firebase.database.collection.LLRBNode,java.util.Comparator)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzd(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.auth.internal.zzg)
com.google.android.gms.internal.firebase-auth-api.zzsl: zzsl(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzzg,com.google.android.gms.internal.firebase-auth-api.zzyj,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzwx)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
io.grpc.internal.AbstractClientStream$GetFramer: boolean isClosed()
com.google.firebase.firestore.model.SnapshotVersion: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.MemoryRemoteDocumentCache: com.google.firebase.firestore.model.MutableDocument get(com.google.firebase.firestore.model.DocumentKey)
com.google.firebase.firestore.model.DocumentKey: java.util.Comparator comparator()
com.google.android.gms.internal.firebase-auth-api.zzaen: void zzf(java.lang.Object,long,float)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task sendSignInLinkToEmail(java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: com.google.firebase.firestore.local.SQLitePersistence$Query performNextSubquery()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.google.firestore.v1.Cursor: Cursor()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zza(com.google.firebase.FirebaseApp,java.lang.String,java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.internal.location.zzb: zzb(java.lang.String)
com.google.firebase.firestore.model.MutableDocument: boolean isUnknownDocument()
com.google.android.gms.internal.firebase-auth-api.zzni: com.google.android.gms.internal.firebase-auth-api.zzni zza()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)
io.grpc.internal.KeepAliveManager$State: KeepAliveManager$State(java.lang.String,int)
io.grpc.internal.ProxyDetectorImpl: java.util.logging.Logger access$000()
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: SchemaManager_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.auth.PhoneMultiFactorInfo: org.json.JSONObject toJson()
com.google.android.gms.internal.firebase-auth-api.zzoq: int zza(java.security.spec.EllipticCurve)
com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.base.zaa: android.os.Parcel zaa()
com.google.firebase.firestore.util.BackgroundQueue: void drain()
com.google.firebase.auth.internal.zzr: int describeContents()
io.grpc.CallOptions: io.grpc.CallOptions withOption(io.grpc.CallOptions$Key,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabh: zzabh(double[],int)
com.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)
kotlinx.coroutines.Active: Active()
com.google.firebase.messaging.TopicsSyncTask$ConnectivityChangeReceiver: void registerReceiver()
io.perfmark.Impl: void startTask(java.lang.String,io.perfmark.Tag)
io.grpc.internal.ManagedChannelOrphanWrapper: java.util.logging.Logger access$100()
com.google.android.gms.common.internal.zzn: java.lang.String zzd()
com.google.firebase.auth.OAuthProvider$CredentialBuilder: OAuthProvider$CredentialBuilder(java.lang.String,com.google.firebase.auth.zzac)
com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager newInstance(android.content.Context,java.lang.String,int)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.google.protobuf.ByteString$BoundedByteString: ByteString$BoundedByteString(byte[],int,int)
io.grpc.LoadBalancer$SubchannelPicker: void requestConnection()
com.google.protobuf.ByteString: com.google.protobuf.ByteString concat(com.google.protobuf.ByteString)
com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzb(android.content.Context,java.lang.String,java.lang.String,java.lang.Class[])
com.google.android.gms.internal.firebase-auth-api.zzdf: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firestore.v1.DocumentTransform$FieldTransform: void setSetToServerValue(com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Void invoke(java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.tekartik.sqflite.SqflitePlugin: void onDebugModeCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.FirebaseMessaging$AutoInit: void setEnabled(boolean)
com.google.android.datatransport.Event: com.google.android.datatransport.Event ofData(java.lang.Object)
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.SnapshotMetadata getMetadata()
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzo(com.google.android.gms.internal.firebase-auth-api.zzqs,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.internal.firebase-auth-api.zzpj: byte[] zza(int)
com.google.android.gms.internal.firebase-auth-api.zzry: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzje zzb(com.google.android.gms.internal.firebase-auth-api.zzjl)
com.google.protobuf.UnknownFieldSetLiteSchema: void makeImmutable(java.lang.Object)
io.grpc.okhttp.OkHttpClientStream$TransportState: void onEndOfStream()
io.flutter.plugins.googlemaps.CircleBuilder: void setZIndex(float)
com.google.android.gms.internal.firebase-auth-api.zziz: com.google.android.gms.internal.firebase-auth-api.zziz zzc()
com.google.android.gms.internal.firebase-auth-api.zzpn: byte[] zzb(byte[],byte[])
com.google.firebase.messaging.RemoteMessage$Notification: android.net.Uri getImageUrl()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setDevice(java.lang.String)
io.flutter.plugins.googlemaps.PolylinesController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.firebase.components.Component: java.lang.String toString()
androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: MemoryComponentProvider$RemoteStoreCallback(com.google.firebase.firestore.core.MemoryComponentProvider,com.google.firebase.firestore.core.MemoryComponentProvider$1)
com.google.android.gms.internal.firebase-auth-api.zzfl: zzfl(com.google.android.gms.internal.firebase-auth-api.zzap)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzy(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzca: zzca(com.google.android.gms.internal.firebase-auth-api.zzgb)
com.google.android.gms.common.internal.zav: boolean equals(java.lang.Object)
com.google.firebase.firestore.local.SQLitePersistence$Query: com.google.firebase.firestore.local.SQLitePersistence$Query binding(java.lang.Object[])
com.google.protobuf.CodedOutputStreamWriter: void writeBool(int,boolean)
com.google.firebase.firestore.bundle.BundleMetadata: int getSchemaVersion()
com.google.android.datatransport.runtime.AutoProtoEncoderDoNotUseEncoder$LogSourceMetricsEncoder: void encode(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationManagerCompat$NotifyTask: NotificationManagerCompat$NotifyTask(java.lang.String,int,java.lang.String,android.app.Notification)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.Parser getParserForType()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setPadding(float,float,float,float)
com.google.android.gms.internal.firebase-auth-api.zzkw: com.google.android.gms.internal.firebase-auth-api.zzkw zzb(com.google.android.gms.internal.firebase-auth-api.zzla)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.google.firebase.installations.local.IidStore: java.lang.String readToken()
com.baseflow.geolocator.location.LocationMapper: java.util.Map toHashMap(android.location.Location)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
io.grpc.internal.DelayedClientTransport$3: void run()
com.google.firebase.firestore.local.LocalStore: void saveNamedQuery(com.google.firebase.firestore.bundle.NamedQuery,com.google.firebase.database.collection.ImmutableSortedSet)
io.grpc.Context$LazyStorage: io.grpc.Context$Storage createStorage(java.util.concurrent.atomic.AtomicReference)
com.google.firebase.encoders.FieldDescriptor: com.google.firebase.encoders.FieldDescriptor of(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzacw: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmx: int zzb()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.google.firebase.firestore.index.FirestoreIndexValueWriter: void writeUnlabeledIndexString(java.lang.String,com.google.firebase.firestore.index.DirectionalIndexByteEncoder)
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzj(com.google.android.gms.internal.firebase-auth-api.zzza,com.google.android.gms.internal.firebase-auth-api.zzwy)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder protoBuilder(byte[])
androidx.fragment.app.FragmentManagerImpl: java.lang.String toString()
com.google.firebase.firestore.index.IndexByteEncoder: IndexByteEncoder()
com.google.android.gms.internal.firebase-auth-api.zzhd: java.util.Map zzc()
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzdt: void zzd(byte[],long,int)
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: byte[] toAsciiString(byte[])
com.google.firebase.database.collection.RBTreeSortedMap$Builder: void buildPennant(com.google.firebase.database.collection.LLRBNode$Color,int,int)
io.grpc.StatusException: StatusException(io.grpc.Status,io.grpc.Metadata,boolean)
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
com.google.firestore.v1.WriteRequest$Builder: com.google.firestore.v1.WriteRequest$Builder setDatabase(java.lang.String)
com.google.firebase.firestore.remote.RemoteStore: com.google.firebase.firestore.local.TargetData getTargetDataForTarget(int)
com.google.protobuf.BinaryReader$SafeHeapReader: void readBoolList(java.util.List)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query orderBy(com.google.firebase.firestore.core.OrderBy)
com.google.android.gms.common.internal.TelemetryLoggingOptions: android.os.Bundle zaa()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.google.android.gms.internal.firebase-auth-api.zzor: byte[] zza(byte[],byte[])
com.google.android.gms.common.api.internal.zaf: boolean zaa(com.google.android.gms.common.api.internal.zabq)
io.flutter.plugins.googlemaps.GoogleMapController: void animateCamera(com.google.android.gms.maps.CameraUpdate)
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseData(java.lang.Object,com.google.firebase.firestore.core.UserData$ParseContext)
com.lyokone.location.LocationPlugin$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
com.google.android.datatransport.runtime.TransportRuntime: TransportRuntime(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(com.google.android.gms.tasks.Task[])
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean getMethodTimingTelemetryEnabled()
com.google.android.gms.maps.GoogleMap: void setOnMapClickListener(com.google.android.gms.maps.GoogleMap$OnMapClickListener)
com.tekartik.sqflite.SqflitePlugin$6: void run()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
com.lyokone.location.MethodCallHandlerImpl: MethodCallHandlerImpl()
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.google.android.gms.internal.firebase-auth-api.zzabr: java.lang.Object get(int)
io.flutter.plugins.firebase.messaging.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)
com.google.android.gms.location.zzai: java.lang.Object createFromParcel(android.os.Parcel)
com.google.rpc.Status: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.firestore.remote.ExistenceFilter: int getCount()
com.google.android.gms.internal.firebase-auth-api.zzaaz: boolean zzO()
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.common.api.internal.zacq: zacq(com.google.android.gms.common.api.internal.zact)
com.google.firebase.messaging.reporting.MessagingClientEventExtension: MessagingClientEventExtension(com.google.firebase.messaging.reporting.MessagingClientEvent)
com.google.android.gms.maps.model.TileOverlay: java.lang.String getId()
io.grpc.internal.ForwardingClientStream: void setFullStreamDecompression(boolean)
com.google.firebase.auth.internal.zzbc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzuk: void zzb()
kotlin.Pair: boolean equals(java.lang.Object)
com.google.protobuf.IntArrayList: boolean contains(java.lang.Object)
com.google.firebase.firestore.proto.Target: void setLastListenSequenceNumber(long)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
com.google.firebase.firestore.util.Util: java.lang.Object advanceIterator(java.util.Iterator)
com.google.android.gms.internal.location.zzbg: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzacj: zzacj()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.google.android.datatransport.cct.CctTransportBackend: int getNetSubtypeValue(android.net.NetworkInfo)
io.grpc.CallOptions: java.lang.String getCompressor()
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: StructuredQuery$FieldFilter$Builder(com.google.firestore.v1.StructuredQuery$1)
com.google.firebase.firestore.model.mutation.DeleteMutation: DeleteMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Precondition)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void optionsFromResource(io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
com.google.firebase.auth.internal.zzx: boolean isEmailVerified()
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
com.tekartik.sqflite.SqlCommand: boolean equals(java.lang.Object)
androidx.core.app.Person: boolean isImportant()
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: com.google.firebase.firestore.model.DocumentKey getDocumentKey()
okio.Buffer: okio.Buffer buffer()
kotlin.random.Random$Default: int nextInt()
com.google.firebase.auth.internal.zzak: zzak(com.google.firebase.auth.internal.zzal)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.datatransport.cct.internal.BatchedLogRequest: BatchedLogRequest()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void ackSettings()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: long getUserCallbackHandle()
com.google.firebase.firestore.model.FieldIndex: FieldIndex()
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
com.google.android.gms.internal.firebase-auth-api.zzaeu: boolean zze(byte[])
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()
com.google.firebase.auth.EmailAuthProvider: com.google.firebase.auth.AuthCredential getCredential(java.lang.String,java.lang.String)
com.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzi(int)
com.google.android.gms.maps.model.TileOverlay: float getZIndex()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readSFixed32()
io.grpc.internal.ChannelLoggerImpl: void logOnly(io.grpc.InternalLogId,io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String)
io.grpc.internal.PickFirstLoadBalancer: void requestConnection()
io.grpc.okhttp.internal.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
io.grpc.CompositeCallCredentials$CombiningMetadataApplier: void apply(io.grpc.Metadata)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder: io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions$Builder setDatabaseURL(java.lang.String)
androidx.fragment.app.Fragment: android.view.View getView()
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzlx zza()
io.grpc.ClientStreamTracer$Factory: io.grpc.ClientStreamTracer newClientStreamTracer(io.grpc.ClientStreamTracer$StreamInfo,io.grpc.Metadata)
com.google.android.gms.tasks.zzv: void zzb(com.google.android.gms.tasks.zzq)
com.google.firebase.auth.zzy: zzy(com.google.firebase.auth.FirebaseUser,java.lang.String,com.google.firebase.auth.ActionCodeSettings)
com.google.firebase.firestore.LoadBundleTask: LoadBundleTask()
com.google.firebase.auth.internal.zzbm: void zzd(android.content.Context)
com.google.firebase.firestore.bundle.BundleMetadata: java.lang.String getBundleId()
com.google.android.gms.internal.firebase-auth-api.zzpb: void zzb(long[],long[],long[])
com.google.android.gms.common.internal.zac: java.lang.String zac(android.content.Context,int)
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
com.google.firebase.auth.ActionCodeSettings: java.lang.String getUrl()
com.google.android.gms.common.api.internal.zabq: void zau()
io.grpc.MethodDescriptor: boolean isSafe()
io.grpc.okhttp.internal.ConnectionSpec$Builder: io.grpc.okhttp.internal.ConnectionSpec$Builder cipherSuites(java.lang.String[])
io.grpc.ClientInterceptors$2: void halfClose()
com.google.firebase.firestore.model.MutableDocument: boolean hasPendingWrites()
com.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)
io.grpc.internal.DelayedStream: void halfClose()
androidx.fragment.app.FragmentActivity: void onPause()
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch parseFrom(com.google.protobuf.ByteString)
com.google.android.gms.internal.maps.zzab: void zzr(com.google.android.gms.maps.model.Cap)
com.google.protobuf.ExtensionSchemas: com.google.protobuf.ExtensionSchema lite()
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,com.google.firebase.messaging.NotificationParams)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firestore.v1.Value$Builder: Value$Builder()
com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
io.grpc.InternalChannelz$ChannelTrace$Event: InternalChannelz$ChannelTrace$Event(java.lang.String,io.grpc.InternalChannelz$ChannelTrace$Event$Severity,long,io.grpc.InternalWithLogId,io.grpc.InternalWithLogId)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzacr: boolean addAll(java.util.Collection)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzv(int,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzado)
io.flutter.util.ViewUtils: int generateViewId(int)
com.google.android.gms.common.api.internal.zac: zac(int)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
com.google.firebase.firestore.DocumentReference: com.google.firebase.firestore.core.Query asQuery()
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol get(java.lang.String)
com.google.firebase.firestore.util.Logger: void warn(java.lang.String,java.lang.String,java.lang.Object[])
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.google.android.gms.internal.firebase-auth-api.zzabr: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setDoubleValue(double)
com.google.protobuf.InvalidProtocolBufferException: InvalidProtocolBufferException(java.lang.String)
com.google.gson.stream.JsonReader: java.lang.String toString()
com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)
com.google.firestore.v1.DocumentChange: DocumentChange()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
io.grpc.internal.TransportTracer: void setFlowControlWindowReader(io.grpc.internal.TransportTracer$FlowControlReader)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzE(java.util.List)
androidx.core.app.BundleCompat$BundleCompatBaseImpl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task zae(int,com.google.android.gms.common.api.internal.TaskApiCall)
com.google.android.gms.common.api.internal.zap: void onStart()
com.google.firebase.auth.FirebaseAuth: void zzJ(java.lang.String,long,java.util.concurrent.TimeUnit,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,android.app.Activity,java.util.concurrent.Executor,boolean,java.lang.String,java.lang.String)
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context directBootSafe(android.content.Context)
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean onCheckIsTextEditor()
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: java.lang.String serializeToString(com.google.android.gms.common.internal.safeparcel.SafeParcelable)
com.google.firebase.auth.FirebaseAuth: java.lang.String getUid()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
com.google.android.gms.internal.firebase-auth-api.zznz: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.common.wrappers.InstantApps: boolean isInstantApp(android.content.Context)
com.google.firebase.messaging.Store: com.google.firebase.messaging.Store$Token getToken(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: void invoke(java.lang.Throwable)
io.grpc.internal.RetryPolicy: int hashCode()
com.tekartik.sqflite.SqflitePlugin$3: void run()
io.grpc.okhttp.internal.framed.Hpack$Reader: void clearDynamicTable()
io.grpc.internal.AbstractStream$TransportState: void deframe(io.grpc.internal.ReadableBuffer)
io.grpc.ManagedChannelProvider$ProviderNotFoundException: ManagedChannelProvider$ProviderNotFoundException(java.lang.String)
com.google.android.gms.internal.location.zzal: zzal(android.os.IBinder)
com.google.firebase.Timestamp: int describeContents()
com.google.firebase.firestore.local.MemoryBundleCache: void saveBundleMetadata(com.google.firebase.firestore.bundle.BundleMetadata)
io.grpc.internal.DnsNameResolver: io.grpc.internal.DnsNameResolver$ResourceResolver getResourceResolver()
com.google.android.gms.internal.firebase-auth-api.zzwh: void zzn(com.google.android.gms.internal.firebase-auth-api.zzzi,com.google.android.gms.internal.firebase-auth-api.zzwy)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInAnonymously(java.util.Map)
com.google.firebase.messaging.MessagingAnalytics: java.lang.String getUseDeviceTime(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zzi()
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: DocumentSnapshot$ServerTimestampBehavior(java.lang.String,int)
com.google.firestore.v1.BatchGetDocumentsRequest$Builder: BatchGetDocumentsRequest$Builder(com.google.firestore.v1.BatchGetDocumentsRequest$1)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.gms.internal.firebase-auth-api.zzadg: void zzh(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzadn,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.firebase.firestore.FirebaseFirestoreSettings: java.lang.String access$000(com.google.firebase.firestore.FirebaseFirestoreSettings)
io.grpc.internal.DelayedClientCall$7: void request(int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setFillColor(int)
com.google.firebase.firestore.local.SQLiteMutationQueue: java.util.List getAllMutationBatches()
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzd()
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
com.google.protobuf.FieldSet: java.util.Iterator iterator()
io.grpc.internal.ForwardingManagedChannel: io.grpc.ConnectivityState getState(boolean)
com.google.android.gms.internal.firebase-auth-api.zzbd: boolean zzf(java.lang.String)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.fragment.app.DialogFragment: void onStop()
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: Uploader_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task access$000(com.google.firebase.messaging.EnhancedIntentService,android.content.Intent)
com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)
com.google.android.gms.internal.firebase-auth-api.zziz: void zzh(com.google.android.gms.internal.firebase-auth-api.zziz,int)
com.google.android.gms.internal.firebase-auth-api.zzrr: zzrr()
androidx.lifecycle.ReportFragment: void onStop()
com.google.android.gms.internal.firebase-auth-api.zzrx: java.lang.Object[] newArray(int)
com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setSource(int)
com.google.firebase.firestore.FirebaseFirestore: com.google.firebase.firestore.FirebaseFirestoreSettings mergeEmulatorSettings(com.google.firebase.firestore.FirebaseFirestoreSettings,com.google.firebase.emulators.EmulatedServiceSettings)
com.google.firestore.v1.Target$Builder: com.google.firestore.v1.Target$Builder setQuery(com.google.firestore.v1.Target$QueryTarget)
com.google.android.gms.cloudmessaging.zzw: zzw(com.google.android.gms.cloudmessaging.Rpc,java.lang.String,java.util.concurrent.ScheduledFuture)
com.google.firebase.heartbeatinfo.HeartBeatResult: com.google.firebase.heartbeatinfo.HeartBeatResult create(java.lang.String,java.util.List)
com.google.protobuf.Utf8: int partialIsValidUtf8(int,byte[],int,int)
com.google.android.datatransport.Encoding: int hashCode()
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
com.google.firebase.auth.FirebaseAuth: void zzD()
io.grpc.internal.DnsNameResolver$JdkAddressResolver: DnsNameResolver$JdkAddressResolver(java.lang.String,int)
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzkn zza()
com.google.android.gms.tasks.zzz: zzz(com.google.android.gms.tasks.zzw,java.util.concurrent.Callable)
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int validateObjectHeader(android.os.Parcel)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: AutoValue_FieldIndex_IndexOffset(com.google.firebase.firestore.model.SnapshotVersion,com.google.firebase.firestore.model.DocumentKey,int)
com.google.firebase.firestore.local.SQLiteTargetCache: void removeMatchingKeys(com.google.firebase.database.collection.ImmutableSortedSet,int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzabp: java.lang.Object clone()
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
com.google.firebase.auth.internal.RecaptchaActivity: void zzh(com.google.android.gms.common.api.Status)
com.google.firebase.firestore.remote.RemoteSerializer: io.grpc.Status fromStatus(com.google.rpc.Status)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setIsForMainFrame(java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzzo: com.google.android.gms.internal.firebase-auth-api.zzzo zza(com.google.android.gms.internal.firebase-auth-api.zzzo)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: long getMaxStorageSizeInBytes()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.grpc.internal.DelayedClientCall$1DeadlineExceededRunnable: void run()
com.google.android.gms.internal.firebase-auth-api.zzbh: void zzg(com.google.android.gms.internal.firebase-auth-api.zzbj)
io.flutter.plugins.googlemaps.MarkerBuilder: void setDraggable(boolean)
com.google.common.io.ByteStreams$1: void write(int)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzw(java.lang.Object,byte[],int,int,int,int,int,int,long,int,long,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.internal.firebase-auth-api.zzaci: int zza()
kotlinx.coroutines.NonDisposableHandle: void dispose()
com.google.firebase.firestore.util.AsyncQueue: void enqueueAndForgetEvenAfterShutdown(java.lang.Runnable)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
com.google.android.gms.common.api.internal.zacr: void run()
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.common.api.Status getStatus()
com.google.firebase.auth.GetTokenResult: java.lang.String getToken()
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportPath()
com.google.firebase.messaging.Store: java.lang.String createTokenKey(java.lang.String,java.lang.String)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions latLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: void writeVarInt64(long)
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
io.grpc.ForwardingChannelBuilder: io.grpc.ManagedChannelBuilder usePlaintext()
com.google.android.gms.internal.firebase-auth-api.zzaaw: int zzd()
com.google.firebase.firestore.local.SQLitePersistence: void runTransaction(java.lang.String,java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.android.gms.internal.firebase-auth-api.zzyn zzf(java.lang.String)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
com.google.android.gms.cloudmessaging.zzt: int zza()
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task getNamedQuery(java.lang.String)
com.google.common.base.Ticker$1: long read()
okio.Buffer: java.lang.String readUtf8LineStrict()
io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedShort()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
io.grpc.Status$StatusMessageMarshaller: Status$StatusMessageMarshaller(io.grpc.Status$1)
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
com.google.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()
io.grpc.MethodDescriptor: MethodDescriptor(io.grpc.MethodDescriptor$MethodType,java.lang.String,io.grpc.MethodDescriptor$Marshaller,io.grpc.MethodDescriptor$Marshaller,java.lang.Object,boolean,boolean,boolean)
com.google.android.gms.common.api.internal.zaad: java.util.Map zaa(com.google.android.gms.common.api.internal.zaad)
com.google.android.gms.maps.model.TileOverlay: boolean getFadeIn()
com.google.android.gms.common.api.internal.UnregisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
com.google.protobuf.ExtensionRegistryFactory: java.lang.Class reflectExtensionRegistry()
com.google.firestore.v1.ArrayValue$Builder: com.google.firestore.v1.ArrayValue$Builder addAllValues(java.lang.Iterable)
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: com.google.protobuf.WireFormat$JavaType getLiteJavaType()
com.google.android.gms.common.api.internal.zaaf: com.google.android.gms.tasks.TaskCompletionSource zab()
com.google.android.gms.internal.firebase-auth-api.zzhw: int hashCode()
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.core.os.LocaleListCompatWrapper: void toLanguageTag(java.lang.StringBuilder,java.util.Locale)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl: android.webkit.WebViewClient access$000(io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: int getBit()
com.google.firebase.firestore.bundle.BundledDocumentMetadata: java.util.List getQueries()
com.google.android.gms.internal.firebase-auth-api.zzadv: java.lang.Comparable zza()
com.google.android.gms.internal.firebase-auth-api.zzaau: boolean zzs()
com.google.android.gms.internal.firebase-auth-api.zzh: boolean hasNext()
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,com.google.protobuf.MessageLite)
com.google.android.gms.internal.firebase-auth-api.zzacx: java.lang.Object zzc(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzzb: boolean zzg()
androidx.collection.ArraySet: ArraySet(int)
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
io.grpc.internal.CallTracer: CallTracer(io.grpc.internal.TimeProvider)
okio.Okio: okio.Source source(java.net.Socket)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zac(java.lang.String)
com.google.firestore.v1.Write: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void popLimit(int)
com.google.firebase.firestore.remote.WatchChangeAggregator: void handleTargetChange(com.google.firebase.firestore.remote.WatchChange$WatchTargetChange)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.android.gms.internal.firebase-auth-api.zzacr: boolean add(java.lang.Object)
com.google.firebase.messaging.FcmLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlin.Pair: java.lang.Object getSecond()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
com.google.android.gms.internal.firebase-auth-api.zzkk: zzkk()
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
com.google.android.gms.internal.firebase-auth-api.zzui: java.lang.String zza()
com.google.firebase.firestore.local.SQLiteTargetCache: boolean updateMetadata(com.google.firebase.firestore.local.TargetData)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: com.google.firestore.v1.DocumentTransform$FieldTransform$Builder setFieldPath(java.lang.String)
kotlinx.coroutines.YieldContext: YieldContext()
com.google.firebase.auth.internal.zzq: java.lang.Object[] newArray(int)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
com.google.firestore.v1.DocumentDelete: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException parseFailure()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.google.common.io.BaseEncoding: BaseEncoding()
com.google.protobuf.CodedInputStream$StreamDecoder: int readUInt32()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzaby: void zzh(int)
io.grpc.internal.MessageDeframer$State: MessageDeframer$State(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzuj: java.lang.String zza()
com.google.firebase.firestore.remote.RemoteStore: boolean canAddToWritePipeline()
io.grpc.Metadata: byte[] name(int)
com.google.android.gms.safetynet.SafeBrowsingData: byte[] getState()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.lyokone.location.NotificationOptions: NotificationOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
com.google.firestore.v1.WriteRequest$Builder: com.google.firestore.v1.WriteRequest$Builder addWrites(com.google.firestore.v1.Write)
com.google.protobuf.WireFormat$FieldType: WireFormat$FieldType(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1)
androidx.window.core.Bounds: int hashCode()
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
com.google.android.gms.signin.zac: int hashCode()
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)
com.google.firebase.firestore.QuerySnapshot: java.util.List getDocuments()
androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)
io.grpc.InternalConfigSelector$Result: io.grpc.ClientInterceptor getInterceptor()
com.google.android.gms.internal.location.zzaz: void disconnect()
androidx.window.core.Version: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.android.gms.common.api.internal.zacd: com.google.android.gms.common.internal.ConnectionTelemetryConfiguration zab(com.google.android.gms.common.api.internal.zabq,com.google.android.gms.common.internal.BaseGmsClient,int)
com.google.protobuf.ArrayDecoders: int decodePackedVarint64List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.internal.DelayedStream$9: DelayedStream$9(io.grpc.internal.DelayedStream)
com.google.android.gms.internal.firebase-auth-api.zzgl: java.lang.Class zzb()
com.google.firebase.auth.internal.zzw: zzw()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.firestore.v1.ExistenceFilter: int getTargetId()
kotlinx.coroutines.scheduling.NonBlockingContext: NonBlockingContext()
okio.AsyncTimeout$1: void flush()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreMessageCodec: void writeSnapshotMetadata(java.io.ByteArrayOutputStream,com.google.firebase.firestore.SnapshotMetadata)
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp getSnapshotVersion()
com.google.firebase.components.DependencyException: DependencyException(java.lang.String)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable(io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl,io.perfmark.Link,io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.components.Dependency: java.lang.String describeInjection(int)
com.google.firebase.firestore.model.mutation.PatchMutation: int hashCode()
com.google.protobuf.MessageSchema: java.lang.Object filterUnknownEnumMap(int,int,java.util.Map,com.google.protobuf.Internal$EnumVerifier,java.lang.Object,com.google.protobuf.UnknownFieldSchema)
com.google.android.gms.internal.firebase-auth-api.zzt: com.google.android.gms.internal.firebase-auth-api.zzp zza(java.lang.CharSequence)
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: OkHttpClientTransport$ClientFrameHandler(io.grpc.okhttp.OkHttpClientTransport,io.grpc.okhttp.internal.framed.FrameReader)
com.google.common.collect.Platform: java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[])
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
com.google.firebase.auth.zzp: zzp(com.google.firebase.auth.FirebaseAuth,com.google.firebase.auth.PhoneAuthOptions)
io.grpc.okhttp.OkHttpClientTransport: void finishStream(int,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,boolean,io.grpc.okhttp.internal.framed.ErrorCode,io.grpc.Metadata)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
com.google.protobuf.CodedInputStream$StreamDecoder: java.util.List readRawBytesSlowPathRemainingChunks(int)
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
com.google.android.gms.common.internal.Objects: int hashCode(java.lang.Object[])
io.grpc.internal.ForwardingClientStreamListener: void headersRead(io.grpc.Metadata)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
com.google.protobuf.UnsafeUtil: byte getByteBigEndian(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzaee: com.google.android.gms.internal.firebase-auth-api.zzacf zza()
com.google.common.base.Platform$JdkPatternCompiler: Platform$JdkPatternCompiler(com.google.common.base.Platform$1)
com.google.firebase.firestore.UserDataWriter: java.lang.Object convertTimestamp(com.google.protobuf.Timestamp)
okio.Segment: void writeTo(okio.Segment,int)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: java.util.ArrayList isIntegerArrayList(java.lang.Object)
com.google.firebase.firestore.local.SQLiteIndexManager: void start()
com.google.android.gms.internal.firebase-auth-api.zzaac: com.google.android.gms.internal.firebase-auth-api.zzty zza(java.lang.Exception,java.lang.String,java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: FlutterFirebaseAuthPluginException(java.lang.Exception,java.lang.Throwable)
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzaaz: java.lang.String zzt()
com.google.android.gms.internal.firebase-auth-api.zzabp: void zzc(com.google.android.gms.internal.firebase-auth-api.zzabo,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabt: com.google.android.gms.internal.firebase-auth-api.zzabt zzi()
io.grpc.internal.InternalSubchannel: io.grpc.SynchronizationContext$ScheduledHandle access$1202(io.grpc.internal.InternalSubchannel,io.grpc.SynchronizationContext$ScheduledHandle)
com.google.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)
com.google.android.gms.common.api.Scope: Scope(java.lang.String)
com.google.protobuf.ArrayDecoders: int decodePackedFixed32List(byte[],int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
com.baseflow.geolocator.LocationServiceHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
com.google.firebase.firestore.core.Query: int hashCode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzrp: zzrp()
io.grpc.okhttp.OutboundFlowController: io.grpc.okhttp.OutboundFlowController$OutboundFlowState access$100(io.grpc.okhttp.OutboundFlowController)
com.google.android.gms.common.api.internal.zah: void zag(com.google.android.gms.common.api.internal.zaad,boolean)
io.grpc.internal.AbstractClientStream$TransportState$1: AbstractClientStream$TransportState$1(io.grpc.internal.AbstractClientStream$TransportState,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)
com.google.firebase.auth.internal.zzz: org.json.JSONObject zza()
com.baseflow.geolocator.location.LocationAccuracyStatus: LocationAccuracyStatus(java.lang.String,int)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzku: void zzi(com.google.android.gms.internal.firebase-auth-api.zzku,int)
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zziy zza(int)
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Object invoke(java.lang.Object)
io.grpc.internal.SerializingExecutor$FieldUpdaterAtomicHelper: boolean runStateCompareAndSet(io.grpc.internal.SerializingExecutor,int,int)
io.grpc.internal.DelayedClientCall$6: DelayedClientCall$6(io.grpc.internal.DelayedClientCall)
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
com.google.firebase.auth.internal.zzx: java.lang.String getUid()
androidx.collection.ArraySet: boolean remove(java.lang.Object)
com.google.firestore.v1.Value: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzw(com.google.android.gms.internal.firebase-auth-api.zzri,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.grpc.internal.ClientCallImpl: io.grpc.Deadline access$1000(io.grpc.internal.ClientCallImpl)
com.google.common.collect.Maps$EntryFunction$1: java.lang.Object apply(java.util.Map$Entry)
com.google.android.gms.internal.firebase-auth-api.zzsq: void zzb(java.lang.Object)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.maps.zzae: void zzk(float)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
com.google.firebase.firestore.model.DocumentSet: com.google.firebase.firestore.model.DocumentSet remove(com.google.firebase.firestore.model.DocumentKey)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setDownloadListener(android.webkit.DownloadListener)
com.google.android.gms.common.api.internal.zzb: android.app.Activity getLifecycleActivity()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.flutter.plugins.pathprovider.Messages: java.util.Map wrapError(java.lang.Throwable)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.grpc.StreamTracer: void inboundWireSize(long)
androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)
androidx.collection.MapCollections: java.util.Set getEntrySet()
com.google.android.gms.maps.internal.zzg: boolean setIndoorEnabled(boolean)
io.grpc.ClientInterceptors$2: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
com.google.android.gms.signin.internal.SignInClientImpl: int getMinApkVersion()
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: ExceptionsConstuctorKt$tryCopyException$4$1()
com.google.firebase.auth.FirebaseUser: com.google.android.gms.tasks.Task unlink(java.lang.String)
com.google.firebase.auth.zzae: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerHostApiCodec: GeneratedAndroidWebView$DownloadListenerHostApiCodec()
com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics getStorageMetricsInternal()
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxn: zzxn(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzM(int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: void setName(java.lang.String)
com.google.firebase.firestore.local.SQLiteRemoteDocumentCache: java.util.Map getAll(java.util.List,com.google.firebase.firestore.model.FieldIndex$IndexOffset,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
com.google.protobuf.IntArrayList: void add(int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzh(com.google.android.gms.common.api.Status)
com.google.protobuf.SmallSortedMap$Entry: int compareTo(java.lang.Object)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
io.grpc.okhttp.internal.framed.Huffman: byte[] decode(byte[])
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
io.grpc.internal.RetriableStream$2: RetriableStream$2(io.grpc.internal.RetriableStream,io.grpc.ClientStreamTracer)
com.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[])
androidx.core.os.LocaleListCompat: java.util.Locale forLanguageTagCompat(java.lang.String)
com.google.firebase.firestore.local.SQLitePersistence: com.google.firebase.firestore.local.RemoteDocumentCache getRemoteDocumentCache()
com.google.firebase.database.collection.ArraySortedMap: ArraySortedMap(java.util.Comparator,java.lang.Object[],java.lang.Object[])
com.google.android.datatransport.AutoValue_Event: com.google.android.datatransport.Priority getPriority()
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
com.google.android.gms.internal.firebase-auth-api.zzadm: java.lang.Object[] zze()
com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.LazyStringList access$000(com.google.protobuf.UnmodifiableLazyStringList)
com.google.common.collect.Maps: java.lang.String toStringImpl(java.util.Map)
io.grpc.CompositeCallCredentials$WrappingMetadataApplier: void apply(io.grpc.Metadata)
io.grpc.okhttp.OkHttpClientStream: io.grpc.Attributes getAttributes()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
com.google.firebase.firestore.model.mutation.FieldMask: boolean covers(com.google.firebase.firestore.model.FieldPath)
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: QuerySnapshot$QuerySnapshotIterator(com.google.firebase.firestore.QuerySnapshot,java.util.Iterator)
com.google.firebase.firestore.core.CompositeFilter: boolean matches(com.google.firebase.firestore.model.Document)
io.grpc.internal.MessageFramer$BufferChainOutputStream: int readableBytes()
com.google.android.gms.internal.firebase-auth-api.zzsd: zzsd()
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzg(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zziw: com.google.android.gms.internal.firebase-auth-api.zziw zzc()
com.google.android.gms.internal.firebase-auth-api.zzxl: zzxl(com.google.android.gms.internal.firebase-auth-api.zzxn,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()
io.grpc.internal.GrpcUtil$4: void close(java.util.concurrent.ScheduledExecutorService)
io.grpc.internal.PickFirstLoadBalancer: void access$000(io.grpc.internal.PickFirstLoadBalancer,io.grpc.LoadBalancer$Subchannel,io.grpc.ConnectivityStateInfo)
androidx.fragment.app.FragmentManagerImpl: void attachFragment(androidx.fragment.app.Fragment)
com.google.android.gms.common.internal.zag: zag()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder()
io.grpc.okhttp.OutboundFlowController: int windowUpdate(io.grpc.okhttp.OkHttpClientStream,int)
com.google.firebase.auth.internal.zzj: java.lang.String zzc(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyj: com.google.android.gms.internal.firebase-auth-api.zzyj zzf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzmz: zzmz(com.google.android.gms.internal.firebase-auth-api.zzmy)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
io.grpc.okhttp.internal.Platform$1: java.lang.Object run()
kotlin.sequences.TransformingSequence$iterator$1: void remove()
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
com.google.firebase.firestore.local.SQLitePersistence$LongQuery: java.lang.Object[] getNextSubqueryArgs()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker$1: PickFirstLoadBalancer$RequestConnectionPicker$1(io.grpc.internal.PickFirstLoadBalancer$RequestConnectionPicker)
androidx.fragment.app.Fragment: void initLifecycle()
com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(java.nio.ByteBuffer)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createKeySet()
io.flutter.Log: void d(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
com.google.common.io.BaseEncoding$Alphabet: int hashCode()
com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange: int getTargetId()
com.google.android.gms.internal.firebase-auth-api.zzul: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzadk: zzadk()
com.google.android.gms.internal.maps.zza: android.os.IBinder asBinder()
io.grpc.okhttp.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzl(com.google.android.gms.internal.firebase-auth-api.zzqm,com.google.android.gms.internal.firebase-auth-api.zzvr)
io.grpc.internal.ReadableBuffers$BufferInputStream: void mark(int)
com.google.protobuf.CodedInputStreamReader: void readSFixed32List(java.util.List)
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: SQLiteMutationQueue$BlobAccumulator(byte[])
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.window.core.Version: int hashCode()
com.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException: io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPluginException noSuchProvider()
com.google.android.datatransport.runtime.firebase.transport.LogSourceMetrics: java.util.List getLogEventDroppedList()
com.google.protobuf.SmallSortedMap$EntrySet: SmallSortedMap$EntrySet(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1)
com.google.android.gms.tasks.zzw: void zzh()
okio.Buffer: byte[] readByteArray()
androidx.core.os.LocaleListCompat: java.util.Locale get(int)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
com.google.firebase.firestore.local.LocalDocumentsView: com.google.firebase.firestore.model.MutableDocument getBaseDocument(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.mutation.Overlay)
com.google.common.collect.RegularImmutableList: int internalArrayEnd()
io.grpc.okhttp.OkHttpClientStream$TransportState: void access$900(io.grpc.okhttp.OkHttpClientStream$TransportState,io.grpc.Status,boolean,io.grpc.Metadata)
io.flutter.plugins.googlemaps.TileOverlayController: void clearTileCache()
kotlinx.coroutines.JobCancellationException: int hashCode()
com.google.firestore.v1.TargetChange$TargetChangeType$1: TargetChange$TargetChangeType$1()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.gms.maps.model.VisibleRegion: VisibleRegion(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLngBounds)
com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite$Builder clone()
com.google.firestore.v1.StructuredQuery$CompositeFilter: java.util.List getFiltersList()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedList(android.os.Parcel,int,java.util.List,boolean)
io.grpc.internal.ScParser: ScParser(boolean,int,int,io.grpc.internal.AutoConfiguredLoadBalancerFactory)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: void setCallbackDispatcher(long)
io.grpc.internal.JsonUtil: long parseDuration(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index access$1200()
io.grpc.okhttp.OkHttpClientTransport$ClientFrameHandler: void windowUpdate(int,long)
com.google.android.gms.internal.firebase-auth-api.zzkd: java.lang.Object zzj(int,java.lang.Object,java.lang.Object)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzx addMarker(com.google.android.gms.maps.model.MarkerOptions)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.gms.internal.firebase-auth-api.zzabt: void zzo()
com.google.firebase.firestore.LoadBundleTask$ManagedListener: int hashCode()
com.google.firebase.firestore.index.OrderedCodeWriter: void writeEscapedByteAscending(byte)
com.google.android.gms.internal.firebase-auth-api.zzaaw: void zzn(int)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzt(com.google.firebase.FirebaseApp,com.google.firebase.auth.ActionCodeSettings,java.lang.String)
com.google.common.base.Stopwatch: java.lang.String abbreviate(java.util.concurrent.TimeUnit)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.gms.internal.firebase-auth-api.zzl: java.lang.String toString()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzabh: boolean contains(java.lang.Object)
io.grpc.internal.ForwardingReadableBuffer: void reset()
com.google.android.gms.tasks.zzaf: void zza()
com.google.protobuf.UnmodifiableLazyStringList$2: java.lang.Object next()
com.google.android.gms.internal.firebase-auth-api.zzacf: com.google.android.gms.internal.firebase-auth-api.zzacf zze()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
com.google.android.gms.internal.maps.zzy: zzy(android.os.IBinder)
com.google.protobuf.SmallSortedMap$1: SmallSortedMap$1(int)
io.grpc.internal.InternalSubchannel$6: void run()
io.grpc.okhttp.OkHttpClientTransport: void ping(io.grpc.internal.ClientTransport$PingCallback,java.util.concurrent.Executor)
com.google.android.gms.internal.firebase-auth-api.zzvl: void zzb()
androidx.fragment.app.Fragment: void onDestroyView()
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzaed: java.lang.String zza(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.grpc.ManagedChannel: void enterIdle()
com.google.android.gms.internal.location.zzad: void writeToParcel(android.os.Parcel,int)
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: com.google.firebase.firestore.model.mutation.Overlay getOverlay(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.common.api.Scope: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.location.LocationSettingsStates getLocationSettingsStates()
com.google.protobuf.SchemaUtil: int computeSizeInt64ListNoTag(java.util.List)
com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: AutoValue_NetworkConnectionInfo$Builder()
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setLastLimboFreeSnapshotVersion(com.google.protobuf.Timestamp)
com.google.protobuf.MessageSchema: int getSerializedSizeProto2(java.lang.Object)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewProxy: void setWebContentsDebuggingEnabled(boolean)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLong(android.os.Parcel,int,long)
androidx.webkit.internal.WebViewGlueCommunicator: java.lang.ClassLoader getWebViewClassLoader()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: int describeContents()
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwt zzd(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzl(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzoe: byte[] zze(byte[],byte[])
com.google.android.gms.internal.firebase-auth-api.zzabh: java.lang.Object set(int,java.lang.Object)
com.google.android.gms.internal.auth-api-phone.zzv: java.lang.String getServiceDescriptor()
okio.SegmentedByteString: okio.ByteString substring(int,int)
com.google.android.gms.internal.firebase-auth-api.zzcb: java.util.Map zzl()
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzgt zza(com.google.android.gms.internal.firebase-auth-api.zzfv)
com.google.android.gms.internal.firebase-auth-api.zzacr: long zze(int)
com.google.protobuf.SmallSortedMap$EntryIterator: java.lang.Object next()
com.google.firestore.v1.MapValue: MapValue()
io.grpc.internal.GrpcUtil$1: GrpcUtil$1()
com.google.protobuf.CodedOutputStream: void writeSInt64NoTag(long)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.MutableDocument decodeFoundDocument(com.google.firestore.v1.BatchGetDocumentsResponse)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.google.android.gms.tasks.zzw: boolean isComplete()
com.google.firebase.messaging.ByteStreams: int saturatedCast(long)
io.grpc.internal.RetriableStream$Sublistener$4: void run()
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzadc zzg(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: boolean supportsUnsafeByteBufferOperations()
io.grpc.Metadata: void value(int,java.lang.Object)
com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder: TelemetryLoggingOptions$Builder(com.google.android.gms.common.internal.zaac)
com.google.android.gms.maps.internal.zze: zze(android.os.IBinder)
io.flutter.embedding.android.FlutterView$3: void accept(java.lang.Object)
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AnyClientKey zab()
com.google.android.gms.internal.firebase-auth-api.zzxn: java.lang.String zzc()
io.grpc.internal.GrpcUtil$5: com.google.common.base.Stopwatch get()
com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setCollapseKey(java.lang.String)
com.google.android.gms.common.internal.GmsClient: java.util.Set zaa(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzib: int hashCode()
com.google.firestore.v1.Value: void setArrayValue(com.google.firestore.v1.ArrayValue)
io.grpc.internal.InternalSubchannel$TransportListener: void transportReady()
io.grpc.Context$Storage: io.grpc.Context doAttach(io.grpc.Context)
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.lang.Object zzd(com.google.android.gms.internal.firebase-auth-api.zzaeb,int)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$ParsedSetData toMergeData(com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.FieldMask)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
io.grpc.okhttp.OkHttpClientTransport: int access$2402(io.grpc.okhttp.OkHttpClientTransport,int)
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: void onInUse(io.grpc.internal.InternalSubchannel)
com.google.android.gms.maps.model.RuntimeRemoteException: RuntimeRemoteException(android.os.RemoteException)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraMoveStarted(int)
com.google.firebase.firestore.model.mutation.MutationBatch: java.util.List getBaseMutations()
io.grpc.internal.ForwardingConnectionClientTransport: java.lang.Runnable start(io.grpc.internal.ManagedClientTransport$Listener)
com.google.android.gms.common.internal.zau: zau()
com.google.common.collect.UnmodifiableListIterator: void set(java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Integer readIntegerObject(android.os.Parcel,int)
com.google.firebase.firestore.model.mutation.FieldMask: FieldMask(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzuz: java.lang.String zza()
com.google.firebase.firestore.proto.UnknownDocument$Builder: com.google.firebase.firestore.proto.UnknownDocument$Builder setName(java.lang.String)
com.google.protobuf.Utf8$DecodeUtil: void access$900(byte,byte,byte,char[],int)
io.grpc.internal.DnsNameResolverProvider: java.lang.String getDefaultScheme()
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
com.google.firestore.v1.BatchGetDocumentsRequest: void addDocuments(java.lang.String)
com.google.android.gms.cloudmessaging.zzd: void zzb(android.os.Message)
com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void run()
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
com.google.firebase.firestore.model.mutation.DeleteMutation: int hashCode()
io.grpc.Context$Storage: Context$Storage()
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zziw: void zzi(com.google.android.gms.internal.firebase-auth-api.zziw,com.google.android.gms.internal.firebase-auth-api.zzjc)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: void unregisterNetworkListener()
io.grpc.internal.RetriableStream: io.grpc.internal.InsightBuilder access$1600(io.grpc.internal.RetriableStream)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.Status access$2000(io.grpc.okhttp.OkHttpClientTransport)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChange: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzcu: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair: boolean equals(java.lang.Object)
com.google.firebase.firestore.core.Query: boolean matches(com.google.firebase.firestore.model.Document)
com.google.firebase.messaging.TopicsSubscriber: void markCompletePendingOperation(com.google.firebase.messaging.TopicOperation)
io.grpc.internal.ApplicationThreadDeframer$1: void run()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firestore.v1.DocumentMask$Builder: com.google.firestore.v1.DocumentMask$Builder addFieldPaths(java.lang.String)
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
com.google.protobuf.SmallSortedMap: int hashCode()
io.grpc.okhttp.OkHttpClientStream$TransportState: void streamReady(io.grpc.Metadata,java.lang.String)
com.google.firestore.v1.TransactionOptions$Builder: TransactionOptions$Builder(com.google.firestore.v1.TransactionOptions$1)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: java.util.Map toMap()
io.grpc.okhttp.OkHttpClientStream$TransportState: void transportDataReceived(okio.Buffer,boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.fragment.app.FragmentManagerImpl: void addRetainedFragment(androidx.fragment.app.Fragment)
com.google.android.gms.maps.UiSettings: void setMyLocationButtonEnabled(boolean)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
io.flutter.plugins.firebase.messaging.JobIntentService$JobServiceEngineImpl: io.flutter.plugins.firebase.messaging.JobIntentService$GenericWorkItem dequeueWork()
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.location.zzbg: zzbg()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.firebase.firestore.FirestoreMultiDbComponent: com.google.firebase.firestore.FirebaseFirestore get(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzabr: boolean add(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.Timestamp$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.api.internal.zact: com.google.android.gms.common.api.internal.zacs zac(com.google.android.gms.common.api.internal.zact)
com.google.android.gms.internal.location.zzbf: zzbf(int,com.google.android.gms.internal.location.zzbd,android.os.IBinder,android.app.PendingIntent,android.os.IBinder,android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzmw: void zzk(com.google.android.gms.internal.firebase-auth-api.zzmw,int)
com.google.android.gms.internal.firebase-auth-api.zzxj: zzxj(com.google.android.gms.internal.firebase-auth-api.zzxn)
com.google.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()
com.google.android.gms.maps.Projection: com.google.android.gms.maps.model.LatLng fromScreenLocation(android.graphics.Point)
androidx.fragment.app.FragmentManagerImpl$3$1: void run()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
com.google.firebase.firestore.FirestoreMultiDbComponent: void onDeleted(java.lang.String,com.google.firebase.FirebaseOptions)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
io.grpc.internal.GrpcUtil$6: GrpcUtil$6(io.grpc.ClientStreamTracer$Factory,io.grpc.internal.ClientTransport)
io.grpc.internal.MessageFramer$OutputStreamAdapter: void write(byte[],int,int)
com.google.android.gms.internal.firebase-auth-api.zzeh: zzeh(java.lang.Class)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
com.google.android.gms.location.zzn: zzn(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder)
com.google.android.gms.common.util.DeviceProperties: boolean isAuto(android.content.Context)
androidx.core.app.NotificationManagerCompat$SideChannelManager: NotificationManagerCompat$SideChannelManager(android.content.Context)
io.grpc.internal.GrpcUtil$AcceptEncodingMarshaller: GrpcUtil$AcceptEncodingMarshaller()
com.google.protobuf.GeneratedMessageInfoFactory: com.google.protobuf.MessageInfo messageInfoFor(java.lang.Class)
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientCreator: io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$WebChromeClientImpl createWebChromeClient(io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl,android.webkit.WebViewClient)
com.google.android.gms.internal.firebase-auth-api.zzacd: int zza(boolean)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode$Color oppositeColor(com.google.firebase.database.collection.LLRBNode)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setOsBuild(java.lang.String)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
com.google.android.gms.location.LocationResult: LocationResult(java.util.List)
com.google.protobuf.Utf8$SafeProcessor: Utf8$SafeProcessor()
com.google.firebase.auth.GetTokenResult: long getAuthTimestamp()
com.google.android.gms.internal.firebase-auth-api.zzaaz: int zzc()
com.google.firebase.firestore.bundle.BundledQuery: com.google.firebase.firestore.core.Query$LimitType getLimitType()
io.grpc.okhttp.OkHttpProtocolNegotiator: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.grpc.EquivalentAddressGroup: io.grpc.Attributes getAttributes()
com.google.android.gms.internal.firebase-auth-api.zzdi: java.util.Map zzc()
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
com.google.firebase.firestore.proto.WriteBatch: int getWritesCount()
androidx.collection.MapCollections: MapCollections()
com.google.firestore.v1.TargetChange: com.google.rpc.Status getCause()
com.google.protobuf.NioByteString: boolean isValidUtf8()
com.google.android.gms.common.api.internal.zag: zag(int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)
io.grpc.okhttp.internal.framed.Http2: io.grpc.okhttp.internal.framed.FrameReader newReader(okio.BufferedSource,boolean)
com.google.firebase.messaging.ServiceStarter: com.google.firebase.messaging.ServiceStarter getInstance()
kotlin.ranges.IntProgressionIterator: boolean hasNext()
androidx.lifecycle.ViewModelStore: void clear()
com.baseflow.geolocator.location.GeolocationManager: void getLastKnownPosition(android.content.Context,android.app.Activity,boolean,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.remote.ConnectivityMonitor getConnectivityMonitor()
com.google.android.gms.internal.firebase-auth-api.zzsd: java.lang.Object[] newArray(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo: CommonNotificationBuilder$DisplayNotificationInfo(androidx.core.app.NotificationCompat$Builder,java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzuh: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
com.google.firebase.messaging.RemoteMessageCreator: RemoteMessageCreator()
com.google.android.gms.internal.firebase-auth-api.zzabk: zzabk()
com.google.android.gms.internal.firebase-auth-api.zzyj: zzyj()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.firebase.firestore.proto.UnknownDocument$Builder: UnknownDocument$Builder(com.google.firebase.firestore.proto.UnknownDocument$1)
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
io.grpc.internal.AbstractClientStream$TransportState: void setOutboundClosed()
com.google.android.gms.internal.firebase-auth-api.zzru: java.lang.String zza()
com.google.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)
com.google.android.gms.common.api.internal.zap: zap(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.GoogleApiAvailability)
com.google.firebase.firestore.FieldPath: FieldPath(com.google.firebase.firestore.model.FieldPath)
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzg(int,java.util.List,boolean)
com.google.firebase.firestore.DocumentChange$Type: DocumentChange$Type(java.lang.String,int)
io.grpc.Attributes: io.grpc.Attributes$Builder toBuilder()
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void updateLimboDocument(com.google.firebase.firestore.model.DocumentKey)
com.google.android.gms.maps.model.PolygonOptions: boolean isClickable()
com.google.firebase.installations.remote.AutoValue_TokenResult: AutoValue_TokenResult(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode)
com.google.firebase.firestore.LoadBundleTask: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: byte readRawByte()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
io.grpc.NameResolver$ResolutionResult: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaai: long zzn(byte[],int)
com.google.firebase.firestore.Query: com.google.firebase.firestore.ListenerRegistration addSnapshotListener(com.google.firebase.firestore.MetadataChanges,com.google.firebase.firestore.EventListener)
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue getDefaultInstance()
com.google.android.gms.safetynet.zzi: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(java.nio.ByteBuffer)
com.google.android.gms.internal.firebase-auth-api.zzyi: zzyi()
com.google.android.gms.signin.internal.zab: zab()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zzb(android.os.Parcel,int,int)
io.flutter.embedding.android.FlutterActivity: void onPostResume()
com.google.android.gms.internal.firebase-auth-api.zzxx: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzk(java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzvs)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
io.flutter.plugins.webviewflutter.WebChromeClientFlutterApiImpl: WebChromeClientFlutterApiImpl(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.webviewflutter.InstanceManager)
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.grpc.HttpConnectProxiedSocketAddress: HttpConnectProxiedSocketAddress(java.net.SocketAddress,java.net.InetSocketAddress,java.lang.String,java.lang.String)
com.google.android.gms.internal.safetynet.zzx: int getMinApkVersion()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.android.gms.common.internal.service.zan: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
com.google.android.gms.internal.firebase-auth-api.zzaaf: void zza()
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.RetriableStream$ChannelBufferMeter access$1900(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.auth.FirebaseAuthUserCollisionException: com.google.firebase.auth.FirebaseAuthUserCollisionException zzb(java.lang.String)
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
io.grpc.internal.GrpcUtil$3: GrpcUtil$3()
com.google.firebase.components.Preconditions: void checkArgument(boolean,java.lang.String)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomBy(float,android.graphics.Point)
com.google.firestore.v1.WriteRequest: void addWrites(com.google.firestore.v1.Write)
io.flutter.plugins.webviewflutter.InputAwareWebView$1: InputAwareWebView$1(io.flutter.plugins.webviewflutter.InputAwareWebView,android.view.View)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzaen: zzaen(sun.misc.Unsafe)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.baseflow.geolocator.location.FusedLocationClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
com.google.firebase.firestore.util.FileUtil$DefaultFileDeleter: void delete(java.io.File)
com.google.protobuf.CodedInputStreamReader: void requireWireType(int)
com.google.protobuf.SchemaUtil: int computeSizeGroupList(int,java.util.List,com.google.protobuf.Schema)
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDrag(com.google.android.gms.maps.model.Marker)
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: long readSFixed64()
com.google.firebase.FirebaseApp: void notifyBackgroundStateChangeListeners(boolean)
com.google.protobuf.ProtobufArrayList: com.google.protobuf.ProtobufArrayList mutableCopyWithCapacity(int)
com.google.android.gms.internal.firebase-auth-api.zzyj: zzyj(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,com.google.android.gms.internal.firebase-auth-api.zzyy,java.lang.String,java.lang.String,long,long,boolean,com.google.firebase.auth.zze,java.util.List)
com.google.firebase.firestore.model.Values: boolean isNullValue(com.google.firestore.v1.Value)
io.grpc.okhttp.internal.Platform: boolean isAtLeastAndroid41()
io.grpc.InternalChannelz: void removeRootChannel(io.grpc.InternalInstrumented)
io.flutter.plugins.googlemaps.PolygonController: void setStrokeWidth(float)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.mutation.MutationResult decodeMutationResult(com.google.firestore.v1.WriteResult,com.google.firebase.firestore.model.SnapshotVersion)
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: java.lang.String toString()
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setFingerprint(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
okio.RealBufferedSink: int write(java.nio.ByteBuffer)
com.google.firebase.FirebaseApp: void setDataCollectionDefaultEnabled(java.lang.Boolean)
com.google.protobuf.MessageSchema: void makeImmutable(java.lang.Object)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.Window,androidx.core.view.WindowInsetsControllerCompat)
com.google.android.datatransport.cct.CctTransportBackend: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzqv: java.lang.Object[] newArray(int)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.google.android.gms.internal.firebase-auth-api.zzza: zzza(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.maps.zzb: void zzd(com.google.android.gms.internal.maps.zzx)
com.google.android.gms.internal.firebase-auth-api.zzit: zzit()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$ReleasableValue: void release()
com.google.protobuf.SmallSortedMap: java.util.Set descendingEntrySet()
com.google.firebase.firestore.util.AsyncQueue: com.google.android.gms.tasks.Task enqueue(java.lang.Runnable)
com.google.common.collect.RegularImmutableMap$KeySet: java.util.Iterator iterator()
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()
com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
com.google.firestore.v1.StructuredQuery: boolean hasWhere()
com.google.android.gms.internal.firebase-auth-api.zzabr: boolean equals(java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMinZoomPreference()
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzjc: com.google.android.gms.internal.firebase-auth-api.zzjb zzb()
okio.Buffer: java.lang.Object clone()
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzit zzc(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
io.grpc.util.RoundRobinLoadBalancer$EmptyPicker: java.lang.String toString()
com.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,android.os.IInterface)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator valueOf(java.lang.String)
com.google.firebase.database.collection.LLRBRedValueNode: LLRBRedValueNode(java.lang.Object,java.lang.Object)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
com.google.android.gms.internal.maps.zzy: void zzz(boolean)
io.grpc.NameResolver$Args$Builder: io.grpc.NameResolver$Args build()
com.google.firestore.v1.Target: com.google.firestore.v1.Target access$1600()
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zzg(android.graphics.Bitmap)
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: com.google.firestore.v1.Value applyToLocalView(com.google.firestore.v1.Value,com.google.firebase.Timestamp)
io.grpc.internal.DelayedStream: void setRealStream(io.grpc.internal.ClientStream)
com.google.protobuf.MessageSchema: boolean isOneofPresent(java.lang.Object,int,int)
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: ListFieldSchema$ListFieldSchemaFull(com.google.protobuf.ListFieldSchema$1)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig get()
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition build()
com.google.android.gms.internal.firebase-auth-api.zzxn: void zzg(com.google.android.gms.internal.firebase-auth-api.zzxn,java.lang.String)
io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context access$300(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
com.google.common.collect.RegularImmutableMap$KeySet: int copyIntoArray(java.lang.Object[],int)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzj(com.google.android.gms.internal.firebase-auth-api.zzqi,com.google.android.gms.internal.firebase-auth-api.zzvr)
com.google.android.gms.stats.WakeLock: java.lang.String zzb(java.lang.String)
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
com.google.firestore.admin.v1.Index$IndexField: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzaej: zzaej(com.google.android.gms.internal.firebase-auth-api.zzaek)
com.google.firebase.auth.ActionCodeInfo: java.lang.String getEmail()
com.google.android.gms.internal.firebase-auth-api.zzabm: java.lang.Object zzd(com.google.android.gms.internal.firebase-auth-api.zzadn,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzabk,com.google.android.gms.internal.firebase-auth-api.zzabp,java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzaef)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzpg: byte[] zza(byte[],int)
com.google.firebase.firestore.model.ObjectValue: com.google.firestore.v1.Value get(com.google.firebase.firestore.model.FieldPath)
com.google.firebase.auth.PhoneAuthOptions: com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks zze()
kotlin.collections.EmptyMap: java.util.Set keySet()
com.google.android.gms.internal.firebase-auth-api.zzbb: java.util.Set zze()
io.grpc.okhttp.internal.framed.Http2$Writer: void flush()
io.grpc.internal.NoopClientStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
com.google.android.gms.internal.maps.zzy: int zzi()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData fromMap(java.util.Map)
com.google.firebase.firestore.GeoPoint: double getLatitude()
com.google.firebase.firestore.remote.RemoteSerializer: java.util.Map encodeListenRequestLabels(com.google.firebase.firestore.local.TargetData)
com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.LazyStringList getUnmodifiableView()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)
com.google.firebase.messaging.NotificationParams: java.lang.String getPossiblyLocalizedString(android.content.res.Resources,java.lang.String,java.lang.String)
io.grpc.internal.InternalSubchannel$TransportListener: void transportTerminated()
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task update(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzzc: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzaep: long zzd(java.lang.Object,long)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.installations.remote.AutoValue_TokenResult: int hashCode()
com.google.android.gms.common.logging.Logger: void wtf(java.lang.String,java.lang.Throwable,java.lang.Object[])
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parseFrom(com.google.protobuf.GeneratedMessageLite,com.google.protobuf.ByteString)
com.google.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
io.grpc.internal.Http2Ping: java.lang.Runnable asRunnable(io.grpc.internal.ClientTransport$PingCallback,java.lang.Throwable)
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void handleMessage(android.os.Message)
androidx.webkit.WebResourceErrorCompat: WebResourceErrorCompat()
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest getDefaultInstance()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.firebase-auth-api.zzaba: int zzb()
com.google.android.gms.internal.firebase-auth-api.zzaef: zzaef()
com.google.android.gms.internal.firebase-auth-api.zzwa: java.lang.String zza(java.lang.String,java.lang.String)
com.google.firebase.firestore.remote.FirestoreChannel$3: void onClose(io.grpc.Status,io.grpc.Metadata)
com.google.android.gms.internal.location.zzk: android.os.Bundle getGetServiceRequestExtraArgs()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
io.grpc.internal.ChannelTracer$1: boolean add(io.grpc.InternalChannelz$ChannelTrace$Event)
com.google.firebase.firestore.local.LocalSerializer: java.util.List decodeFieldIndexSegments(com.google.firestore.admin.v1.Index)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zznl: void zzg(com.google.android.gms.internal.firebase-auth-api.zznl,com.google.android.gms.internal.firebase-auth-api.zzno)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi: io.flutter.plugin.common.MessageCodec getCodec()
com.google.firebase.firestore.core.FirestoreClient: com.google.android.gms.tasks.Task waitForPendingWrites()
com.google.firebase.auth.OAuthProvider: com.google.firebase.auth.OAuthProvider$Builder newBuilder(java.lang.String)
io.grpc.internal.DelayedStream$13: void run()
com.tekartik.sqflite.SqflitePlugin: com.tekartik.sqflite.Database getDatabase(int)
io.grpc.okhttp.AsyncSink: boolean access$302(io.grpc.okhttp.AsyncSink,boolean)
com.google.protobuf.UnsafeUtil: long objectFieldOffset(java.lang.reflect.Field)
io.grpc.okhttp.OkHttpClientStream$TransportState: void access$400(io.grpc.okhttp.OkHttpClientStream$TransportState,io.grpc.Metadata,java.lang.String)
com.google.protobuf.MessageSetSchema: void makeImmutable(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzip zzc(int)
io.grpc.Context: io.grpc.Deadline getDeadline()
com.google.android.gms.dynamite.DynamiteModule: DynamiteModule(android.content.Context)
com.google.protobuf.UnknownFieldSetLiteSchema: int getSerializedSizeAsMessageSet(java.lang.Object)
com.google.firebase.firestore.model.BasePath: java.lang.String getSegment(int)
com.google.android.gms.internal.firebase-auth-api.zzqp: zzqp()
io.grpc.util.RoundRobinLoadBalancer: java.util.Map stripAttrs(java.util.List)
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
com.google.protobuf.Any: Any()
okio.AsyncTimeout: boolean exit()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task signInWithEmailLink(java.util.Map)
com.google.protobuf.SmallSortedMap: java.lang.Iterable getOverflowEntries()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toResponseTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.api.Response)
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.WriteBatch update(com.google.firebase.firestore.DocumentReference,com.google.firebase.firestore.core.UserData$ParsedUpdateData)
com.google.firebase.firestore.DocumentSnapshot: com.google.firebase.firestore.DocumentSnapshot fromDocument(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.model.Document,boolean,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
com.google.android.gms.internal.firebase-auth-api.zzfi: zzfi(byte[],byte[])
com.google.firebase.firestore.remote.AbstractStream$StreamObserver: void onOpen()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$InputAwareWebViewPlatformView: void onInputConnectionUnlocked()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean skipField(int)
com.google.android.gms.internal.firebase-auth-api.zzael: java.lang.Object run()
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.firebase.auth.FirebaseUser getCurrentUser(java.util.Map)
com.google.gson.stream.JsonReader: int peekNumber()
com.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzu(long)
com.google.android.datatransport.runtime.SendRequest$Builder: SendRequest$Builder()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
com.google.protobuf.CodedInputStreamReader: int getTag()
com.google.protobuf.RopeByteString$Balancer: RopeByteString$Balancer()
io.flutter.plugins.googlemaps.Convert: java.lang.Object markerIdToJson(java.lang.String)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void tryGetNextByteBuffer()
com.google.firebase.firestore.auth.User: int hashCode()
com.google.firebase.firestore.index.AutoValue_IndexEntry: boolean equals(java.lang.Object)
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget getDefaultInstance()
androidx.collection.ArraySet: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzit: void zzg(com.google.android.gms.internal.firebase-auth-api.zzit,com.google.android.gms.internal.firebase-auth-api.zzlq)
okio.ByteString: boolean equals(java.lang.Object)
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest access$000()
com.google.android.gms.internal.firebase-auth-api.zzyh: zzyh()
io.grpc.okhttp.internal.ConnectionSpec: io.grpc.okhttp.internal.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
com.tekartik.sqflite.SqflitePlugin$2: void run()
com.google.android.gms.common.internal.BaseGmsClient: int getMinApkVersion()
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzkg: com.google.android.gms.internal.firebase-auth-api.zzkf zzb()
com.lyokone.location.LocationPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)
com.google.protobuf.ExtensionSchemaLite: void makeImmutable(java.lang.Object)
com.google.android.datatransport.runtime.EncodedPayload: boolean equals(java.lang.Object)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
com.google.android.gms.internal.firebase-auth-api.zzme: void zzi(com.google.android.gms.internal.firebase-auth-api.zzme,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firebase.firestore.util.AsyncQueue: void enqueueAndForget(java.lang.Runnable)
com.google.firebase.encoders.proto.LengthCountingOutputStream: void write(int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: boolean isAtEnd()
com.google.firebase.firestore.core.Query: java.util.List getExplicitOrderBy()
io.grpc.CompositeCallCredentials: void applyRequestMetadata(io.grpc.CallCredentials$RequestInfo,java.util.concurrent.Executor,io.grpc.CallCredentials$MetadataApplier)
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
com.google.android.gms.common.api.internal.zacq: void run()
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor access$000()
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraMove()
okio.RealBufferedSource: boolean isOpen()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.google.android.gms.internal.firebase-auth-api.zzro: java.lang.String zzc()
com.google.android.gms.cloudmessaging.zzd: android.os.IBinder zza()
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite buildPartial()
com.google.android.gms.common.internal.zzn: int zza()
com.google.android.gms.internal.firebase-auth-api.zzvo: java.lang.String zza()
com.google.firebase.components.Lazy: java.lang.Object get()
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
com.google.firebase.messaging.TopicsSubscriber: void scheduleSyncTaskWithDelaySeconds(java.lang.Runnable,long)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzO(byte)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
com.google.common.collect.RegularImmutableMap$KeySet: boolean isPartialView()
com.lyokone.location.FlutterLocation: void startRequestingLocation()
com.google.android.gms.internal.firebase-auth-api.zzjz: zzjz(com.google.android.gms.internal.firebase-auth-api.zzjy)
com.google.firebase.encoders.FieldDescriptor$Builder: com.google.firebase.encoders.FieldDescriptor$Builder withProperty(java.lang.annotation.Annotation)
io.flutter.plugins.webviewflutter.DisplayListenerProxy$1: void onDisplayRemoved(int)
com.google.protobuf.CodedInputStreamReader: void readBoolList(java.util.List)
io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setLoadBalancingPolicyConfig(java.lang.Object)
com.google.firebase.firestore.core.ComponentProvider: com.google.firebase.firestore.local.Scheduler getGarbageCollectionScheduler()
com.google.firebase.firestore.WriteBatch: com.google.firebase.firestore.WriteBatch set(com.google.firebase.firestore.DocumentReference,java.lang.Object,com.google.firebase.firestore.SetOptions)
com.google.android.gms.internal.firebase-auth-api.zzfr: com.google.android.gms.internal.firebase-auth-api.zzli zza()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
io.grpc.internal.DelayedStream: void setDeadline(io.grpc.Deadline)
com.google.android.gms.internal.firebase-auth-api.zzal: com.google.android.gms.internal.firebase-auth-api.zzal zzf(int,int)
com.google.android.gms.common.api.internal.zabp: zabp(com.google.android.gms.common.api.internal.zabq)
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
io.grpc.InternalLogId: long getId()
com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EventInternal$Builder toBuilder()
com.google.android.gms.internal.firebase-auth-api.zze: zze(com.google.android.gms.internal.firebase-auth-api.zzd)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase valueOf(java.lang.String)
com.google.android.gms.dynamite.zzl: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzJ(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.PhoneAuthCredential,com.google.firebase.auth.internal.zzbk)
com.google.firestore.v1.Write: void setUpdateMask(com.google.firestore.v1.DocumentMask)
io.grpc.internal.AbstractClientStream$TransportState: void access$200(io.grpc.internal.AbstractClientStream$TransportState)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzbf: byte[] zzc()
com.google.firebase.firestore.FieldValue$NumericIncrementFieldValue: FieldValue$NumericIncrementFieldValue(java.lang.Number)
com.google.protobuf.SmallSortedMap$Entry: SmallSortedMap$Entry(com.google.protobuf.SmallSortedMap,java.util.Map$Entry)
com.squareup.okhttp.HttpUrl: HttpUrl(com.squareup.okhttp.HttpUrl$Builder,com.squareup.okhttp.HttpUrl$1)
io.grpc.okhttp.internal.framed.Huffman: void addCode(int,int,byte)
androidx.fragment.app.FragmentManagerImpl$4: void onAnimationEnd(android.animation.Animator)
com.google.firebase.FirebaseApp: java.lang.String toString()
com.google.android.gms.maps.model.TileOverlayOptions: float getZIndex()
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
com.google.firebase.auth.internal.zzax: zzax()
okio.SegmentedByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.google.android.gms.maps.zzp: zzp(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolylineClickListener)
io.grpc.EquivalentAddressGroup: boolean equals(java.lang.Object)
com.google.android.gms.maps.internal.zzaq: zzaq()
com.tekartik.sqflite.SqflitePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.firebase-auth-api.zzal: boolean contains(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.grpc.okhttp.ExceptionHandlingFrameWriter: void goAway(int,io.grpc.okhttp.internal.framed.ErrorCode,byte[])
com.google.firestore.v1.TargetChange$Builder: TargetChange$Builder()
com.google.protobuf.CodedOutputStreamWriter: void writeEnumList(int,java.util.List,boolean)
com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.ImmutableList asList()
com.google.firebase.installations.local.IidStore: java.lang.String readInstanceIdFromLocalStorage()
com.google.android.gms.internal.firebase-auth-api.zzaaf: boolean addAll(int,java.util.Collection)
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
com.google.firebase.database.collection.ImmutableSortedMapIterator: void remove()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: long adjustedExponentialBackoff(int,long)
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest access$000()
com.google.protobuf.Utf8$DecodeUtil: void handleFourBytes(byte,byte,byte,byte,char[],int)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
com.baseflow.geolocator.permission.LocationPermission: int toInt()
androidx.fragment.app.FragmentTransition$3: void run()
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Comparator getComparator()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi: void dispose(java.lang.Long,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$JavaScriptChannelFlutterApi$Reply)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.protobuf.NewInstanceSchemaLite: NewInstanceSchemaLite()
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setTimestampNanos(long)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
com.google.firestore.v1.Write$OperationCase: Write$OperationCase(java.lang.String,int,int)
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzjh: com.google.android.gms.internal.firebase-auth-api.zzjh zza(int)
com.google.common.collect.Collections2: java.lang.StringBuilder newStringBuilderForCollection(int)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.location.zzb: android.os.IBinder asBinder()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzh(int,java.util.List,boolean)
com.google.firebase.firestore.local.SQLiteIndexManager: void addToCollectionParentIndex(com.google.firebase.firestore.model.ResourcePath)
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
com.google.protobuf.SmallSortedMap: int size()
com.google.android.datatransport.runtime.backends.CreationContext: CreationContext()
com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder setGlobalMetrics(com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics)
com.google.android.gms.dynamite.zzr: com.google.android.gms.dynamic.IObjectWrapper zze(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)
androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
io.grpc.Status: io.grpc.Status fromCodeValue(byte[])
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
com.google.android.gms.internal.firebase-auth-api.zzwk: void onStop()
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
com.google.protobuf.LongArrayList: void addLong(long)
io.grpc.okhttp.OkHttpClientTransport: void stopIfNecessary()
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)
com.google.android.datatransport.cct.internal.AutoValue_LogResponse: boolean equals(java.lang.Object)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation$Union: com.google.firestore.v1.Value apply(com.google.firestore.v1.Value)
com.google.android.gms.internal.firebase-auth-api.zzacj: void zzi(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] values()
com.google.android.gms.internal.firebase-auth-api.zzcp: java.util.Map zzc()
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
com.google.firestore.v1.TargetChange$TargetChangeType: TargetChange$TargetChangeType(java.lang.String,int,int)
com.google.firebase.firestore.core.ListenSequence: long next()
com.squareup.okhttp.Request$Builder: java.lang.String access$100(com.squareup.okhttp.Request$Builder)
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: int access$202(com.google.firebase.firestore.core.EventManager$QueryListenersInfo,int)
io.grpc.internal.ManagedChannelImpl$5: void start(io.grpc.ClientCall$Listener,io.grpc.Metadata)
com.google.android.datatransport.runtime.util.PriorityMapping: int toInt(com.google.android.datatransport.Priority)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions strokeWidth(float)
com.google.firebase.firestore.model.mutation.VerifyMutation: void applyToRemoteDocument(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.MutationResult)
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.android.gms.internal.firebase-auth-api.zzxr: java.lang.String zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzea: int zzf()
com.google.protobuf.CodedOutputStream: void writeDouble(int,double)
com.google.firebase.messaging.RemoteMessage: java.lang.String getMessageType()
com.google.firebase.auth.internal.zzf: com.google.firebase.auth.internal.zzf zzb()
com.google.firebase.Timestamp: Timestamp(long,int)
com.google.android.gms.internal.maps.zzv: void zzw(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzei: int zzf()
com.google.android.gms.internal.firebase-auth-api.zzqm: zzqm(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.auth.UserProfileChangeRequest: UserProfileChangeRequest(java.lang.String,java.lang.String,boolean,boolean)
com.google.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.google.protobuf.MessageLite)
kotlin.ranges.IntProgression: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
io.grpc.internal.RetriableStream$Throttle: RetriableStream$Throttle(float,float)
com.google.protobuf.UnmodifiableLazyStringList$1: void add(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void reset()
com.google.android.gms.internal.firebase-auth-api.zzaaz: long zzo()
io.grpc.internal.ConnectivityStateManager: ConnectivityStateManager()
com.google.android.gms.common.api.internal.zad: void zad(com.google.android.gms.common.api.Status)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.encoders.FieldDescriptor: java.lang.String toString()
com.google.common.collect.ImmutableCollection: int internalArrayEnd()
com.google.android.gms.internal.firebase-auth-api.zzqw: void writeToParcel(android.os.Parcel,int)
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
com.google.firestore.bundle.BundledQuery$Builder: BundledQuery$Builder()
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzg(com.google.android.gms.internal.firebase-auth-api.zzmk,java.lang.Class)
com.google.firebase.firestore.local.ReferenceSet: void removeReference(com.google.firebase.firestore.model.DocumentKey,int)
androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)
com.google.firebase.auth.FirebaseAuthUserCollisionException: com.google.firebase.auth.FirebaseAuthUserCollisionException zza(com.google.firebase.auth.AuthCredential)
okio.Buffer: byte getByte(long)
com.google.firebase.auth.internal.zzr: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.maps.zzc: void zze(android.os.Parcel,android.os.Parcelable)
io.grpc.internal.NoopClientStream: void halfClose()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
com.google.android.gms.common.Feature: int hashCode()
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1MessagesAvailable: void runInContext()
com.google.firebase.firestore.model.Values: void canonifyValue(java.lang.StringBuilder,com.google.firestore.v1.Value)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.gms.internal.firebase-auth-api.zzacj: boolean addAll(int,java.util.Collection)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: com.google.firebase.firestore.local.LruGarbageCollector getGarbageCollector()
com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse invalidPayload()
com.google.firebase.firestore.model.Values: void canonifyArray(java.lang.StringBuilder,com.google.firestore.v1.ArrayValue)
com.google.firebase.database.collection.LLRBEmptyNode: boolean isRed()
com.google.android.gms.internal.firebase-auth-api.zzxd: com.google.android.gms.internal.firebase-auth-api.zzzy zza(com.google.firebase.auth.PhoneAuthCredential)
io.flutter.plugins.firebase.messaging.JobIntentService$CommandProcessor: java.lang.Void doInBackground(java.lang.Void[])
com.google.android.gms.internal.firebase-auth-api.zzbi: int zzg()
io.flutter.plugins.googlemaps.CirclesController: void addCircles(java.util.List)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setMessageType(com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$2: AndroidConnectivityMonitor$2(com.google.firebase.firestore.remote.AndroidConnectivityMonitor,java.util.concurrent.atomic.AtomicBoolean)
com.google.android.gms.common.api.Status: void startResolutionForResult(android.app.Activity,int)
com.google.firebase.auth.ActionCodeSettings: java.lang.String zzd()
com.google.protobuf.LazyStringArrayList: java.lang.String set(int,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzj: zzj()
com.lyokone.location.FlutterLocation: void createLocationCallback()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzer: byte[] zzb()
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.android.gms.internal.location.zzar: zzar()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.gms.common.internal.zac: java.lang.String zah(android.content.Context,java.lang.String,java.lang.String)
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setLastListenSequenceNumber(long)
com.google.common.base.Ticker$1: Ticker$1()
com.google.android.gms.internal.firebase-auth-api.zzlx: zzlx(com.google.android.gms.internal.firebase-auth-api.zzlw)
com.google.android.gms.internal.firebase-auth-api.zzcv: zzcv(com.google.android.gms.internal.firebase-auth-api.zzcw,java.lang.Class)
io.flutter.plugins.googlemaps.TileOverlaysController: TileOverlaysController(io.flutter.plugin.common.MethodChannel)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: EventStoreModule_StoreConfigFactory()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
com.google.android.gms.tasks.zzc: void run()
com.google.android.gms.dynamite.zzh: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$SelectionResult selectModule(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$IVersions)
io.flutter.plugins.googlemaps.MarkerController: void setInfoWindowText(java.lang.String,java.lang.String)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzd(com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.AuthCredential)
com.google.protobuf.Any$Builder: Any$Builder(com.google.protobuf.Any$1)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType valueOf(java.lang.String)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)
com.google.protobuf.GeneratedMessageInfoFactory: boolean isSupported(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzvz: boolean zza(android.content.Context)
com.google.firestore.v1.StructuredQuery$Builder: com.google.firestore.v1.StructuredQuery$Builder addFrom(com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder)
androidx.fragment.app.FragmentManagerImpl: boolean isDestroyed()
com.google.android.gms.internal.firebase-auth-api.zzzf: java.lang.String zzb()
com.google.android.gms.internal.firebase-auth-api.zzaz: java.lang.Object zzg(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.firebase.firestore.FieldPath: java.lang.String toString()
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: int hashCode()
com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse fatalError()
com.google.android.gms.internal.firebase-auth-api.zzqj: java.lang.Object[] newArray(int)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
com.google.android.datatransport.cct.CctTransportBackend: CctTransportBackend(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,int)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.google.android.gms.internal.firebase-auth-api.zzabh: void removeRange(int,int)
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.EventLoop: EventLoop()
com.google.protobuf.UnsafeUtil$Android32MemoryAccessor: void putDouble(java.lang.Object,long,double)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
com.google.firebase.firestore.util.AsyncQueue: com.google.android.gms.tasks.Task enqueue(java.util.concurrent.Callable)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)
io.grpc.internal.AbstractStream$TransportState: void setFullStreamDecompressor(io.grpc.internal.GzipInflatingBuffer)
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.internal.Symbol updateBufferSize(int)
io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference: void clearInternal()
com.google.android.gms.internal.firebase-auth-api.zzacw: void clear()
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase forNumber(int)
com.google.protobuf.ByteString$CodedBuilder: ByteString$CodedBuilder(int,com.google.protobuf.ByteString$1)
com.google.android.gms.internal.firebase-auth-api.zzdx: zzdx()
com.google.protobuf.BinaryReader$SafeHeapReader: void readDoubleList(java.util.List)
io.grpc.internal.InternalSubchannel$TransportListener: void transportInUse(boolean)
io.grpc.internal.ServiceConfigUtil: java.util.Set getStatusCodesFromList(java.util.List)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzcx: zzcx(java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzbi: zzbi(com.google.android.gms.internal.firebase-auth-api.zzmu)
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
com.google.android.gms.maps.UiSettings: void setRotateGesturesEnabled(boolean)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: AutoValue_AndroidClientInfo(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.grpc.internal.SerializeReentrantCallsDirectExecutor: SerializeReentrantCallsDirectExecutor()
io.grpc.internal.DelayedStream$7: void run()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
com.google.firebase.firestore.Query: void validateDisjunctiveFilterElements(java.lang.Object,com.google.firebase.firestore.core.FieldFilter$Operator)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
io.grpc.internal.RetriableStream$State: io.grpc.internal.RetriableStream$State removeActiveHedge(io.grpc.internal.RetriableStream$Substream)
com.google.android.gms.location.LocationCallback: LocationCallback()
com.baseflow.geolocator.utils.Utils: boolean openLocationSettings(android.content.Context)
com.google.android.gms.internal.maps.zzy: void zzp(boolean)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzG(java.util.List)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task zzn(com.google.firebase.auth.FirebaseUser,java.lang.String)
io.grpc.internal.StatsTraceContext: StatsTraceContext(io.grpc.StreamTracer[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
io.grpc.internal.ManagedChannelImplBuilder$ManagedChannelDefaultPortProvider: int getDefaultPort()
com.google.android.gms.internal.firebase-auth-api.zznt: com.google.android.gms.internal.firebase-auth-api.zznt zzb()
com.google.common.io.BaseEncoding: byte[] extract(byte[],int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: java.lang.String getStorageBucket()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzadm: boolean zzb()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
com.google.firebase.firestore.model.BasePath: java.lang.String getLastSegment()
com.google.firebase.auth.internal.zzs: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzzx: zzzx()
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zad(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory$1: void run()
com.google.android.gms.auth.api.signin.zab: java.lang.Object[] newArray(int)
io.grpc.internal.ForwardingReadableBuffer: void mark()
com.google.firebase.firestore.model.Values: int lowerBoundCompare(com.google.firestore.v1.Value,boolean,com.google.firestore.v1.Value,boolean)
com.google.android.gms.common.internal.Preconditions: void checkHandlerThread(android.os.Handler)
com.google.firebase.firestore.local.SQLitePersistence$OpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzsw: zzsw(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzzy,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.firebase.firestore.bundle.BundleReader: BundleReader(com.google.firebase.firestore.bundle.BundleSerializer,java.io.InputStream)
com.google.android.gms.maps.model.BitmapDescriptor: com.google.android.gms.dynamic.IObjectWrapper zza()
com.google.firebase.firestore.Filter: com.google.firebase.firestore.Filter arrayContains(com.google.firebase.firestore.FieldPath,java.lang.Object)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
com.google.firebase.auth.OAuthProvider$Builder: com.google.firebase.auth.OAuthProvider build()
io.grpc.okhttp.OkHttpClientTransport$4: OkHttpClientTransport$4(io.grpc.okhttp.OkHttpClientTransport,java.util.concurrent.CountDownLatch,io.grpc.okhttp.AsyncSink,io.grpc.okhttp.internal.framed.Variant)
com.squareup.okhttp.HttpUrl$Builder: com.squareup.okhttp.HttpUrl$Builder port(int)
com.google.android.gms.internal.firebase-auth-api.zzfm: com.google.android.gms.internal.firebase-auth-api.zzfm zzf(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzyr: zzyr()
com.google.android.gms.internal.firebase-auth-api.zzadg: void zzi(java.lang.Object,byte[],int,int,com.google.android.gms.internal.firebase-auth-api.zzaah)
io.grpc.internal.KeepAliveManager$2: KeepAliveManager$2(io.grpc.internal.KeepAliveManager)
com.google.firestore.v1.Write$Builder: com.google.firestore.v1.Write$Builder setDelete(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxz: boolean zzh()
io.grpc.okhttp.OkHttpClientTransport: void startGoAway(int,io.grpc.okhttp.internal.framed.ErrorCode,io.grpc.Status)
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.googlemaps.GoogleMapController: void setMapType(int)
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
com.google.firestore.bundle.BundledQuery: void access$200(com.google.firestore.bundle.BundledQuery,java.lang.String)
io.grpc.internal.RetriableStream$1RequestEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.protobuf.Int32Value$Builder: com.google.protobuf.Int32Value$Builder setValue(int)
com.google.android.gms.internal.firebase-auth-api.zzrl: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzbp: com.google.android.gms.internal.firebase-auth-api.zzbp zzb(java.lang.Object,com.google.android.gms.internal.firebase-auth-api.zzmw)
io.grpc.internal.DnsNameResolver: java.util.List getHostnamesFromChoice(java.util.Map)
com.google.firebase.firestore.model.ObjectValue: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
io.grpc.CallOptions: io.grpc.Deadline getDeadline()
io.grpc.internal.RetriableStream: void request(int)
com.google.android.gms.maps.GoogleMap: boolean isTrafficEnabled()
io.grpc.PartialForwardingClientCall: void halfClose()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.location.zzl: void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.firestore.remote.FirestoreChannel: void runStreamingResponseRpc(io.grpc.MethodDescriptor,java.lang.Object,com.google.firebase.firestore.remote.FirestoreChannel$StreamingListener)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.internal.KeepAliveManager access$1900(io.grpc.okhttp.OkHttpClientTransport)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.net.Uri getPhotoUrl()
com.google.android.gms.internal.firebase-auth-api.zzbh: void zzf(com.google.android.gms.internal.firebase-auth-api.zzbj,com.google.android.gms.internal.firebase-auth-api.zzap)
io.grpc.internal.ForwardingClientStream: void halfClose()
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzn(com.google.android.gms.internal.firebase-auth-api.zzyq)
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase getValueModeCase()
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzE(com.google.firebase.auth.internal.zzag,com.google.firebase.auth.PhoneMultiFactorInfo,java.lang.String,long,boolean,boolean,java.lang.String,java.lang.String,boolean,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.util.concurrent.Executor,android.app.Activity)
com.google.firebase.messaging.EnhancedIntentService$1: com.google.android.gms.tasks.Task handle(android.content.Intent)
com.google.protobuf.Utf8: int access$000(int,int)
io.grpc.internal.MessageDeframer$SizeEnforcingInputStream: void reportCount()
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.MutableDocument newInvalidDocument(com.google.firebase.firestore.model.DocumentKey)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: AlarmManagerScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,android.app.AlarmManager,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)
com.google.android.gms.common.util.WorkSourceUtil: android.os.WorkSource fromPackage(android.content.Context,java.lang.String)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions fadeIn(boolean)
com.tekartik.sqflite.operation.BaseReadOperation: java.lang.String getSql()
com.google.firebase.firestore.remote.WatchChange$DocumentChange: java.util.List getRemovedTargetIds()
com.google.firebase.auth.internal.zzo: int getOperation()
com.google.firebase.firestore.QuerySnapshot$QuerySnapshotIterator: void remove()
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzr(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzli zzb()
com.google.protobuf.StructuralMessageInfo: boolean isMessageSetWireFormat()
io.grpc.internal.TransportTracer: void reportMessageSent(int)
com.google.firebase.messaging.AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder: AutoProtoEncoderDoNotUseEncoder$MessagingClientEventExtensionEncoder()
com.google.firebase.auth.internal.zzw: boolean zzc()
io.grpc.internal.AbstractClientStream: boolean isReady()
com.google.firebase.firestore.local.LocalViewChanges: boolean isFromCache()
com.google.android.gms.common.internal.GmsLogger: GmsLogger(java.lang.String)
com.google.firebase.FirebaseApp: void initializeAllApis()
com.google.firebase.firestore.util.ApiUtil: java.lang.AssertionError newAssertionError(java.lang.String,java.lang.Throwable)
com.google.protobuf.UnsafeUtil$MemoryAccessor: java.lang.Object getObject(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.android.gms.internal.firebase-auth-api.zzyn zzc(com.google.firebase.auth.ActionCodeSettings,java.lang.String,java.lang.String)
com.google.firebase.encoders.proto.AtProtobuf$ProtobufImpl: java.lang.Class annotationType()
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.firebase.firestore.core.Query: com.google.firebase.firestore.core.Query asCollectionQueryAtPath(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.internal.firebase-auth-api.zzvt: void zzn(com.google.android.gms.internal.firebase-auth-api.zzqq,com.google.android.gms.internal.firebase-auth-api.zzvr)
okio.Okio$2: long read(okio.Buffer,long)
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.internal.zav zab()
com.google.android.gms.internal.firebase-auth-api.zzqd: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator: void accept(android.database.Cursor)
com.tekartik.sqflite.SqflitePlugin: void onDeleteDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
okio.AsyncTimeout$2: AsyncTimeout$2(okio.AsyncTimeout,okio.Source)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationRepeat(android.view.animation.Animation)
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzs(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.internal.zzbk)
com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[],int)
com.google.protobuf.ExtensionSchemas: com.google.protobuf.ExtensionSchema loadSchemaForFullRuntime()
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
com.google.firebase.encoders.FieldDescriptor: FieldDescriptor(java.lang.String,java.util.Map,com.google.firebase.encoders.FieldDescriptor$1)
com.google.firebase.auth.internal.zzbi: void zzb(com.google.firebase.auth.internal.zzbi,boolean)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zzadg: int zzb(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void onStartEnterTransition()
com.google.firebase.firestore.local.MemoryTargetCache: void addMatchingKeys(com.google.firebase.database.collection.ImmutableSortedSet,int)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.firebase-auth-api.zzzb: java.lang.String zzc()
io.grpc.internal.ManagedChannelImpl$DelayedTransportListener: void transportReady()
io.grpc.okhttp.internal.framed.Hpack: okio.ByteString access$300()
io.grpc.okhttp.OkHttpReadableBuffer: io.grpc.internal.ReadableBuffer readBytes(int)
io.flutter.plugins.webviewflutter.FlutterAssetManagerHostApiImpl: FlutterAssetManagerHostApiImpl(io.flutter.plugins.webviewflutter.FlutterAssetManager)
com.google.firebase.firestore.util.CustomClassMapper$ErrorPath: CustomClassMapper$ErrorPath(com.google.firebase.firestore.util.CustomClassMapper$ErrorPath,java.lang.String,int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzb(android.os.Parcel,int)
io.grpc.internal.ManagedChannelImpl$1ChannelCallTracerFactory: io.grpc.internal.CallTracer create()
androidx.fragment.app.Fragment: void performAttach()
com.google.android.gms.internal.firebase-auth-api.zzbb: com.google.android.gms.internal.firebase-auth-api.zzax zzb()
com.google.common.collect.RegularImmutableMap$EntrySet$1: java.lang.Object get(int)
com.google.android.gms.internal.firebase-auth-api.zzgl: zzgl(com.google.android.gms.internal.firebase-auth-api.zzpo,java.lang.Class,com.google.android.gms.internal.firebase-auth-api.zzgk)
com.google.firebase.Timestamp: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzeq: int zza()
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
com.google.android.gms.common.internal.Preconditions: void checkState(boolean)
com.google.firebase.messaging.SharedPreferencesQueue: java.lang.String peek()
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: void encode(com.google.android.datatransport.cct.internal.ClientInfo,com.google.firebase.encoders.ObjectEncoderContext)
com.google.firebase.firestore.core.Query: java.util.List getOrderBy()
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task verifyPasswordResetCode(java.util.Map)
io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)
com.google.protobuf.LongArrayList: long getLong(int)
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: BasePendingResult$CallbackHandler(android.os.Looper)
com.google.firebase.FirebaseException: FirebaseException(java.lang.String)
com.google.android.gms.common.api.GoogleApi$Settings: GoogleApi$Settings(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper,com.google.android.gms.common.api.zae)
com.google.protobuf.MessageSchema: int parseMapField(java.lang.Object,byte[],int,int,int,long,com.google.protobuf.ArrayDecoders$Registers)
com.google.android.gms.common.internal.zzn: zzn(java.lang.String,java.lang.String,int,boolean)
io.grpc.Metadata$Key: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.firebase.auth.internal.zzt: java.lang.String getUid()
com.google.android.gms.internal.firebase-auth-api.zzzm: java.lang.String zzc()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: FlutterFirebaseFirestoreTransactionResult(java.lang.Exception)
com.google.firebase.firestore.local.SQLiteTargetCache: void start()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: GoogleMapsPlugin()
com.google.protobuf.MessageSchema: int slowPositionForFieldNumber(int,int)
com.google.android.gms.common.api.internal.BackgroundDetector: void onTrimMemory(int)
com.tekartik.sqflite.SqlCommand: java.lang.Object[] getSqlArguments()
com.google.android.gms.internal.firebase-auth-api.zzhg: zzhg()
kotlin.collections.EmptyMap: boolean isEmpty()
io.grpc.HttpConnectProxiedSocketAddress$Builder: HttpConnectProxiedSocketAddress$Builder(io.grpc.HttpConnectProxiedSocketAddress$1)
com.google.firebase.firestore.local.LruGarbageCollector: long access$100()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialTileOverlays(java.util.List)
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: void copyMemory(long,byte[],long,long)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
com.google.firebase.firestore.remote.TargetChange: com.google.firebase.database.collection.ImmutableSortedSet getAddedDocuments()
com.google.firebase.firestore.core.UserData$ParseAccumulator: UserData$ParseAccumulator(com.google.firebase.firestore.core.UserData$Source)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: java.lang.String toString()
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
com.google.firebase.firestore.local.SQLiteSchema: void createV8CollectionParentsIndex()
com.google.protobuf.SmallSortedMap: java.util.Map access$900(com.google.protobuf.SmallSortedMap)
io.grpc.LoadBalancerProvider: boolean equals(java.lang.Object)
com.google.protobuf.MessageSchema: int hashCode(java.lang.Object)
com.google.android.gms.common.internal.TelemetryData: TelemetryData(int,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzaew: com.google.android.gms.internal.firebase-auth-api.zzaew[] values()
com.google.firebase.messaging.NotificationParams: NotificationParams(android.os.Bundle)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.firebase.firestore.core.ActivityScope$CallbackList: void add(java.lang.Runnable)
com.google.protobuf.CodedInputStream$StreamDecoder: void checkLastTagWas(int)
io.grpc.internal.Rescheduler$ChannelFutureRunnable: Rescheduler$ChannelFutureRunnable(io.grpc.internal.Rescheduler)
com.google.firebase.firestore.model.MutableDocument: com.google.firebase.firestore.model.SnapshotVersion getVersion()
com.google.common.collect.Maps$EntryFunction$1: java.lang.Object apply(java.lang.Object)
io.flutter.plugins.webviewflutter.WebStorageHostApiImpl: void create(java.lang.Long)
com.google.android.gms.internal.firebase-auth-api.zzsk: zzsk(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzwx,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzzg)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
com.google.protobuf.LazyField: boolean equals(java.lang.Object)
com.google.protobuf.SmallSortedMap$Entry: SmallSortedMap$Entry(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzta: void zzb(java.lang.Object)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
io.flutter.plugins.googlemaps.GoogleMapController: void setPadding(float,float,float,float)
com.google.firebase.firestore.core.LimboDocumentChange: int hashCode()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: void putDouble(java.lang.Object,long,double)
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.grpc.internal.ForwardingReadableBuffer: void readBytes(java.io.OutputStream,int)
io.grpc.InternalChannelz: void addClientSocket(io.grpc.InternalInstrumented)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
io.grpc.internal.RetriableStream$1FullStreamDecompressionEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
com.lyokone.location.FlutterLocationService: boolean isInForegroundMode()
io.grpc.internal.PickSubchannelArgsImpl: java.lang.String toString()
io.flutter.plugins.firebase.messaging.JobIntentService$WorkEnqueuer: void ensureJobId(int)
com.google.firebase.firestore.local.LruGarbageCollector$GCScheduler: void scheduleGC()
com.google.firebase.firestore.model.DatabaseId: com.google.firebase.firestore.model.DatabaseId forDatabase(java.lang.String,java.lang.String)
com.google.android.gms.maps.GoogleMapOptions: int getMapType()
com.google.firebase.firestore.core.Target: int getSegmentCount()
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Polygon addPolygon(com.google.android.gms.maps.model.PolygonOptions)
com.google.firebase.auth.internal.zzx: zzx(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.firebase.auth.internal.zzt,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.Boolean,com.google.firebase.auth.internal.zzz,boolean,com.google.firebase.auth.zze,com.google.firebase.auth.internal.zzbb)
com.google.android.gms.internal.firebase-auth-api.zzrv: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransformer(com.google.android.datatransport.Transformer)
com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)
com.google.protobuf.ProtobufArrayList: java.lang.Object get(int)
io.grpc.util.RoundRobinLoadBalancer: void shutdown()
com.google.protobuf.SchemaUtil: int computeSizeByteStringList(int,java.util.List)
com.google.firebase.firestore.Query: int hashCode()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
com.google.android.gms.internal.firebase-auth-api.zztr: zztr(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzym: java.lang.Object[] newArray(int)
com.google.firestore.admin.v1.Index: Index()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildGenerateAuthTokenRequestBody()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzW(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.android.gms.maps.GoogleMapOptions: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzpu: zzpu(java.lang.String,java.lang.String)
com.google.firebase.auth.zzf: java.lang.Object[] newArray(int)
com.google.firestore.v1.ArrayValue$Builder: int getValuesCount()
io.perfmark.PerfMark: void stopTask(java.lang.String,io.perfmark.Tag)
com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
io.grpc.internal.ApplicationThreadDeframerListener: java.io.InputStream messageReadQueuePoll()
kotlin.ranges.IntRange$Companion: IntRange$Companion()
com.google.protobuf.AbstractMessageLite$Builder: void addAllCheckingNulls(java.lang.Iterable,java.util.List)
com.google.protobuf.MapFieldSchemas: com.google.protobuf.MapFieldSchema full()
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
com.google.android.gms.internal.firebase-auth-api.zzvw: void zza(com.google.android.gms.internal.firebase-auth-api.zzvv)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: AutoValue_PersistedInstallationEntry$Builder(com.google.firebase.installations.local.PersistedInstallationEntry)
com.google.common.collect.ImmutableMap: int hashCode()
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task scheduleTopicOperation(com.google.firebase.messaging.TopicOperation)
io.grpc.android.AndroidChannelBuilder: io.grpc.android.AndroidChannelBuilder context(android.content.Context)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: int getMinApkVersion()
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.local.IndexManager$IndexType getIndexType(com.google.firebase.firestore.core.Target)
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl access$000(com.squareup.okhttp.Request$Builder)
com.google.android.gms.internal.firebase-auth-api.zzzk: java.lang.String zzc()
com.google.firebase.firestore.remote.RemoteStore: void processTargetError(com.google.firebase.firestore.remote.WatchChange$WatchTargetChange)
com.google.android.gms.common.api.internal.zae: void zaf(com.google.android.gms.common.api.internal.zabq)
com.google.android.gms.common.data.DataHolder: void finalize()
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.android.gms.dynamite.zzq: com.google.android.gms.dynamic.IObjectWrapper zzj(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)
com.google.firebase.messaging.reporting.MessagingClientEvent$Builder: com.google.firebase.messaging.reporting.MessagingClientEvent$Builder setPackageName(java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
io.grpc.okhttp.OkHttpClientTransport: io.grpc.InternalLogId getLogId()
io.grpc.internal.DelayedClientTransport$PendingStream: java.lang.Runnable createRealStream(io.grpc.internal.ClientTransport)
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher getIO()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: int getJobId(com.google.android.datatransport.runtime.TransportContext)
com.google.firestore.bundle.BundledQuery$Builder: com.google.firestore.bundle.BundledQuery$Builder setParent(java.lang.String)
io.grpc.internal.ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState: ManagedChannelImpl$LbHelperImpl$1UpdateBalancingState(io.grpc.internal.ManagedChannelImpl$LbHelperImpl,io.grpc.LoadBalancer$SubchannelPicker,io.grpc.ConnectivityState)
com.google.firebase.firestore.core.QueryView: int getTargetId()
com.google.android.gms.internal.firebase-auth-api.zzjc: com.google.android.gms.internal.firebase-auth-api.zzjc zzc()
androidx.fragment.app.BackStackState: int describeContents()
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform getDefaultInstance()
com.google.firebase.auth.EmailAuthCredential: java.lang.String getSignInMethod()
com.google.android.datatransport.Encoding: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
com.google.android.gms.internal.location.zzbd: int hashCode()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzA(int,int)
com.google.firebase.firestore.model.Values: int compare(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String getErrorString(int)
com.google.firebase.messaging.WithinAppServiceConnection: void flushQueue()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.firebase.auth.internal.RecaptchaActivity: java.lang.String zzc(java.lang.String)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
com.google.android.gms.internal.safetynet.zze: zze()
com.google.protobuf.StructuralMessageInfo: int[] getCheckInitialized()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor: boolean isRepeated()
com.google.android.gms.common.api.internal.zacf: zacf(com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient)
io.flutter.plugins.packageinfo.PackageInfoPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: void writeLong(long)
io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatHeader(boolean,int,int,byte,byte)
com.google.android.gms.maps.internal.zzg: void setOnMapLongClickListener(com.google.android.gms.maps.internal.zzap)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.tekartik.sqflite.SqlCommand: java.lang.String[] getQuerySqlArguments()
com.google.protobuf.Utf8: boolean isValidUtf8(java.nio.ByteBuffer)
com.google.android.gms.common.api.internal.zap: void onCreate(android.os.Bundle)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
io.grpc.internal.RetriableStream$2: io.grpc.ClientStreamTracer newClientStreamTracer(io.grpc.ClientStreamTracer$StreamInfo,io.grpc.Metadata)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
com.google.android.gms.internal.firebase-auth-api.zzxz: java.lang.String zzd()
com.lyokone.location.FlutterLocationService$Companion: FlutterLocationService$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.firestore.core.ViewSnapshot: java.lang.String toString()
com.baseflow.geolocator.StreamHandlerImpl: void setActivity(android.app.Activity)
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.internal.ApiKey zaa(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaaz: void zzC(java.util.List,com.google.android.gms.internal.firebase-auth-api.zzado,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.gms.internal.firebase-auth-api.zzud: java.lang.String zza()
com.google.firebase.firestore.model.Values: int compareGeoPoints(com.google.type.LatLng,com.google.type.LatLng)
com.baseflow.geolocator.location.LocationAccuracy: LocationAccuracy(java.lang.String,int)
com.google.protobuf.MessageSchema: java.lang.Object getMapFieldDefaultEntry(int)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.google.android.gms.maps.model.Polyline: void setJointType(int)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
com.google.android.gms.internal.firebase-auth-api.zzch: java.lang.Class zza()
com.google.protobuf.AbstractParser: java.lang.Object parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.internal.firebase-auth-api.zzaeb: int size()
kotlinx.coroutines.JobNode: void dispose()
com.google.android.gms.maps.model.CircleOptions: CircleOptions(com.google.android.gms.maps.model.LatLng,double,float,int,int,float,boolean,boolean,java.util.List)
com.google.firebase.components.CycleDetector: void detect(java.util.List)
com.google.android.gms.maps.model.PolylineOptions: boolean isVisible()
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getLeft()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
com.google.firebase.messaging.Store: void saveToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.protobuf.Timestamp$Builder: com.google.protobuf.Timestamp$Builder setNanos(int)
io.grpc.internal.ManagedChannelImpl$RealChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)
com.google.android.gms.internal.firebase-auth-api.zzwt: void zzk(com.google.android.gms.internal.firebase-auth-api.zzwt,com.google.android.gms.common.api.Status)
com.google.firebase.firestore.TransactionOptions$Builder: com.google.firebase.firestore.TransactionOptions$Builder setMaxAttempts(int)
io.grpc.internal.PickFirstLoadBalancer: PickFirstLoadBalancer(io.grpc.LoadBalancer$Helper)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.google.android.gms.internal.firebase-auth-api.zztw: zztw(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzwy)
com.google.android.gms.internal.firebase-auth-api.zzabf: int zzE(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
io.grpc.internal.RetriableStream$1DeadlineEntry: void runWith(io.grpc.internal.RetriableStream$Substream)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
com.google.android.gms.internal.firebase-auth-api.zzty: zzty(java.lang.String,java.lang.Throwable)
io.grpc.internal.ManagedChannelImpl: void enterIdleMode()
com.google.android.gms.internal.firebase-auth-api.zzwh: zzwh(com.google.firebase.FirebaseApp,com.google.android.gms.internal.firebase-auth-api.zzwg,com.google.android.gms.internal.firebase-auth-api.zzxe,com.google.android.gms.internal.firebase-auth-api.zzwb,com.google.android.gms.internal.firebase-auth-api.zzwc)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
io.grpc.internal.FailingClientStream: FailingClientStream(io.grpc.Status,io.grpc.ClientStreamTracer[])
com.google.android.gms.internal.auth-api-phone.zzu: zzu(android.content.Context)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastP()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.lyokone.location.LocationPlugin$1: LocationPlugin$1(com.lyokone.location.LocationPlugin)
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
io.grpc.internal.InternalSubchannel: io.grpc.internal.ConnectionClientTransport access$1102(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task signInWithCustomToken(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: void destroy()
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzm(java.lang.Object,long,boolean)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzg(com.google.android.gms.common.api.Status,com.google.firebase.auth.PhoneAuthCredential)
com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationPresent()
com.google.firestore.v1.StructuredQuery$Builder: StructuredQuery$Builder()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.flutter.plugins.packageinfo.PackageInfoPlugin: long getLongVersionCode(android.content.pm.PackageInfo)
io.grpc.NameResolver$ResolutionResult$Builder: io.grpc.NameResolver$ResolutionResult build()
com.google.firebase.encoders.json.JsonDataEncoderBuilder: java.util.Map access$200(com.google.firebase.encoders.json.JsonDataEncoderBuilder)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.model.FieldPath decodeFieldReference(org.json.JSONObject)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.grpc.protobuf.lite.ProtoInputStream: int read(byte[],int,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.grpc.internal.DelayedStream$2: DelayedStream$2(io.grpc.internal.DelayedStream,int)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
com.google.protobuf.SmallSortedMap$Entry: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzzj: java.lang.String zzc()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
io.grpc.Context$CancellableContext$1: Context$CancellableContext$1(io.grpc.Context$CancellableContext)
com.google.android.gms.safetynet.zzj: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzbb: com.google.android.gms.internal.firebase-auth-api.zzax zza(java.lang.Class)
com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder: void writeInfinity()
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
com.google.firebase.auth.FirebaseAuth: com.google.android.gms.tasks.Task verifyPasswordResetCode(java.lang.String)
com.google.firebase.auth.internal.zzbd: zzbd()
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
com.google.firebase.messaging.RemoteMessage: int getOriginalPriority()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.grpc.internal.MessageDeframer: java.io.InputStream getUncompressedBody()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
com.google.firebase.FirebaseApp: FirebaseApp(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.google.firebase.firestore.model.mutation.ArrayTransformOperation: com.google.firestore.v1.Value applyToRemoteDocument(com.google.firestore.v1.Value,com.google.firestore.v1.Value)
com.google.android.datatransport.runtime.TransportRuntime_Factory: TransportRuntime_Factory(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzaau zze()
com.google.firebase.firestore.proto.WriteBatch$Builder: com.google.firebase.firestore.proto.WriteBatch$Builder setBatchId(int)
io.grpc.internal.SerializingExecutor: int access$300(io.grpc.internal.SerializingExecutor)
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions(byte,byte,int,com.google.android.gms.maps.model.CameraPosition,byte,byte,byte,byte,byte,byte,byte,byte,byte,java.lang.Float,java.lang.Float,com.google.android.gms.maps.model.LatLngBounds,byte,java.lang.Integer,java.lang.String)
com.google.android.gms.common.internal.zav: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzka zzd(com.google.android.gms.internal.firebase-auth-api.zzaau,com.google.android.gms.internal.firebase-auth-api.zzabk)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withError(io.grpc.Status)
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry access$100(io.grpc.internal.AutoConfiguredLoadBalancerFactory)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomOut()
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
com.google.android.gms.common.internal.zal: zal(com.google.android.gms.common.GoogleApiAvailabilityLight)
io.grpc.util.RoundRobinLoadBalancer$RoundRobinPicker: RoundRobinLoadBalancer$RoundRobinPicker(io.grpc.util.RoundRobinLoadBalancer$1)
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.lang.String toString()
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzah: int nextIndex()
com.google.android.gms.internal.maps.zzv: void zzv(float)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretPolygonOptions(java.lang.Object,io.flutter.plugins.googlemaps.PolygonOptionsSink)
com.google.android.gms.internal.firebase-auth-api.zzod: java.lang.Object initialValue()
com.google.firestore.v1.FirestoreGrpc$FirestoreStub: FirestoreGrpc$FirestoreStub(io.grpc.Channel,io.grpc.CallOptions)
com.google.android.gms.internal.firebase-auth-api.zzwj: java.lang.String zza()
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getApiFeatures()
io.grpc.Metadata$AsciiKey: Metadata$AsciiKey(java.lang.String,boolean,io.grpc.Metadata$AsciiMarshaller)
com.google.firebase.events.Event: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzur: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
io.grpc.internal.RetriableStream: boolean access$102(io.grpc.internal.RetriableStream,boolean)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereLessThan(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.android.gms.common.api.Api: Api(java.lang.String,com.google.android.gms.common.api.Api$AbstractClientBuilder,com.google.android.gms.common.api.Api$ClientKey)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zaj(com.google.android.gms.common.api.internal.BasePendingResult)
io.grpc.ThreadLocalContextStorage: void detach(io.grpc.Context,io.grpc.Context)
com.google.android.gms.maps.UiSettings: boolean isRotateGesturesEnabled()
kotlinx.coroutines.internal.Removed: java.lang.String toString()
io.grpc.LoadBalancer$ResolvedAddresses$Builder: LoadBalancer$ResolvedAddresses$Builder()
com.google.protobuf.CodedOutputStreamWriter: void writeDeterministicStringMap(int,com.google.protobuf.MapEntryLite$Metadata,java.util.Map)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: ClientTransportFactory$ClientTransportOptions()
io.grpc.internal.ManagedChannelImpl: int access$5500(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzhe: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzacj: boolean addAll(java.util.Collection)
com.google.firebase.messaging.ImageDownload: void start(java.util.concurrent.ExecutorService)
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzfk zzc(byte[])
com.google.protobuf.UnsafeUtil$MemoryAccessor: void putInt(java.lang.Object,long,int)
com.google.android.gms.maps.internal.zzg: void setTrafficEnabled(boolean)
com.google.android.gms.maps.model.MarkerOptions: java.lang.String getTitle()
com.google.firebase.database.collection.ImmutableSortedMap: int hashCode()
com.google.android.gms.maps.GoogleMap: void setLatLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
io.grpc.internal.RetriableStream$1FullStreamDecompressionEntry: RetriableStream$1FullStreamDecompressionEntry(io.grpc.internal.RetriableStream,boolean)
androidx.window.core.Version: java.lang.String getDescription()
com.google.firebase.firestore.proto.Target$Builder: com.google.firebase.firestore.proto.Target$Builder setQuery(com.google.firestore.v1.Target$QueryTarget)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.firebase.firestore.core.ViewChange: ViewChange(com.google.firebase.firestore.core.ViewSnapshot,java.util.List)
com.google.firebase.firestore.core.CompositeFilter: boolean isDisjunction()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
com.google.protobuf.LazyStringArrayList: int hashCode()
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
io.grpc.internal.ClientCallImpl: io.perfmark.Tag access$400(io.grpc.internal.ClientCallImpl)
com.google.android.gms.internal.firebase-auth-api.zzxz: zzxz()
com.google.firebase.auth.internal.zzk: zzk(android.content.Context,java.lang.String,boolean)
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: void requestConnection()
com.google.android.gms.internal.firebase-auth-api.zzpi: java.lang.Object initialValue()
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
com.google.firebase.firestore.bundle.BundleDocument: BundleDocument(com.google.firebase.firestore.model.MutableDocument)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: long getLong(long)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: void finish()
com.google.firebase.firestore.remote.WriteStream: void onNext(java.lang.Object)
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.google.firestore.v1.Value: com.google.firestore.v1.Value$Builder newBuilder()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzX(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.firebase.internal.InternalTokenResult: InternalTokenResult(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzj(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzado)
com.google.firebase.firestore.core.MemoryComponentProvider$RemoteStoreCallback: void handleSuccessfulWrite(com.google.firebase.firestore.model.mutation.MutationBatchResult)
io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec: Messages$PathProviderApiCodec()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl: void create(java.lang.Long,java.lang.Boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.lifecycle.ReportFragment: ReportFragment()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
com.google.protobuf.CodedOutputStream: void writeGroup(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)
com.google.firebase.firestore.local.LocalViewChanges: com.google.firebase.firestore.local.LocalViewChanges fromViewSnapshot(int,com.google.firebase.firestore.core.ViewSnapshot)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzen: zzen()
com.tekartik.sqflite.operation.ExecuteOperation: void success(java.lang.Object)
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: ManagedChannelImpl$RealChannel$1RealChannelShutdownNow(io.grpc.internal.ManagedChannelImpl$RealChannel)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
io.grpc.internal.MessageDeframer: void deliver()
androidx.core.os.LocaleListPlatformWrapper: int hashCode()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: SchedulerConfig$Builder()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxStorageSizeInBytes(long)
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: void remove()
okio.ByteString: java.lang.String toString()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: void success(java.lang.Object)
com.google.firebase.firestore.remote.WatchChangeAggregator: void resetTarget(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: java.lang.String getLocale()
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
com.google.firebase.firestore.util.Util: int compareIntegers(int,int)
com.google.protobuf.AbstractMessageLite: AbstractMessageLite()
com.google.android.gms.internal.firebase-auth-api.zztv: zztv(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
io.grpc.internal.AtomicBackoff$State: void backoff()
com.google.android.gms.internal.firebase-auth-api.zzaep: void zzq(java.lang.Object,long,int)
io.flutter.plugins.firebase.messaging.JobIntentService: android.os.IBinder onBind(android.content.Intent)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
io.grpc.internal.RetriableStream$Sublistener$1: void run()
com.google.firebase.auth.internal.zzax: boolean zzg(android.app.Activity,com.google.android.gms.tasks.TaskCompletionSource)
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
com.google.android.gms.maps.model.Dash: Dash(float)
com.google.android.gms.internal.firebase-auth-api.zzvm: void zzb()
io.grpc.internal.DelayedClientCall$2: void run()
io.grpc.HttpConnectProxiedSocketAddress: java.net.InetSocketAddress getTargetAddress()
io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setFullMethodName(java.lang.String)
com.google.android.gms.common.api.internal.zabq: void zaF()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()
androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.google.android.gms.internal.firebase-auth-api.zzec: byte[] zza(byte[],byte[])
com.google.firebase.firestore.index.OrderedCodeWriter: void writeSignedLongAscending(long)
io.grpc.internal.ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler: ManagedChannelImpl$NameResolverListener$1NameResolverErrorHandler(io.grpc.internal.ManagedChannelImpl$NameResolverListener,io.grpc.Status)
io.grpc.internal.HedgingPolicy: int hashCode()
io.flutter.plugins.firebase.firestore.streamhandler.TransactionStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.android.gms.location.zzl: zzl(com.google.android.gms.location.FusedLocationProviderClient)
io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed: void runInternal()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
com.google.firebase.firestore.model.mutation.MutationBatch: com.google.firebase.firestore.model.mutation.FieldMask applyToLocalView(com.google.firebase.firestore.model.MutableDocument,com.google.firebase.firestore.model.mutation.FieldMask)
com.google.android.gms.internal.firebase-auth-api.zzea: void zzd(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.DelayedStream$DelayedStreamListener$2: void run()
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
com.google.protobuf.BinaryReader$SafeHeapReader: long readVarint64()
com.google.android.gms.internal.firebase-auth-api.zzh: void remove()
io.grpc.internal.AbstractClientStream: AbstractClientStream(io.grpc.internal.WritableBufferAllocator,io.grpc.internal.StatsTraceContext,io.grpc.internal.TransportTracer,io.grpc.Metadata,io.grpc.CallOptions,boolean)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMinMaxZoomPreference(java.lang.Float,java.lang.Float)
com.google.firebase.firestore.model.Values: void canonifyTimestamp(java.lang.StringBuilder,com.google.protobuf.Timestamp)
com.google.protobuf.Timestamp$Builder: com.google.protobuf.Timestamp$Builder setSeconds(long)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzma: zzma(com.google.android.gms.internal.firebase-auth-api.zzlz)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCreator: android.webkit.WebViewClient createWebViewClient(io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl,boolean)
com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: void encode(com.google.android.datatransport.cct.internal.AndroidClientInfo,com.google.firebase.encoders.ObjectEncoderContext)
androidx.core.view.OneShotPreDrawListener: void removeListener()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.android.gms.internal.firebase-auth-api.zznv: com.google.android.gms.internal.firebase-auth-api.zznv zzb(int)
com.google.android.gms.internal.firebase-auth-api.zztn: void zzb(java.lang.Object)
com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereArrayContains(com.google.firebase.firestore.FieldPath,java.lang.Object)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.internal.zzbi zzx(com.google.firebase.auth.FirebaseAuth)
io.grpc.internal.ManagedChannelImpl: io.grpc.internal.ManagedChannelServiceConfig access$7300(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzkn: zzkn(com.google.android.gms.internal.firebase-auth-api.zzkm)
com.google.android.gms.maps.model.Polygon: boolean equals(java.lang.Object)
com.google.android.gms.common.internal.BaseGmsClient: void zzk(com.google.android.gms.common.internal.BaseGmsClient,int)
com.google.android.gms.internal.firebase-auth-api.zzaeq: void zza(byte,byte,byte,byte,char[],int)
com.google.android.gms.internal.firebase-auth-api.zzaar: void zze(byte[],int,int,int)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions geodesic(boolean)
com.google.android.gms.internal.firebase-auth-api.zzql: zzql()
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
com.google.android.gms.dynamite.zzq: com.google.android.gms.dynamic.IObjectWrapper zzh(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
com.google.android.gms.internal.firebase-auth-api.zzbd: void zze(com.google.android.gms.internal.firebase-auth-api.zzgb)
com.google.protobuf.BinaryReader$SafeHeapReader: com.google.protobuf.ByteString readBytes()
com.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
io.flutter.plugins.googlemaps.Convert: java.util.Map toMap(java.lang.Object)
androidx.webkit.internal.WebResourceErrorImpl: android.webkit.WebResourceError getFrameworksImpl()
com.google.android.gms.internal.auth-api-phone.zzk: zzk()
com.google.firebase.firestore.model.DocumentKey: int hashCode()
com.google.android.gms.internal.maps.zzv: boolean zzC(com.google.android.gms.internal.maps.zzx)
com.google.android.gms.location.zzy: com.google.android.gms.location.zzx zzc(android.os.IBinder)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
com.google.android.gms.internal.maps.zza: void zzc(int,android.os.Parcel)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzvs: void zzi(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzyj)
com.google.common.io.BaseEncoding$Base16Encoding: void encodeTo(java.lang.Appendable,byte[],int,int)
com.google.common.collect.ImmutableList$SubList: java.lang.Object get(int)
com.google.android.gms.internal.firebase-auth-api.zzht: zzht()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions liteMode(boolean)
okio.Buffer: int hashCode()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
com.google.firestore.v1.CommitResponse: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
io.grpc.internal.DelayedClientCall: void cancel(java.lang.String,java.lang.Throwable)
com.google.firebase.firestore.remote.RemoteSerializer: java.util.List decodeFilters(com.google.firestore.v1.StructuredQuery$Filter)
com.google.android.gms.internal.firebase-auth-api.zzou: zzou()
io.grpc.internal.PickSubchannelArgsImpl: boolean equals(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.firestore.core.DocumentViewChange: int hashCode()
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
com.google.android.gms.internal.firebase-auth-api.zzzk: void zzd(com.google.android.gms.internal.firebase-auth-api.zzxs)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeLazy(java.nio.ByteBuffer)
io.grpc.internal.ReadableBuffers: io.grpc.internal.ReadableBuffer empty()
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory: AsyncQueue$SynchronizedShutdownAwareExecutor$DelayedStartFactory(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor,com.google.firebase.firestore.util.AsyncQueue$1)
io.grpc.NameResolverRegistry$NameResolverFactory: NameResolverRegistry$NameResolverFactory(io.grpc.NameResolverRegistry,io.grpc.NameResolverRegistry$1)
com.google.firebase.firestore.util.AsyncQueue: void panic(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzwn: void zza(com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.lang.Object[])
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
com.google.firebase.auth.zzo: void onComplete(com.google.android.gms.tasks.Task)
io.grpc.internal.CompositeReadableBuffer$3: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)
com.google.firebase.firestore.bundle.BundledQuery: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
com.google.android.datatransport.Encoding: java.lang.String getName()
com.google.android.gms.internal.firebase-auth-api.zzut: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzig zzb(com.google.android.gms.internal.firebase-auth-api.zzin)
com.google.firebase.firestore.model.mutation.AutoValue_Overlay: int getLargestBatchId()
com.google.firebase.firestore.bundle.BundleReader: com.google.firebase.firestore.bundle.BundleElement getNextElement()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
com.google.protobuf.ProtobufArrayList: int size()
io.grpc.CallOptions: java.lang.Object getOption(io.grpc.CallOptions$Key)
io.grpc.internal.RetriableStream: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.RetriableStream)
com.google.android.gms.internal.firebase-auth-api.zzjf: com.google.android.gms.internal.firebase-auth-api.zzjl zze()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
io.grpc.internal.DnsNameResolver$InternalResolutionResult: java.util.List access$100(io.grpc.internal.DnsNameResolver$InternalResolutionResult)
io.grpc.okhttp.OkHttpChannelBuilder$OkHttpTransportFactory: io.grpc.internal.ConnectionClientTransport newClientTransport(java.net.SocketAddress,io.grpc.internal.ClientTransportFactory$ClientTransportOptions,io.grpc.ChannelLogger)
com.google.android.gms.common.api.internal.zabq: void zap(com.google.android.gms.common.api.internal.zai)
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.FirebaseInstallations getInstance(com.google.firebase.FirebaseApp)
com.google.common.collect.ImmutableMap: boolean containsValue(java.lang.Object)
com.google.protobuf.Timestamp: int getNanos()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: byte[] encode(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzlp: com.google.android.gms.internal.firebase-auth-api.zzlp zzb(com.google.android.gms.internal.firebase-auth-api.zzlt)
okio.Buffer: Buffer()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
com.google.common.collect.ImmutableList$SubList: int internalArrayStart()
io.grpc.internal.RetriableStream$Sublistener: void headersRead(io.grpc.Metadata)
com.google.android.gms.common.GoogleApiAvailability: boolean zah(android.content.Context,com.google.android.gms.common.ConnectionResult,int)
com.google.android.gms.common.api.zzb: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzcn: void zzh(com.google.android.gms.internal.firebase-auth-api.zziw)
com.google.firebase.firestore.remote.AndroidConnectivityMonitor: void configureBackgroundStateListener()
com.google.android.gms.internal.firebase-auth-api.zzgo: java.lang.Class zza()
io.grpc.internal.ExponentialBackoffPolicy: long nextBackoffNanos()
com.google.android.gms.internal.firebase-auth-api.zzadf: void zzW(com.google.android.gms.internal.firebase-auth-api.zzabg,int,java.lang.Object,int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void skipMessage()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode remove(java.lang.Object,java.util.Comparator)
com.google.android.gms.common.api.GoogleApi$Settings: GoogleApi$Settings(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper)
com.google.firestore.v1.Value: void setDoubleValue(double)
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzo(int,java.lang.String)
com.google.android.gms.stats.WakeLock: boolean isHeld()
com.google.protobuf.CodedOutputStreamWriter: void writeMessageList(int,java.util.List,com.google.protobuf.Schema)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.DocumentRemove getDocumentRemove()
com.google.firebase.auth.FirebaseAuth: void setLanguageCode(java.lang.String)
io.flutter.plugins.googlemaps.MarkerBuilder: MarkerBuilder()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
io.flutter.plugins.androidintent.AndroidIntentPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzak: java.lang.Object[] zze()
com.google.firebase.messaging.RemoteMessage: RemoteMessage(android.os.Bundle)
com.google.firestore.v1.DocumentTransform: java.util.List getFieldTransformsList()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: com.google.android.gms.tasks.Task terminate(java.util.Map)
io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl$DownloadListenerImpl: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.google.firebase.auth.zzae: zzae()
io.grpc.internal.RetriableStream$1SendMessageEntry: RetriableStream$1SendMessageEntry(io.grpc.internal.RetriableStream,java.lang.Object)
com.google.firebase.messaging.NotificationParams: boolean isAnalyticsKey(java.lang.String)
com.google.firebase.firestore.remote.ExistenceFilter: ExistenceFilter(int)
com.google.protobuf.RopeByteString: java.lang.String toStringInternal(java.nio.charset.Charset)
io.grpc.Metadata: int cap()
com.google.protobuf.IntArrayList: void removeRange(int,int)
com.google.android.gms.internal.firebase-auth-api.zzub: java.lang.String zza()
okio.Buffer: okio.BufferedSink writeShort(int)
com.google.protobuf.CodedInputStreamReader: void readFixed64List(java.util.List)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite parseFrom(com.google.protobuf.GeneratedMessageLite,byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.protobuf.CodedOutputStream: void writeGroup(int,com.google.protobuf.MessageLite)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytes(int,com.google.protobuf.ByteString)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.model.MutableDocument decodeMaybeDocument(com.google.firestore.v1.BatchGetDocumentsResponse)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(boolean)
com.google.firebase.messaging.ProtoEncoderDoNotUse: byte[] encode(java.lang.Object)
com.google.firebase.auth.zzw: java.lang.Object then(com.google.android.gms.tasks.Task)
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite$MethodToInvoke,java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.ConnectionResult zad()
com.google.firebase.firestore.QuerySnapshot: com.google.firebase.firestore.QueryDocumentSnapshot access$000(com.google.firebase.firestore.QuerySnapshot,com.google.firebase.firestore.model.Document)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void onTransactionStarted()
com.google.android.gms.internal.firebase-auth-api.zzaby: com.google.android.gms.internal.firebase-auth-api.zzacc zzd(int)
com.google.firebase.firestore.proto.MaybeDocument: void access$200(com.google.firebase.firestore.proto.MaybeDocument,com.google.firebase.firestore.proto.NoDocument)
com.google.android.gms.safetynet.zzk: zzk()
io.grpc.internal.ManagedChannelImpl$DelayedNameResolverRefresh: void run()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.NoDocument getNoDocument()
com.google.android.gms.internal.common.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
io.grpc.okhttp.internal.Platform$JdkWithJettyBootPlatform: Platform$JdkWithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class,java.security.Provider)
com.google.firestore.v1.ListenResponse: ListenResponse()
io.grpc.internal.ManagedChannelImpl: void access$3300(io.grpc.internal.ManagedChannelImpl,boolean)
io.grpc.internal.ServiceConfigUtil: java.lang.Long getPerAttemptRecvTimeoutNanosFromRetryPolicy(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zztu: void zza(java.lang.String)
com.google.android.gms.common.api.internal.zabu: void zac(com.google.android.gms.common.api.internal.zabu,boolean)
com.google.protobuf.DoubleArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
io.grpc.okhttp.OutboundFlowController$OutboundFlowState: OutboundFlowController$OutboundFlowState(io.grpc.okhttp.OutboundFlowController,io.grpc.okhttp.OkHttpClientStream,int)
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32(int,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
com.google.firebase.firestore.Source: Source(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzcw: java.lang.String zzc()
io.grpc.internal.DelayedStream$DelayedStreamListener$4: void run()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
com.google.firebase.heartbeatinfo.HeartBeatConsumerComponent: com.google.firebase.components.Component create()
io.grpc.internal.RetriableStream$FutureCanceller: java.util.concurrent.Future markCancelled()
com.google.firestore.v1.Value: void setBooleanValue(boolean)
com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)
com.google.firebase.firestore.UserDataReader: com.google.firestore.v1.Value parseMap(java.util.Map,com.google.firebase.firestore.core.UserData$ParseContext)
com.google.firebase.firestore.local.SQLiteTargetCache$DocumentKeysHolder: SQLiteTargetCache$DocumentKeysHolder()
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjx zzc()
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
com.google.android.gms.maps.zzj: void zzb()
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.google.android.gms.internal.firebase-auth-api.zzri: void writeToParcel(android.os.Parcel,int)
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfp: byte[] zzb(byte[],byte[])
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.internal.firebase-auth-api.zzaen: float zzb(java.lang.Object,long)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase forNumber(int)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.google.android.gms.internal.firebase-auth-api.zzqq: com.google.firebase.auth.PhoneAuthCredential zza()
com.google.firebase.firestore.auth.User: User(java.lang.String)
com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: AutoValue_ClientInfo$Builder()
com.google.firebase.firestore.core.KeyFieldFilter: boolean matches(com.google.firebase.firestore.model.Document)
com.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)
com.google.firebase.firestore.local.SQLiteSchema: void ifTablesDontExist(java.lang.String[],java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzacw: com.google.android.gms.internal.firebase-auth-api.zzacw zzb()
io.flutter.plugins.googlemaps.CircleBuilder: void setStrokeWidth(float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
com.google.android.gms.common.data.DataHolder$Builder: DataHolder$Builder(java.lang.String[],java.lang.String,com.google.android.gms.common.data.zac)
com.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor: java.lang.Thread access$300(com.google.firebase.firestore.util.AsyncQueue$SynchronizedShutdownAwareExecutor)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.protobuf.UnsafeUtil$Android64MemoryAccessor: boolean getBoolean(java.lang.Object,long)
com.google.common.collect.ImmutableSet: java.util.Iterator iterator()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
com.lyokone.location.LocationPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
com.google.firebase.installations.GetAuthTokenListener: GetAuthTokenListener(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource)
io.grpc.okhttp.internal.framed.Http2: int access$400(int,byte,short)
com.google.android.gms.internal.firebase-auth-api.zzaar: com.google.android.gms.internal.firebase-auth-api.zzaay zzh()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.google.android.gms.internal.firebase-auth-api.zzew: byte[] zza(byte[],byte[])
com.google.firebase.messaging.FcmLifecycleCallbacks: void logNotificationOpen(android.content.Intent)
androidx.fragment.app.FragmentManagerImpl: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
com.google.android.gms.tasks.zzi: void run()
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: long getRequestTimeMs()
io.grpc.internal.ManagedChannelImpl: boolean access$4100(io.grpc.internal.ManagedChannelImpl)
com.google.android.gms.internal.firebase-auth-api.zzaaj: int size()
com.google.firebase.firestore.local.MemoryIndexManager: void start()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.grpc.DecompressorRegistry$DecompressorInfo: DecompressorRegistry$DecompressorInfo(io.grpc.Decompressor,boolean)
com.google.android.gms.common.internal.RootTelemetryConfiguration: int getMaxMethodInvocationsInBatch()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsControllerCompat$Impl20: WindowInsetsControllerCompat$Impl20(android.view.Window,android.view.View)
io.flutter.plugins.firebase.firestore.streamhandler.QuerySnapshotsStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.google.android.gms.internal.firebase-auth-api.zzmu: com.google.android.gms.internal.firebase-auth-api.zzmw zzd(int)
io.grpc.InternalLogId: io.grpc.InternalLogId allocate(java.lang.Class,java.lang.String)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingStore: void storeFirebaseMessage(com.google.firebase.messaging.RemoteMessage)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.auth.FirebaseAuth: java.util.List zzB(com.google.firebase.auth.FirebaseAuth)
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context)
io.grpc.NameResolver$ConfigOrError: int hashCode()
io.grpc.internal.ForwardingReadableBuffer: boolean markSupported()
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$1: void success(java.lang.Void)
com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.lang.Object next()
com.google.firebase.auth.internal.zzj: zzj()
com.google.android.gms.internal.firebase-auth-api.zzuc: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResult getWriteResults(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.firestore.local.MemoryOverlayMigrationManager: MemoryOverlayMigrationManager()
com.google.firebase.auth.internal.zzai: com.google.android.gms.common.api.Status zza(java.lang.String)
com.google.firebase.firestore.model.DocumentCollections: com.google.firebase.database.collection.ImmutableSortedMap emptyVersionMap()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$FirebaseAppHostApi$3: void error(java.lang.Throwable)
com.squareup.okhttp.Headers: java.lang.String value(int)
androidx.collection.ArraySet$1: void colRemoveAt(int)
io.grpc.internal.GrpcUtil: java.util.concurrent.ThreadFactory getThreadFactory(java.lang.String,boolean)
com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)
io.grpc.internal.DelayedClientCall: io.grpc.Context access$200(io.grpc.internal.DelayedClientCall)
io.grpc.DecompressorRegistry: java.util.Set getAdvertisedMessageEncodings()
com.google.android.gms.internal.firebase-auth-api.zzih: void zzh(com.google.android.gms.internal.firebase-auth-api.zzih,com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setCountry(java.lang.String)
com.google.firestore.v1.ExistenceFilter$Builder: ExistenceFilter$Builder(com.google.firestore.v1.ExistenceFilter$1)
com.tekartik.sqflite.Database: Database(java.lang.String,int,boolean,int)
com.google.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)
com.google.firebase.messaging.TopicsSyncTask: boolean access$100()
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: StructuredQuery$Filter$FilterTypeCase(java.lang.String,int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzn: java.lang.String zzb()
com.tekartik.sqflite.LogLevel: boolean hasSqlLevel(int)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
androidx.collection.ArraySet: java.lang.Object valueAt(int)
com.google.common.base.CharMatcher: java.lang.String access$100(char)
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Iterator iterator()
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)
com.google.protobuf.ManifestSchemaFactory: com.google.protobuf.Schema createSchema(java.lang.Class)
com.google.firebase.firestore.remote.RemoteStore: void sendWatchRequest(com.google.firebase.firestore.local.TargetData)
io.grpc.internal.ForwardingDeframerListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
com.google.firestore.v1.Target$Builder: com.google.firestore.v1.Target$Builder setReadTime(com.google.protobuf.Timestamp)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: void shutdown()
com.google.protobuf.LongArrayList: java.lang.Long set(int,java.lang.Long)
com.google.android.gms.internal.firebase-auth-api.zzog: zzog(byte[])
com.google.android.gms.internal.firebase-auth-api.zzvq: com.google.android.gms.tasks.Task zzn(com.google.firebase.FirebaseApp,com.google.firebase.auth.FirebaseUser,com.google.firebase.auth.EmailAuthCredential,com.google.firebase.auth.internal.zzbk)
com.google.firebase.firestore.local.IndexBackfiller: com.google.firebase.firestore.local.IndexBackfiller$Scheduler getScheduler()
com.google.protobuf.LazyStringArrayList: int size()
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query whereIn(com.google.firebase.firestore.FieldPath,java.util.List)
io.grpc.Context: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.protobuf.NewInstanceSchemas: com.google.protobuf.NewInstanceSchema lite()
com.google.android.gms.internal.firebase-auth-api.zzadr: void zza()
com.google.protobuf.CodedOutputStream: void writeDoubleNoTag(double)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: boolean equals(java.lang.Object)
io.grpc.internal.AtomicBackoff: java.lang.String access$200(io.grpc.internal.AtomicBackoff)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
com.google.firebase.firestore.model.mutation.NumericIncrementTransformOperation: NumericIncrementTransformOperation(com.google.firestore.v1.Value)
io.grpc.internal.ForwardingConnectionClientTransport: ForwardingConnectionClientTransport()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingUtils: java.util.Map remoteMessageToMap(com.google.firebase.messaging.RemoteMessage)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.google.protobuf.GeneratedMessageLite: GeneratedMessageLite()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreException: java.lang.String getMessage()
io.grpc.internal.Http2Ping: boolean complete()
com.google.firebase.firestore.local.LocalStore: void applyWriteToRemoteDocuments(com.google.firebase.firestore.model.mutation.MutationBatchResult)
com.google.protobuf.UnknownFieldSetLite: int hashCode()
com.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newInitExecutor()
com.google.android.gms.internal.firebase-auth-api.zzow: zzow()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: FlutterFirebaseFirestoreRegistrar()
com.google.android.gms.internal.firebase-auth-api.zzka: int zza()
com.google.android.gms.maps.internal.zzbe: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.firestore.v1.CommitRequest: CommitRequest()
io.grpc.internal.RetriableStream$HedgingRunnable: void run()
com.google.android.gms.internal.firebase-auth-api.zzkt: com.google.android.gms.internal.firebase-auth-api.zzkt zzc(int)
com.google.android.gms.internal.firebase-auth-api.zzbd: void zzi(com.google.android.gms.internal.firebase-auth-api.zzbc,boolean)
com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder: com.google.android.datatransport.runtime.firebase.transport.StorageMetrics$Builder setMaxCacheSizeBytes(long)
com.google.firebase.firestore.UserDataWriter: java.lang.Object convertServerTimestamp(com.google.firestore.v1.Value)
io.flutter.plugins.googlemaps.CircleBuilder: void setFillColor(int)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void checkLastTagWas(int)
com.google.protobuf.MapFieldSchemas: com.google.protobuf.MapFieldSchema loadSchemaForFullRuntime()
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
com.google.firestore.v1.StructuredQuery$CompositeFilter: void addAllFilters(java.lang.Iterable)
kotlin.collections.EmptyMap: int hashCode()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundExecutor: void startBackgroundIsolate()
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped: LogEventDropped(long,com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason)
io.flutter.plugins.googlemaps.Convert: java.lang.Object latLngToJson(com.google.android.gms.maps.model.LatLng)
com.google.firebase.firestore.remote.GrpcCallProvider: GrpcCallProvider(com.google.firebase.firestore.util.AsyncQueue,android.content.Context,com.google.firebase.firestore.core.DatabaseInfo,io.grpc.CallCredentials)
com.google.android.gms.maps.model.Polyline: void setZIndex(float)
com.google.android.gms.internal.firebase-auth-api.zzxn: java.lang.String zzm(java.lang.String,java.lang.String)
io.grpc.Metadata$LazyValue: io.grpc.Metadata$LazyValue create(io.grpc.Metadata$Key,java.lang.Object)
com.google.android.gms.common.internal.zan: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
com.google.android.gms.internal.firebase-auth-api.zzacr: int indexOf(java.lang.Object)
com.google.protobuf.FloatArrayList: java.lang.String makeOutOfBoundsExceptionMessage(int)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
io.flutter.plugins.googlemaps.TileProviderController: io.flutter.plugin.common.MethodChannel access$200(io.flutter.plugins.googlemaps.TileProviderController)
io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger access$100()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.google.android.datatransport.runtime.SendRequest: byte[] getPayload()
com.google.firestore.v1.Write: boolean hasUpdateMask()
io.grpc.internal.ClientCallImpl: io.grpc.Deadline min(io.grpc.Deadline,io.grpc.Deadline)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.google.android.gms.internal.firebase-auth-api.zzmm: int zza(int)
io.grpc.internal.AbstractManagedChannelImplBuilder: AbstractManagedChannelImplBuilder()
io.grpc.internal.ForwardingClientStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
com.google.android.gms.internal.firebase-auth-api.zzcz: java.lang.String zzc()
kotlin.collections.EmptySet: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzN(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
com.google.protobuf.CodedInputStream$ArrayDecoder: java.lang.String readStringRequireUtf8()
com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback: AndroidConnectivityMonitor$DefaultNetworkCallback(com.google.firebase.firestore.remote.AndroidConnectivityMonitor,com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1)
com.google.android.gms.stats.WakeLock: void zze(android.os.PowerManager$WakeLock,android.os.WorkSource)
io.grpc.okhttp.OutboundFlowController$WriteStatus: OutboundFlowController$WriteStatus(io.grpc.okhttp.OutboundFlowController$1)
io.grpc.okhttp.OkHttpClientTransport: java.util.concurrent.Executor access$600(io.grpc.okhttp.OkHttpClientTransport)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
io.grpc.internal.DelayedStream$4: void run()
com.google.firebase.firestore.local.SQLiteTargetCache$DocumentKeysHolder: SQLiteTargetCache$DocumentKeysHolder(com.google.firebase.firestore.local.SQLiteTargetCache$1)
com.google.protobuf.Int32Value: Int32Value()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaL(com.google.android.gms.tasks.TaskCompletionSource,int,com.google.android.gms.common.api.GoogleApi)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: boolean getBoolean(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzdh: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
com.google.android.gms.internal.firebase-auth-api.zzza: java.lang.String zza()
com.google.android.gms.internal.firebase-auth-api.zzkg: zzkg()
com.google.firebase.firestore.proto.NoDocument$Builder: NoDocument$Builder()
io.grpc.internal.DelayedStream$11: DelayedStream$11(io.grpc.internal.DelayedStream)
com.google.android.gms.internal.firebase-auth-api.zzre: com.google.android.gms.internal.firebase-auth-api.zzzq zza()
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)
com.google.android.gms.internal.firebase-auth-api.zzaar: java.lang.String zzi(java.nio.charset.Charset)
com.google.android.gms.internal.firebase-auth-api.zzty: zzty(java.lang.String)
com.google.android.gms.stats.zza: void run()
com.google.firebase.firestore.core.DocumentViewChange: com.google.firebase.firestore.core.DocumentViewChange create(com.google.firebase.firestore.core.DocumentViewChange$Type,com.google.firebase.firestore.model.Document)
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()
androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.TileOverlayOptions: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter$Builder newBuilder()
com.google.firebase.messaging.WithinAppServiceConnection$BindRequest: com.google.android.gms.tasks.Task getTask()
io.grpc.StreamTracer: void outboundUncompressedSize(long)
com.google.firebase.firestore.remote.RemoteSerializer: boolean isValidResourceName(com.google.firebase.firestore.model.ResourcePath)
com.google.android.gms.internal.firebase-auth-api.zzeq: com.google.android.gms.internal.firebase-auth-api.zzfl zzb(byte[])
io.grpc.internal.CompositeReadableBuffer: int execute(io.grpc.internal.CompositeReadableBuffer$ReadOperation,int,java.lang.Object,int)
com.google.android.gms.internal.maps.zzc: boolean zzg(android.os.Parcel)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzB(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
com.google.firestore.v1.BatchGetDocumentsResponse$Builder: BatchGetDocumentsResponse$Builder()
com.google.protobuf.UnknownFieldSetLiteSchema: boolean shouldDiscardUnknownFields(com.google.protobuf.Reader)
com.google.firebase.firestore.local.LocalStore$DocumentChangeResult: LocalStore$DocumentChangeResult(java.util.Map,java.util.Set)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientHostApiCodec: GeneratedAndroidWebView$WebChromeClientHostApiCodec()
io.flutter.plugins.webviewflutter.WebSettingsHostApiImpl: void setDisplayZoomControls(java.lang.Long,java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzaai: int zza(byte[],int,com.google.android.gms.internal.firebase-auth-api.zzaah)
com.google.firebase.auth.internal.zzae: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.safetynet.zzi: zzi()
com.google.android.gms.internal.firebase-auth-api.zzud: void zzb()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
com.google.android.gms.internal.firebase-auth-api.zzdj: int zzf()
com.google.protobuf.Internal: int partialHash(int,byte[],int,int)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
com.google.firebase.firestore.model.AutoValue_FieldIndex: com.google.firebase.firestore.model.FieldIndex$IndexState getIndexState()
io.grpc.internal.ManagedChannelImpl$1RequestConnection: ManagedChannelImpl$1RequestConnection(io.grpc.internal.ManagedChannelImpl)
com.google.firebase.firestore.UserDataWriter: UserDataWriter(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior)
com.google.android.gms.internal.firebase-auth-api.zzel: java.util.logging.Logger zzd()
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
io.grpc.CallOptions: java.lang.Integer getMaxOutboundMessageSize()
com.google.android.gms.maps.zzc: void zzb(com.google.android.gms.internal.maps.zzx)
com.google.android.gms.location.zzab: zzab()
com.google.firebase.firestore.core.AsyncEventListener: AsyncEventListener(java.util.concurrent.Executor,com.google.firebase.firestore.EventListener)
io.grpc.internal.ChannelLoggerImpl: boolean isTraceable(io.grpc.ChannelLogger$ChannelLogLevel)
androidx.fragment.app.FragmentManagerImpl$2: void run()
com.google.android.gms.internal.firebase-auth-api.zzeg: java.lang.String zzc()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
com.google.android.gms.internal.firebase-auth-api.zznb: com.google.android.gms.internal.firebase-auth-api.zznb zzc()
com.baseflow.geolocator.location.LocationServiceStatusReceiver: LocationServiceStatusReceiver(io.flutter.plugin.common.EventChannel$EventSink)
io.grpc.okhttp.OkHttpClientTransport$4: void run()
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: void removeOverlaysForBatchId(int)
com.google.android.gms.safetynet.SafeBrowsingData: java.io.FileOutputStream zza()
com.google.android.gms.internal.firebase-auth-api.zzy: java.lang.String zzd(int,int,java.lang.String)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
com.google.android.gms.internal.firebase-auth-api.zzam: int zzc()
com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
com.google.android.gms.internal.maps.zzab: zzab(android.os.IBinder)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getDisplayName()
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
com.google.common.io.ByteStreams$1: void write(byte[])
io.flutter.plugins.webviewflutter.ThreadedInputConnectionProxyAdapterView: boolean hasWindowFocus()
com.google.firebase.firestore.model.ObjectValue: void set(com.google.firebase.firestore.model.FieldPath,com.google.firestore.v1.Value)
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.core.Bound decodeStartAtBound(org.json.JSONObject)
com.google.firebase.messaging.WakeLockHolder: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)
io.grpc.okhttp.OkHttpClientTransport: java.lang.Throwable getPingFailure()
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.firebase-auth-api.zzadq: void zzJ(int,java.util.List,com.google.android.gms.internal.firebase-auth-api.zzabg,boolean)
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: ManagedChannelImpl$UncommittedRetriableStreamsRegistry(io.grpc.internal.ManagedChannelImpl)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzqw: zzqw(java.lang.String,com.google.firebase.auth.ActionCodeSettings,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzte: zzte(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.android.gms.internal.firebase-auth-api.zzqi: java.lang.String zza()
com.google.firebase.database.collection.ImmutableSortedSet: java.lang.Object getMaxEntry()
com.google.android.gms.internal.firebase-auth-api.zzzq: com.google.android.gms.internal.firebase-auth-api.zzzq zzd(boolean)
com.google.android.gms.internal.firebase-auth-api.zzcz: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.common.io.BaseEncoding$StandardBaseEncoding: int hashCode()
com.google.protobuf.IntArrayList: java.lang.Integer get(int)
com.google.protobuf.CodedOutputStreamWriter: void writeInt64List(int,java.util.List,boolean)
com.google.protobuf.NioByteString: boolean equalsRange(com.google.protobuf.ByteString,int,int)
com.google.protobuf.ArrayDecoders: int decodeFloatList(int,byte[],int,int,com.google.protobuf.Internal$ProtobufList,com.google.protobuf.ArrayDecoders$Registers)
io.grpc.okhttp.OkHttpClientStream: io.grpc.MethodDescriptor access$000(io.grpc.okhttp.OkHttpClientStream)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: SchedulerConfig$ConfigValue$Builder()
com.google.android.datatransport.cct.internal.AutoValue_LogRequest: AutoValue_LogRequest(long,long,com.google.android.datatransport.cct.internal.ClientInfo,java.lang.Integer,java.lang.String,java.util.List,com.google.android.datatransport.cct.internal.QosTier,com.google.android.datatransport.cct.internal.AutoValue_LogRequest$1)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.google.firestore.v1.Precondition: void access$200(com.google.firestore.v1.Precondition,boolean)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaaw: long zzg()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendGlobalHeartBeat(long)
com.google.android.gms.internal.location.zzar: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)
com.google.firebase.firestore.model.DatabaseId: com.google.firebase.firestore.model.DatabaseId fromName(java.lang.String)
com.google.firebase.firestore.remote.TargetState: boolean isPending()
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientCompatImpl: void onPageFinished(android.webkit.WebView,java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
com.google.firebase.auth.internal.zzb: void onSuccess(java.lang.Object)
com.google.protobuf.FieldType: boolean isList()
io.flutter.plugins.webviewflutter.InstanceManager: java.lang.Long removeInstance(java.lang.Object)
com.google.protobuf.MessageSchema: long offset(int)
io.grpc.Status: io.grpc.Status augmentDescription(java.lang.String)
com.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()
com.google.firebase.firestore.DocumentChange: java.util.List changesFromSnapshot(com.google.firebase.firestore.FirebaseFirestore,com.google.firebase.firestore.MetadataChanges,com.google.firebase.firestore.core.ViewSnapshot)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions radius(double)
com.google.android.gms.internal.firebase-auth-api.zzabd: void zzq(int,int)
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzla zzd()
com.google.firebase.firestore.index.AutoValue_IndexEntry: int hashCode()
io.grpc.okhttp.internal.Platform$Android: io.grpc.okhttp.internal.Platform$TlsExtensionType getTlsExtensionType()
io.grpc.internal.Http2Ping: void notifyFailed(io.grpc.internal.ClientTransport$PingCallback,java.util.concurrent.Executor,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzxb: boolean zzc(int)
com.google.firebase.firestore.LoadBundleTask: com.google.firebase.firestore.LoadBundleTaskProgress getResult()
com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()
io.grpc.okhttp.OkHttpClientTransport: int getOverridenPort()
com.google.android.gms.maps.model.zzs: zzs()
com.google.firebase.auth.internal.zzt: java.lang.String getProviderId()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable tryCopyAndVerify(java.lang.Throwable)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
com.google.android.gms.common.api.Scope: Scope(int,java.lang.String)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: int readRawVarint32()
com.google.firebase.firestore.local.LocalSerializer: com.google.firebase.firestore.model.MutableDocument decodeUnknownDocument(com.google.firebase.firestore.proto.UnknownDocument)
com.google.firestore.v1.StructuredQuery: StructuredQuery()
com.google.protobuf.Utf8$DecodeUtil: char highSurrogate(int)
io.grpc.Metadata$Key: Metadata$Key(java.lang.String,boolean,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzef: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.internal.firebase-auth-api.zzy: int zzb(int,int,java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
com.google.firebase.firestore.model.Values: java.lang.String canonicalId(com.google.firestore.v1.Value)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Boolean readBooleanObject(android.os.Parcel,int)
com.google.firebase.messaging.RemoteMessage$Builder: com.google.firebase.messaging.RemoteMessage$Builder setMessageType(java.lang.String)
io.grpc.internal.ReadableBuffers$ByteArrayWrapper: void skipBytes(int)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebChromeClientFlutterApi: io.flutter.plugin.common.MessageCodec getCodec()
androidx.localbroadcastmanager.content.LocalBroadcastManager$1: LocalBroadcastManager$1(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper)
io.grpc.internal.InUseStateAggregator: InUseStateAggregator()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
com.google.android.gms.internal.firebase-auth-api.zzxk: void zzb(java.lang.String)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
com.google.firestore.v1.Write: com.google.firestore.v1.Write parseFrom(byte[])
com.squareup.okhttp.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)
okio.Buffer$1: void flush()
io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.String authority()
com.google.android.gms.common.api.internal.BasePendingResult: boolean isReady()
io.grpc.internal.ProxyDetectorImpl: io.grpc.ProxiedSocketAddress detectProxy(java.net.InetSocketAddress)
com.google.firebase.messaging.FirebaseMessaging: void access$100(com.google.firebase.messaging.FirebaseMessaging)
io.flutter.plugins.googlemaps.MarkerBuilder: void setInfoWindowAnchor(float,float)
com.google.android.gms.internal.firebase-auth-api.zzaco: void zzc(java.lang.Object,java.lang.Object,long)
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction valueOf(java.lang.String)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
com.google.firestore.v1.Document: com.google.protobuf.Timestamp getUpdateTime()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl: java.util.List stripOverrideAuthorityAttributes(java.util.List)
com.google.protobuf.MessageSchema: boolean arePresentForEquals(java.lang.Object,java.lang.Object,int)
com.google.android.gms.internal.base.zaq: zaq(android.os.Looper,android.os.Handler$Callback)
io.grpc.internal.ManagedChannelImpl: void rescheduleIdleTimer()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzz(int,java.util.List,boolean)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getFamilyName()
com.google.protobuf.SmallSortedMap$EmptySet$1: SmallSortedMap$EmptySet$1()
com.google.firebase.auth.internal.zzp: boolean isNewUser()
com.google.android.gms.internal.firebase-auth-api.zzwq: void zzi(com.google.android.gms.internal.firebase-auth-api.zzyq,com.google.android.gms.internal.firebase-auth-api.zzyj)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
com.google.android.gms.internal.firebase-auth-api.zzkq: com.google.android.gms.internal.firebase-auth-api.zzkq zza(com.google.android.gms.internal.firebase-auth-api.zzku)
com.google.android.gms.internal.firebase-auth-api.zzam: zzam(java.lang.Object[],int)
com.google.firebase.firestore.local.SQLiteTargetCache: void addTargetData(com.google.firebase.firestore.local.TargetData)
com.google.android.gms.internal.maps.zzab: void zzq(int)
com.google.android.gms.internal.firebase-auth-api.zznl: int zza()
com.google.firebase.auth.PhoneAuthCredential: com.google.firebase.auth.PhoneAuthCredential zzb()
com.google.firestore.v1.Precondition: void setExists(boolean)
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexOffset: int hashCode()
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
com.google.protobuf.SmallSortedMap$EntryIterator: boolean hasNext()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setDatabaseUrl(java.lang.String)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)
com.google.android.gms.maps.CameraUpdateFactory: void zza(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate)
com.google.firebase.firestore.local.SQLiteTargetCache: void forEachTarget(com.google.firebase.firestore.util.Consumer)
io.grpc.internal.InternalSubchannel: void startNewTransport()
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions transparency(float)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjq zza(int)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result await(long,java.util.concurrent.TimeUnit)
com.google.firebase.firestore.core.Query: Query(com.google.firebase.firestore.model.ResourcePath,java.lang.String)
com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzadr: zzadr(int)
com.google.android.gms.internal.firebase-auth-api.zzsg: void zzb(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzck: int zze()
com.google.common.collect.SingletonImmutableSet: SingletonImmutableSet(java.lang.Object)
com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeStringNoTag(java.lang.String)
io.grpc.okhttp.internal.framed.Http2$Writer: void headers(boolean,int,java.util.List)
com.google.firebase.firestore.Query: com.google.firebase.firestore.Query endAt(java.lang.Object[])
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIBinder(android.os.Parcel,int,android.os.IBinder,boolean)
com.google.firebase.firestore.core.KeyFieldInFilter: boolean matches(com.google.firebase.firestore.model.Document)
io.grpc.internal.MessageDeframer: void setMaxInboundMessageSize(int)
com.google.firebase.installations.FirebaseInstallations$1: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task set(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzdl: java.lang.Object initialValue()
com.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task unsubscribeFromTopic(java.lang.String)
com.google.firebase.installations.remote.AutoValue_InstallationResponse: com.google.firebase.installations.remote.TokenResult getAuthToken()
com.google.android.gms.internal.firebase-auth-api.zzcb: java.lang.Object zzk(com.google.android.gms.internal.firebase-auth-api.zzbw,java.lang.Class)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: void postCommit()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void finishObjectHeader(android.os.Parcel,int)
com.google.android.gms.common.internal.ClientSettings: ClientSettings(android.accounts.Account,java.util.Set,java.util.Map,int,android.view.View,java.lang.String,java.lang.String,com.google.android.gms.signin.SignInOptions,boolean)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
io.grpc.internal.ManagedChannelImpl$SubchannelImpl$1ManagedInternalSubchannelCallback: void onStateChange(io.grpc.internal.InternalSubchannel,io.grpc.ConnectivityStateInfo)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.android.gms.common.internal.TelemetryData: int zaa()
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
com.google.firebase.messaging.RemoteMessageCreator: com.google.firebase.messaging.RemoteMessage createFromParcel(android.os.Parcel)
com.google.firebase.firestore.model.AutoValue_FieldIndex: int getIndexId()
com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: int hashCode()
io.grpc.InternalChannelz$ChannelTrace$Event$Builder: InternalChannelz$ChannelTrace$Event$Builder()
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firebase.auth.internal.zzav: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.api.internal.zabq: void zan()
com.google.firestore.v1.ArrayValue: void access$600(com.google.firestore.v1.ArrayValue,int)
com.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task deleteToken()
com.google.protobuf.LongArrayList: boolean add(java.lang.Long)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.gms.internal.firebase-auth-api.zzoq: void zzd(java.security.spec.ECPoint,java.security.spec.EllipticCurve)
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
com.google.android.gms.maps.model.PolygonOptions: java.util.List getStrokePattern()
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget$Builder newBuilder()
com.google.android.gms.common.zzc: java.lang.Object[] newArray(int)
com.google.android.gms.maps.internal.zzg: void setLatLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipMessage()
com.google.firebase.firestore.local.SQLiteTargetCache: long getTargetCount()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzos: java.util.List zzb(java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzaz: com.google.android.gms.internal.firebase-auth-api.zzadc zzb(com.google.android.gms.internal.firebase-auth-api.zzaau)
com.google.android.gms.maps.model.Tile: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorU()
com.google.android.gms.maps.internal.zzl: void onDestroy()
com.google.android.gms.maps.model.Marker: void setVisible(boolean)
com.google.firestore.v1.ExistenceFilter$Builder: ExistenceFilter$Builder()
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation unsubscribe(java.lang.String)
io.grpc.internal.ManagedChannelImpl: io.grpc.ManagedChannel shutdownNow()
com.baseflow.geolocator.location.FusedLocationClient: void requestPositionUpdates(com.baseflow.geolocator.location.LocationOptions)
com.google.firebase.auth.internal.zzv: zzv(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider)
com.google.android.gms.internal.location.zzk: java.lang.String getStartServiceAction()
com.google.android.gms.internal.location.zzbd: zzbd(com.google.android.gms.location.LocationRequest,java.util.List,java.lang.String,boolean,boolean,boolean,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
com.tekartik.sqflite.SqflitePlugin$BgResult: SqflitePlugin$BgResult(com.tekartik.sqflite.SqflitePlugin,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.SqflitePlugin$1)
io.grpc.protobuf.lite.ProtoInputStream: int drainTo(java.io.OutputStream)
com.google.android.gms.internal.firebase-auth-api.zzadx: void remove()
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
com.google.android.gms.internal.firebase-auth-api.zzacs: com.google.android.gms.internal.firebase-auth-api.zzacz zzb(java.lang.Class)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Object invoke(java.lang.Object)
io.grpc.LoadBalancerProvider$UnknownConfig: LoadBalancerProvider$UnknownConfig()
io.grpc.Status$Code: byte[] valueAscii()
io.grpc.internal.ManagedChannelImpl$UncommittedRetriableStreamsRegistry: void onShutdown(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzdb: com.google.android.gms.internal.firebase-auth-api.zzadc zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.internal.AtomicBackoff: io.grpc.internal.AtomicBackoff$State getState()
com.google.android.gms.dynamite.zzj: zzj()
com.google.protobuf.CodedInputStreamReader: void requirePosition(int)
io.grpc.internal.RetriableStream: void access$1400(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$Substream)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.baseflow.geolocator.MethodCallHandlerImpl: void onRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBundle(android.os.Parcel,int,android.os.Bundle,boolean)
io.grpc.internal.InternalSubchannel$CallTracingTransport$1$1: io.grpc.internal.ClientStreamListener delegate()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdownNow: void run()
com.google.firebase.auth.internal.zzac: java.util.List getEnrolledFactors()
io.grpc.internal.ManagedChannelImpl: void notifyWhenStateChanged(io.grpc.ConnectivityState,java.lang.Runnable)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions zIndex(float)
com.google.firebase.firestore.core.Query: java.util.List getFilters()
com.google.android.gms.internal.firebase-auth-api.zzabg: void zzo(int,float)
io.grpc.CompositeCallCredentials$CombiningMetadataApplier: CompositeCallCredentials$CombiningMetadataApplier(io.grpc.CallCredentials$MetadataApplier,io.grpc.Metadata)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
io.grpc.internal.InternalSubchannel$7: InternalSubchannel$7(io.grpc.internal.InternalSubchannel,io.grpc.internal.ConnectionClientTransport,boolean)
com.google.android.gms.internal.firebase-auth-api.zzsm: void zza(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaau: com.google.android.gms.internal.firebase-auth-api.zzaau zzq(byte[])
io.grpc.internal.MessageDeframer: boolean isClosed()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
okio.AsyncTimeout: AsyncTimeout()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.google.firebase.auth.internal.zzbe: boolean zzc()
io.grpc.okhttp.OkHttpClientTransport: javax.net.ssl.HostnameVerifier access$1300(io.grpc.okhttp.OkHttpClientTransport)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: float getFloat(java.lang.Object,long)
com.google.android.gms.maps.model.MapStyleOptions: MapStyleOptions(java.lang.String)
com.google.firebase.firestore.model.mutation.DeleteMutation: boolean equals(java.lang.Object)
com.google.firebase.provider.FirebaseInitProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
io.grpc.LoadBalancer$Helper: LoadBalancer$Helper()
com.google.firebase.firestore.model.AutoValue_FieldIndex_IndexState: int hashCode()
io.grpc.internal.KeepAliveManager: KeepAliveManager(io.grpc.internal.KeepAliveManager$KeepAlivePinger,java.util.concurrent.ScheduledExecutorService,long,long,boolean)
com.google.firebase.auth.zzi: void zza()
com.google.firebase.messaging.TopicOperation: com.google.firebase.messaging.TopicOperation from(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvv: com.google.android.gms.internal.firebase-auth-api.zzvv zza(java.lang.String)
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
com.google.protobuf.SchemaUtil: void writeInt32List(int,java.util.List,com.google.protobuf.Writer,boolean)
com.google.firestore.v1.StructuredQuery$Filter$Builder: com.google.firestore.v1.StructuredQuery$Filter$Builder setUnaryFilter(com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder)
com.google.firebase.FirebaseApp: int hashCode()
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
com.google.android.gms.internal.firebase-auth-api.zzlk: int zza(int)
com.google.firebase.firestore.core.UserData$ParseContext: java.lang.RuntimeException createError(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaan: void remove()
com.google.protobuf.CodedInputStream: long decodeZigZag64(long)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void startListening()
com.google.android.gms.common.api.ResolvableApiException: void startResolutionForResult(android.app.Activity,int)
io.grpc.okhttp.OkHttpChannelBuilder$1: java.lang.Object create()
com.google.android.gms.internal.firebase-auth-api.zzaco: java.util.List zza(java.lang.Object,long)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
com.google.android.gms.internal.firebase-auth-api.zzabb: void zzN()
com.google.android.gms.internal.location.zzad: com.google.android.gms.common.api.Status getStatus()
com.google.android.gms.internal.firebase-auth-api.zzadx: boolean hasNext()
com.google.protobuf.ByteString$ArraysByteArrayCopier: ByteString$ArraysByteArrayCopier()
com.google.firebase.auth.internal.zzam: com.google.android.gms.common.logging.Logger zza()
com.google.android.gms.internal.firebase-auth-api.zzdc: com.google.android.gms.internal.firebase-auth-api.zzga zza()
com.google.protobuf.MessageSchema: long longAt(java.lang.Object,long)
io.flutter.plugins.firebase.messaging.JobIntentService$CompatWorkEnqueuer: void enqueueWork(android.content.Intent)
io.grpc.internal.Http2ClientStreamTransportState: void stripTransportDetails(io.grpc.Metadata)
com.google.android.gms.maps.model.TileOverlayOptions: boolean getFadeIn()
com.google.firebase.messaging.CommonNotificationBuilder: int generatePendingIntentRequestCode()
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newCameraPosition(com.google.android.gms.maps.model.CameraPosition)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task verifyBeforeUpdateEmail(java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzhd: zzhd(com.google.android.gms.internal.firebase-auth-api.zzhe,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzcl: zzcl(java.lang.Class)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: io.grpc.HttpConnectProxiedSocketAddress getHttpConnectProxiedSocketAddress()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.firebase.firestore.model.ResourcePath: ResourcePath(java.util.List)
com.google.firebase.firestore.core.UserData$ParseAccumulator: com.google.firebase.firestore.core.UserData$ParseContext rootContext()
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
com.google.android.gms.internal.firebase-auth-api.zzsc: java.lang.String zzd()
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderClient getFusedLocationProviderClient(android.app.Activity)
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter getDefaultInstance()
io.grpc.internal.GrpcUtil$TimeoutMarshaller: GrpcUtil$TimeoutMarshaller()
com.google.android.gms.common.util.WorkSourceUtil: void add(android.os.WorkSource,int,java.lang.String)
io.grpc.internal.ServiceConfigUtil: java.util.Set getNonFatalStatusCodesFromHedgingPolicy(java.util.Map)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
com.google.firebase.firestore.Query: void validateOrderByField(com.google.firebase.firestore.model.FieldPath)
com.google.firebase.firestore.remote.WatchStream: void inhibitBackoff()
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.google.protobuf.SchemaUtil: int computeSizeEnumListNoTag(java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzrq: com.google.firebase.auth.PhoneMultiFactorInfo zzb()
com.google.android.gms.internal.firebase-auth-api.zzbf: int zzd()
okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)
com.google.firestore.v1.StructuredQuery: void ensureFromIsMutable()
io.grpc.NameResolver$1: void onError(io.grpc.Status)
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzij zzb(com.google.android.gms.internal.firebase-auth-api.zzin)
com.google.firebase.messaging.NotificationParams: java.lang.String getString(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxv: java.util.List zzb()
kotlin.ranges.IntProgressionIterator: int nextInt()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Builder setEventsDroppedCount(long)
com.google.android.gms.internal.location.zzbl: com.google.android.gms.common.api.Result createFailedResult(com.google.android.gms.common.api.Status)
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeFixed32NoTag(int)
com.google.firebase.firestore.local.TargetData: com.google.firebase.firestore.local.TargetData withLastLimboFreeSnapshotVersion(com.google.firebase.firestore.model.SnapshotVersion)
com.google.firebase.messaging.RequestDeduplicator: RequestDeduplicator(java.util.concurrent.Executor)
com.google.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPath(int,boolean)
com.google.android.gms.common.zac: zac(com.google.android.gms.common.GoogleApiAvailability,android.content.Context)
com.google.firebase.firestore.core.DatabaseInfo: DatabaseInfo(com.google.firebase.firestore.model.DatabaseId,java.lang.String,java.lang.String,boolean)
com.google.firebase.firestore.remote.AbstractStream$CloseGuardedRunner: AbstractStream$CloseGuardedRunner(com.google.firebase.firestore.remote.AbstractStream,long)
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
io.grpc.PartialForwardingClientCall: PartialForwardingClientCall()
com.google.android.gms.common.internal.ClientSettings: void zae(java.lang.Integer)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
com.google.common.collect.RegularImmutableList: int size()
io.grpc.okhttp.AsyncSink: void becomeConnected(okio.Sink,java.net.Socket)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()
io.grpc.okhttp.internal.framed.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
com.google.firebase.firestore.local.SQLiteIndexManager: java.util.List getSubTargets(com.google.firebase.firestore.core.Target)
com.google.firebase.auth.PhoneAuthOptions: PhoneAuthOptions(com.google.firebase.auth.FirebaseAuth,java.lang.Long,com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks,java.util.concurrent.Executor,java.lang.String,android.app.Activity,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken,com.google.firebase.auth.MultiFactorSession,com.google.firebase.auth.PhoneMultiFactorInfo,boolean,com.google.firebase.auth.zzaf)
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void removeReference(com.google.firebase.firestore.model.DocumentKey)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.android.datatransport.runtime.firebase.transport.TimeWindow$Builder: com.google.android.datatransport.runtime.firebase.transport.TimeWindow build()
com.google.firebase.FirebaseApp: void setAutomaticResourceManagementEnabled(boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
com.google.firebase.firestore.LoadBundleTaskProgress: com.google.firebase.firestore.LoadBundleTaskProgress forInitial(com.google.firebase.firestore.bundle.BundleMetadata)
io.grpc.internal.KeepAliveManager: long access$500(io.grpc.internal.KeepAliveManager)
com.google.android.gms.internal.firebase-auth-api.zzco: zzco(java.lang.Class)
androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent persist(com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: void dispatch(java.lang.Runnable)
com.google.android.gms.internal.firebase-auth-api.zzpl: void zzb(int)
com.google.firebase.firestore.util.LogicUtils: boolean isDisjunctiveNormalForm(com.google.firebase.firestore.core.Filter)
com.google.firebase.firestore.core.TransactionRunner: boolean isRetryableTransactionError(java.lang.Exception)
io.grpc.internal.ClientCallImpl: void closeObserver(io.grpc.ClientCall$Listener,io.grpc.Status,io.grpc.Metadata)
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: AsyncQueue$DelayedTask(com.google.firebase.firestore.util.AsyncQueue,com.google.firebase.firestore.util.AsyncQueue$TimerId,long,java.lang.Runnable,com.google.firebase.firestore.util.AsyncQueue$1)
io.grpc.Metadata: java.lang.Object get(io.grpc.Metadata$Key)
io.grpc.internal.ForwardingManagedChannel: ForwardingManagedChannel(io.grpc.ManagedChannel)
com.google.protobuf.RopeByteString: int partialIsValidUtf8(int,int,int)
com.google.firebase.firestore.FieldValue$ArrayUnionFieldValue: FieldValue$ArrayUnionFieldValue(java.util.List)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
com.google.firebase.firestore.bundle.BundledDocumentMetadata: com.google.firebase.firestore.model.DocumentKey getKey()
com.google.android.gms.maps.model.Polyline: boolean equals(java.lang.Object)
com.google.common.collect.Lists: boolean equalsImpl(java.util.List,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzpk: int zza()
com.google.firebase.firestore.bundle.BundleSerializer: com.google.firebase.firestore.core.FieldFilter$Operator decodeFieldFilterOperator(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.window.core.Bounds: java.lang.String toString()
com.google.firebase.components.ComponentRuntime: java.util.Set setOf(java.lang.Class)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$DownloadListenerFlutterApi: io.flutter.plugin.common.MessageCodec getCodec()
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
okio.Buffer$1: void write(int)
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.internal.firebase-auth-api.zztx: void zzK(java.lang.String,com.google.firebase.auth.UserProfileChangeRequest,com.google.android.gms.internal.firebase-auth-api.zzvs)
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: void readRawBytesTo(byte[],int,int)
com.google.android.gms.common.logging.Logger: void d(java.lang.String,java.lang.Object[])
com.google.firebase.auth.internal.zzaz: java.util.Map zzc(java.lang.String)
com.google.firebase.auth.ActionCodeUrl: int getOperation()
io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerProvider getProviderOrThrow(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void upload(com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)
com.baseflow.geolocator.location.GeolocationManager: void handlePermissions(android.content.Context,android.app.Activity,java.lang.Runnable,com.baseflow.geolocator.errors.ErrorCallback)
io.grpc.internal.RetriableStream$Sublistener$6: void run()
com.google.protobuf.SmallSortedMap$1: java.lang.Object put(java.lang.Object,java.lang.Object)
io.grpc.internal.ManagedChannelServiceConfig$MethodInfo: ManagedChannelServiceConfig$MethodInfo(java.util.Map,boolean,int,int)
io.grpc.internal.RetriableStream: void access$2100(io.grpc.internal.RetriableStream,java.lang.Integer)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin: com.google.android.gms.tasks.Task sendPasswordResetEmail(java.util.Map)
com.google.protobuf.CodedInputStream$StreamDecoder: boolean isAtEnd()
io.grpc.okhttp.OkHttpClientTransport$4$1: long read(okio.Buffer,long)
com.google.android.gms.internal.firebase-auth-api.zzls: zzls(com.google.android.gms.internal.firebase-auth-api.zzlr)
com.google.firebase.firestore.core.Target: java.lang.String getCollectionGroup()
com.google.android.gms.maps.internal.zzby: boolean isTiltGesturesEnabled()
com.google.android.gms.internal.firebase-auth-api.zzwt: com.google.android.gms.internal.firebase-auth-api.zzwt zze(com.google.firebase.auth.internal.zzao)
com.google.android.gms.internal.firebase-auth-api.zzsf: java.lang.Object[] newArray(int)
com.google.android.gms.internal.firebase-auth-api.zzaak: zzaak()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.protobuf.NullValue: com.google.protobuf.NullValue forNumber(int)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(java.lang.Object)
com.google.firebase.auth.PhoneAuthProvider: void verifyPhoneNumber(com.google.firebase.auth.PhoneAuthOptions)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readUInt64()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)
com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: DaggerTransportRuntimeComponent$Builder(com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)
io.flutter.plugins.androidintent.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.content.Context,android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)
com.google.android.gms.common.api.internal.LifecycleCallback: LifecycleCallback(com.google.android.gms.common.api.internal.LifecycleFragment)
com.google.firebase.firestore.local.LocalStore: void startMutationQueue()
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
io.grpc.ClientStreamTracer: ClientStreamTracer()
com.google.firestore.v1.Value$Builder: com.google.firestore.v1.Value$Builder setGeoPointValue(com.google.type.LatLng$Builder)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.google.firebase.firestore.remote.GrpcCallProvider: void onConnectivityStateChange(io.grpc.ManagedChannel)
com.google.android.gms.common.internal.zzm: void zza(com.google.android.gms.common.internal.GetServiceRequest,android.os.Parcel,int)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner()
com.google.android.gms.internal.firebase-auth-api.zzabr: int size()
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.firebase.firestore.remote.WatchChangeAggregator: void handleDocumentChange(com.google.firebase.firestore.remote.WatchChange$DocumentChange)
com.google.firebase.messaging.FirebaseMessaging: java.lang.String getSubtype()
com.google.android.gms.maps.internal.zzu: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.firestore.core.Query$QueryComparator: Query$QueryComparator(java.util.List)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zab(java.lang.String)
com.google.common.collect.AbstractIndexedListIterator: boolean hasPrevious()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
com.google.firebase.messaging.GmsRpc: boolean isErrorMessageForRetryableError(java.lang.String)
okio.SegmentedByteString: okio.ByteString toByteString()
com.google.android.gms.internal.common.zzi: zzi(android.os.Looper)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getId()
com.google.protobuf.CodedInputStream$IterableDirectByteBufferDecoder: double readDouble()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firebase.firestore.core.Target decodeDocumentsTarget(com.google.firestore.v1.Target$DocumentsTarget)
com.google.protobuf.Utf8: int estimateConsecutiveAscii(java.nio.ByteBuffer,int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
com.google.firebase.firestore.proto.Target: void access$700(com.google.firebase.firestore.proto.Target,com.google.protobuf.ByteString)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()
com.google.android.gms.internal.firebase-auth-api.zzadq: int zzc(int,java.util.List)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzkc: zzkc()
androidx.fragment.app.Fragment: void performStart()
com.google.android.gms.internal.firebase-auth-api.zzabq: com.google.android.gms.internal.firebase-auth-api.zzabq[] values()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.JobSupport: boolean isCompleted()
com.google.android.gms.internal.firebase-auth-api.zzcn: zzcn()
com.google.firebase.firestore.util.ExponentialBackoff: long jitterDelayMs()
com.google.protobuf.ListFieldSchema$ListFieldSchemaFull: java.util.List getList(java.lang.Object,long)
com.google.protobuf.CodedOutputStream: int computeLazyFieldMessageSetExtensionSize(int,com.google.protobuf.LazyFieldLite)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzh: java.util.List zzf()
com.google.firebase.messaging.ServiceStarter: ServiceStarter()
com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()
com.google.android.gms.internal.firebase-auth-api.zzaeb: java.util.SortedMap zzm()
okio.Timeout: long timeoutNanos()
com.google.android.gms.internal.firebase-auth-api.zztx: void zzO(com.google.android.gms.internal.firebase-auth-api.zzyq,java.lang.String,java.lang.String,java.lang.Boolean,com.google.firebase.auth.zze,com.google.android.gms.internal.firebase-auth-api.zzvs,com.google.android.gms.internal.firebase-auth-api.zzwx)
io.grpc.okhttp.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])
com.google.firebase.firestore.local.SQLiteLruReferenceDelegate: void writeSentinel(com.google.firebase.firestore.model.DocumentKey)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
io.grpc.okhttp.internal.framed.Hpack$Writer: int evictToRecoverBytes(int)
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: boolean equals(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions flat(boolean)
com.google.android.gms.internal.firebase-auth-api.zzxl: void onReceive(android.content.Context,android.content.Intent)
io.grpc.internal.ManagedChannelServiceConfig$ServiceConfigConvertedSelector: io.grpc.InternalConfigSelector$Result selectConfig(io.grpc.LoadBalancer$PickSubchannelArgs)
io.flutter.plugins.googlemaps.TileOverlaysController: void addTileOverlay(java.util.Map)
io.grpc.LoadBalancer$PickResult: boolean isDrop()
io.grpc.internal.InternalSubchannel$4$1: void run()
com.lyokone.location.StreamHandlerImpl: StreamHandlerImpl()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
com.google.firebase.messaging.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
com.google.firebase.auth.internal.zzc: void onFailure(java.lang.Exception)
com.google.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void recomputeBufferSizeAfterLimit()
io.grpc.internal.RetriableStream: io.grpc.MethodDescriptor access$1300(io.grpc.internal.RetriableStream)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
com.google.android.gms.common.internal.zzac: zzac(android.os.IBinder)
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
com.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)
com.google.protobuf.CodedOutputStreamWriter: void writeSFixed32(int,int)
io.grpc.internal.DelayedStream: java.lang.Runnable setStream(io.grpc.internal.ClientStream)
com.google.android.gms.location.zzah: zzah()
com.google.protobuf.Timestamp: void setSeconds(long)
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.util.List getAllHeartBeats()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: int getNumber()
com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)
com.google.firebase.auth.internal.zzbg: com.google.firebase.auth.FirebaseUser zza()
okio.RealBufferedSink: okio.BufferedSink write(byte[])
io.flutter.plugins.googlemaps.CirclesController: void changeCircle(java.lang.Object)
com.google.protobuf.Utf8$UnsafeProcessor: int unsafeEstimateConsecutiveAscii(byte[],long,int)
com.google.android.gms.internal.firebase-auth-api.zzxt: java.lang.String zzc()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.google.firebase.firestore.DocumentReference: com.google.android.gms.tasks.Task getViaSnapshotListener(com.google.firebase.firestore.Source)
com.google.android.gms.internal.firebase-auth-api.zzcq: com.google.android.gms.internal.firebase-auth-api.zzfz zzg(int,int,int)
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
com.baseflow.geolocator.location.FusedLocationClient: boolean onActivityResult(int,int)
io.grpc.internal.ManagedChannelImpl$NameResolverListener: void onError(io.grpc.Status)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.FirebaseApp access$000(com.google.firebase.messaging.FirebaseMessaging)
com.google.firebase.firestore.remote.WatchStream: void unwatchTarget(int)
com.google.protobuf.MessageSchema: boolean isRequired(int)
com.google.android.gms.internal.firebase-auth-api.zzsh: zzsh(com.google.android.gms.internal.firebase-auth-api.zztx,com.google.android.gms.internal.firebase-auth-api.zzvs)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.firebase.firestore.remote.WatchChange$DocumentChange: com.google.firebase.firestore.model.DocumentKey getDocumentKey()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: AutoValue_SchedulerConfig_ConfigValue(long,long,java.util.Set,com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$1)
io.grpc.okhttp.OkHttpFrameLogger: OkHttpFrameLogger(java.util.logging.Level,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzacj: java.lang.Object set(int,java.lang.Object)
io.grpc.okhttp.OkHttpClientTransport: void shutdown(io.grpc.Status)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion valueOf(java.lang.String)
io.grpc.NameResolver$ResolutionResult: io.grpc.NameResolver$ResolutionResult$Builder newBuilder()
com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: java.lang.String toString()
com.google.firebase.firestore.model.MutableDocument$DocumentType: MutableDocument$DocumentType(java.lang.String,int)
com.google.firestore.v1.Write: boolean hasUpdate()
io.grpc.okhttp.internal.framed.Hpack$Reader: okio.ByteString readByteString()
androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUserResolvableError(int)
com.google.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarintSlowPath()
io.flutter.embedding.android.FlutterTextureView: void pause()
com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()
com.google.android.gms.internal.firebase-auth-api.zzvk: void zzc(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.internal.firebase-auth-api.zzvt)
com.google.firebase.firestore.core.SQLiteComponentProvider: com.google.firebase.firestore.local.Persistence createPersistence(com.google.firebase.firestore.core.ComponentProvider$Configuration)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaaz: zzaaz(com.google.android.gms.internal.firebase-auth-api.zzaay)
io.grpc.internal.ForwardingClientStreamListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
com.google.firebase.firestore.remote.FirestoreChannel$3: void onMessage(java.lang.Object)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: NetworkConnectionInfo$MobileSubtype(java.lang.String,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
com.google.android.gms.internal.firebase-auth-api.zzim: com.google.android.gms.internal.firebase-auth-api.zzim zza(int)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl: java.lang.Long getScrollX(java.lang.Long)
io.flutter.plugins.googlemaps.GoogleMapController: void updateMyLocationSettings()
com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: java.util.Map getAutoMetadata()
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter getWhere()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseUser zzs(com.google.firebase.auth.FirebaseAuth)
com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,int)
com.google.firebase.firestore.remote.RemoteSerializer: com.google.firestore.v1.DocumentTransform$FieldTransform encodeFieldTransform(com.google.firebase.firestore.model.mutation.FieldTransform)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
com.google.android.gms.common.api.internal.zzb: zzb()
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
com.google.protobuf.GeneratedMessageLite$Builder: com.google.protobuf.GeneratedMessageLite$Builder internalMergeFrom(com.google.protobuf.GeneratedMessageLite)
com.google.firestore.v1.ListenRequest: void access$800(com.google.firestore.v1.ListenRequest,int)
com.google.android.gms.internal.maps.zzj: void zzo(com.google.android.gms.maps.model.LatLng)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
io.flutter.plugins.urllauncher.WebViewActivity: android.content.Intent createIntent(android.content.Context,java.lang.String,boolean,boolean,android.os.Bundle)
com.google.protobuf.Utf8$UnsafeProcessor: java.lang.String decodeUtf8(byte[],int,int)
com.google.android.datatransport.runtime.SafeLoggingExecutor: SafeLoggingExecutor(java.util.concurrent.Executor)
com.google.android.gms.maps.internal.zze: com.google.android.gms.internal.maps.zzi zzj()
com.google.firebase.firestore.util.CustomClassMapper$BeanMapper: java.lang.String propertyName(java.lang.reflect.Method)
com.google.android.gms.internal.firebase-auth-api.zzyq: com.google.android.gms.internal.firebase-auth-api.zzwf zza(java.lang.String)
com.google.protobuf.TextFormatEscaper: java.lang.String escapeText(java.lang.String)
com.google.rpc.Status: java.lang.String getMessage()
com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void run(com.google.android.gms.common.api.Api$AnyClient)
io.grpc.LoadBalancerRegistry$LoadBalancerPriorityAccessor: boolean isAvailable(java.lang.Object)
io.grpc.internal.RetriableStream$Sublistener$1RetryBackoffRunnable: void run()
com.google.android.gms.maps.zzb: void zzc(com.google.android.gms.internal.maps.zzx)
androidx.fragment.app.FragmentManagerImpl: void cleanupExec()
com.google.android.datatransport.runtime.TransportRuntime: void send(com.google.android.datatransport.runtime.SendRequest,com.google.android.datatransport.TransportScheduleCallback)
io.grpc.internal.ClientCallImpl: io.grpc.internal.CallTracer access$1300(io.grpc.internal.ClientCallImpl)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.GeneratedMessageLite$Builder toBuilder()
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove access$000()
kotlin.KotlinVersion: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzbw: java.util.Collection zzd()
com.google.firestore.v1.StructuredQuery$FieldFilter: StructuredQuery$FieldFilter()
com.google.android.gms.location.zzaf: zzaf()
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretCircleOptions(java.lang.Object,io.flutter.plugins.googlemaps.CircleOptionsSink)
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery parseFrom(byte[])
com.google.firebase.messaging.MessagingAnalytics: void setUserPropertyIfRequired(android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.common.base.CharMatcher$Is: CharMatcher$Is(char)
androidx.fragment.app.FragmentManagerImpl: void handleOnBackPressed()
com.lyokone.location.FlutterLocation: boolean checkPermissions()
com.google.firebase.auth.internal.zzx: boolean isAnonymous()
com.google.firebase.auth.internal.zzj: com.google.firebase.auth.internal.zzi zza(android.content.Context,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
com.google.firebase.auth.PhoneAuthCredential: java.lang.String getProvider()
com.google.firebase.firestore.core.Target: boolean isDocumentQuery()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
com.google.firebase.firestore.local.MemoryPersistence: com.google.firebase.firestore.local.MemoryTargetCache getTargetCache()
com.google.android.gms.common.internal.zzr: android.os.Handler zzf(com.google.android.gms.common.internal.zzr)
com.google.android.gms.internal.firebase-auth-api.zzfo: java.lang.String zzb()
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.json.JsonValueObjectEncoderContext add(byte[])
com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeInt32NoTag(int)
com.google.android.gms.internal.firebase-auth-api.zzed: java.lang.Object zzc(com.google.android.gms.internal.firebase-auth-api.zzbw)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)
com.google.gson.stream.JsonReader: void endObject()
com.google.android.gms.common.internal.MethodInvocation: MethodInvocation(int,int,int,long,long,java.lang.String,java.lang.String,int,int)
com.google.firestore.v1.StructuredQuery: void ensureOrderByIsMutable()
com.google.firebase.installations.AutoValue_InstallationTokenResult: java.lang.String getToken()
com.google.firebase.firestore.core.EventManager: void handleOnlineStateChange(com.google.firebase.firestore.core.OnlineState)
okio.Segment: void compact()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzadf: java.lang.Object zze()
com.google.android.datatransport.cct.internal.AutoValue_LogEvent: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzmj zza(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
com.google.android.gms.internal.firebase-auth-api.zzyn: com.google.android.gms.internal.firebase-auth-api.zzyn zzg(java.lang.String)
io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromConfig(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzhc: java.lang.Object zza(com.google.android.gms.internal.firebase-auth-api.zzadc)
io.grpc.LoadBalancer$Subchannel: void updateAddresses(java.util.List)
okio.Buffer: java.lang.String readUtf8()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: void setHasGesture(java.lang.Boolean)
com.google.protobuf.LongArrayList: com.google.protobuf.Internal$LongList mutableCopyWithCapacity(int)
com.google.android.gms.signin.internal.zaa: com.google.android.gms.common.api.Status getStatus()
com.google.protobuf.CodedInputStreamReader: void readGroupList(java.util.List,com.google.protobuf.Schema,com.google.protobuf.ExtensionRegistryLite)
com.google.android.gms.common.api.internal.LifecycleCallback: void onResume()
com.google.protobuf.MessageLiteToString: void reflectivePrintWithIndent(com.google.protobuf.MessageLite,java.lang.StringBuilder,int)
com.google.firebase.firestore.model.TargetIndexMatcher: boolean matchesFilter(com.google.firebase.firestore.core.FieldFilter,com.google.firebase.firestore.model.FieldIndex$Segment)
com.google.android.gms.internal.common.zzc: zzc()
com.google.android.gms.common.api.ApiException: int getStatusCode()
com.google.android.gms.internal.firebase-auth-api.zzuy: void zzb()
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Marker addMarker(com.google.android.gms.maps.model.MarkerOptions)
com.google.firebase.encoders.json.JsonValueObjectEncoderContext: com.google.firebase.encoders.ValueEncoderContext add(java.lang.String)
com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,android.content.Context,com.google.firebase.messaging.NotificationParams,java.lang.String,android.os.Bundle,java.lang.String,android.content.res.Resources,android.content.pm.PackageManager)
com.google.android.gms.internal.firebase-auth-api.zzcc: void zzb(com.google.android.gms.internal.firebase-auth-api.zzmx)
io.grpc.okhttp.OkHttpClientTransport: java.lang.Object access$100(io.grpc.okhttp.OkHttpClientTransport)
io.grpc.internal.RetriableStream$State: RetriableStream$State(java.util.List,java.util.Collection,java.util.Collection,io.grpc.internal.RetriableStream$Substream,boolean,boolean,boolean,int)
io.grpc.internal.RetriableStream$HedgingRunnable: RetriableStream$HedgingRunnable(io.grpc.internal.RetriableStream,io.grpc.internal.RetriableStream$FutureCanceller)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
com.google.android.gms.maps.model.Polygon: void setZIndex(float)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void initializeApp(java.lang.String,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions,io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$Result)
com.google.firebase.firestore.FieldValue: FieldValue()
io.grpc.internal.RetriableStream$Throttle: int hashCode()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzzq: zzzq(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
com.google.android.gms.internal.firebase-auth-api.zzes: byte[] zzb()
io.grpc.internal.Http2ClientStreamTransportState: void transportDataReceived(io.grpc.internal.ReadableBuffer,boolean)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
io.grpc.Metadata: void maybeExpand()
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderApplicationDocumentsDirectory()
io.grpc.internal.ApplicationThreadDeframer: void request(int)
io.grpc.okhttp.OkHttpFrameLogger: java.lang.String toString(okio.Buffer)
com.google.android.gms.internal.firebase-auth-api.zzlv: java.lang.String zza(int)
com.google.android.gms.maps.MapView: MapView(android.content.Context,com.google.android.gms.maps.GoogleMapOptions)
io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map getRawConfigValue()
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector access$000()
com.google.android.gms.maps.model.Circle: void setVisible(boolean)
com.google.android.gms.internal.firebase-auth-api.zzai: boolean add(java.lang.Object)
com.google.firebase.firestore.util.AsyncQueue$DelayedTask: void cancel()
com.google.android.gms.internal.firebase-auth-api.zzbq: int zze()
com.google.firebase.firestore.remote.FirestoreChannel: void invalidateToken()
com.google.android.gms.internal.firebase-auth-api.zzal: int hashCode()
com.google.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64SlowPath()
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()
com.google.android.gms.internal.firebase-auth-api.zzaep: double zza(java.lang.Object,long)
com.google.android.gms.internal.firebase-auth-api.zzzz: java.lang.String zzf()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
com.google.android.gms.common.api.internal.zabu: void zae(com.google.android.gms.common.ConnectionResult)
com.google.firebase.firestore.core.QueryListener: boolean onOnlineStateChanged(com.google.firebase.firestore.core.OnlineState)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: com.google.android.gms.tasks.Task deleteToken()
com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: int hashCode()
com.google.android.gms.maps.model.TileOverlay: void clearTileCache()
io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider$1RetryStream: ManagedChannelImpl$ChannelStreamProvider$1RetryStream(io.grpc.internal.ManagedChannelImpl$ChannelStreamProvider,io.grpc.MethodDescriptor,io.grpc.Metadata,io.grpc.CallOptions,io.grpc.internal.RetryPolicy,io.grpc.internal.HedgingPolicy,io.grpc.internal.RetriableStream$Throttle,io.grpc.Context)
okio.Buffer: java.lang.String toString()
io.flutter.plugins.webviewflutter.WebViewClientFlutterApiImpl: void onReceivedRequestError(android.webkit.WebViewClient,android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat,io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewClientFlutterApi$Reply)
com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void disconnect(java.lang.String)
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
com.google.protobuf.DoubleArrayList: void addDouble(int,double)
com.google.common.base.Preconditions: void checkState(boolean)
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
com.google.firebase.firestore.remote.Datastore: boolean isPermanentWriteError(io.grpc.Status)
io.flutter.plugins.googlemaps.Convert: void interpretGoogleMapOptions(java.lang.Object,io.flutter.plugins.googlemaps.GoogleMapOptionsSink)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
io.grpc.internal.SharedResourcePool: SharedResourcePool(io.grpc.internal.SharedResourceHolder$Resource)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
com.google.android.gms.cloudmessaging.zzm: void zze(int)
com.google.firebase.firestore.core.Filter: Filter()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
com.google.firebase.firestore.SnapshotMetadata: SnapshotMetadata(boolean,boolean)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
com.google.android.gms.common.internal.zzu: java.lang.String zzc()
com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest$Builder setExtras(byte[])
com.google.android.gms.maps.UiSettings: void setScrollGesturesEnabled(boolean)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
io.grpc.okhttp.internal.framed.Hpack$Writer: void insertIntoDynamicTable(io.grpc.okhttp.internal.framed.Header)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
com.google.firebase.installations.FirebaseInstallations: FirebaseInstallations(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider)
com.google.firebase.firestore.local.SQLiteIndexManager: com.google.firebase.firestore.model.FieldIndex$IndexOffset getMinOffset(java.util.Collection)
com.google.firebase.firestore.local.SQLitePersistence$1: SQLitePersistence$1(com.google.firebase.firestore.local.SQLitePersistence)
com.tekartik.sqflite.SqflitePlugin: java.util.List cursorRowToList(android.database.Cursor,int)
com.google.firebase.firestore.model.mutation.SetMutation: SetMutation(com.google.firebase.firestore.model.DocumentKey,com.google.firebase.firestore.model.ObjectValue,com.google.firebase.firestore.model.mutation.Precondition,java.util.List)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzow: java.lang.Object zza(java.lang.String,java.security.Provider)
io.grpc.Status: io.grpc.Status fromThrowable(java.lang.Throwable)
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
androidx.collection.ArraySet: boolean isEmpty()
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(java.util.ArrayList)
com.google.android.gms.internal.firebase-auth-api.zzub: void zzb()
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
okio.ByteString: okio.ByteString toAsciiLowercase()
com.google.android.gms.internal.firebase-auth-api.zzaeo: long zzl(java.lang.reflect.Field)
com.google.android.gms.maps.internal.zzak: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.protobuf.UnmodifiableLazyStringList$2: void remove()
com.google.android.gms.maps.model.CircleOptions: boolean isClickable()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk next()
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)
com.google.android.datatransport.runtime.EventInternal$Builder: EventInternal$Builder()
com.google.firebase.encoders.proto.ProtobufDataEncoderContext: com.google.firebase.encoders.proto.ProtobufDataEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)
com.google.android.gms.internal.firebase-auth-api.zzzd: java.lang.String zzc()
com.google.firebase.auth.zzq: void onVerificationCompleted(com.google.firebase.auth.PhoneAuthCredential)
io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl$WebViewClientImpl: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
io.grpc.okhttp.OkHttpFrameLogger: void logGoAway(io.grpc.okhttp.OkHttpFrameLogger$Direction,int,io.grpc.okhttp.internal.framed.ErrorCode,okio.ByteString)
com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void resetClientMetrics()
com.google.protobuf.UnsafeUtil$JvmMemoryAccessor: byte getByte(java.lang.Object,long)
io.grpc.internal.ServiceConfigUtil: java.lang.Long getInitialBackoffNanosFromRetryPolicy(java.util.Map)
com.google.protobuf.MessageSetSchema: boolean equals(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzxw: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zzis zzb(com.google.android.gms.internal.firebase-auth-api.zzlq)
io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzqc: java.lang.String zza()
